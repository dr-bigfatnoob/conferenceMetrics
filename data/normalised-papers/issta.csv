2016;Iberia Medeiros,Nuno Ferreira Neves,Miguel P. Correia;DEKANT: a static analysis tool that learns to detect web application vulnerabilities.;1-11;11;The Web;
2016;Sadeeq Jan,Duy Cu Nguyen,Lionel C. Briand;Automated and effective testing of web services for XML injection attacks.;12-23;12;The Web;
2016;Xiaozhu Meng,Barton P. Miller;Binary code is not easy.;24-35;12;Static Analysis;
2016;Robin David,Sebastien Bardin,Josselin Feist,Laurent Mounier,Marie-Laure Potet,Thanh Dinh Ta,Jean-Yves Marion;Specification of concretization and symbolization policies in symbolic execution.;36-46;11;Static Analysis;
2016;Sudhir Samrit,Rupesh Nasre;EagerMerge: an optimistic technique for efficient points-to analysis.;47-58;12;Static Analysis;
2016;Peng Liu 0010,Omer Tripp,Xiangyun Zhang;IPA: improving predictive analysis with pointer analysis.;59-69;11;Static Analysis;
2016;Mohammad Amin Alipour,Alex Groce,Rahul Gopinath,Arpit Christi;Generating focused random tests using directed swarm testing.;70-81;12;Test Generation;
2016;Markus Ermuth,Michael Pradel;Monkey see, monkey do: effective generation of GUI tests with inferred macro events.;82-93;12;Test Generation;
2016;Ke Mao,Mark Harman,Yue Jia;Sapienz: multi-objective automated testing for Android applications.;94-105;12;Test Generation;
2016;Hiroaki Yoshida,Susumu Tokumoto,Mukul R. Prasad,Indradeep Ghosh,Tadahiro Uehara;FSX: fine-grained incremental unit test generation for C/C++ programs.;106-117;12;Test Generation;
2016;Valerio Terragni,Yepang Liu,Shing-Chi Cheung;CSNIPPEX: automated synthesis of compilable code snippets from Q&A sites.;118-129;12;Testing Processes;
2016;Fabio Palomba,Annibale Panichella,Andy Zaidman,Rocco Oliveto,Andrea De Lucia;Automatic test case generation: what if test code quality matters?;130-141;12;Testing Processes;
2016;Christoffer Quist Adamsen,Gianluca Mezzetti,Anders Moller;Analyzing test completeness for dynamic languages.;142-153;12;Testing Processes;
2016;Jan Schroeder,Christian Berger 0001,Miroslaw Staron,Thomas Herpel,Alessia Knauss;Unveiling anomalies and their impact on software quality in model-based automotive software revisions with software metrics and domain experts.;154-164;11;Testing Processes;
2016;Pavneet Singh Kochhar,Xin Xia,David Lo,Shanping Li;Practitioners' expectations on automated fault localization.;165-176;12;Debugging and Repair;
2016;Tien-Duy B. Le,David Lo,Claire Le Goues,Lars Grunske;A learning-to-rank based fault localization approach using likely invariants.;177-188;12;Debugging and Repair;
2016;Fang Yu,Ching-Yuan Shueh,Chun-Han Lin,Yu-Fang Chen,Bow-Yaw Wang,Tevfik Bultan;Optimal sanitization synthesis for web application vulnerability repair.;189-200;12;Debugging and Repair;
2016;Weihang Wang,Yunhui Zheng,Peng Liu 0010,Lei Xu,Xiangyun Zhang,Patrick Th. Eugster;ARROW: automated repair of races on client-side web pages.;201-212;12;Debugging and Repair;
2016;Alberto Goffi,Alessandra Gorla,Michael D. Ernst,Mauro Pezze;Automatic generation of oracles for exceptional behaviors.;213-224;12;Oracles;
2016;Mikael Fagerstrom,Emre Emir Ismail,Grischa Liebel,Rohit Guliani,Fredrik Larsson,Karin Nordling,Eric Knauss,Patrizio Pelliccione;Verdict machinery: on the need to automatically make sense of test results.;225-234;10;Oracles;
2016;Matthew Patrick,Andrew P. Craig,Nik J. Cunniffe,Matthew Parry,Christopher A. Gilligan;Testing stochastic software using pseudo-oracles.;235-246;12;Oracles;
2016;Gunel Jahangirova,David Clark,Mark Harman,Paolo Tonella;Test oracle assessment and improvement.;247-258;12;Oracles;
2016;David H. White 0001,Thomas Rupprecht,Gerald Luttgen;DSI: an evidence-based approach to identify dynamic data structures in C programs.;259-269;11;Program Understanding;
2016;Mario Linares Vasquez,Boyang Li,Christopher Vendome,Denys Poshyvanyk;Documenting database usages and schema constraints in database-centric applications.;270-281;12;Program Understanding;
2016;Carl Chapman,Kathryn T. Stolee;Exploring regular expression usage and context in Python.;282-293;12;Program Understanding;
2016;Chengnian Sun,Vu Le,Qirun Zhang,Zhendong Su;Toward understanding compiler bugs in GCC and LLVM.;294-305;12;Program Understanding;
2016;Guozhu Meng,Yinxing Xue,Zhengzi Xu,Yang Liu,Jie Zhang,Annamalai Narayanan;Semantic modelling of Android malware for effective malware comprehension, detection, and classification.;306-317;12;Android;
2016;Li Li 0029,Tegawende F. Bissyande,Damien Octeau,Jacques Klein;DroidRA: taming reflection to support whole-program analysis of Android apps.;318-329;12;Android;
2016;David Bowes,Tracy Hall,Mark Harman,Yue Jia,Federica Sarro,Fan Wu;Mutation-aware fault prediction.;330-341;12;Mutation Testing;
2016;Jie Zhang,Ziyi Wang,Lingming Zhang,Dan Hao,Lei Zang,Shiyang Cheng,Lu Zhang;Predictive mutation testing.;342-353;12;Mutation Testing;
2016;Mike Papadakis,Christopher Henard,Mark Harman,Yue Jia,Yves Le Traon;Threats to the validity of mutation-based test assessment.;354-365;12;Mutation Testing;
2016;Anirudh Santhiar,Shalini Kaleeswaran,Aditya Kanade;Efficient race detection in the presence of programmatic event loops.;366-376;11;Concurrency;
2016;Yongjian Hu,Iulian Neamtiu,Arash Alavi;Automatically verifying and reproducing event-based races in Android apps.;377-388;12;Concurrency;
2016;Tingting Yu,Michael Pradel;SyncProf: detecting, localizing, and optimizing synchronization bottlenecks.;389-400;12;Concurrency;
2016;Robert Callan,Farnaz Behrang,Alenka G. Zajic,Milos Prvulovic,Alessandro Orso;Zero-overhead profiling via EM emanations.;401-412;12;Performance;
2016;Rashmi Mudduluru,Murali Krishna Ramanathan;Efficient flow profiling for detecting performance bugs.;413-424;12;Performance;
2016;Reyhaneh Jabbarvand Behrouz,Alireza Sadeghi,Hamid Bagheri,Sam Malek;Energy-aware test-suite minimization for Android apps.;425-436;12;Performance;
2016;Pascal Andre,Jean-Marie Mottu,Gerson Sunye;COSTOTest: a tool for building and running test harness for service-based component models (demo).;437-440;4;Demonstration Papers;
2016;Matias Martinez,Martin Monperrus;ASTOR: a program repair library for Java (demo).;441-444;4;Demonstration Papers;
2016;Adel Noureddine,Syed Islam,Rabih Bashroush;Jolinar: analysing the energy footprint of software applications (demo).;445-448;4;Demonstration Papers;
2016;Henry Coles,Thomas Laurent,Christopher Henard,Mike Papadakis,Anthony Ventresque;PIT: a practical mutation testing tool for Java (demo).;449-452;4;Demonstration Papers;
2015;Qianqian Wang,Chris Parnin,Alessandro Orso;Evaluating the usefulness of IR-based fault localization techniques.;1-11;11;Debugging;
2015;Sai Zhang,Michael D. Ernst;Proactive detection of inadequate diagnostic messages for software configuration errors.;12-23;12;Debugging;
2015;Zichao Qi,Fan Long,Sara Achour,Martin C. Rinard;An analysis of patch plausibility and correctness for generate-and-validate patch generation systems.;24-36;13;Debugging;
2015;Charlie Hothersall-Thomas,Sergio Maffeis,Chris Novakovic;BrowserAudit: automated testing of browser security features.;37-47;11;Web Security;
2015;Yinxing Xue,Junjie Wang,Yang Liu,Hao Xiao,Jun Sun,Mahinthan Chandramohan;Detection and classification of malicious JavaScript via attack behavior modelling.;48-59;12;Web Security;
2015;Johannes Dahse,Thorsten Holz;Experience report: an empirical study of PHP security mechanism usage.;60-70;11;Web Security;
2015;Haoyu Wang,Yao Guo,Ziang Ma,Xiangqun Chen;WuKong: a scalable and accurate two-phase approach to Android app clone detection.;71-82;12;Mobile/Web Analysis;
2015;Christoffer Quist Adamsen,Gianluca Mezzetti,Anders Moller;Systematic execution of Android test suites in adverse conditions.;83-93;11;Mobile/Web Analysis;
2015;Liang Gong,Michael Pradel,Manu Sridharan,Koushik Sen;DLint: dynamically checking bad coding practices in JavaScript.;94-105;12;Mobile/Web Analysis;
2015;Wei Huang,Yao Dong,Ana Milanova,Julian Dolby;Scalable and precise taint analysis for Android.;106-117;12;Mobile Security;
2015;Roee Hay,Omer Tripp,Marco Pistoia;Dynamic detection of inter-application communication vulnerabilities in Android.;118-128;11;Mobile Security;
2015;Lazaro Clapp,Saswat Anand,Alexander Aiken;Modelgen: mining explicit information flow specifications from concrete executions.;129-140;12;Mobile Security;
2015;Ganesh Narayanaswamy;When truth is efficient: analysing concurrency.;141-152;12;Concurrency Analysis;
2015;Monika Dhok,Rashmi Mudduluru,Murali Krishna Ramanathan;Pegasus: automatic barrier inference for stable multithreaded systems.;153-164;12;Concurrency Analysis;
2015;Sepideh Khoshnood,Markus Kusano,Chao Wang;ConcBugAssist: constraint solving for diagnosis and repair of concurrency bugs.;165-176;12;Concurrency Analysis;
2015;Xiangyang Jia,Carlo Ghezzi,Shi Ying;Enhancing reuse of constraint solutions to improve symbolic execution.;177-187;11;Symbolic Execution;
2015;Xiaofei Xie,Yang Liu,Wei Le,Xiaohong Li,Hongxu Chen;S-looper: automatic summarization for multipath string loops.;188-198;11;Symbolic Execution;
2015;Xiaoying Wang,Lingming Zhang,Philip Tanofsky;Experience report: how is dynamic symbolic execution different from manual testing? a study on KLEE.;199-210;12;Symbolic Execution;
2015;Milos Gligoric,Lamyaa Eloussi,Darko Marinov;Practical regression test selection with dynamic file dependencies.;211-222;12;Regression Testing;
2015;Alex Gyori,August Shi,Farah Hariri,Darko Marinov;Reliable testing: detecting state-polluting tests to prevent test dependency.;223-233;11;Regression Testing;
2015;Michael G. Epitropakis,Shin Yoo,Mark Harman,Edmund K. Burke;Empirical evaluation of pareto efficient multi-objective regression test case prioritisation.;234-245;12;Regression Testing;
2015;Tian Huat Tan,Yinxing Xue,Manman Chen,Jun Sun,Yang Liu 0003,Jin Song Dong;Optimizing selection of competing features via feedback-directed evolutionary algorithms.;246-256;11;Search-Based Algorithms;
2015;Earl T. Barr,Mark Harman,Yue Jia,Alexandru Marginean,Justyna Petke;Automated software transplantation.;257-269;13;Search-Based Algorithms;
2015;Du Shen,Qi Luo,Denys Poshyvanyk,Mark Grechanik;Automating performance bottleneck detection using search-based application profiling.;270-281;12;Search-Based Algorithms;
2015;Marko Dimjasevic,Dimitra Giannakopoulou;Test-case generation for runtime analysis and vice versa: verification of aircraft separation assurance.;282-292;11;Verification;
2015;Lin Gui 0002,Jun Sun,Yang Liu 0003,Jin Song Dong;Reliability assessment for distributed systems via communication abstraction and refinement.;293-304;12;Verification;
2015;Andrea Aquino,Francesco A. Bianchi,Meixian Chen,Giovanni Denaro,Mauro Pezze;Reusing constraint proofs in program analysis.;305-315;11;Verification;
2015;Kohsuke Yatoh,Kazunori Sakamoto,Fuyuki Ishikawa,Shinichi Honiden;Feedback-controlled random test generation.;316-326;11;Random Testing;
2015;Vu Le,Chengnian Sun,Zhendong Su;Randomized stress-testing of link-time optimizers.;327-337;11;Random Testing;
2015;Jose Miguel Rojas Siles,Gordon Fraser,Andrea Arcuri;Automated unit test generation during software development: a controlled experiment and think-aloud observations.;338-349;12;Random Testing;
2015;Yoshiki Sato,Shumpei Hozumi,Shigeru Chiba;Calculation coverage testing in scientific applications.;350-360;11;Domain-Specific Testing;
2015;Kai Cong,Li Lei,Zhenkun Yang,Fei Xie;Automatic fault injection for driver robustness testing.;361-372;12;Domain-Specific Testing;
2015;Kivanc Muslu,Yuriy Brun,Alexandra Meliou;Preventing data errors with continuous testing.;373-384;12;Domain-Specific Testing;
2015;Chunhui Wang,Fabrizio Pastore,Arda Goknil,Lionel C. Briand,Muhammad Zohaib Z. Iqbal;Automatic generation of system test cases from use case specifications.;385-396;12;Model-Based Testing;
2015;Tao Yue,Shaukat Ali Khan,Man Zhang;RTCM: a natural language based, automated, and practical test case generation framework.;397-408;12;Model-Based Testing;
2015;Jonathan Bell,Gail E. Kaiser;Dynamic taint tracking for Java with phosphor (demo).;409-413;5;Tool Demonstrations;
2015;Alex Groce,Jervis Pinto,Pooria Azimi,Pranjal Mittal;TSTL: a language and tool for testing (demo).;414-417;4;Tool Demonstrations;
2015;Alexander Tarvo,Peter F. Sweeney,Nick Mitchell,V. T. Rajan,Matthew Arnold,Ioana Baldini;CanaryAdvisor: a statistical-based tool for canary testing (demo).;418-422;5;Tool Demonstrations;
2015;Tanakorn Leesatapornwongsa,Haryadi S. Gunawi;SAMC: a fast model checker for finding heisenbugs in distributed systems (demo).;423-427;5;Tool Demonstrations;
2015;Peter Ohmann;Making your crashes work for you (doctoral symposium).;428-431;4;Doctoral Symposium;
2015;Andrea Aquino;Scalable program analysis through proof caching (doctoral symposium).;432-435;4;Doctoral Symposium;
2015;Teng Long;Collaborative testing across shared software components (doctoral symposium).;436-439;4;Doctoral Symposium;
2015;Gulsen Demiroz;Cost-aware combinatorial interaction testing (doctoral symposium).;440-443;4;Doctoral Symposium;
2015;Thomas Rolfsnes;Mining change history for test-plan generation (doctoral symposium).;444-447;4;Doctoral Symposium;
2014;Lu Zhang,Chao Wang;Runtime prevention of concurrency related type-state violations in multithreaded applications.;1-12;12;Concurrency and Verification;
2014;Michael Pradel,Markus Huggler,Thomas R. Gross;Performance regression testing of concurrent classes.;13-25;13;Concurrency and Verification;
2014;Ohad Shacham,Eran Yahav,Guy Gueta,Alexander Aiken,Nathan Grasso Bronson,Shmuel Sagiv,Martin T. Vechev;Verifying atomicity via data independence.;26-36;11;Concurrency and Verification;
2014;Fabrizio Pastore,Leonardo Mariani,Antti Eero Johannes Hyvarinen,Grigory Fedyukovich,Natasha Sharygina,Stephan Sehestedt,Ali Muhammad;Verification-aided regression testing.;37-48;12;Concurrency and Verification;
2014;Omer Tripp,Pietro Ferrara,Marco Pistoia;Hybrid security analysis of web JavaScript code via dynamic partial evaluation.;49-59;11;Web Testing;
2014;Yunxiao Zou,Zhenyu Chen,Yunhui Zheng,Xiangyun Zhang,Zebao Gao;Virtual DOM coverage for effective testing of dynamic web applications.;60-70;11;Web Testing;
2014;Mehdi MirzaAghaei,Ali Mesbah 0001;DOM-based test adequacy criteria for web applications.;71-81;11;Web Testing;
2014;Shauvik Roy Choudhary,Mukul R. Prasad,Alessandro Orso;Cross-platform feature matching for web applications.;82-92;11;Web Testing;
2014;Paul Marinescu,Petr Hosek,Cristian Cadar;Covrig: a framework for the analysis of code, test, and coverage evolution in real software.;93-104;12;Artifact Studies;
2014;Marcel Bohme,Abhik Roychoudhury;CoREBench: studying complexity of regression errors.;105-115;11;Artifact Studies;
2014;Xusheng Xiao,Gogul Balakrishnan,Franjo Ivancic,Naoto Maeda,Aarti Gupta,Deepak Chhetri;ARC++: effective typestate and lifetime dependency analysis.;116-126;11;Static Analyses and Transformations;
2014;Konstantin Weitz,Gene Kim,Siwakorn Srisakaokul,Michael D. Ernst;A type system for format strings.;127-137;11;Static Analyses and Transformations;
2014;Narcisa Andreea Milea,Lingxiao Jiang,Siau-Cheng Khoo;Scalable detection of missed cross-function refactorings.;138-148;11;Static Analyses and Transformations;
2014;Benoit Baudry,Simon Allier,Martin Monperrus;Tailored source code transformations to synthesize computationally diverse program variants.;149-159;11;Static Analyses and Transformations;
2014;Chaoqiang Zhang,Alex Groce,Mohammad Amin Alipour;Using test case reduction and prioritization to improve symbolic execution.;160-170;11;Test Selection and Reduction;
2014;Arnaud Gotlieb,Dusica Marijan;FLOWER: optimal test suite reduction as a network maximum flow.;171-180;10;Test Selection and Reduction;
2014;Nadia Alshahwan,Mark Harman;Coverage and fault detection of the output-uniqueness test selection criteria.;181-192;12;Test Selection and Reduction;
2014;Pablo Loyola,Matthew Staats,In-Young Ko,Gregg Rothermel;Dodona: automated oracle data set selection.;193-203;11;Test Selection and Reduction;
2014;Rongxin Wu,Hongyu Zhang,Shing-Chi Cheung,Sunghun Kim;CrashLocator: locating crashing faults based on crash stacks.;204-214;11;Localization and Repair;
2014;Zhiqiang Zuo,Siau-Cheng Khoo,Chengnian Sun;Efficient predicated bug signature mining via hierarchical instrumentation.;215-224;10;Localization and Repair;
2014;Muath Alkhalaf,Abdulbaki Aydin,Tevfik Bultan;Semantic differential repair for input validation and sanitization.;225-236;12;Localization and Repair;
2014;Yiyan Lin,Sandeep S. Kulkarni;Automatic repair for multi-threaded programs with Deadlock/Livelock using maximum satisfiability.;237-247;11;Localization and Repair;
2014;Andrew Henderson,Aravind Prakash,Lok-Kwong Yan,Xunchao Hu,Xujiewen Wang,Rundong Zhou,Heng Yin;Make it work, make it right, make it fast: building a platform-neutral whole-system dynamic binary analysis platform.;248-258;11;Security;
2014;Dennis Appelt,Cu Duy Nguyen,Lionel C. Briand,Nadia Alshahwan;Automated testing for SQL injection vulnerabilities: an input mutation approach.;259-269;11;Security;
2014;Stephan Arlt,Andreas Podelski,Martin Wehrle;Reducing GUI test suites via program slicing.;270-281;12;UI Testing;
2014;Adrian Nistor,Lenin Ravindranath;SunCat: helping developers understand and predict performance problems in smartphone applications.;282-292;11;UI Testing;
2014;Jose A. Galindo,Mauricio Alferez,Mathieu Acher,Benoit Baudry,David Felipe Benavides Cuevas;A variability-based testing approach for synthesizing video sequences.;293-303;11;UI Testing;
2014;Rahulkrishna Yandrapally,Suresh Thummalapenta,Saurabh Sinha,Satish Chandra 0001;Robust test automation using contextual clues.;304-314;11;UI Testing;
2014;Rene Just,Michael D. Ernst,Gordon Fraser;Efficient mutation analysis by propagating and partitioning infected execution states.;315-326;12;Efficiency and Optimizations;
2014;Benwen Zhang,James A. Clause;Lightweight automated detection of unsafe information leakage via exceptions.;327-338;12;Efficiency and Optimizations;
2014;Ding Li,Yuchen Jin,Cagri Sahin,James A. Clause,William G. J. Halfond;Integrated energy-directed test suite optimization.;339-350;12;Efficiency and Optimizations;
2014;Shiva Nejati,Lionel C. Briand;Identifying optimal trade-offs between CPU time usage and temporal constraints using search.;351-361;11;Efficiency and Optimizations;
2014;Lingming Zhang,Guowei Yang,Neha Rungta,Suzette Person,Sarfraz Khurshid;Feedback-driven dynamic invariant discovery.;362-372;11;Generation and Propagation;
2014;Leonardo Mariani,Mauro Pezze,Oliviero Riganelli,Mauro Santoro;Link: exploiting the web of data to generate test inputs.;373-384;12;Generation and Propagation;
2014;Sai Zhang,Darioush Jalali,Jochen Wuttke,Kivanc Muslu,Wing Lam,Michael D. Ernst,David Notkin;Empirically revisiting the test independence assumption.;385-396;12;Generation and Propagation;
2014;Anna Lanzaro,Roberto Natella,Stefan Winter,Domenico Cotroneo,Neeraj Suri;An empirical study of injected versus actual interface errors.;397-408;12;Generation and Propagation;
2014;Tariq M. King,Gabriel Nunez,Dionny Santiago,Adam Cando,Cody Mack;Legend: an agile DSL toolset for web acceptance testing.;409-412;4;Tool Demonstrations;
2014;Matthias Schur,Andreas Roth,Andreas Zeller;ProCrawl: mining test models from multi-user web applications.;413-416;4;Tool Demonstrations;
2014;Shauvik Roy Choudhary,Mukul R. Prasad,Alessandro Orso;X-PERT: a web application testing tool for cross-browser inconsistency detection.;417-420;4;Tool Demonstrations;
2014;Juan P. Galeotti,Gordon Fraser,Andrea Arcuri;Extending a search-based test generator with adaptive dynamic symbolic execution.;421-424;4;Tool Demonstrations;
2014;Zhenbo Xu,Jian Zhang,Zhongxing Xu,Jiteng Wang;Canalyze: a static bug-finding tool for C programs.;425-428;4;Tool Demonstrations;
2014;Duc Le,Mohammad Amin Alipour,Rahul Gopinath,Alex Groce;MuCheck: an extensible tool for mutation testing of haskell programs.;429-432;4;Tool Demonstrations;
2014;Rene Just;The major mutation framework: efficient and scalable mutation analysis for Java.;433-436;4;Tool Demonstrations;
2014;Rene Just,Darioush Jalali,Michael D. Ernst;Defects4J: a database of existing faults to enable controlled testing studies for Java programs.;437-440;4;Tool Demonstrations;
2014;Konstantin Weitz,Siwakorn Srisakaokul,Gene Kim,Michael D. Ernst;A format string checker for Java.;441-444;4;Tool Demonstrations;
2014;Nikolai Tillmann,Jonathan de Halleux,Tao Xie,Judy M. Bishop;Constructing coding duels in Pex4Fun and code hunt.;445-448;4;Tool Demonstrations;
2014;Meixian Chen;Reusing constraint proofs for scalable program analysis.;449-452;4;Doctoral Symposium;
2014;Shabnam Mirshokraie;Effective test generation and adequacy assessment for JavaScript-based web applications.;453-456;4;Doctoral Symposium;
2014;Zhiqiang Zuo;Efficient statistical debugging via hierarchical instrumentation.;457-460;4;Doctoral Symposium;
2013;Jooyong Yi,Dawei Qi,Shin Hwei Tan,Abhik Roychoudhury;Expressing and checking intended changes via software change contracts.;1-11;11;Contracts, Invariants, and Stability;
2013;Hana Chockler,Karine Even,Eran Yahav;Finding rare numerical stability errors in concurrent computations.;12-22;11;Contracts, Invariants, and Stability;
2013;Nicolas Rosner,Juan P. Galeotti,Santiago Bermudez,Guido Marucci Blas,Santiago Perez De Rosso,Lucas Pizzagalli,Luciano Zemin,Marcelo F. Frias;Parallel bounded analysis in code with rich invariants by refinement of field bounds.;23-33;11;Contracts, Invariants, and Stability;
2013;Pranavadatta Devaki,Suresh Thummalapenta,Nimit Singhania,Saurabh Sinha;Efficient and flexible GUI test execution via test merging.;34-44;11;Fuzzing and GUI Testing;
2013;Sai Zhang,Hao Lu,Michael D. Ernst;Automatically repairing broken workflows for evolving GUI applications.;45-55;11;Fuzzing and GUI Testing;
2013;Petar Tsankov,Muhammad Torabi Dashti,David A. Basin;Semi-valid input coverage for fuzz testing.;56-66;11;Fuzzing and GUI Testing;
2013;Casper Svenning Jensen,Mukul R. Prasad,Anders Moller;Automated testing with targeted event sequence generation.;67-77;11;Fuzzing and GUI Testing;
2013;Ding Li,Shuai Hao,William G. J. Halfond,Ramesh Govindan;Calculating source line level energy information for Android applications.;78-89;12;Analysis and Testing of Non-functional Properties;
2013;Xusheng Xiao,Shi Han,Dongmei Zhang,Tao Xie;Context-sensitive delta inference for identifying workload-dependent performance bottlenecks.;90-100;11;Analysis and Testing of Non-functional Properties;
2013;Lin Gui 0002,Jun Sun,Yang Liu 0003,Yuan Jie Si,Jin Song Dong,Xinyu Wang;Combining model checking and testing with an application to reliability prediction and distribution.;101-111;11;Analysis and Testing of Non-functional Properties;
2013;Mengchen Li,Yuanjun Chen,Linzhang Wang,Guoqing (Harry) Xu;Dynamically validating static memory leak warnings.;112-122;11;Heap Analysis and Testing;
2013;Earl T. Barr,Christian Bird,Mark Marron;Collecting a heap of shapes.;123-133;11;Heap Analysis and Testing;
2013;Sangmin Park,Mary Jean Harrold,Richard W. Vuduc;Griffin: grouping suspicious memory-access patterns to improve understanding of concurrency bugs.;134-144;11;Heap Analysis and Testing;
2013;Sandeep Bindal,Sorav Bansal,Akash Lal;Variable and thread bounding for systematic testing of multithreaded programs.;145-155;11;Races and Multi-threaded Analysis and Testing;
2013;Qingzhou Luo,Grigore Rosu;EnforceMOP: a runtime property enforcement system for multithreaded programs.;156-166;11;Races and Multi-threaded Analysis and Testing;
2013;Tingting Yu,Witawas Srisa-an,Gregg Rothermel;SimRacer: an automated framework to support testing for process-level races.;167-177;11;Races and Multi-threaded Analysis and Testing;
2013;Cosmin Radoi,Danny Dig;Practical static race detection for Java parallel loops.;178-190;13;Races and Multi-threaded Analysis and Testing;
2013;Yuhua Qi,Xiaoguang Mao,Yan Lei,Chengsong Wang;Using automated program repair for evaluating the effectiveness of fault localization techniques.;191-201;11;Localisation, Patching, and Repair;
2013;Jaideep Nijjar,Tevfik Bultan;Data model property inference and repair.;202-212;11;Localisation, Patching, and Repair;
2013;Wei Jin,Alessandro Orso;F3: fault localization for field failures.;213-223;11;Localisation, Patching, and Repair;
2013;Milos Gligoric,Lingming Zhang,Cristiano Pereira,Gilles Pokam;Selective mutation testing for concurrent code.;224-234;11;Mutating and Mocking;
2013;Lingming Zhang,Darko Marinov,Sarfraz Khurshid;Faster mutation testing inspired by test prioritization and reduction.;235-245;11;Mutating and Mocking;
2013;Hesam Samimi,Rebecca Hicks,Ari Fogel,Todd D. Millstein;Declarative mocking.;246-256;11;Mutating and Mocking;
2013;Fitsum Meshesha Kifetew,Annibale Panichella,Andrea De Lucia,Rocco Oliveto,Paolo Tonella;Orthogonal exploration of the search space in evolutionary test case generation.;257-267;11;Learning, Optimizing, and Searching;
2013;Falk Howar,Dimitra Giannakopoulou,Zvonimir Rakamaric;Hybrid learning: interface generation through static, dynamic, and symbolic analysis.;268-279;12;Learning, Optimizing, and Searching;
2013;Rahul Purandare,Matthew B. Dwyer,Sebastian G. Elbaum;Optimizing monitoring of finite state properties through monitor compaction.;280-290;11;Learning, Optimizing, and Searching;
2013;Gordon Fraser,Matthew Staats,Phil McMinn,Andrea Arcuri,Frank Padberg;Does automated white-box test generation really help software testers?;291-301;11;Whitebox Testing;
2013;Milos Gligoric,Alex Groce,Chaoqiang Zhang,Rohan Sharma,Mohammad Amin Alipour,Darko Marinov;Comparing non-adequate test suites using coverage criteria.;302-313;12;Whitebox Testing;
2013;Friedrich Steimann,Marcus Frenkel,Rui Abreu;Threats to the validity and value of empirical assessments of the accuracy of coverage-based fault locators.;314-324;11;Whitebox Testing;
2013;Mark Hills 0001,Paul Klint,Jurgen J. Vinju;An empirical study of PHP feature usage: a static analysis perspective.;325-335;11;Web-Based Analysis and Testing;
2013;Shiyi Wei,Barbara G. Ryder;Practical blended taint analysis for JavaScript.;336-346;11;Web-Based Analysis and Testing;
2013;Omer Tripp,Omri Weisman,Lotem Guy;Finding your way in the testing jungle: a learning approach to web security testing.;347-357;11;Web-Based Analysis and Testing;
2013;Sangmin Park;Debugging non-deadlock concurrency bugs.;358-361;4;Temporal Properties and Concurrency;
2013;Simone Hanazumi,Ana Cristina Vieira de Melo;Generation of Java programs properties from test purposes.;362-365;4;Temporal Properties and Concurrency;
2013;Teodora Sandra Buda;Generation of test databases using sampling methods.;366-369;4;Performance and Databases;
2013;Shadi Ghaith;Analysis of performance regression testing data by transaction profiles.;370-373;4;Performance and Databases;
2013;Thomas Thum;Product-line verification with feature-oriented contracts.;374-377;4;Formal Verification;
2013;Andrea Bonacchi 0001;Formal safety proof: a real case study in a railway interlocking system.;378-381;4;Formal Verification;
2012;Andreas Thies,Eric Bodden;RefaFlex: safer refactorings for reflective Java programs.;1-11;11;Dynamic Analysis;
2012;Kristen Walcott-Justice,Jason Mars,Mary Lou Soffa;THeME: a system for testing by hardware monitoring events.;12-22;11;Dynamic Analysis;
2012;Hongtao Yu,Zhiyuan Li;Multi-slicing: a compiler-supported parallel approach to data dependence profiling.;23-33;11;Dynamic Analysis;
2012;Simon Holm Jensen,Peter A. Jonsson,Anders Moller;Remedying the eval that men do.;34-44;11;Web Applications;
2012;Nadia Alshahwan,Mark Harman;State aware test case regeneration for improving web application test suite coverage and fault detection.;45-55;11;Web Applications;
2012;Muath Alkhalaf,Shauvik Roy Choudhary,Mattia Fazzini,Tevfik Bultan,Alessandro Orso,Christopher Krugel;ViewPoints: differential string analysis for discovering client- and server-side input validation inconsistencies.;56-66;11;Web Applications;
2012;Florian Gross,Gordon Fraser,Andreas Zeller;Search-based system testing: high coverage, no false alarms.;67-77;11;Test Generation;
2012;Alex Groce,Chaoqiang Zhang,Eric Norman Eide,Yang Chen,John Regehr;Swarm testing.;78-88;11;Test Generation;
2012;Pingyu Zhang,Sebastian G. Elbaum,Matthew B. Dwyer;Compositional load test generation for software pipelines.;89-99;11;Test Generation;
2012;Duy Cu Nguyen,Alessandro Marchetto,Paolo Tonella;Combining model-based and combinatorial testing for effective test case generation.;100-110;11;Test Generation;
2012;Fangfang Zhang,Yoon-chan Jhi,Dinghao Wu,Peng Liu 0005,Sencun Zhu;A first step towards algorithm plagiarism detection.;111-121;11;Security;
2012;Davide Canali,Andrea Lanzi,Davide Balzarotti,Christopher Krugel,Mihai Christodorescu,Engin Kirda;A quantitative study of accuracy in system call-based malware detection.;122-132;11;Security;
2012;Juan Caballero,Gustavo Grieco,Mark Marron,Antonio Nappa;Undangle: early detection of dangling pointers in use-after-free and double-free vulnerabilities.;133-143;11;Security;
2012;Guowei Yang,Corina S. Pasareanu,Sarfraz Khurshid;Memoized symbolic execution.;144-154;11;Symbolic Execution;
2012;Jan Strejcek,Marek Trtik;Abstracting path conditions.;155-165;11;Symbolic Execution;
2012;Jaco Geldenhuys,Matthew B. Dwyer,Willem Visser;Probabilistic symbolic execution.;166-176;11;Symbolic Execution;
2012;Zachary P. Fry,Bryan Landau,Westley Weimer;A human study of patch maintainability.;177-187;11;Empirical Studies;
2012;Matthew Staats,Shin Hong,Moonzoo Kim,Gregg Rothermel;Understanding user understanding: determining correctness of generated program invariants.;188-198;11;Empirical Studies;
2012;Muhammad Zohaib Z. Iqbal,Andrea Arcuri,Lionel C. Briand;Empirical investigation of search algorithms for environment model-based testing of real-time embedded software.;199-209;11;Empirical Studies;
2012;Shin Hong,Jaemin Ahn,Sangmin Park,Moonzoo Kim,Mary Jean Harrold;Testing concurrent programs to achieve high synchronization coverage.;210-220;11;Concurrency;
2012;Ke Zhai,Boni Xu,Wing Kwong Chan,T. H. Tse;CARISMA: a context-sensitive approach to race-condition sample-instance selection for multithreaded applications.;221-231;11;Concurrency;
2012;Jaeheon Yi,Tim Disney,Stephen N. Freund,Cormac Flanagan;Cooperative types for controlling thread interference in Java.;232-242;11;Concurrency;
2012;Sai Zhang,Hao Lu,Michael D. Ernst;Finding errors in multithreaded GUI applications.;243-253;11;Concurrency;
2012;Yulei Sui,Ding Ye,Jingling Xue;Static memory leak detection using full-sparse value-flow analysis.;254-264;11;Static Analysis;
2012;Michael Pradel,Severin Heiniger,Thomas R. Gross;Static detection of brittle parameter typing.;265-275;11;Static Analysis;
2012;Devin Coughlin,Bor-Yuh Evan Chang,Amer Diwan,Jeremy G. Siek;Measuring enforcement windows with symbolic trace interpretation: what well-behaved programs say.;276-286;11;Static Analysis;
2012;Aaron Tomb,Cormac Flanagan;Detecting inconsistencies via universal reachability analysis.;287-297;11;Bug Detection and Diagnosis;
2012;Kaituo Li,Christoph Reichenbach,Christoph Csallner,Yannis Smaragdakis;Residual investigation: predictive and precise bug detection.;298-308;11;Bug Detection and Diagnosis;
2012;Jeremias Rossler,Gordon Fraser,Andreas Zeller,Alessandro Orso;Isolating failure causes through test case generation.;309-319;11;Bug Detection and Diagnosis;
2012;Mijung Kim,Jake Cobb,Mary Jean Harrold,Tahsin M. Kurc,Alessandro Orso,Joel H. Saltz,Andrew R. Post,Kunal Malhotra,Shamkant B. Navathe;Efficient regression testing of ontology-driven systems.;320-330;11;Regression Testing;
2012;Lingming Zhang,Darko Marinov,Lu Zhang,Sarfraz Khurshid;Regression mutation testing.;331-341;11;Regression Testing;
2011;Kunal Taneja,Tao Xie,Nikolai Tillmann,Jonathan de Halleux;eXpress: guided path exploration for efficient regression test generation.;1-11;11;Test generation I;
2011;Domagoj Babic,Lorenzo Martignoni,Stephen McCamant,Dawn Xiaodong Song;Statically-directed dynamic automated test generation.;12-22;11;Test generation I;
2011;Patrice Godefroid,Daniel Luchaup;Automatic partial loop summarization in dynamic test generation.;23-33;11;Test generation I;
2011;Corina S. Pasareanu,Neha Rungta,Willem Visser;Symbolic execution with mixed concrete-symbolic solving.;34-44;11;Test generation I;
2011;Daniel Balasubramanian,Corina S. Pasareanu,Michael W. Whalen,Gabor Karsai,Michael R. Lowry;Polyglot: modeling and analysis for multiple Statechart formalisms.;45-55;11;Models;
2011;Matthew J. McGill,Laura K. Dillon,R. E. Kurt Stirewalt;Scalable analysis of conceptual data models.;56-66;11;Models;
2011;Jaideep Nijjar,Tevfik Bultan;Bounded verification of Ruby on Rails data models.;67-77;11;Models;
2011;Ayesha Yasmeen,Elsa L. Gunter;Automated framework for formal operator task analysis.;78-88;11;Models;
2011;Andrew R. Bernat,Kevin A. Roundy,Barton P. Miller;Efficient, sensitivity resistant binary instrumentation.;89-99;11;Analysis of systems and binary code;
2011;Nathan E. Rosenblum,Barton P. Miller,Xiaojin Zhu 0001;Recovering the toolchain provenance of binary code.;100-110;11;Analysis of systems and binary code;
2011;Cindy Rubio-Gonzalez,Ben Liblit;Defective error/pointer interactions in the Linux kernel.;111-121;11;Analysis of systems and binary code;
2011;Jacob Burnim,Koushik Sen,Christos Stergiou;Testing concurrent programs on relaxed memory models.;122-132;11;Concurrency;
2011;Vilas Jagannath,Qingzhou Luo,Darko Marinov;Change-aware preemption prioritization.;133-143;11;Concurrency;
2011;Jeff Huang 0001,Charles Zhang;Persuasive prediction of concurrency access anomalies.;144-154;11;Concurrency;
2011;Dacong Yan,Guoqing (Harry) Xu,Atanas Rountev;Demand-driven context-sensitive alias analysis for Java.;155-165;11;Program analysis;
2011;Takaaki Tateishi,Marco Pistoia,Omer Tripp;Path- and index-sensitive string analysis based on monadic second-order logic.;166-176;11;Program analysis;
2011;Salvatore Guarnieri,Marco Pistoia,Omer Tripp,Julian Dolby,Stephen Teilhet,Ryan Berg;Saving the world wide web from vulnerable JavaScript.;177-187;11;Program analysis;
2011;Xiao Xiao,Charles Zhang;Geometric encoding: forging the high performance context sensitive points-to analysis for Java.;188-198;11;Program analysis;
2011;Chris Parnin,Alessandro Orso;Are automated debugging techniques actually helping programmers?;199-209;11;Faults I;
2011;Nicholas DiGiuseppe,James A. Jones;On the influence of multiple faults on coverage-based fault localization.;210-220;11;Faults I;
2011;Martin Burger 0002,Andreas Zeller;Minimizing reproduction of software failures.;221-231;11;Faults I;
2011;Michael Pradel,Thomas R. Gross;Detecting anomalies in the order of equally-typed method arguments.;232-242;11;Faults I;
2011;Emine Dumlu,Cemal Yilmaz,Myra B. Cohen,Adam A. Porter;Feedback driven adaptive combinatorial testing.;243-253;11;Combinatorial and random testing;
2011;Itai Segall,Rachel Tzoref-Brill,Eitan Farchi;Using binary decision diagrams for combinatorial test design.;254-264;11;Combinatorial and random testing;
2011;Andrea Arcuri,Lionel C. Briand;Adaptive random testing: an illusion of effectiveness?;265-275;11;Combinatorial and random testing;
2011;Muzammil Shahbaz,K. C. Shashidhar,Robert Eschbach;Iterative refinement of specification for component based embedded systems.;276-286;11;Specification and optimization;
2011;Philip J. Guo,Dawson R. Engler;Using automatic persistent memoization to facilitate data analysis scripting.;287-297;11;Specification and optimization;
2011;Milos Gligoric,Darko Marinov,Samuel N. Kamin;CoDeSe: fast deserialization via code generation.;298-308;11;Specification and optimization;
2011;William N. Sumner,Tao Bao,Xiangyun Zhang;Selecting peers for execution comparison.;309-319;11;Faults II;
2011;Wei Le,Mary Lou Soffa;Generating analyses for detecting faults in path segments.;320-330;11;Faults II;
2011;Zhiqiang Zhang,Jian Zhang 0001;Characterizing failure-causing parameter interactions by adaptive testing.;331-341;11;Faults II;
2011;Akbar Siami Namin,Sahitya Kakarla;The use of mutation in testing experiments and its sensitivity to external threats.;342-352;11;Faults II;
2011;Sai Zhang,David Saff,Yingyi Bu,Michael D. Ernst;Combined static and dynamic automated test generation.;353-363;11;Test generation II;
2011;Gordon Fraser,Andreas Zeller;Generating parameterized unit tests.;364-374;11;Test generation II;
2011;Tristan Oliver Richard Allwood,Cristian Cadar,Susan Eisenbach;High coverage testing of Haskell programs.;375-385;11;Test generation II;
2010;Patrice Godefroid,Johannes Kinder;Proving memory safety of floating-point computations by combining static and dynamic program analysis.;1-12;12;Technical session 1:formal verification and analysis;
2010;Tao Bao,Yunhui Zheng,Zhiqiang Lin,Xiangyun Zhang,Dongyan Xu;Strict control dependence and its effect on dynamic information flow analyses.;13-24;12;Technical session 1:formal verification and analysis;
2010;Juan P. Galeotti,Nicolas Rosner,Carlos Lopez Pombo,Marcelo F. Frias;Analysis of invariants for efficient bounded verification.;25-36;12;Technical session 1:formal verification and analysis;
2010;Michael Carbin,Martin C. Rinard;Automatically identifying critical input regions and code in applications.;37-48;12;Technical session 1:formal verification and analysis;
2010;Shay Artzi,Julian Dolby,Frank Tip,Marco Pistoia;Directed test generation for effective fault localization.;49-60;12;Technical session 2:debugging;
2010;Yi Wei,Yu Pei 0001,Carlo A. Furia,Lucas Serpa Silva,Stefan Buchholz,Bertrand Meyer,Andreas Zeller;Automated fixing of programs with contracts.;61-72;12;Technical session 2:debugging;
2010;George K. Baah,Andy Podgurski,Mary Jean Harrold;Causal inference for statistical fault localization.;73-84;12;Technical session 2:debugging;
2010;Valentin Dallmeier,Nikolai Knopp,Christoph Mallon,Sebastian Hack,Andreas Zeller;Generating test cases for specification mining.;85-96;12;Technical session 3:mining and taxonomies;
2010;Kinga Dobolyi,Westley Weimer;Modeling consumer-perceived web application fault severities for testing.;97-106;10;Technical session 3:mining and taxonomies;
2010;Taeho Kwon,Zhendong Su;Automatic detection of unsafe component loadings.;107-118;12;Technical session 4:anomaly detection;
2010;Natalie Gruska,Andrzej Wasylkowski,Andreas Zeller;Learning from 6, 000 projects: lightweight cross-project anomaly detection.;119-130;12;Technical session 4:anomaly detection;
2010;Enyi Tang,Earl T. Barr,Xuandong Li,Zhendong Su;Perturbing numerical calculations for statistical analysis of floating-point program (in)stability.;131-142;12;Technical session 4:anomaly detection;
2010;Zhen Ming Jiang;Automated analysis of load testing results.;143-146;4;Doctoral symposium;
2010;Gordon Fraser,Andreas Zeller;Mutation-driven generation of unit tests and oracles.;147-158;12;Technical session 5:test input generation and fuzzing;
2010;Hojun Jaygarl,Sunghun Kim,Tao Xie,Carl K. Chang;OCAT: object capture-based automated testing.;159-170;12;Technical session 5:test input generation and fuzzing;
2010;Lorenzo Martignoni,Roberto Paleari,Giampaolo Fresi Roglia,Danilo Bruschi;Testing system virtual machines.;171-182;12;Technical session 5:test input generation and fuzzing;
2010;Matthew Staats,Corina S. Pasareanu;Parallel symbolic execution for structural test generation.;183-194;12;Technical session 6:symbolic execution;
2010;Raul A. Santelices,Mary Jean Harrold;Exploiting program dependencies for scalable multiple-path symbolic execution.;195-206;12;Technical session 6:symbolic execution;
2010;Brett Daniel,Tihomir Gvero,Darko Marinov;On test repair using symbolic execution.;207-218;12;Technical session 6:symbolic execution;
2010;Andrea Arcuri,Muhammad Zohaib Z. Iqbal,Lionel C. Briand;Formal analysis of the effectiveness and predictability of random testing.;219-230;12;Technical session 7:empirical studies;
2010;Vesa Kettunen,Jussi Kasurinen,Ossi Taipale,Kari Smolander;A study on agility and testing processes in software organizations.;231-240;10;Technical session 7:empirical studies;
2010;Nathaniel Ayewah,William W. Pugh;The Google FindBugs fixit.;241-252;12;Technical session 7:empirical studies;
2010;Dasarath Weeratunge,Xiangyun Zhang,William N. Sumner,Suresh Jagannathan;Analyzing concurrency bugs using dual slicing.;253-264;12;Technical session 8:concurrency and differential testing;
2010;Roberto Paleari,Lorenzo Martignoni,Giampaolo Fresi Roglia,Danilo Bruschi;N-version disassembly: differential testing of x86 disassemblers.;265-274;10;Technical session 8:concurrency and differential testing;
2010;Thomas J. Ostrand,Elaine J. Weyuker;Software fault prediction tool.;275-278;4;Formal demos;
2010;Jose Romero-Mariona,Hadar Ziv,Debra J. Richardson;ASSURE: automated support for secure and usable requirements engineering.;279-282;4;Formal demos;
2009;Martin Bravenboer,Yannis Smaragdakis;Exception analysis and points-to analysis: better together.;1-12;12;Static analysis and verification;
2009;Zachary Stengel,Tevfik Bultan;Analyzing singularity channel contracts.;13-24;12;Static analysis and verification;
2009;Martin Th Gorg,Jianjun Zhao;Identifying semantic differences in AspectJ programs.;25-36;12;Static analysis and verification;
2009;Yoram Adler,Eitan Farchi,Moshe Klausner,Dan Pelleg,Orna Raz,Moran Shochat,Shmuel Ur,Aviad Zlotnick;Advanced code coverage analysis using substring holes.;37-46;10;Testing #1;
2009;Charles Pecheur,Franco Raimondi,Guillaume P. Brat;A formal analysis of requirements-based testing.;47-56;10;Testing #1;
2009;Akbar Siami Namin,Jamie Andrews;The influence of size and coverage on test suite effectiveness.;57-68;12;Testing #1;
2009;David Schuler,Valentin Dallmeier,Andreas Zeller;Efficient mutation testing by checking invariant violations.;69-80;12;Empirical studies;
2009;Lingxiao Jiang,Zhendong Su;Automatic mining of functionally equivalent code fragments via random testing.;81-92;12;Empirical studies;
2009;Nadia Polikarpova,Ilinca Ciupa,Bertrand Meyer;A comparative study of programmer-written and automatically inferred contracts.;93-104;12;Empirical studies;
2009;Adam Kiezun,Vijay Ganesh,Philip J. Guo,Pieter Hooimeijer,Michael D. Ernst;HAMPI: a solver for string constraints.;105-116;12;Testing and analysis tools #1;
2009;Andreas Saebjornsen,Jeremiah Willcock,Thomas Panas,Daniel J. Quinlan,Zhendong Su;Detecting code clones in binary executables.;117-128;12;Testing and analysis tools #1;
2009;Bassem Elkarablieh,Patrice Godefroid,Michael Y. Levin;Precise pointer reasoning for dynamic test generation.;129-140;12;Testing and analysis tools #1;
2009;Hong Cheng,David Lo,Yang Zhou,Xiaoying Wang,Xifeng Yan;Identifying bug signatures using discriminative graph mining.;141-152;12;Fault localization;
2009;Saurabh Sinha,Hina Shah,Carsten Gorg,Shujuan Jiang,Mijung Kim,Mary Jean Harrold;Fault localization and repair for Java runtime exceptions.;153-164;12;Fault localization;
2009;Bin Xin,Xiangyun Zhang;Memory slicing.;165-176;12;Fault localization;
2009;Sandro Fouche,Myra B. Cohen,Adam A. Porter;Incremental covering array failure characterization in large configuration spaces.;177-188;12;Testing #2;
2009;Christian Murphy,Kuang Shen,Gail E. Kaiser;Automatic system testing of programs without test oracles.;189-200;12;Testing #2;
2009;Shin Yoo,Mark Harman,Paolo Tonella,Angelo Susi;Clustering test cases to achieve effective and scalable prioritisation incorporating expert knowledge.;201-212;12;Testing #2;
2009;Lu Zhang,Shan-Shan Hou,Chao Guo,Tao Xie,Hong Mei;Time-aware test-case prioritization using integer linear programming.;213-224;12;Testing #2;
2009;Prateek Saxena,Pongsin Poosankam,Stephen McCamant,Dawn Xiaodong Song;Loop-extended symbolic execution on binary programs.;225-236;12;Testing and analysis tools #2;
2009;Anton Babenko,Leonardo Mariani,Fabrizio Pastore;AVA: automated interpretation of dynamically detected anomalies.;237-248;12;Testing and analysis tools #2;
2009;James A. Clause,Alessandro Orso;Penumbra: automatically identifying failure-relevant inputs using dynamic tainting.;249-260;12;Testing and analysis tools #2;
2009;Lorenzo Martignoni,Roberto Paleari,Giampaolo Fresi Roglia,Danilo Bruschi;Testing CPU emulators.;261-272;12;Domain-specific testing techniques;
2009;Jewgenij Botaschanjan,Benjamin Hummel;Specifying the worst case: orthogonal modeling of hardware errors.;273-284;12;Domain-specific testing techniques;
2009;William G. J. Halfond,Saswat Anand,Alessandro Orso;Precise interface identification to improve testing and analysis of web applications.;285-296;12;Domain-specific testing techniques;
2008;James R. Larus;The real value of testing.;1-2;2;Keynote;
2008;Nels E. Beckman,Aditya V. Nori,Sriram K. Rajamani,Robert J. Simmons;Proofs from tests.;3-14;12;Symbolic and concrete execution;
2008;Corina S. Pasareanu,Peter C. Mehlitz,David H. Bushnell,Karen Gundy-Burlet,Michael R. Lowry,Suzette Person,Mark Pape;Combining unit-level symbolic execution and system-level concrete execution for testing NASA software.;15-26;12;Symbolic and concrete execution;
2008;Ru-Gang Xu,Patrice Godefroid,Rupak Majumdar;Testing for buffer overflows with length abstraction.;27-38;12;Symbolic and concrete execution;
2008;Bassem Elkarablieh,Darko Marinov,Sarfraz Khurshid;Efficient solving of structural constraints.;39-50;12;Symbolic and concrete execution;
2008;Hyunsook Do,Gregg Rothermel;Using sensitivity analysis to create simplified economic models for regression testing.;51-62;12;Regression testing;
2008;Il-Chul Yoon,Alan Sussman,Atif M. Memon,Adam A. Porter;Effective and scalable software compatibility testing.;63-74;12;Regression testing;
2008;Xiao Qu,Myra B. Cohen,Gregg Rothermel;Configuration-aware regression testing: an empirical study of sampling and prioritization.;75-86;12;Regression testing;
2008;Carlos Pacheco,Shuvendu K. Lahiri,Thomas A. Ball;Finding errors in .net with feedback-directed random testing.;87-96;10;Case studies;
2008;Nurit Dor,Tal Lev-Ami,Shay Litvak,Shmuel Sagiv,Dror Weiss;Customization change impact analysis for erp professionals via program slicing.;97-108;12;Case studies;
2008;Goh Kondoh,Tamiya Onodera;Finding bugs in java native interface programs.;109-118;10;Case studies;
2008;Ben Liblit;Cooperative debugging with five hundred million test cases.;119-120;2;Keynote;
2008;Raymond P. L. Buse,Westley Weimer;A metric for software readability.;121-130;10;Metrics and threads;
2008;Rudiger Lincke,Jonas Lundberg,Welf Lowe;Comparing software metrics tools.;131-142;12;Metrics and threads;
2008;Chen Tian,Vijay Nagarajan,Rajiv Gupta,Sriraman Tallam;Dynamic recognition of synchronization operations for improved data race detection.;143-154;12;Metrics and threads;
2008;Eric Bodden,Klaus Havelund;Racer: effective race detection using aspectj.;155-166;12;Metrics and threads;
2008;Dennis Jeffrey,Neelam Gupta,Rajiv Gupta;Fault localization using value replacement.;167-178;12;Fault localization;
2008;Alex Edwards,Sean Tucker,Sebastien Worms,Rahul Vaidya,Brian Demsky;AFID: an automated fault identification tool.;179-188;10;Fault localization;
2008;George K. Baah,Andy Podgurski,Mary Jean Harrold;The probabilistic program dependence graph and its application to fault diagnosis.;189-200;12;Fault localization;
2008;Matthew M. Papi,Mahmood Ali,Telmo Luis Correa Jr.,Jeff H. Perkins,Michael D. Ernst;Practical pluggable types for java.;201-212;12;Static analysis;
2008;Alexey Loginov,Eran Yahav,Satish Chandra 0001,Stephen J. Fink,Noam Rinetzky,Mangala Gowri Nanda;Verifying dereference safety via expanding-scope analysis.;213-224;12;Static analysis;
2008;Guoqing (Harry) Xu,Atanas Rountev;Merging equivalent contexts for scalable heap-cloning-based context-sensitive points-to analysis.;225-236;12;Static analysis;
2008;Davide Balzarotti,Greg Banks,Marco Cova,Viktoria Felmetsger,Richard A. Kemmerer,William K. Robertson,Fredrik Valeur,Giovanni Vigna;Are your votes ;237-248;12;Web and security;
2008;Gary Wassermann,Dachuan Yu,Ajay Chander,Dinakar Dhurjati,Hiroshi Inamura,Zhendong Su;Dynamic test input generation for web applications.;249-260;12;Web and security;
2008;Shay Artzi,Adam Kiezun,Julian Dolby,Frank Tip,Danny Dig,Amit M. Paradkar,Michael D. Ernst;Finding bugs in dynamic web applications.;261-272;12;Web and security;
2008;Raymond P. L. Buse,Westley Weimer;Automatic documentation inference for exceptions.;273-282;10;Inference;
2008;Yamini Kannan,Koushik Sen;Universal symbolic execution and its application to likely data structure invariant generation.;283-294;12;Inference;
2008;Sriram Sankaranarayanan,Swarat Chaudhuri,Franjo Ivancic,Aarti Gupta;Dynamic inference of likely data preconditions over predicates by tree learning.;295-306;12;Inference;
2008;Premkumar T. Devanbu,Brendan Murphy,Nachiappan Nagappan,Thomas Zimmermann 0001,Valentin Dallmeier;DEFECTS 2008: international workshop on defects in large software systems.;307-308;2;Workshops;
2008;Shmuel Ur,Scott D. Stoller,Eitan Farchi;6th workshop on parallel and distributed systems: testing and debugging (PADTAD '08).;309-310;2;Workshops;
2008;Tevfik Bultan,Tao Xie;Workshop on testing, analysis and verification of web software (TAV-WEB 2008).;311-312;2;Workshops;
2008;Ben Liblit,Atanas Rountev;WODA 2008: the sixth international workshop on dynamic analysis.;313-314;2;Workshops;
2008;Darko Marinov,Wolfram Schulte;Workshop on state-space exploration for automated testing (SSEAT 2008).;315-316;2;Workshops;
2007;Piramanayagam Arumuga Nainar,Ting Chen,Jake Rosin,Ben Liblit;Statistical debugging using compound boolean predicates.;5-15;11;Debugging;
2007;James A. Jones,Mary Jean Harrold,James F. Bowring;Debugging in Parallel.;16-26;11;Debugging;
2007;Rachel Tzoref-Brill,Shmuel Ur,Elad Yom-Tov;Instrumenting where it hurts: an automatic concurrent debugging technique.;27-38;12;Debugging;
2007;Graham Hughes,Tevfik Bultan;Interface grammars for modular software model checking.;39-49;11;Model checking and components;
2007;Marcelo d'Amorim,Steven Lauterburg,Darko Marinov;Delta execution for efficient state-space exploration of object-oriented programs.;50-60;11;Model checking and components;
2007;Pete Manolios,Daron Vroon,Gayatri Subramanian;Automating component-based system assembly.;61-72;12;Model checking and components;
2007;Mark Harman,Phil McMinn;"A theoretical &amp; empirical znalysis of evolutionary testing and hill climbing for structural test data generation.";73-83;11;Empirical studies of testing approaches;
2007;Ilinca Ciupa,Andreas Leitner,Manuel Oriol,Bertrand Meyer;Experimental assessment of random testing for object-oriented software.;84-94;11;Empirical studies of testing approaches;
2007;Tim Trew;Chasing rainbows: improving software testing in the real world.;95-96;2;Empirical studies of testing approaches;
2007;Aaron Tomb,Guillaume P. Brat,Willem Visser;Variably interprocedural program analysis for runtime error detection.;97-107;11;Hybrid analysis;
2007;Ken Koster;Using portfolio theory for better and more consistent quality.;108-117;10;Hybrid analysis;
2007;Bruno Dufour,Barbara G. Ryder,Gary Sevitsky;Blended analysis for performance understanding of framework-based applications.;118-128;11;Hybrid analysis;
2007;Myra B. Cohen,Matthew B. Dwyer,Jiangfan Shi;Interaction testing of highly-configurable systems in the presence of constraints.;129-139;11;Testing;
2007;Shin Yoo,Mark Harman;Pareto efficient multi-objective test case selection.;140-150;11;Testing;
2007;Michael Emmi,Rupak Majumdar,Koushik Sen;Dynamic test input generation for database applications.;151-162;12;Testing;
2007;Ray-Yaung Chang,Andy Podgurski,Jiong Yang;Finding what's not there: a new approach to revealing neglected conditions in software.;163-173;11;Static analysis;
2007;Sharon Shoham,Eran Yahav,Stephen J. Fink,Marco Pistoia;Static specification mining using automata-based abstractions.;174-184;11;Static analysis;
2007;Bin Xin,Xiangyun Zhang;Efficient online detection of dynamic control dependence.;185-195;11;Dynamic analysis;
2007;James A. Clause,Wanchun Li,Alessandro Orso;Dytan: a generic dynamic taint analysis framework.;196-206;11;Dynamic analysis;
2007;Sriraman Tallam,Chen Tian,Rajiv Gupta,Xiangyun Zhang;Enabling tracing Of long-running multithreaded programs via dynamic execution reduction.;207-218;12;Dynamic analysis;
2007;Thomas J. Ostrand,Elaine J. Weyuker,Robert M. Bell;Automating algorithms for the identification of fault-prone files.;219-227;9;Fault localization;
2007;Tao Wang,Abhik Roychoudhury;Hierarchical dynamic slicing.;228-238;11;Fault localization;
2007;Xiaoxia Ren,Barbara G. Ryder;Heuristic ranking of java program edits for fault localization.;239-249;11;Fault localization;
2006;Kristen R. Walcott,Mary Lou Soffa,Gregory M. Kapfhammer,Robert S. Roos;TimeAware test suite prioritization.;1-12;12;Session 1:test case selection and generation;
2006;Phil McMinn,Mark Harman,David M. Binkley,Paolo Tonella;The species per path approach to SearchBased test data generation.;13-24;12;Session 1:test case selection and generation;
2006;Michael W. Whalen,Ajitha Rajan,Mats Per Erik Heimdahl,Steven P. Miller;Coverage metrics for requirements-based testing.;25-36;12;Session 1:test case selection and generation;
2006;Willem Visser,Corina S. Pasareanu,Radek Pelanek;Test input generation for java containers using state matching.;37-48;12;Session 1:test case selection and generation;
2006;Joseph R. Ruthruff,Sebastian G. Elbaum,Gregg Rothermel;Experimental program analysis: a new program analysis paradigm.;49-60;12;Session 2:empirical studies;
2006;Robert M. Bell,Thomas J. Ostrand,Elaine J. Weyuker;Looking for bugs in all the right places.;61-72;12;Session 2:empirical studies;
2006;Stefan Wagner 0001;A model and sensitivity analysis of the quality economics of defect-detection techniques.;73-84;12;Session 2:empirical studies;
2006;Dick Hamlet;Subdomain testing of units and systems with state.;85-96;12;Session 3:modular reasoning;
2006;Jamieson M. Cobleigh,George S. Avrunin,Lori A. Clarke;Breaking up is hard to do: an investigation of decomposition for assume-guarantee reasoning.;97-108;12;Session 3:modular reasoning;
2006;Greg Dennis,Felix Sheng-Ho Chang,Daniel B. Jackson;Modular verification of code with SAT.;109-120;12;Session 3:modular reasoning;
2006;Paolina Centonze,Gleb Naumovich,Stephen J. Fink,Marco Pistoia;Role-Based access control consistency validation.;121-132;12;Session 4:static analysis;
2006;Stephen J. Fink,Eran Yahav,Nurit Dor,Ganesan Ramalingam,Emmanuel Geay;Effective typestate verification in the presence of aliasing.;133-144;12;Session 4:static analysis;
2006;Greta Yorsh,Thomas A. Ball,Shmuel Sagiv;Testing, abstraction, theorem proving: better together!;145-156;12;Session 4:static analysis;
2006;Stephen F. Siegel,Anastasia Mironova,George S. Avrunin,Lori A. Clarke;Using model checking with symbolic execution to verify parallel numerical programs.;157-168;12;Session 4:static analysis;
2006;Marat Boshernitsan,Roong-Ko Doong,Alberto Savoia;From daikon to agitator: lessons and challenges in building a commercial tool for developer testing.;169-180;12;Session 5:test execution;
2006;Kimmo Kiviluoma,Johannes Koskinen,Tommi Mikkonen;Run-time monitoring of architecturally significant behaviors using behavioral profiles and aspects.;181-190;10;Session 5:test execution;
2006;Xiaolan Zhang,Larry Koved,Marco Pistoia,Samuel Weber,Trent Jaeger,Guillaume Marceau,Liangzhao Zeng;The case for analysis preserving language transformation.;191-202;12;Session 5:test execution;
2006;Oksana Tkachuk,Sreeranga P. Rajan;Application of automated environment generation to commercial software.;203-214;12;Session 6:test automation;
2006;Hana Sevcikova,Alan Borning,David Socha,Wolf-Gideon Bleek;Automated testing of stochastic systems: a statistically grounded approach.;215-224;10;Session 6:test automation;
2006;Raimondas Lencevicius,Edu Metz;Performance assertions for mobile devices.;225-232;8;Session 6:test automation;
2006;Brian Demsky,Michael D. Ernst,Philip J. Guo,Stephen McCamant,Jeff H. Perkins,Martin C. Rinard;Inference and enforcement of data structure consistency specifications.;233-244;12;Session 7:dynamic analysis;
2006;Christoph Csallner,Yannis Smaragdakis;DSD-Crasher: a hybrid analysis tool for bug finding.;245-254;10;Session 7:dynamic analysis;
2006;Philip J. Guo,Jeff H. Perkins,Stephen McCamant,Michael D. Ernst;Dynamic inference of abstract types.;255-265;11;Session 7:dynamic analysis;
2004;Atanas Rountev,Scott Kagan,Michael Gibas;Static and dynamic analysis of call chains in Java.;1-11;11;Program analysis I;
2004;Nurit Dor,Stephen Adams,Manuvir Das,Zhe Yang;Software validation via scalable path-sensitive value flow analysis.;12-22;11;Program analysis I;
2004;Chen Fu,Barbara G. Ryder,Ana Milanova,David Wonnacott;Testing of java web services for robustness.;23-34;12;Program analysis I;
2004;Mihai Christodorescu,Somesh Jha;Testing malware detectors.;34-44;11;Program analysis I;
2004;Cemal Yilmaz,Myra B. Cohen,Adam A. Porter;Covering arrays for efficient fault characterization in complex configuration spaces.;45-54;10;Testing I;
2004;Lev Nachmanson,Margus Veanes,Wolfram Schulte,Nikolai Tillmann,Wolfgang Grieskamp;Optimal strategies for testing nondeterministic systems.;55-64;10;Testing I;
2004;Sebastian G. Elbaum,Madeline Hardojo;An empirical study of profiling strategies for released software and their impact on testing activities.;65-75;11;Empirical studies;
2004;David Saff,Michael D. Ernst;An experimental evaluation of continuous testing during development.;76-85;10;Empirical studies;
2004;Thomas J. Ostrand,Elaine J. Weyuker,Robert M. Bell;Where the bugs are.;86-96;11;Empirical studies;
2004;Willem Visser,Corina S. Pasareanu,Sarfraz Khurshid;Test input generation with java PathFinder.;97-107;11;Test generation;
2004;Andre Baresel,David M. Binkley,Mark Harman,Bogdan Korel;Evolutionary testing in the presence of loop-assigned flags: a testability transformation approach.;108-118;11;Test generation;
2004;Paolo Tonella;Evolutionary testing of classes.;119-128;10;Test generation;
2004;Alan Hartman,Kenneth Nagin;The AGEDIS tools for model based testing.;129-132;4;Test generation;
2004;Kevin J. Sullivan,Jinlin Yang,David Coppit,Sarfraz Khurshid,Daniel B. Jackson;Software assurance by bounded exhaustive testing.;133-142;10;Testing II;
2004;Karl Meinke;Automated black-box testing of functional correctness using function approximation.;143-153;11;Testing II;
2004;Sandro Morasca,Stefano Serra Capizzano;On the analytical comparison of testing techniques.;154-164;11;Testing II;
2004;Greg Dennis,Robert Seater,Derek Rayside,Daniel B. Jackson;Automating commutativity analysis at the design level.;165-174;10;Model checking I;
2004;Cesar A. Munoz,Gilles Dowek,Victor Carreno;Modeling and verification of an air traffic concept of operations.;175-182;8;Model checking I;
2004;James Ezick;An optimizing compiler for batches of temporal logic formulas.;183-194;12;Model checking I;
2004;James F. Bowring,James M. Rehg,Mary Jean Harrold;Active learning for automatic classification of software behavior.;195-205;11;Program analysis II;
2004;Lee Lin,Michael D. Ernst;Improving the adaptability of multi-mode systems via program steering.;206-216;11;Program analysis II;
2004;Sethu Ramesh,Aditya Rajeev Kulkarni,V. Kamat;Slicing tools for synchronous reactive programs.;217-220;4;Program analysis II;
2004;Cormac Flanagan,Stephen N. Freund,Shaz Qadeer;Exploiting purity for atomicity.;221-231;11;Program analysis III;
2004;Jonathan Edwards,Daniel B. Jackson,Emina Torlak,Vincent Yeung;Faster constraint solving with subtypes.;232-242;11;Program analysis III;
2004;Darrell Reimer,Edith Schonberg,Kavitha Srinivas,Harini Srinivasan,Bowen Alpern,Robert D. Johnson,Aaron Kershenbaum,Larry Koved;SABER: smart analysis based error reduction.;243-251;9;Program analysis III;
2004;Xiang Fu,Tevfik Bultan,Jianwen Su;Model checking XML manipulating software.;252-262;11;Model checking II;
2004;Matteo Rossi,Dino Mandrioli;A formal approach for modeling and verification of RTCORBA-based applications.;263-273;11;Model checking II;
2004;Barbara Staudt Lerner;Verifying process models built using parameterized state machines.;274-284;11;Model checking II;
2002;Ana Milanova,Atanas Rountev,Barbara G. Ryder;Parameterized object sensitivity for points-to and side-effect analyses for Java.;1-11;11;Static analysis of Java programs;
2002;Alex Groce,Willem Visser;Model checking Java programs using structural heuristics.;12-21;10;Static analysis of Java programs;
2002;Donglin Liang,Maikel Pennings,Mary Jean Harrold;Evaluating the precision of static reference analysis using profiling.;22-32;11;Static analysis of Java programs;
2002;Gleb Naumovich;A conservative algorithm for computing the flow of permissions in Java programs.;33-43;11;Validating security properties;
2002;Scott D. Stoller;Domain partitioning for open reactive systems.;44-54;11;Validating security properties;
2002;Thomas J. Ostrand,Elaine J. Weyuker;The distirubtion of faults in a large industrial software system.;55-64;10;Faults and failure analysis;
2002;Alessandro Orso,Donglin Liang,Mary Jean Harrold,Richard J. Lipton;Gamma system: continuous evolution of software after deployment.;65-69;5;Faults and failure analysis;
2002;Lionel C. Briand,Yvan Labiche,Hong Sun;Investigating the use of analysis contracts to support fault isolation in object oriented code.;70-80;11;Faults and failure analysis;
2002;Martin Hiller,Arshad Jhumka,Neeraj Suri;PROPANE: an environment for examining the propagation of errors in software.;81-85;5;Faults and failure analysis;
2002;Mustafa M. Tikir,Jeffrey K. Hollingsworth;Efficient instrumentation for code coverage testing.;86-96;11;Improving testing efficiency;
2002;Amitabh Srivastava,Jay Thiagarajan;Effectively prioritizing tests in development environment.;97-106;10;Improving testing efficiency;
2002;Boris Vaysburg,Luay Ho Tahat,Bogdan Korel;Dependence analysis in reduction of requirement based test suites.;107-111;5;Improving testing efficiency;
2002;Wolfgang Grieskamp,Yuri Gurevich,Wolfram Schulte,Margus Veanes;Generating finite state machines from abstract state machines.;112-122;11;Specification-based testing;
2002;Chandrasekhar Boyapati,Sarfraz Khurshid,Darko Marinov;Korat: automated testing based on Java predicates.;123-133;11;Specification-based testing;
2002;G. Friedman,Alan Hartman,Kenneth Nagin,T. Shiran;Projected state machine coverage for software testing.;134-143;10;Specification-based testing;
2002;Diego Latella,Mieke Massink;On testing and conformance relations for UML statechart diagrams behaviours.;144-153;10;Conformance and interoperability testing;
2002;Tim Moors,Malathi Veeraraghavan,Zhifeng Tao,Xuan Zheng,Ramesh Badri;Experiences in automating the testing of SS7 signalling transfer points.;154-158;5;Conformance and interoperability testing;
2002;Rachel Cardell-Oliver;Conformance test experiments for distributed real-time systems.;159-163;5;Conformance and interoperability testing;
2002;Yung-Pin Cheng;Refactoring design models for inductive verification.;164-168;5;Analysis of concurrent programs;
2002;Tuba Yavuz-Kahveci,Tevfik Bultan;Specification, verification, and synthesis of concurrency control components.;169-179;11;Analysis of concurrent programs;
2002;Peter G. Bishop;Rescaling reliability bounds for a new operational profile.;180-190;11;Theory of testing and reability;
2002;Tsong Yueh Chen,T. H. Tse,Zhiquan Zhou;Semi-proving: an integrated method based on global symbolic evaluation and metamorphic testing.;191-195;5;Theory of testing and reability;
2002;Dick Hamlet;Continuity in sofware systems.;196-200;5;Theory of testing and reability;
2002;Antonia Bertolino;ISSTA 2002 panel: is ISSTA research relevant to industrial users?;201-202;2;ISSTA panel:is ISSTA research relevant to industrial users?;
2002;Vincent Encontre;Is ISSTA research relevant to industrial users? panel - ISSTA 2002: empowering the developer to be a tester too!;203-204;2;ISSTA panel:is ISSTA research relevant to industrial users?;
2002;Alan Hartman;Is ISSTA research relevant to industry?;205-206;2;ISSTA panel:is ISSTA research relevant to industrial users?;
2002;Emilia Peciola;Ericsson lab Italy: is ISSTA research relevant to industrial users?;207;1;ISSTA panel:is ISSTA research relevant to industrial users?;
2002;Ashok Sreenivas;Panel discussion: is ISSTA testing research relevant to industrial users?;208-209;2;ISSTA panel:is ISSTA research relevant to industrial users?;
2002;Jong-Deok Choi,Andreas Zeller;Isolating failure-inducing thread schedules.;210-220;11;Dynamic analysis;
2002;John Whaley,Michael C. Martin,Monica S. Lam;Automatic extraction of object-oriented component interfaces.;218-228;11;Dynamic analysis;
2002;Jeremy W. Nimmer,Michael D. Ernst;Automatic generation of program specifications.;229-239;11;Dynamic analysis;
2000;Jonathan D. Pincus;Analysis is necessary, but far from sufficient: Experiences building and deploying successful tools for developers and testers (abstract only).;1;1;ISSTA;
2000;Karthikeyan Bhargavan,Carl A. Gunter,Moonjoo Kim,Insup Lee,Davor Obradovic,Oleg Sokolsky,Mahesh Viswanathan 0001;Verisim: Formal analysis of network simulations.;2-13;12;ISSTA;
2000;Daniel B. Jackson,Mandana Vaziri;Finding bugs with a constraint solver.;14-25;12;ISSTA;
2000;Tal Lev-Ami,Thomas W. Reps,Shmuel Sagiv,Reinhard Wilhelm;Putting static analysis to work for verification: A case study.;26-38;13;ISSTA;
2000;Ugo A. Buy,Alessandro Orso,Mauro Pezze;Automated Testing of Classes.;39-48;10;ISSTA;
2000;Amie L. Souter,Lori L. Pollock;OMEN: A strategy for testing object-oriented software.;49-59;11;ISSTA;
2000;Jean Hartmann,Claudio Imoberdorf,Michael Meisinger;UML-Based integration testing.;60-70;11;ISSTA;
2000;Richard G. Hamlet;On subdomains: Testing, profiles, and components.;71-76;6;ISSTA;
2000;Dennis K. Peters,David Lorge Parnas;Requirements-based monitors for real-time systems.;77-85;9;ISSTA;
2000;Paul Z. Kolano,Richard A. Kemmerer;Classification schemes to aid in the analysis of real-time systems.;86-95;10;ISSTA;
2000;Jamieson M. Cobleigh,Lori A. Clarke,Leon J. Osterweil;Verifying properties of process definitions.;96-101;6;ISSTA;
2000;Sebastian G. Elbaum,Alexey G. Malishevsky,Gregg Rothermel;Prioritizing test cases for regression testing.;102-112;11;ISSTA;
2000;Michael Hind,Anthony Pioli;Which pointer analysis should I use?;113-123;11;ISSTA;
2000;Phyllis G. Frankl,Yuetang Deng;Comparison of delivered reliability of branch, data flow and operational testing: A case study.;124-134;11;ISSTA;
2000;Ralf Hildebrandt,Andreas Zeller;Simplifying failure-inducing input.;135-145;11;ISSTA;
2000;Lori A. Clarke;Finite state verification: An emerging technology for validating software systems (abstract only).;146;1;ISSTA;
2000;David Chays,Saikat Dan,Phyllis G. Frankl,Filippos I. Vokolos,Elaine J. Weber;A framework for testing database applications.;147-157;11;ISSTA;
2000;John Steven,Pravir Chandra,Bob Fleck,Andy Podgurski;jRapture: A Capture/Replay tool for observation-based testing.;158-167;10;ISSTA;
2000;Martin R. Woodward,Zuhoor A. Al-Khanjari;Testability, fault size and the domain-to-range ratio: An eternal triangle.;168-172;5;ISSTA;
2000;Patrick J. Schroeder,Bogdan Korel;Black-box test reduction using input-output analysis.;173-177;5;ISSTA;
2000;Craig H. Wittenberg;Progress in testing component-based software (abstract only).;178;1;ISSTA;
2000;David L. Dill;Model checking Java programs (abstract only).;179;1;ISSTA;
2000;Mangala Gowri Nanda,Sethu Ramesh;Slicing concurrent programs.;180-190;11;ISSTA;
2000;Stephen F. Siegel,George S. Avrunin;Improving the precision of INCA by preventing spurious cycles.;191-200;10;ISSTA;
2000;Daniel Schulz,Frank Mueller;A thread-aware debugger with an open interface.;201-211;11;ISSTA;
1998;James C. Corbett;Constructing Compact Models of Concurrent Java Programs.;1-10;10;ISSTA;
1998;Mary Jean Harrold,Gregg Rothermel,Saurabh Sinha;Computation of Interprocedural Control Dependence.;11-20;10;ISSTA;
1998;Phil Stocks,Barbara G. Ryder,William Landi,Sean Zhang;Comparing Flow and Context Sensitivity on the Modification-Side-Effects Problem.;21-31;11;ISSTA;
1998;Brian Mitchell,Steven J. Zeil;An Experiment in Estimating Reliability Growth Under Both Representative and Directed Testing.;32-41;10;ISSTA;
1998;Simeon C. Ntafos;On Random and Partition Testing.;42-48;7;ISSTA;
1998;Richard G. Hamlet,Richard A. Kemmerer,Edward F. Miller,Debra J. Richardson;The Most Influential Papers from the ISSTA Research Community (Panel).;49;1;ISSTA;
1998;Richard G. Hamlet;What Can We Learn by Testing a Program?;50-52;3;ISSTA;
1998;Arnaud Gotlieb,Bernard Botella,Michel Rueher;Automatic Test Data Generation Using Constraint Solving Techniques.;53-62;10;ISSTA;
1998;Akos Hajnal,Istvan Forgacs;An Applicable Test Data Generation Algorithm for Domain Errors.;63-72;10;ISSTA;
1998;Nigel J. Tracey,John Andrew Clark,Keith Mander;Automated Program Flaw Finding Using Simulated Annealing.;73-81;9;ISSTA;
1998;Thomas J. Ostrand,Aaron Anodide,Herbert Foster,Tarak Goradia;A Visual Test Development Environment for GUI Systems.;82-92;11;ISSTA;
1998;Mark Molloy,Kristy Andrews,James Herren,David Cutler,Paul Del Vigna;Automatic Interoperability Test Generation for Source-to-Source Translators.;93-101;9;ISSTA;
1998;William Chan,Richard J. Anderson,Paul Beame,David Notkin;Improving Efficiency of Symbolic Model Checking for State-Based System Requirements.;102-112;11;ISSTA;
1998;Tevfik Bultan,Richard Gerber,Christopher League;Verifying Systems with Integer Constraints and Boolean Predicates: A Composite Approach.;113-123;11;ISSTA;
1998;Patrice Godefroid,Robert S. Hanmer,Lalita Jategaonkar Jagadeesan;Model Checking Without a Model: An Analysis of the Heart-Beat Monitor of a Telephone Switch Using VeriSoft.;124-133;10;ISSTA;
1998;Thomas A. Ball;On the Limit of Control Flow Analysis for Regression Test Selection.;134-142;9;ISSTA;
1998;Bogdan Korel,Ali M. Al-Yami;Automated Regression Test Generation.;143-152;10;ISSTA;
1998;Cheer-Sun D. Yang,Amie L. Souter,Lori L. Pollock;All-du-path Coverage for Parallel Programs.;153-162;10;ISSTA;
1996;Inhye Kang,Insup Lee;An Efficient State Space Generation for Analysis of Real-Time Systems.;4-13;10;Concurrent and Real-Time;
1996;Pramod V. Koppol,Kuo-Chung Tai;An Incremental Approach to Structural Testing of Concurrent Software.;14-23;10;Concurrent and Real-Time;
1996;A. T. Chamillard,Lori A. Clarke;Improving the Accuracy of Petri Net-Based Analysis of Concurrent Programs.;24-38;15;Concurrent and Real-Time;
1996;Sandro Morasca,Angelo Morzenti,Pierluigi San Pietro;Generating Functional Test Cases in-the-large for Time-critical Systems from Logic-based Specifications.;39-52;14;Specification-Based Testing;
1996;Merlin Hughes,P. David Stotts;Daistish: Systematic Algebraic Testing for OO Programs in the Presence of Side-effects.;53-61;9;Specification-Based Testing;
1996;Juei Chang,Debra J. Richardson,Sriram Sankar;Structural Specification-Based Testing with ADL.;62-70;9;Specification-Based Testing;
1996;James L. Crowley,James F. Leathrum,K. A. Liburdy;Issues in the Full Scale Use of Formal Methods for Automated Testing.;71-78;8;Workshop Session 1;
1996;Mats Per Erik Heimdahl;Experiences and Lessons from the Analysis of TCAS II.;79-83;5;Workshop Session 1;
1996;Richard G. Hamlet;Predicting Dependability by Testing.;84-91;8;Workshop Session 1;
1996;Larry J. Morell,Branson W. Murrill;Using Perturbation Analysis to Measure Variation in the Information Content of Test Sets.;92-97;6;Workshop Session 1;
1996;William E. Howden,G. M. Shi;Linear and Structural Event Sequence Analysis.;98-106;9;Analysis;
1996;Mary Jean Harrold,Gregg Rothermel;Separate Computation of Alias Information for Reuse.;107-120;14;Analysis;
1996;Richard A. DeMillo,Hsin Pan,Eugene H. Spafford;Critical Slicing for Software Fault Localization.;121-134;14;Analysis;
1996;Delia I. S. Marx,Phyllis G. Frankl;The Path-Wise Approach to Data Flow Testing with Pointer Variables.;135-146;12;Implementation-Based Testing;
1996;Martina Marre,Antonia Bertolino;Unconstrained Duals and Their Use in Achieving All-Uses Coverage.;147-157;11;Implementation-Based Testing;
1996;Muriel Daran,Pascale Thevenod-Fosse;Software Error Analysis: A Real Case Study Involving Real Faults and Mutations.;158-171;14;Implementation-Based Testing;
1996;Mauro Pezze,Michal Young;Generation of Multi-Formalism State-Space Analysis Tools.;172-179;8;Workshop Session 2;
1996;Tony Sloane,Jason Holdsworth;Beyond Traditional Program Slicing.;180-186;7;Workshop Session 2;
1996;John R. Callahan,Todd L. Montgomery;An Approach to Verification and Validation of a Reliable Multicasting Protocol.;187-194;8;Workshop Session 2;
1996;Jeff Offutt,Jane Huffman Hayes;A Semantic Model of Program Faults.;195-200;6;Workshop Session 2;
1996;Cheer-Sun D. Yang,Lori L. Pollock;Towards a Structural Load Testing Tool.;201-208;8;Workshop Session 3;
1996;Bogdan Korel;Automated Test Data Generation for Programs with Procedures.;209-215;7;Workshop Session 3;
1996;Keith P. Pomakis,Joanne M. Atlee;Reachability Analysis of Feature Interactions: A Progress Report.;216-223;8;Workshop Session 3;
1996;Tevfik Bultan,Jeffrey Fischer,Richard Gerber;Compositional Verification by Model Checking for Counter-Examples.;224-238;15;Modelling;
1996;Daniel B. Jackson,Craig Damon;Elements of Style: Analyzing a Software Design Feature with a Counterexample Detector.;239-249;11;Modelling;
1996;James C. Corbett;Constructing Abstract Models of Concurrent Real-Time Software.;250-260;11;Modelling;
1996;Patrice Godefroid,Doron A. Peled,Mark G. Staskauskas;Using Partial-Order Methods in the Formal Validation of Industrial Concurrent Programs.;261-269;9;Verification and Validation;
1996;Milica Barjaktarovic,Shiu-Kai Chin,Kamal Jabbour;Formal Specification and Verification of the Kernel Functional Unit of the OSI Session Layer Protocol and Service Using CCS.;270-279;10;Verification and Validation;
1996;Joanne M. Atlee,Michael A. Buckley;A Logic-Model Semantics for SCR Software Requirements.;280-292;13;Verification and Validation;
1994;Marsha Chechik,John D. Gannon;Automatic Verification of Requirements Implementation.;1-14;14;Specification-based Testing and Analysis;
1994;Jeffrey Douglas,Richard A. Kemmerer;Aslantest: A Symbolic Execution Tool for Testing Aslan Formal Specifications.;15-27;13;Specification-based Testing and Analysis;
1994;Deepak Kapur;An Automated Tool for Analyzing Completeness of Equational Specifications.;28-43;16;Specification-based Testing and Analysis;
1994;Alberto Avritzer,Elaine J. Weyuker;Generating Test Suites for Software Load Testing.;44-57;14;Test Generation;
1994;Dennis K. Peters,David Lorge Parnas;Generating a Test Oracle from Program Documentation (Work in Progress).;58-65;8;Test Generation;
1994;Bogdan Korel,Satish Yalamanchili;Forward Computation of Dynamic Program Slices.;66-79;14;Path Analysis and Slicing;
1994;Allen Goldberg,Tie-Cheng Wang,David Zimmerman;Applications of Feasible Path Analysis to Program Testing.;80-94;15;Path Analysis and Slicing;
1994;Robert Jasper,Mike Brennan,Keith E. Williamson,Bill Currier,David Zimmerman;Test Data Generation and Feasible Path Analysis.;95-107;13;Path Analysis and Slicing;
1994;Gregor von Bochmann,Alexandre Petrenko;Protocol Testing: Review of Methods and Relevance for Software Testing.;109-124;16;Invited Paper;
1994;Gerald M. Karam;Visualization using Timelines.;125-137;13;Tools;
1994;Debra J. Richardson;TAOS: Testing with Analysis and Oracle Support.;138-153;16;Tools;
1994;Ernst Siepmann,A. Richard Newton;TOBAC: A Test Case Browser for Testing Object-Oriented Software.;154-168;15;Tools;
1994;Gregg Rothermel,Mary Jean Harrold;Selecting Tests and Identifying Test Coverage Requirements for Modified Software.;169-184;16;Test Coverage Techniques;
1994;Vladimir N. Fleyshgakker,Stewart N. Weiss;Efficient Mutation Analysis: A New Approach.;185-195;11;Test Coverage Techniques;
1994;William E. Howden,Yudong Huang;Confidence Oriented Software Dependability Measurement (Abstract).;196;1;Workshop Session 1;
1994;Leo Marcus;The Incorporation of Testing into Verification: Direct, Modular, and Hierarchical Correctness Degrees (Abstract).;197;1;Workshop Session 1;
1994;Istvan Forgacs;The All Program Functions Criterion for Revealing Computation Errors (Abstract).;198;1;Workshop Session 1;
1994;John C. Knight,Aaron G. Cass,Antonio M. Fernandez,Kevin G. Wika;Testing a Safety-Critical Application.;199;1;Workshop Session 1;
1994;Branson W. Murrill,Larry J. Morell;An Experimental Approach to Analyzing Software Semantics Using Error Flow Information (Abstract).;200;1;Workshop Session 2;
1994;Lori L. Pollock,Mary P. Bivens,Mary Lou Soffa;Debugging Optimized Code Via Tailoring (Abstract).;201;1;Workshop Session 2;
1994;Antonia Bertolino,Martina Marre;A Meaningful Bound for Branch Testing (Abstract).;202;1;Workshop Session 2;
1994;Michal Young;State-Space Analysis as an Aid to Testing (Abstract).;203;1;Workshop Session 2;
1994;James C. Corbett;An Empirical Evaluation of Three Methods for Deadlock Analysis of Ada Tasking Programs.;204-215;12;Concurrent and Real-Time Software;
1994;Suresh K. Damodaran-Kamal,Joan M. Francioni;Testing Races in Parallel Programs with an OtOt Strategy.;216-227;12;Concurrent and Real-Time Software;
1994;Ugo A. Buy,Robert H. Sloan;Analysis of Real-Time Programs with Simple Time Petri Nets.;228-239;12;Concurrent and Real-Time Software;
1993;Manuel Blum;Designing Programs to Check Their Work (Abstract).;1;1;Invited Presentation;
1993;Denise M. Woit;Specifying Operational Profiles for Modules.;2-10;9;Specification-based Testing and Analysis;
1993;Phil Stocks,David A. Carrington;Test Template Framework: A Specification-Based Testing Case Study.;11-18;8;Specification-based Testing and Analysis;
1993;Daniel B. Jackson;Abstract Analysis with Aspect.;19-27;9;Specification-based Testing and Analysis;
1993;Miguel Felder,Carlo Ghezzi,Mauro Pezze;Analyzing Refinements of State Based Specifications: The Case of TB Nets.;28-39;12;Concurrency Analysis;
1993;David L. Levine,Richard N. Taylor;Metric-Driven Reengineering for Static Concurrency Analysis.;40-50;11;Concurrency Analysis;
1993;Sastry Duri,Ugo A. Buy,R. Devarapalli,Sol M. Shatz;Using State Space Reduction Methods for Deadlock Analysis in Ada Tasking.;51-60;10;Concurrency Analysis;
1993;Peter A. Vogel;An Integrated General Purpose Automated Test Environment.;61-69;9;Environment Support for Testing;
1993;Fevzi Belli,Oliver Jack;Implementation-Based Analysis and Testing of Prolog Programs.;70-80;11;Environment Support for Testing;
1993;Ronald W. Modes;Structured IV&V for the Space Shuttle Flight Software.;81;1;Invited Presentation;
1993;Alberto Avritzer,Brian Larson;Load Testing Software Using Deterministic State Testing.;82-88;7;Statistical Approaches to Testing;
1993;Richard G. Hamlet,Jeffrey M. Voas;Faults on Its Sleeve: Amplifying Software Reliability Testing.;89-98;10;Statistical Approaches to Testing;
1993;Pascale Thevenod-Fosse,Helene Waeselynck;STATEMATE Applied to Statistical Software Testing.;99-109;11;Statistical Approaches to Testing;
1993;James C. Corbett,George S. Avrunin;A Practical Technique for Bounding the Time Between Events in Concurrent Real-Time Systems.;110-116;7;Real-Time Analysis;
1993;Joanne M. Atlee,John D. Gannon;Analyzing Timing Requirements.;117-127;11;Real-Time Analysis;
1993;Alberto Coen-Porisini,Richard A. Kemmerer;The Composability of ASTRAL Realtime Specifications.;128-138;11;Real-Time Analysis;
1993;Roland H. Untch,Jeff Offutt,Mary Jean Harrold;Mutation Analysis Using Mutant Schemata.;139-148;10;Mutation Testing;
1993;Stewart N. Weiss,Vladimir N. Fleyshgakker;Improved Serial Algorithms for Mutation Analysis.;149-158;10;Mutation Testing;
1993;Edward F. Miller;Exploitation of Software Test Technology (Abstract).;159;1;Invited Presentation;
1993;Mary Jean Harrold,Brian A. Malloy,Gregg Rothermel;Efficient Construction of Program Dependence Graphs.;160-170;11;Dependency Analysis;
1993;Tarak Goradia;Dynamic Impact Analysis: A Cost-Effective Technique to Enforce Error-Propagation.;171-181;11;Dependency Analysis;
1993;Margaret C. Thompson,Debra J. Richardson,Lori A. Clarke;An Information Flow Model of Fault Detection.;182-192;11;Dependency Analysis;
1991;Elaine J. Weyuker,Stewart N. Weiss,Richard G. Hamlet;Comparison of Program Testing Strategies.;1-10;10;ISSTA;
1991;Andy Podgurski;Reliability, Sampling, and Algorithmic Randomness.;11-20;10;ISSTA;
1991;Douglas L. Long,Lori A. Clarke;Data Flow Analysis of Concurrent Systems that Use the Rendezvous Model of Synchronization.;21-35;15;ISSTA;
1991;Evelyn Duesterwald,Mary Lou Soffa;Concurrency Analysis in the Presence of Procedures Using a Data-Flow Framework.;36-48;13;ISSTA;
1991;Wei Jen Yeh,Michal Young;Compositional Reachability Analysis Using Process Algebra.;49-59;11;ISSTA;
1991;Hiralal Agrawal,Richard A. DeMillo,Eugene H. Spafford;Dynamic Slicing in the Presence of Unconstrained Pointers.;60-73;14;ISSTA;
1991;Thomas J. Ostrand,Elaine J. Weyuker;Data Flow-Based Test Adequacy Analysis for Languages with Pointers.;74-86;13;ISSTA;
1991;Joseph R. Horgan,Saul London;Data Flow Coverage and the C Language.;87-97;11;ISSTA;
1991;Rajiv Gupta,Madalene Spezialetti;Loop Monotonic Computations: An Approach for the Efficient Run-Time Detection of Races.;98-111;14;ISSTA;
1991;Carlo Ghezzi,Richard A. Kennerer;Executing Formal Specifications: The ASTRAL to TRIO Translation Approach.;112-122;11;ISSTA;
1991;Sriram Sankar;Run-Time Consistency Checking of Algebraic Specifications.;123-129;7;ISSTA;
1991;Mary Jean Harrold;The Effects of Optimizing Transformations on Data-Flow Adequate Test Sets.;130-138;9;ISSTA;
1991;Hemant D. Pande,William Landi;Interprocedural Def-Use Associations in C Programs.;139-153;15;ISSTA;
1991;Phyllis G. Frankl,Stewart N. Weiss;An Experimental Comparison of the Effectiveness of the All-Uses and All-Edges Adequacy Criteria.;154-164;11;ISSTA;
1991;Roong-Ko Doong,Phyllis G. Frankl;Case Studies on Testing Object-Oriented Programs.;165-177;13;ISSTA;
1991;George S. Avrunin,Ugo A. Buy,James C. Corbett,Laura K. Dillon,Jack C. Wileden;Experiments with an Improved Constrained Expression Toolset.;178-187;10;ISSTA;
1991;William D. Young;Formal Methods versus Software Engineering: Is There a Conflict?;188-189;2;ISSTA;
1991;Brian Marick;The Weak Mutation Hypothesis.;190-199;10;ISSTA;
1991;Jeff Offutt,Stephen D. Lee;How Strong is Weak Mutation?;200-213;14;ISSTA;
1989;William E. Howden;Validating Programs without Specifications.;2-9;8;ISSTA;
1989;Rami R. Razouk,Michael M. Gorlick;Real-Time Interval Logic for Reasoning about Executions of Real-Time Programs.;10-19;10;ISSTA;
1989;William D. Young;Verified Compilation in micro-Gypsy.;20-26;7;ISSTA;
1989;Richard G. Hamlet;Theoretical Comparison of Testing Methods.;28-37;10;ISSTA;
1989;Bingchiang Jeng,Elaine J. Weyuker;Some Observations on Partition Testing.;38-47;10;ISSTA;
1989;Derek F. Yates,Nikolaos Malevris;Reducing the Effects of Infeasible Paths in Branch Testing.;48-54;7;ISSTA;
1989;B. Choi,A. Mathur,B. Pattison;PMothra: Scheduling Mutants for Execution on a Hypercube.;58-65;8;ISSTA;
1989;Kurt M. Olender,Leon J. Osterweil;Cesar: A Static Sequencing Constraint Analyzer.;66-74;9;ISSTA;
1989;Gordon Kotik,Lawrence Markosian;Automating Software Analysis and Testing Using a Program Transformation System.;75-84;10;ISSTA;
1989;Debra J. Richardson,T. Owen O'Malley,C. Tittle;Approaches to Specification-Based Testing.;86-96;11;ISSTA;
1989;Daniel Hoffman,C. Brealey;Module Test Case Generation.;97-102;6;ISSTA;
1989;Mark Moriconi;A Practical Approach to Semantic Configuration Management.;103-113;11;ISSTA;
1989;D. Perry;The Logic of Propagation in the Inscape Environment.;114-121;8;ISSTA;
1989;George S. Avrunin,Jack C. Wileden,Laura K. Dillon;Experiments in Automated Analysis of Concurrent Software Systems.;124-130;7;ISSTA;
1989;Jeff Offutt;The Coupling Effect: Fact or Fiction.;131-140;10;ISSTA;
1989;John H. Rowland,Y. Zuyuan;Experimental Comparison of Three System Test Strategies Preliminary Report.;141-149;9;ISSTA;
1989;Susan L. Gerhart;Preliminary Summary: FM89 Assessment of Formal Methods for Trustworthy Computer Systems.;152-155;4;ISSTA;
1989;Mary Jean Harrold,Mary Lou Soffa;Interprocedual Data Flow Testing.;158-167;10;ISSTA;
1989;Andy Podgurski,Lori A. Clarke;The Implications of Program Dependencies for Software Testing, Debugging, and Maintenance.;168-178;11;ISSTA;
1989;James M. Bieman,Janet L. Schultz;Estimating the Number of Test Cases Required to Satisfy the All-du-paths Testing Criterion.;179-186;8;ISSTA;
1989;David S. Rosenblum,David C. Luckham;Testing the Correctness of Tasking Supervisors with TSL Specifications.;187-196;10;ISSTA;
1989;Michal Young,Richard N. Taylor,K. Forester,Debra Brodbeck;Integrated Concurrency Analysis in a Software Development Enviornment.;200-209;10;ISSTA;
1989;Marc J. Balcer,William M. Hasling,Thomas J. Ostrand;Automatic Generation of Test Scripts from Formal Test Specifications.;210-218;9;ISSTA;
1989;Debra J. Richardson,Stephanie Leif Aha,Leon J. Osterweil;Integrating Testing Techniques Through Process Programming.;219-228;10;ISSTA;
