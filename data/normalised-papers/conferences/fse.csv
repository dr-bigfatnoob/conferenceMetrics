2016;Hamid Bagheri,Sam Malek;Titanium: efficient analysis of evolving alloy specifications.;http://doi.acm.org/10.1145/2950290.2950337;27-38;12;Research Papers;
2016;Marc Brunink,David S. Rosenblum;Mining performance specifications.;http://doi.acm.org/10.1145/2950290.2950314;39-49;11;Research Papers;
2016;Jianye Hao,Eunsuk Kang,Jun Sun,Daniel B. Jackson;Designing minimal effective normative systems with the help of lightweight formal methods.;http://doi.acm.org/10.1145/2950290.2950307;50-60;11;Research Papers;
2016;Xiaofei Xie,Bihuan Chen,Yang Liu,Wei Le,Xiaohong Li;Proteus: computing disjunctive loop summary via path dependency analysis.;http://doi.acm.org/10.1145/2950290.2950340;61-72;12;Research Papers;
2016;Brittany Johnson,Rahul Pandita,Justin Smith,Denae Ford,Sarah Elder,Emerson R. Murphy-Hill,Sarah Heckman,Caitlin Sadowski;A cross-tool communication study on program analysis tool notifications.;http://doi.acm.org/10.1145/2950290.2950304;73-84;12;Research Papers;
2016;Tobias Baum,Olga Liskin,Kai Niklas,Kurt Schneider;Factors influencing code review processes in industry.;http://doi.acm.org/10.1145/2950290.2950323;85-96;12;Research Papers;
2016;David Piorkowski,Austin Z. Henley,Tahmid Nabi,Scott D. Fleming,Christopher Scaffidi,Margaret M. Burnett;Foraging and navigations, fundamentally: developers' predictions of value and cost.;http://doi.acm.org/10.1145/2950290.2950302;97-108;12;Research Papers;
2016;Christopher Bogart,Christian Kastner,James D. Herbsleb,Ferdian Thung;How to break an API: cost negotiation and community values in three software ecosystems.;http://doi.acm.org/10.1145/2950290.2950325;109-120;12;Research Papers;
2016;Zhaogui Xu,Peng Liu 0010,Xiangyun Zhang,Baowen Xu;Python predictive analysis for bug detection.;http://doi.acm.org/10.1145/2950290.2950357;121-132;12;Research Papers;
2016;Yanyan Jiang 0001,Haicheng Chen,Feng Qin,Chang Xu,Xiaoxing Ma,Jian Lu;Crash consistency validation made easy.;http://doi.acm.org/10.1145/2950290.2950327;133-143;11;Research Papers;
2016;Quinn Hanam,Fernando Santos De Mattos Brito,Ali Mesbah 0001;Discovering bug patterns in JavaScript.;http://doi.acm.org/10.1145/2950290.2950308;144-156;13;Research Papers;
2016;Yibiao Yang,Yuming Zhou,Jinping Liu,Yangyang Zhao,Hongmin Lu,Lei Xu 0003,Baowen Xu,Hareton Leung;Effort-aware just-in-time defect prediction: simple unsupervised models could be better than supervised models.;http://doi.acm.org/10.1145/2950290.2950353;157-168;12;Research Papers;
2016;Jianjun Huang,Xiangyun Zhang,Lin Tan;Detecting sensitive data disclosure via bi-directional text correlation analysis.;http://doi.acm.org/10.1145/2950290.2950348;169-180;12;Research Papers;
2016;Eunsuk Kang,Aleksandar Milicevic,Daniel B. Jackson;Multi-representational security analysis.;http://doi.acm.org/10.1145/2950290.2950356;181-192;12;Research Papers;
2016;Lucas Bang,Abdulbaki Aydin,Quoc-Sang Phan,Corina S. Pasareanu,Tevfik Bultan;String analysis for side channels with segmented oracles.;http://doi.acm.org/10.1145/2950290.2950362;193-204;12;Research Papers;
2016;Weihang Wang,Yunhui Zheng,Xinyu Xing,Yonghwi Kwon,Xiangyun Zhang,Patrick Th. Eugster;WebRanz: web page randomization for better advertisement delivery and web-bot prevention.;http://doi.acm.org/10.1145/2950290.2950352;205-216;12;Research Papers;
2016;Luciano Baresi,Sam Guinea,Alberto Leva,Giovanni Quattrocchi;A discrete-time feedback controller for containerized cloud applications.;http://doi.acm.org/10.1145/2950290.2950328;217-228;12;Research Papers;
2016;Stepan Shevtsov,Danny Weyns;Keep it SIMPLEX: satisfying multiple goals with guarantees in control-based self-adaptive systems.;http://doi.acm.org/10.1145/2950290.2950301;229-241;13;Research Papers;
2016;Shiva Nejati,Mehrdad Sabetzadeh,Chetan Arora 0002,Lionel C. Briand,Felix Mandoux;Automated change impact analysis between SysML models of requirements and design.;http://doi.acm.org/10.1145/2950290.2950293;242-253;12;Research Papers;
2016;Jaroslav M. Fowkes,Charles A. Sutton;Parameter-free probabilistic API mining across GitHub.;http://doi.acm.org/10.1145/2950290.2950319;254-265;12;Research Papers;
2016;Jing Zhou,Robert J. Walker;API deprecation: a retrospective analysis and detection method for code examples on the web.;http://doi.acm.org/10.1145/2950290.2950298;266-277;12;Research Papers;
2016;Andre C. Hora,Marco Tulio de Oliveira Valente,Romain Robbes,Nicolas Anquetil;When should internal interfaces be promoted to public?;http://doi.acm.org/10.1145/2950290.2950306;278-289;12;Research Papers;
2016;Sukrit Kalra,Ayush Goel,Dhriti Khanna,Mohan Dhawan,Subodh Sharma,Rahul Purandare;POLLUX: safely upgrading dependent application libraries.;http://doi.acm.org/10.1145/2950290.2950345;290-300;11;Research Papers;
2016;Niranjan Hasabnis,R. Sekar;Extracting instruction semantics via symbolic execution of code generators.;http://doi.acm.org/10.1145/2950290.2950335;301-313;13;Research Papers;
2016;Elaheh Ghassabani,Andrew Gacek,Michael W. Whalen;Efficient generation of inductive validity cores for safety properties.;http://doi.acm.org/10.1145/2950290.2950346;314-325;12;Research Papers;
2016;Dirk Beyer 0001,Matthias Dangl,Daniel Dietsch,Matthias Heizmann;Correctness witnesses: exchanging verification results between verifiers.;http://doi.acm.org/10.1145/2950290.2950351;326-337;12;Research Papers;
2016;Arie Gurfinkel,Sharon Shoham,Yuri Meshman;SMT-based verification of parameterized systems.;http://doi.acm.org/10.1145/2950290.2950330;338-348;11;Research Papers;
2016;Sven Apel,Dirk Beyer 0001,Vitaly O. Mordan,Vadim S. Mutilin,Andreas Stahlbauer;On-the-fly decomposition of specifications in software model checking.;http://doi.acm.org/10.1145/2950290.2950349;349-361;13;Research Papers;
2016;Shahar Maoz,Jan Oliver Ringert;On well-separation of GR(1) specifications.;http://doi.acm.org/10.1145/2950290.2950300;362-372;11;Research Papers;
2016;Nuno Macedo,Julien Brunel,David Chemouil,Alcino Cunha,Denis Kuperberg;Lightweight specification and analysis of dynamic systems with rich configurations.;http://doi.acm.org/10.1145/2950290.2950318;373-383;11;Research Papers;
2016;Nan Niu,Wentao Wang,Arushi Gupta;Gray links in the use of requirements traceability.;http://doi.acm.org/10.1145/2950290.2950354;384-395;12;Research Papers;
2016;Yepang Liu,Chang Xu,Shing-Chi Cheung,Valerio Terragni;Understanding and detecting wake lock misuses for Android applications.;http://doi.acm.org/10.1145/2950290.2950297;396-409;14;Research Papers;
2016;Yu Kang,Yangfan Zhou,Hui Xu,Michael R. Lyu;DiagDroid: Android performance diagnosis via anatomizing asynchronous executions.;http://doi.acm.org/10.1145/2950290.2950316;410-421;12;Research Papers;
2016;Lazaro Clapp,Osbert Bastani,Saswat Anand,Alexander Aiken;Minimizing GUI event traces.;http://doi.acm.org/10.1145/2950290.2950342;422-434;13;Research Papers;
2016;William Martin,Federica Sarro,Mark Harman;Causal impact analysis for app releases in google play.;http://doi.acm.org/10.1145/2950290.2950320;435-446;12;Research Papers;
2016;Chungha Sung,Markus Kusano,Nishant Sinha,Chao Wang 0001;Static DOM event dependency analysis for testing web applications.;http://doi.acm.org/10.1145/2950290.2950292;447-459;13;Research Papers;
2016;Yulei Sui,Jingling Xue;On-demand strong update analysis via value-flow refinement.;http://doi.acm.org/10.1145/2950290.2950296;460-473;14;Research Papers;
2016;Michael Reif,Michael Eichberg,Ben Hermann,Johannes Lerch,Mira Mezini;Call graph construction for Java libraries.;http://doi.acm.org/10.1145/2950290.2950312;474-486;13;Research Papers;
2016;Shiyi Wei,Omer Tripp,Barbara G. Ryder,Julian Dolby;Revamping JavaScript static analysis via localization and remediation of root causes of imprecision.;http://doi.acm.org/10.1145/2950290.2950338;487-498;12;Research Papers;
2016;Andrea Di Sorbo,Sebastiano Panichella,Carol V. Alexandru,Junji Shimagaki,Corrado Aaron Visaggio,Gerardo Canfora,Harald C. Gall;What would users change in my app? summarizing app reviews for recommending software changes.;http://doi.acm.org/10.1145/2950290.2950299;499-510;12;Research Papers;
2016;Hoan Anh Nguyen,Michael Hilton,Mihai Codoban,Hoan Anh Nguyen,Lily Mast,Eli Rademacher,Tien N. Nguyen,Danny Dig;API code recommendation using statistical learning from fine-grained changes.;http://doi.acm.org/10.1145/2950290.2950333;511-522;12;Research Papers;
2016;Catarina Costa,Jair Figueiredo,Leonardo Murta,Anita Sarma;TIPMerge: recommending experts for integrating changes across branches.;http://doi.acm.org/10.1145/2950290.2950339;523-534;12;Research Papers;
2016;Yun Lin,Xin Peng,Yuanfang Cai,Danny Dig,Diwen Zheng,Wenyun Zhao;Interactive and guided architectural refactoring with search-based recommendation.;http://doi.acm.org/10.1145/2950290.2950317;535-546;12;Research Papers;
2016;Iftekhar Ahmed,Rahul Gopinath,Caius Brindescu,Alex Groce,Carlos Jensen;Can testedness be effectively measured?;http://doi.acm.org/10.1145/2950290.2950324;547-558;12;Research Papers;
2016;Qi Luo,Kevin Moran,Denys Poshyvanyk;A large-scale empirical comparison of static and dynamic test case prioritization techniques.;http://doi.acm.org/10.1145/2950290.2950344;559-570;12;Research Papers;
2016;Bob Kurtz,Paul Ammann,Jeff Offutt,Marcio Eduardo Delamaro,Mariet Kurtz,Nida Gokce;Analyzing the validity of selective mutation with dominator mutants.;http://doi.acm.org/10.1145/2950290.2950322;571-582;12;Research Papers;
2016;Owolabi Legunsen,Farah Hariri,August Shi,Yafeng Lu,Lingming Zhang,Darko Marinov;An extensive study of static regression test selection in modern software evolution.;http://doi.acm.org/10.1145/2950290.2950361;583-594;12;Research Papers;
2016;Chung Hwan Kim,Junghwan Rhee,Kyu Hyung Lee,Xiangyun Zhang,Dongyan Xu;PerfGuard: binary-centric application performance monitoring in production environments.;http://doi.acm.org/10.1145/2950290.2950347;595-606;12;Research Papers;
2016;Zhaogui Xu,Xiangyun Zhang,Lin Chen,Kexin Pei,Baowen Xu;Python probabilistic type inference with natural language support.;http://doi.acm.org/10.1145/2950290.2950343;607-618;12;Research Papers;
2016;Ran Wang,Daming Zou,Xinrui He,Yingfei Xiong,Lu Zhang,Gang Huang 0001;Detecting and fixing precision-specific operations for measuring floating-point errors.;http://doi.acm.org/10.1145/2950290.2950355;619-630;12;Research Papers;
2016;Xiaodong Gu,Hongyu Zhang,Dongmei Zhang,Sunghun Kim 0001;Deep API learning.;http://doi.acm.org/10.1145/2950290.2950334;631-642;12;Research Papers;
2016;Ahmet Celik,Alex Knaust,Aleksandar Milicevic,Milos Gligoric;Build system with lazy retrieval for Java projects.;http://doi.acm.org/10.1145/2950290.2950358;643-654;12;Research Papers;
2016;ThanhVu H. Nguyen,Ugur Koc,Javran Cheng,Jeffrey S. Foster,Adam A. Porter;iGen: dynamic interaction inference for configurable software.;http://doi.acm.org/10.1145/2950290.2950311;655-665;11;Research Papers;
2016;Tse-Hsun Chen,Weiyi Shang,Ahmed E. Hassan,Mohamed N. Nasser,Parminder Flora;CacheOptimizer: helping developers configure caching frameworks for hibernate-based database-centric web applications.;http://doi.acm.org/10.1145/2950290.2950303;666-677;12;Research Papers;
2016;Mahinthan Chandramohan,Yinxing Xue,Zhengzi Xu,Yang Liu,Chia Yuan Cho,Hee Beng Kuan Tan;BinGo: cross-architecture cross-OS binary search.;http://doi.acm.org/10.1145/2950290.2950350;678-689;12;Research Papers;
2016;Xuan Li,Zerui Wang,Qianxiang Wang,Shoumeng Yan,Tao Xie,Hong Mei;Relationship-aware code search for JavaScript frameworks.;http://doi.acm.org/10.1145/2950290.2950341;690-701;12;Research Papers;
2016;Fang-Hsiang Su,Jonathan Bell,Kenneth Harvey,Simha Sethumadhavan,Gail E. Kaiser,Tony Jebara;Code relatives: detecting similarly behaving software.;http://doi.acm.org/10.1145/2950290.2950321;702-714;13;Research Papers;
2016;Haopeng Liu,Yuxi Chen,Shan Lu;Understanding and generating high quality patches for concurrency bugs.;http://doi.acm.org/10.1145/2950290.2950309;715-726;12;Research Papers;
2016;Shin Hwei Tan,Hiroaki Yoshida,Mukul R. Prasad,Abhik Roychoudhury;Anti-patterns in search-based program repair.;http://doi.acm.org/10.1145/2950290.2950295;727-738;12;Research Papers;
2016;Shalini Kaleeswaran,Anirudh Santhiar,Aditya Kanade,Sumit Gulwani;Semi-supervised verified feedback generation.;http://doi.acm.org/10.1145/2950290.2950363;739-750;12;Research Papers;
2016;Mouna Hammoudi,Gregg Rothermel,Andrea Stocco;WATERFALL: an incremental approach for repairing record-replay tests of web applications.;http://doi.acm.org/10.1145/2950290.2950294;751-762;12;Research Papers;
2016;Thorsten Berger,Markus Volter,Hans Peter Jensen,Taweesap Dangprasert,Janet Siegmund;Efficiency of projectional editing: a controlled experiment.;http://doi.acm.org/10.1145/2950290.2950315;763-774;12;Research Papers;
2016;Sheng Zhan,Jeff Huang 0001;ECHO: instantaneous in situ race detection in the IDE.;http://doi.acm.org/10.1145/2950290.2950332;775-786;12;Research Papers;
2016;Wensheng Dou,Shing-Chi Cheung,Chushu Gao,Chang Xu,Liang Xu,Jun Wei;Detecting table clones and smells in spreadsheets.;http://doi.acm.org/10.1145/2950290.2950359;787-798;12;Research Papers;
2016;Markus Kusano,Chao Wang 0001;Flow-sensitive composition of thread-modular abstract interpretation.;http://doi.acm.org/10.1145/2950290.2950291;799-809;11;Research Papers;
2016;Yan Cai,Jian Zhang,Lingwei Cao,Jian Liu;A deployable sampling strategy for data race detection.;http://doi.acm.org/10.1145/2950290.2950310;810-821;12;Research Papers;
2016;Yanyan Jiang 0001,Chang Xu,Du Li,Xiaoxing Ma,Jian Lu;Online shared memory dependence reduction via bisectional coordination.;http://doi.acm.org/10.1145/2950290.2950326;822-832;11;Research Papers;
2016;Adarsh Yoga,Santosh Nagarakatte,Aarti Gupta;Parallel data race detection for task parallel programs with locks.;http://doi.acm.org/10.1145/2950290.2950329;833-845;13;Research Papers;
2016;Denae Ford,Justin Smith,Philip J. Guo,Chris Parnin;Paradise unplugged: identifying barriers for female participation on stack overflow.;http://doi.acm.org/10.1145/2950290.2950331;846-857;12;Research Papers;
2016;Danilo Silva,Nikolaos Tsantalis,Marco Tulio de Oliveira Valente;Why we refactor? confessions of GitHub contributors.;http://doi.acm.org/10.1145/2950290.2950305;858-870;13;Research Papers;
2016;Jiaxin Zhu,Minghui Zhou,Audris Mockus;Effectiveness of code contribution: from patch-based to pull-request-based tools.;http://doi.acm.org/10.1145/2950290.2950364;871-882;12;Research Papers;
2016;Jie Zhang,Yiling Lou,Lingming Zhang,Dan Hao,Lu Zhang,Hong Mei;Isomorphic regression testing: executing uncovered branches without test augmentation.;http://doi.acm.org/10.1145/2950290.2950313;883-894;12;Research Papers;
2016;Monika Dhok,Murali Krishna Ramanathan;Directed test generation to detect loop inefficiencies.;http://doi.acm.org/10.1145/2950290.2950360;895-907;13;Research Papers;
2016;Pablo Ponzio,Nazareno Aguirre,Marcelo F. Frias,Willem Visser;Field-exhaustive testing.;http://doi.acm.org/10.1145/2950290.2950336;908-919;12;Research Papers;
2016;Martin P. Robillard;Sustainable software design.;http://doi.acm.org/10.1145/2950290.2983983;920-923;4;Visions and Reflections;
2016;Titus Barik,Rahul Pandita,Justin Middleton,Emerson R. Murphy-Hill;Designing for dystopia: software engineering research for the post-apocalypse.;http://doi.acm.org/10.1145/2950290.2983986;924-927;4;Visions and Reflections;
2016;Margaret-Anne D. Storey,Alexey Zagalsky;Disrupting developer productivity one bot at a time.;http://doi.acm.org/10.1145/2950290.2983989;928-931;4;Visions and Reflections;
2016;Anita Sarma,Marco Aurelio Gerosa,Igor Steinmacher,Rafael Leano;Training the future workforce through task curation in an OSS ecosystem.;http://doi.acm.org/10.1145/2950290.2983984;932-935;4;Visions and Reflections;
2016;Charles Weir,Awais Rashid,James S. Noble;Reaching the masses: a new subdiscipline of app programmer education.;http://doi.acm.org/10.1145/2950290.2983981;936-939;4;Visions and Reflections;
2016;Bonita Sharif,Benjamin Clark,Jonathan I. Maletic;Studying developer gaze to empower software engineering research and practice.;http://doi.acm.org/10.1145/2950290.2983988;940-943;4;Visions and Reflections;
2016;Khanh Hoa Dam,Truyen Tran 0001,John C. Grundy,Aditya K. Ghose;DeepSoft: a vision for a deep model of software.;http://doi.acm.org/10.1145/2950290.2983985;944-947;4;Visions and Reflections;
2016;Myra B. Cohen,Aduri Pavan,N. Variyam Vinodchandran;Budgeted testing through an algorithmic lens.;http://doi.acm.org/10.1145/2950290.2983987;948-951;4;Visions and Reflections;
2016;Inah Omoronyia;Reasoning with imprecise privacy preferences.;http://doi.acm.org/10.1145/2950290.2983982;952-955;4;Visions and Reflections;
2016;Hongyu Zhang,Anuj Jain,Gaurav Khandelwal,Chandrashekhar Kaushik,Scott Ge,Wenxiang Hu;Bing developer assistant: improving developer productivity by recommending sample code.;http://doi.acm.org/10.1145/2950290.2983955;956-961;6;Industrial Papers;
2016;Marcel Zalmanovici,Orna Raz,Rachel Tzoref-Brill;Cluster-based test suite functional analysis.;http://doi.acm.org/10.1145/2950290.2983957;962-967;6;Industrial Papers;
2016;Connor Imes,Lars Bergstrom,Henry Hoffmann;A portable interface for runtime energy monitoring.;http://doi.acm.org/10.1145/2950290.2983956;968-974;7;Industrial Papers;
2016;Benjamin Busjaeger,Tao Xie;Learning for test prioritization: an industrial case study.;http://doi.acm.org/10.1145/2950290.2983954;975-980;6;Industrial Papers;
2016;Hua Zhong,Lingming Zhang,Sarfraz Khurshid;Combinatorial generation of structurally complex test inputs for commercial software applications.;http://doi.acm.org/10.1145/2950290.2983959;981-986;6;Industrial Papers;
2016;Xia Zeng,Dengfeng Li,Wujie Zheng,Fan Xia,Yuetang Deng,Wing Lam,Wei Yang,Tao Xie;Automated test input generation for Android: are we really there yet in an industrial case?;http://doi.acm.org/10.1145/2950290.2983958;987-992;6;Industrial Papers;
2016;Alex Gyori,Ben Lambeth,August Shi,Owolabi Legunsen,Darko Marinov;NonDex: a tool for detecting and debugging wrong assumptions on Java API specifications.;http://doi.acm.org/10.1145/2950290.2983932;993-997;5;Tool Demonstrations;
2016;Catarina Costa,Jair Figueiredo,Anita Sarma,Leonardo Murta;TIPMerge: recommending developers for merging branches.;http://doi.acm.org/10.1145/2950290.2983936;998-1002;5;Tool Demonstrations;
2016;Earl T. Barr,Mark Marron,Ed Maurer,Dan Moseley,Gaurav Seth;Time-travel debugging for JavaScript/Node.js.;http://doi.acm.org/10.1145/2950290.2983933;1003-1007;5;Tool Demonstrations;
2016;Ines Hajri,Arda Goknil,Lionel C. Briand,Thierry Stephany;PUMConf: a tool to configure product specific use case and domain models in a product line.;http://doi.acm.org/10.1145/2950290.2983935;1008-1012;5;Tool Demonstrations;
2016;Thanh Van Nguyen,Peter C. Rigby,Hoan Anh Nguyen,Mark Karanfil,Tien N. Nguyen;T2API: synthesizing API code usage templates from English texts with statistical translation.;http://doi.acm.org/10.1145/2950290.2983931;1013-1017;5;Tool Demonstrations;
2016;Pietro Braione,Giovanni Denaro,Mauro Pezze;JBSE: a symbolic executor for Java programs with complex heap inputs.;http://doi.acm.org/10.1145/2950290.2983940;1018-1022;5;Tool Demonstrations;
2016;Sebastiano Panichella,Andrea Di Sorbo,Emitza Guzman,Corrado Aaron Visaggio,Gerardo Canfora,Harald C. Gall;ARdoc: app reviews development oriented classifier.;http://doi.acm.org/10.1145/2950290.2983938;1023-1027;5;Tool Demonstrations;
2016;Yuepeng Wang 0001,Yu Feng,Ruben Martins,Arati Kaushik,Isil Dillig,Steven P. Reiss;Hunter: next-generation code reuse for Java.;http://doi.acm.org/10.1145/2950290.2983934;1028-1032;5;Tool Demonstrations;
2016;Muhammad Ali Gulzar,Matteo Interlandi,Tyson Condie,Miryung Kim;BigDebug: interactive debugger for big data analytics in Apache Spark.;http://doi.acm.org/10.1145/2950290.2983930;1033-1037;5;Tool Demonstrations;
2016;Sebastiaan Oosterwaal,Arie van Deursen,Roberta Coelho,Anand Ashok Sawant,Alberto Bacchelli;Visualizing code and coverage changes for code review.;http://doi.acm.org/10.1145/2950290.2983929;1038-1041;4;Tool Demonstrations;
2016;Svetozar Miucin,Conor Brady,Alexandra Fedorova;End-to-end memory behavior profiling with DINAMITE.;http://doi.acm.org/10.1145/2950290.2983941;1042-1046;5;Tool Demonstrations;
2016;Demetris Paschalides,Georgia M. Kapitsaki;Validate your SPDX files for open source license violations.;http://doi.acm.org/10.1145/2950290.2983939;1047-1051;5;Tool Demonstrations;
2016;Hiroaki Yoshida,Susumu Tokumoto,Mukul R. Prasad,Indradeep Ghosh,Tadahiro Uehara;FSX: a tool for fine-grained incremental unit test generation for C/C++ programs.;http://doi.acm.org/10.1145/2950290.2983937;1052-1056;5;Tool Demonstrations;
2016;Davood Mazinanian;Refactoring and migration of cascading style sheets: towards optimization and improved maintainability.;http://doi.acm.org/10.1145/2950290.2983943;1057-1059;3;Doctoral Symposium;
2016;Stepan Shevtsov;Developing a reusable control-based approach to build self-adaptive software systems with formal guarantees.;http://doi.acm.org/10.1145/2950290.2983949;1060-1062;3;Doctoral Symposium;
2016;Reudismam Rolim;Automating repetitive code changes using examples.;http://doi.acm.org/10.1145/2950290.2983944;1063-1065;3;Doctoral Symposium;
2016;Michael Hilton;Understanding and improving continuous integration.;http://doi.acm.org/10.1145/2950290.2983952;1066-1067;2;Doctoral Symposium;
2016;Carol V. Alexandru;Guided code synthesis using deep neural networks.;http://doi.acm.org/10.1145/2950290.2983951;1068-1070;3;Doctoral Symposium;
2016;Pavel Panchekha;Generating interactive web pages from storyboards.;http://doi.acm.org/10.1145/2950290.2983948;1071-1072;2;Doctoral Symposium;
2016;Calvin Loncaric;Data structure synthesis.;http://doi.acm.org/10.1145/2950290.2983946;1073-1075;3;Doctoral Symposium;
2016;Saba Alimadadi;Understanding behavioural patterns in JavaScript.;http://doi.acm.org/10.1145/2950290.2983947;1076-1078;3;Doctoral Symposium;
2016;Mouna Hammoudi;Regression testing of web applications using Record/Replay tools.;http://doi.acm.org/10.1145/2950290.2983942;1079-1081;3;Doctoral Symposium;
2016;Ines Hajri;Supporting change in product lines within the context of use case-driven development and testing.;http://doi.acm.org/10.1145/2950290.2983945;1082-1084;3;Doctoral Symposium;
2016;Qi Luo;Input-sensitive performance testing.;http://doi.acm.org/10.1145/2950290.2983953;1085-1087;3;Doctoral Symposium;
2016;Bob Kurtz;On the utility of dominator mutants for mutation testing.;http://doi.acm.org/10.1145/2950290.2983950;1088-1090;3;Doctoral Symposium;
2016;Motahareh Bahrami Zanjani;Effective assignment and assistance to software developers and reviewers.;http://doi.acm.org/10.1145/2950290.2983960;1091-1093;3;Graduate Submissions;
2016;Xi Cheng;RABIEF: range analysis based integer error fixing.;http://doi.acm.org/10.1145/2950290.2983961;1094-1096;3;Graduate Submissions;
2016;Xiaozhu Meng;Fine-grained binary code authorship identification.;http://doi.acm.org/10.1145/2950290.2983962;1097-1099;3;Graduate Submissions;
2016;Catarina Costa;Identifying participants for collaborative merge.;http://doi.acm.org/10.1145/2950290.2983963;1100-1102;3;Graduate Submissions;
2016;Calvin Loncaric;Cozy: synthesizing collection data structures.;http://doi.acm.org/10.1145/2950290.2986032;1103-1105;3;Graduate Submissions;
2016;Jie Wang;Constraint-based event trace reduction.;http://doi.acm.org/10.1145/2950290.2983964;1106-1108;3;Graduate Submissions;
2016;Chandrakana Nandi;Automatic trigger generation for end user written rules for home automation.;http://doi.acm.org/10.1145/2950290.2983965;1109-1111;3;Graduate Submissions;
2016;Minghui Quan;Hotspot symbolic execution of floating-point programs.;http://doi.acm.org/10.1145/2950290.2983966;1112-1114;3;Graduate Submissions;
2016;Spencer Pearson;Evaluation of fault localization techniques.;http://doi.acm.org/10.1145/2950290.2983967;1115-1117;3;Graduate Submissions;
2016;Titus Barik;How should static analysis tools explain anomalies to developers?;http://doi.acm.org/10.1145/2950290.2983968;1118-1120;3;Graduate Submissions;
2016;Wing Lam;Repairing test dependence.;http://doi.acm.org/10.1145/2950290.2983969;1121-1123;3;Graduate Submissions;
2016;Martin Kellogg;Combining bug detection and test case generation.;http://doi.acm.org/10.1145/2950290.2983970;1124-1126;3;Graduate Submissions;
2016;Xinrui Guo;SmartDebug: an interactive debug assistant for Java.;http://doi.acm.org/10.1145/2950290.2983971;1127-1129;3;Graduate Submissions;
2016;Xie Xiaofei;Static loop analysis and its applications.;http://doi.acm.org/10.1145/2950290.2983972;1130-1132;3;Graduate Submissions;
2016;Andrew Head;Social health cues developers use when choosing open source packages.;http://doi.acm.org/10.1145/2950290.2983973;1133-1135;3;Graduate Submissions;
2016;Sebastian Kappler;Finding and breaking test dependencies to speed up test execution.;http://doi.acm.org/10.1145/2950290.2983974;1136-1138;3;Graduate Submissions;
2016;Qi Luo;Automatic performance testing using input-sensitive profiling.;http://doi.acm.org/10.1145/2950290.2983975;1139-1141;3;Graduate Submissions;
2016;Joseph Santino;Enforcing correct array indexes with a type system.;http://doi.acm.org/10.1145/2950290.2983976;1142-1144;3;Undergraduate Submissions;
2016;Waylon Huang;Discovering additional violations of Java API invariants.;http://doi.acm.org/10.1145/2950290.2983977;1145-1147;3;Undergraduate Submissions;
2016;Christopher A. Mackie;Preventing signedness errors in numerical computations in Java.;http://doi.acm.org/10.1145/2950290.2983978;1148-1150;3;Undergraduate Submissions;
2016;Felipe R. Monteiro;Bounded model checking of state-space digital systems: the impact of finite word-length effects on the implementation of fixed-point digital controllers based on state-space modeling.;http://doi.acm.org/10.1145/2950290.2983979;1151-1153;3;Undergraduate Submissions;
2016;Sachith Gullapalli;Atlas: an intelligent, performant framework for web-based grid computing.;http://doi.acm.org/10.1145/2950290.2983980;1154-1156;3;Undergraduate Submissions;
2015;Gabriel A. Moreno,Javier Camara,David Garlan,Bradley R. Schmerl;Proactive self-adaptation under uncertainty: a probabilistic model checking approach.;http://doi.acm.org/10.1145/2786805.2786853;1-12;12;Adaptive Systems;
2015;Antonio Filieri,Henry Hoffmann,Martina Maggio;Automated multi-objective control for self-adaptive software design.;http://doi.acm.org/10.1145/2786805.2786833;13-24;12;Adaptive Systems;
2015;Gholamreza Safi,Arman Shahbazian,William G. J. Halfond,Nenad Medvidovic;Detecting event anomalies in event-based systems.;http://doi.acm.org/10.1145/2786805.2786836;25-37;13;Adaptive Systems;
2015;Miltiadis Allamanis,Earl T. Barr,Christian Bird,Charles A. Sutton;Suggesting accurate method and class names.;http://doi.acm.org/10.1145/2786805.2786849;38-49;12;Software Quality;
2015;Neil A. Ernst,Stephany Bellomo,Ipek Ozkaya,Robert L. Nord,Ian Gorton;Measure it? Manage it? Ignore it? software practitioners and technical debt.;http://doi.acm.org/10.1145/2786805.2786848;50-60;11;Software Quality;
2015;Lucas Bang,Abdulbaki Aydin,Tevfik Bultan;Automatically computing path complexity of programs.;http://doi.acm.org/10.1145/2786805.2786863;61-72;12;Software Quality;
2015;Ankush Desai,Shaz Qadeer,Sanjit A. Seshia;Systematic testing of asynchronous reactive systems.;http://doi.acm.org/10.1145/2786805.2786861;73-83;11;Synthesis and Search-Based Approaches for Reactive Systems;
2015;Reza Matinnejad,Shiva Nejati,Lionel C. Briand,Thomas Bruckmann;Effective test suites for mixed discrete-continuous stateflow controllers.;http://doi.acm.org/10.1145/2786805.2786818;84-95;12;Synthesis and Search-Based Approaches for Reactive Systems;
2015;Shahar Maoz,Jan Oliver Ringert;GR(1) synthesis for LTL specification patterns.;http://doi.acm.org/10.1145/2786805.2786824;96-106;11;Synthesis and Search-Based Approaches for Reactive Systems;
2015;Ermira Daka,Jose Campos,Gordon Fraser,Jonathan Dorn,Westley Weimer;Modeling readability to improve unit tests.;http://doi.acm.org/10.1145/2786805.2786838;107-118;12;Testing I;
2015;Paolo Arcaini,Angelo Gargantini,Elvinia Riccobene;Improving model-based test generation by model decomposition.;http://doi.acm.org/10.1145/2786805.2786837;119-130;12;Testing I;
2015;Malavika Samak,Murali Krishna Ramanathan;Synthesizing tests for detecting atomicity violations.;http://doi.acm.org/10.1145/2786805.2786874;131-142;12;Testing I;
2015;Mario Linares Vasquez,Gabriele Bavota,Carlos Eduardo Bernal-Cardenas,Rocco Oliveto,Massimiliano Di Penta,Denys Poshyvanyk;Optimizing energy consumption of GUIs in Android apps: a multi-objective approach.;http://doi.acm.org/10.1145/2786805.2786847;143-154;12;Search-Based Approaches to Testing, Repair, and Energy Optimisation;
2015;Andrea Arcuri,Gordon Fraser,Juan P. Galeotti;Generating TCP/UDP network data for automated unit test generation.;http://doi.acm.org/10.1145/2786805.2786828;155-165;11;Search-Based Approaches to Testing, Repair, and Energy Optimisation;
2015;Fan Long,Martin Rinard;Staged program repair with condition synthesis.;http://doi.acm.org/10.1145/2786805.2786811;166-178;13;Search-Based Approaches to Testing, Repair, and Energy Optimisation;
2015;Moritz Beller,Georgios Gousios,Annibale Panichella,Andy Zaidman;When, how, and why developers (do not) test in their IDEs.;http://doi.acm.org/10.1145/2786805.2786843;179-190;12;Empirical Studies of Software Developers I;
2015;Caitlin Sadowski,Kathryn T. Stolee,Sebastian G. Elbaum;How developers search for code: a case study.;http://doi.acm.org/10.1145/2786805.2786855;191-201;11;Empirical Studies of Software Developers I;
2015;Katja Kevic,Braden M. Walters,Timothy R. Shaffer,Bonita Sharif,David C. Shepherd,Thomas Fritz;Tracing software developers' eyes and interactions for change tasks.;http://doi.acm.org/10.1145/2786805.2786864;202-213;12;Empirical Studies of Software Developers I;
2015;Yucheng Zhang,Ali Mesbah 0001;Assertions are strongly correlated with test suite effectiveness.;http://doi.acm.org/10.1145/2786805.2786858;214-224;11;Testing II;
2015;Yang Feng,Zhenyu Chen,James A. Jones,Chunrong Fang,Baowen Xu;Test report prioritization to assist crowdsourced testing.;http://doi.acm.org/10.1145/2786805.2786862;225-236;12;Testing II;
2015;August Shi,Tifany Yung,Alex Gyori,Darko Marinov;Comparing and combining test-suite reduction and regression test selection.;http://doi.acm.org/10.1145/2786805.2786878;237-247;11;Testing II;
2015;Justin Smith,Brittany Johnson,Emerson R. Murphy-Hill,Bill Chu,Heather Richter Lipford;Questions developers ask while diagnosing potential security vulnerabilities with static analysis.;http://doi.acm.org/10.1145/2786805.2786812;248-259;12;Security;
2015;Jim Witschey,Olga A. Zielinska,Allaire K. Welk,Emerson R. Murphy-Hill,Christopher B. Mayhorn,Thomas Zimmermann 0001;Quantifying developers' adoption of security tools.;http://doi.acm.org/10.1145/2786805.2786816;260-271;12;Security;
2015;Inian Parameshwaran,Enrico Budianto,Shweta Shinde,Hung Dang,Atul Sadhu,Prateek Saxena;Auto-patching DOM-based XSS at scale.;http://doi.acm.org/10.1145/2786805.2786821;272-283;12;Security;
2015;Norbert Siegmund,Alexander Grebhahn,Sven Apel,Christian Kastner;Performance-influence models for highly configurable systems.;http://doi.acm.org/10.1145/2786805.2786845;284-294;11;Configurable Systems;
2015;Farnaz Behrang,Myra B. Cohen,Alessandro Orso;Users beware: preference inconsistencies ahead.;http://doi.acm.org/10.1145/2786805.2786869;295-306;12;Configurable Systems;
2015;Tianyin Xu,Long Jin,Xuepeng Fan,Yuanyuan Zhou,Shankar Pasupathy,Rukma Talwadker;Hey, you have given me too many knobs!: understanding and dealing with over-designed configuration in system software.;http://doi.acm.org/10.1145/2786805.2786852;307-319;13;Configurable Systems;
2015;Fuxiang Chen,Sunghun Kim 0001;Crowd debugging.;http://doi.acm.org/10.1145/2786805.2786819;320-332;13;Debugging;
2015;Mouna Hammoudi,Brian Burg,Gigon Bae,Gregg Rothermel;On the use of delta debugging to reduce recordings and facilitate debugging of web applications.;http://doi.acm.org/10.1145/2786805.2786846;333-344;12;Debugging;
2015;Simon Holm Jensen,Manu Sridharan,Koushik Sen,Satish Chandra 0001;MemInsight: platform-independent memory debugging for JavaScript.;http://doi.acm.org/10.1145/2786805.2786860;345-356;12;Debugging;
2015;Liang Gong,Michael Pradel,Koushik Sen;JITProf: pinpointing JIT-unfriendly JavaScript code.;http://doi.acm.org/10.1145/2786805.2786831;357-368;12;Web Applications;
2015;Hung Viet Nguyen,Christian Kastner,Tien N. Nguyen;Cross-language program slicing for dynamic web applications.;http://doi.acm.org/10.1145/2786805.2786872;369-380;12;Web Applications;
2015;Erdal Mutlu,Serdar Tasiran,V. Benjamin Livshits;Detecting JavaScript races that matter.;http://doi.acm.org/10.1145/2786805.2786820;381-392;12;Web Applications;
2015;Jurgen Cito,Philipp Leitner,Thomas Fritz,Harald C. Gall;The making of cloud applications: an empirical study on software development for the cloud.;http://doi.acm.org/10.1145/2786805.2786826;393-403;11;Studies of Software Engineering Research and Practice;
2015;Meiyappan Nagappan,Romain Robbes,Yasutaka Kamei,Eric Tanter,Shane McIntosh,Audris Mockus,Ahmed E. Hassan;An empirical study of goto in C code from GitHub repositories.;http://doi.acm.org/10.1145/2786805.2786834;404-414;11;Studies of Software Engineering Research and Practice;
2015;David Lo,Nachiappan Nagappan,Thomas Zimmermann 0001;How practitioners perceive the relevance of software engineering research.;http://doi.acm.org/10.1145/2786805.2786809;415-425;11;Studies of Software Engineering Research and Practice;
2015;Rui Gu,Guoliang Jin,Linhai Song,Linjie Zhu,Shan Lu;What change history tells us about thread synchronization.;http://doi.acm.org/10.1145/2786805.2786815;426-438;13;Concurrency;
2015;Jeff Huang 0001,Lawrence Rauchwerger;Finding schedule-sensitive branches.;http://doi.acm.org/10.1145/2786805.2786840;439-449;11;Concurrency;
2015;Yan Cai,Lingwei Cao;Effective and precise dynamic detection of hidden races for Java programs.;http://doi.acm.org/10.1145/2786805.2786839;450-461;12;Concurrency;
2015;Ravi Mangal,Xin Zhang,Aditya V. Nori,Mayur Naik;A user-guided approach to program analysis.;http://doi.acm.org/10.1145/2786805.2786851;462-473;12;Program Analysis I;
2015;Michael Eichberg,Ben Hermann,Mira Mezini,Leonid Glanz;Hidden truths in dead software paths.;http://doi.acm.org/10.1145/2786805.2786865;474-484;11;Program Analysis I;
2015;Mohammed Afraz,Diptikalyan Saha,Aditya Kanade;P3: partitioned path profiling.;http://doi.acm.org/10.1145/2786805.2786868;485-495;11;Program Analysis I;
2015;Xiao-Yuan Jing,Fei Wu,Xiwei Dong,Fumin Qi,Baowen Xu;Heterogeneous cross-company defect prediction by unified metric representation and CCA-based transfer learning.;http://doi.acm.org/10.1145/2786805.2786813;496-507;12;Prediction and Recommendation;
2015;Jaechang Nam,Sunghun Kim 0001;Heterogeneous defect prediction.;http://doi.acm.org/10.1145/2786805.2786814;508-519;12;Prediction and Recommendation;
2015;Yun Lin,Xin Peng,Zhenchang Xing,Diwen Zheng,Wenyun Zhao;Clone-based and interactive recommendation for modifying pasted code.;http://doi.acm.org/10.1145/2786805.2786871;520-531;12;Prediction and Recommendation;
2015;Edward K. Smith,Earl T. Barr,Claire Le Goues,Yuriy Brun;Is the cure worse than the disease? overfitting in automated program repair.;http://doi.acm.org/10.1145/2786805.2786825;532-543;12;Program Repair;
2015;Nishant Sinha,Rezwana Karim;Responsive designs in a snap.;http://doi.acm.org/10.1145/2786805.2786808;544-554;11;Program Repair;
2015;Aritra Dhar,Rahul Purandare,Mohan Dhawan,Suresh Rangaswamy;CLOTHO: saving programs from malformed strings and incorrect string-handling.;http://doi.acm.org/10.1145/2786805.2786877;555-566;12;Program Repair;
2015;Laura Moreno,Gabriele Bavota,Sonia Haiduc,Massimiliano Di Penta,Rocco Oliveto,Barbara Russo,Andrian Marcus;Query-based configuration of text retrieval solutions for software engineering tasks.;http://doi.acm.org/10.1145/2786805.2786859;567-578;12;Information Retrieval;
2015;Tien-Duy B. Le,Richard Jayadi Oentaryo,David Lo;Information retrieval and spectrum based bug localization: better together.;http://doi.acm.org/10.1145/2786805.2786880;579-590;12;Information Retrieval;
2015;Tuong Huan Nguyen,John C. Grundy,Mohamed Almorsy;Rule-based extraction of goal-use case models from text.;http://doi.acm.org/10.1145/2786805.2786876;591-601;11;Information Retrieval;
2015;Pietro Braione,Giovanni Denaro,Mauro Pezze;Symbolic execution of programs with heap inputs.;http://doi.acm.org/10.1145/2786805.2786842;602-613;12;Program Analysis II;
2015;Yangchun Fu,Zhiqiang Lin,David Brumley;Automatically deriving pointer reference expressions from binary code for memory dump analysis.;http://doi.acm.org/10.1145/2786805.2786810;614-624;11;Program Analysis II;
2015;Christoph Treude,Fernando Marques Figueira Filho,Uira Kulesza;Summarizing and measuring development activity.;http://doi.acm.org/10.1145/2786805.2786827;625-636;12;Measurement and Metric;
2015;Qimu Zheng,Audris Mockus,Minghui Zhou;A method to identify and correct problematic software activity data: exploiting capacity constraints and data redundancies.;http://doi.acm.org/10.1145/2786805.2786866;637-648;12;Measurement and Metric;
2015;Christian R. Prause,Matthias Jarke;Gamification for enforcing coding conventions.;http://doi.acm.org/10.1145/2786805.2786806;649-660;12;Patterns and Coding Convention;
2015;Ding Li,Yingjun Lyu,Mian Wan,William G. J. Halfond;String analysis for Java and Android applications.;http://doi.acm.org/10.1145/2786805.2786879;661-672;12;Mobile Applications;
2015;Kevin Moran,Mario Linares Vasquez,Carlos Bernal-Cardenas,Denys Poshyvanyk;Auto-completing bug reports for Android applications.;http://doi.acm.org/10.1145/2786805.2786857;673-686;14;Mobile Applications;
2015;Yanick Fratantonio,Aravind Machiry,Antonio Bianchi,Christopher Krugel,Giovanni Vigna;CLAPP: characterizing loops in Android applications.;http://doi.acm.org/10.1145/2786805.2786873;687-697;11;Mobile Applications;
2015;Jun Sun,Hao Xiao,Yang Liu,Shang-Wei Lin,Shengchao Qin;TLV: abstraction through testing, learning, and validation.;http://doi.acm.org/10.1145/2786805.2786817;698-709;12;Search, Synthesis, and Verification;
2015;Stefan Heule,Manu Sridharan,Satish Chandra 0001;Mimic: computing models for opaque code.;http://doi.acm.org/10.1145/2786805.2786875;710-720;11;Search, Synthesis, and Verification;
2015;Dirk Beyer 0001,Matthias Dangl,Daniel Dietsch,Matthias Heizmann,Andreas Stahlbauer;Witness validation and stepwise testification across software verifiers.;http://doi.acm.org/10.1145/2786805.2786867;721-733;13;Search, Synthesis, and Verification;
2015;Scott West,Sebastian Nanz,Bertrand Meyer;Efficient and reasonable object-oriented concurrency.;http://doi.acm.org/10.1145/2786805.2786822;734-744;11;Java and Object-Oriented Programming;
2015;Jongse Park,Hadi Esmaeilzadeh,Xin Zhang,Mayur Naik,William Harris;FlexJava: language support for safe and modular approximate programming.;http://doi.acm.org/10.1145/2786805.2786807;745-757;13;Java and Object-Oriented Programming;
2015;Ben Hermann,Michael Reif,Michael Eichberg,Mira Mezini;Getting to know you: towards a capability model for Java.;http://doi.acm.org/10.1145/2786805.2786829;758-769;12;Java and Object-Oriented Programming;
2015;Jonathan Bell,Gail E. Kaiser,Eric Melski,Mohan Dattatreya;Efficient dependency detection for safe Java test acceleration.;http://doi.acm.org/10.1145/2786805.2786823;770-781;12;Testing III;
2015;Ulf Kargen,Nahid Shahmehri;Turning programs against each other: high coverage fuzz-testing using binary-code mutation and dynamic slicing.;http://doi.acm.org/10.1145/2786805.2786844;782-792;11;Testing III;
2015;Yuting Chen,Zhendong Su;Guided differential testing of certificate validation in SSL/TLS implementations.;http://doi.acm.org/10.1145/2786805.2786835;793-804;12;Testing III;
2015;Bogdan Vasilescu,Yue Yu,Huaimin Wang,Premkumar T. Devanbu,Vladimir Filkov;Quality and productivity outcomes relating to continuous integration in GitHub.;http://doi.acm.org/10.1145/2786805.2786850;805-816;12;Empirical Studies of Software Developers II;
2015;Casey Casalnuovo,Bogdan Vasilescu,Premkumar T. Devanbu,Vladimir Filkov;Developer onboarding in GitHub: the role of prior social links and language experience.;http://doi.acm.org/10.1145/2786805.2786854;817-828;12;Empirical Studies of Software Developers II;
2015;Matthieu Foucault,Marc Palyart,Xavier Blanc,Gail C. Murphy,Jean-Remy Falleri;Impact of developer turnover on quality in open-source software.;http://doi.acm.org/10.1145/2786805.2786870;829-841;13;Empirical Studies of Software Developers II;
2015;Koushik Sen,George C. Necula,Liang Gong,Wontae Choi;MultiSE: multi-path symbolic execution using value summaries.;http://doi.acm.org/10.1145/2786805.2786830;842-853;12;Symbolic Execution;
2015;Shengjian Guo,Markus Kusano,Chao Wang 0001,Zijiang Yang,Aarti Gupta;Assertion guided symbolic execution of multithreaded programs.;http://doi.acm.org/10.1145/2786805.2786841;854-865;12;Symbolic Execution;
2015;Mateus Borges,Antonio Filieri,Marcelo d'Amorim,Corina S. Pasareanu;Iterative distribution-aware sampling for probabilistic symbolic execution.;http://doi.acm.org/10.1145/2786805.2786832;866-877;12;Symbolic Execution;
2015;Brittany Johnson,Rahul Pandita,Emerson R. Murphy-Hill,Sarah Heckman;Bespoke tools: adapted to the concepts developers know.;http://doi.acm.org/10.1145/2786805.2803197;878-881;4;Human Aspects of Software Engineering;
2015;Titus Barik,Brittany Johnson,Emerson R. Murphy-Hill;I heart hacker news: expanding qualitative research findings by analyzing social news websites.;http://doi.acm.org/10.1145/2786805.2803200;882-885;4;Human Aspects of Software Engineering;
2015;Kevin J. North,Shane Bolan,Anita Sarma,Myra B. Cohen;GitSonifier: using sound to portray developer conflict history.;http://doi.acm.org/10.1145/2786805.2803199;886-889;4;Human Aspects of Software Engineering;
2015;Raphael Pham,Yauheni Stoliar,Kurt Schneider;Automatically recommending test code examples to inexperienced developers.;http://doi.acm.org/10.1145/2786805.2803202;890-893;4;Human Aspects of Software Engineering;
2015;Han Xu,Stephan Krusche,Bernd Brugge;Using software theater for the demonstration of innovative ubiquitous applications.;http://doi.acm.org/10.1145/2786805.2803207;894-897;4;Human Aspects of Software Engineering;
2015;Nimrod Busany,Shahar Maoz;Behavioral log analysis with statistical guarantees.;http://doi.acm.org/10.1145/2786805.2803198;898-901;4;Validation, Verification, and Testing;
2015;Yingfei Xiong,Dan Hao,Lu Zhang,Tao Zhu,Muyao Zhu,Tian Lan;Inner oracles: input-specific assertions on internal states.;http://doi.acm.org/10.1145/2786805.2803204;902-905;4;Validation, Verification, and Testing;
2015;Cristian Cadar;Targeted program transformations for symbolic execution.;http://doi.acm.org/10.1145/2786805.2803205;906-909;4;Validation, Verification, and Testing;
2015;Jifeng Xuan,Xiaoyuan Xie,Martin Monperrus;Crash reproduction via test case mutation: let existing test cases help.;http://doi.acm.org/10.1145/2786805.2803206;910-913;4;Validation, Verification, and Testing;
2015;Arun K. Rajagopalan,Jeff Huang 0001;RDIT: race detection from incomplete traces.;http://doi.acm.org/10.1145/2786805.2803209;914-917;4;Validation, Verification, and Testing;
2015;Tingting Yu;TACO: test suite augmentation for concurrent programs.;http://doi.acm.org/10.1145/2786805.2803201;918-921;4;Maintenance and Evolution;
2015;Apostolos V. Zarras,Theofanis Vartziotis,Panos Vassiliadis;Navigating through the archipelago of refactorings.;http://doi.acm.org/10.1145/2786805.2803203;922-925;4;Maintenance and Evolution;
2015;Hung Viet Nguyen,My Huu Nguyen,Son Cuu Dang,Christian Kastner,Tien N. Nguyen;Detecting semantic merge conflicts with variability-aware execution.;http://doi.acm.org/10.1145/2786805.2803208;926-929;4;Maintenance and Evolution;
2015;Mathieu Acher,Guillaume Becan,Benoit Combemale,Benoit Baudry,Jean-Marc Jezequel;Product lines can jeopardize their trade secrets.;http://doi.acm.org/10.1145/2786805.2803210;930-933;4;Maintenance and Evolution;
2015;Jinseong Jeon,Xiaokang Qiu,Jeffrey S. Foster,Armando Solar-Lezama;JSketch: sketching for Java.;http://doi.acm.org/10.1145/2786805.2803189;934-937;4;Tool Demonstrations;
2015;Pavel Dovgalyuk,Denis Dmitriev,Vladimir Makarov;Don't panic: reverse debugging of kernel drivers.;http://doi.acm.org/10.1145/2786805.2803179;938-941;4;Tool Demonstrations;
2015;Chunhui Wang,Fabrizio Pastore,Arda Goknil,Lionel C. Briand,Muhammad Zohaib Z. Iqbal;UMTG: a toolset to automatically generate system test cases from use case specifications.;http://doi.acm.org/10.1145/2786805.2803187;942-945;4;Tool Demonstrations;
2015;Inian Parameshwaran,Enrico Budianto,Shweta Shinde,Hung Dang,Atul Sadhu,Prateek Saxena;DexterJS: robust testing platform for DOM-based XSS vulnerabilities.;http://doi.acm.org/10.1145/2786805.2803191;946-949;4;Tool Demonstrations;
2015;I. S. Wishnu B. Prasetya;T3i: a tool for generating and querying test suites for Java.;http://doi.acm.org/10.1145/2786805.2803182;950-953;4;Tool Demonstrations;
2015;Timothy R. Shaffer,Jenna L. Wise,Braden M. Walters,Sebastian Muller,Michael Falcone,Bonita Sharif;iTrace: enabling eye tracking on software artifacts within the IDE to support software engineering tasks.;http://doi.acm.org/10.1145/2786805.2803188;954-957;4;Tool Demonstrations;
2015;Ding Li,Angelica Huyen Tran,William G. J. Halfond;Nyx: a display energy optimizer for mobile web apps.;http://doi.acm.org/10.1145/2786805.2803190;958-961;4;Tool Demonstrations;
2015;Chetan Arora 0002,Mehrdad Sabetzadeh,Arda Goknil,Lionel C. Briand,Frank Zimmer;NARCIA: an automated tool for change impact analysis in natural language requirements.;http://doi.acm.org/10.1145/2786805.2803185;962-965;4;Tool Demonstrations;
2015;Christoffer Rosen,Ben Grawi,Emad Shihab;Commit guru: analytics and risk prediction of software commits.;http://doi.acm.org/10.1145/2786805.2803183;966-969;4;Tool Demonstrations;
2015;Davide Di Ruscio,Dimitris S. Kolovos,Ioannis Korkontzelos,Nicholas Drivalos Matragkas,Jurgen J. Vinju;OSSMETER: a software measurement platform for automatically analysing open source software projects.;http://doi.acm.org/10.1145/2786805.2803186;970-973;4;Tool Demonstrations;
2015;Paul Bording,Melanie Bruns,Marie Christin Platenius;Comprehensive service matching with MatchBox.;http://doi.acm.org/10.1145/2786805.2803181;974-977;4;Tool Demonstrations;
2015;Larissa Leite,Christoph Treude,Fernando Marques Figueira Filho;UEDashboard: awareness of unusual events in commit histories.;http://doi.acm.org/10.1145/2786805.2803184;978-981;4;Tool Demonstrations;
2015;Sana Ben Nasr,Guillaume Becan,Mathieu Acher,Joao Bosco Ferreira Filho,Benoit Baudry,Nicolas Sannier,Jean-Marc Davril;MatrixMiner: a red pill to architect informal product descriptions in the matrix.;http://doi.acm.org/10.1145/2786805.2803180;982-985;4;Tool Demonstrations;
2015;Pete Rotella,Sunita Chulani,Devesh Goyal;Predicting field reliability.;http://doi.acm.org/10.1145/2786805.2804428;986-989;4;Quality;
2015;Mijung Kim,Jaechang Nam,Jaehyuk Yeon,Soonhwang Choi,Sunghun Kim 0001;REMI: defect prediction for efficient API testing.;http://doi.acm.org/10.1145/2786805.2804429;990-993;4;Quality;
2015;Muhammad Umar Janjua;OnSpot system: test impact visibility during code edits in real software.;http://doi.acm.org/10.1145/2786805.2804430;994-997;4;Quality;
2015;Juliana Saraiva,Christian Bird,Thomas Zimmermann 0001;Products, developers, and milestones: how should I build my N-Gram language model.;http://doi.acm.org/10.1145/2786805.2804431;998-1001;4;Software Process;
2015;Joel Greenyer,Max Haase,Jorg Marhenke,Rene Bellmer;Evaluating a formal scenario-based method for the requirements analysis in automotive software engineering.;http://doi.acm.org/10.1145/2786805.2804432;1002-1005;4;Software Process;
2015;Mahshad M. Mahally,Miroslaw Staron,Jan Bosch;Barriers and enablers for shortening software development lead-time in mechatronics organizations: a case study.;http://doi.acm.org/10.1145/2786805.2804433;1006-1009;4;Software Process;
2015;Chih-Hong Cheng,Tuncay Guelfirat,Christian Messinger,Johannes O. Schmitt,Matthias Schnelte,Peter Weber;Semantic degrees for Industrie 4.0 engineering: deciding on the degree of semantic formalization to select appropriate technologies.;http://doi.acm.org/10.1145/2786805.2804434;1010-1013;4;Requirements and Specification;
2015;Smita Ghaisas,Manish Motwani,Balaji Balasubramaniam,Anjali Gajendragadkar,Rahul Kelkar,Harrick M. Vin;Towards automating the security compliance value chain.;http://doi.acm.org/10.1145/2786805.2804435;1014-1017;4;Requirements and Specification;
2015;Aapo Koski,Tommi Mikkonen;Requirements, architecture, and quality in a mission critical system: 12 lessons learned.;http://doi.acm.org/10.1145/2786805.2804436;1018-1021;4;Requirements and Specification;
2015;Luca Florio;Decentralized self-adaptation in large-scale distributed systems.;http://doi.acm.org/10.1145/2786805.2803192;1022-1025;4;Doctoral Symposium;
2015;Sebastian Vost;Vehicle level continuous integration in the automotive industry.;http://doi.acm.org/10.1145/2786805.2803193;1026-1029;4;Doctoral Symposium;
2015;Lu Xiao;Quantifying architectural debts.;http://doi.acm.org/10.1145/2786805.2803194;1030-1033;4;Doctoral Symposium;
2015;Denis Feth;User-centric security: optimization of the security-usability trade-off.;http://doi.acm.org/10.1145/2786805.2803195;1034-1037;4;Doctoral Symposium;
2015;Sina Shamshiri;Automated unit test generation for evolving software.;http://doi.acm.org/10.1145/2786805.2803196;1038-1041;4;Doctoral Symposium;
2015;Thomas White;Increasing the efficiency of search-based unit test generation using parameter control.;http://doi.acm.org/10.1145/2786805.2807556;1042-1044;3;Student Research Competition;
2015;Kevin Moran;Enhancing Android application bug reporting.;http://doi.acm.org/10.1145/2786805.2807557;1045-1047;3;Student Research Competition;
2015;Carlos Bernal-Cardenas;Improving energy consumption in Android apps.;http://doi.acm.org/10.1145/2786805.2807558;1048-1050;3;Student Research Competition;
2015;Shuktika Jain;Automated generation of programming language quizzes.;http://doi.acm.org/10.1145/2786805.2807559;1051-1053;3;Student Research Competition;
2015;Venkatesh Vinayakarao;Spotting familiar code snippet structures for program comprehension.;http://doi.acm.org/10.1145/2786805.2807560;1054-1056;3;Student Research Competition;
2015;Martin Konopka;Combining eye tracking with navigation paths for identification of cross-language code dependencies.;http://doi.acm.org/10.1145/2786805.2807561;1057-1059;3;Student Research Competition;
2015;Oyindamola Olajubu;A textual domain specific language for requirement modelling.;http://doi.acm.org/10.1145/2786805.2807562;1060-1062;3;Student Research Competition;
2015;Christopher Theisen;Automated attack surface approximation.;http://doi.acm.org/10.1145/2786805.2807563;1063-1065;3;Student Research Competition;
2015;Erina Makihara;Pockets: a tool to support exploratory programming for novices and educators.;http://doi.acm.org/10.1145/2786805.2807564;1066-1068;3;Student Research Competition;
2014;Thomas Fritz,David C. Shepherd,Katja Kevic,Will Snipes,Christoph Braunlich;Developers' code context models for change tasks.;http://doi.acm.org/10.1145/2635868.2635905;7-18;12;Helping and Understanding Developers;
2014;Andre N. Meyer,Thomas Fritz,Gail C. Murphy,Thomas Zimmermann 0001;Software developers' perceptions of productivity.;http://doi.acm.org/10.1145/2635868.2635892;19-29;11;Helping and Understanding Developers;
2014;Raphael Pham,Stephan Kiesling,Olga Liskin,Leif Singer,Kurt Schneider;Enablers, inhibitors, and perceptions of testing in novice software teams.;http://doi.acm.org/10.1145/2635868.2635925;30-40;11;Helping and Understanding Developers;
2014;Sumit Gulwani,Ivan Radicek,Florian Zuleger;Feedback generation for performance problems in introductory programming assignments.;http://doi.acm.org/10.1145/2635868.2635912;41-51;11;Helping and Understanding Developers;
2014;Jifeng Xuan,Martin Monperrus;Test case purification for improving fault localization.;http://doi.acm.org/10.1145/2635868.2635906;52-63;12;Debugging and Refactoring;
2014;Yida Tao,Jindae Kim,Sunghun Kim 0001,Chang Xu;Automatically generated patches as debugging aids: a human study.;http://doi.acm.org/10.1145/2635868.2635873;64-74;11;Debugging and Refactoring;
2014;Jeffrey Overbey,Farnaz Behrang,Munawar Hafiz;A foundation for refactoring C with macros.;http://doi.acm.org/10.1145/2635868.2635908;75-85;11;Debugging and Refactoring;
2014;Narcisa Andreea Milea,Lingxiao Jiang,Siau-Cheng Khoo;Vector abstraction and concretization for scalable detection of refactorings.;http://doi.acm.org/10.1145/2635868.2635926;86-97;12;Debugging and Refactoring;
2014;Johannes Lerch,Ben Hermann,Eric Bodden,Mira Mezini;FlowTwist: efficient context-sensitive inside-out taint analysis for large codebases.;http://doi.acm.org/10.1145/2635868.2635878;98-108;11;Static Analysis;
2014;David M. Binkley,Nicolas E. Gold,Mark Harman,Syed S. Islam,Jens Krinke,Shin Yoo;ORBS: language-independent program slicing.;http://doi.acm.org/10.1145/2635868.2635893;109-120;12;Static Analysis;
2014;Vineeth Kashyap,Kyle Dewey,Ethan A. Kuefner,John Wagner,Kevin Gibbons,John Sarracino,Ben Wiedermann,Ben Hardekopf;JSAI: a static analysis platform for JavaScript.;http://doi.acm.org/10.1145/2635868.2635904;121-132;12;Static Analysis;
2014;Joxan Jaffar,Vijayaraghavan Murali;A path-sensitively sliced control flow graph.;http://doi.acm.org/10.1145/2635868.2635884;133-143;11;Static Analysis;
2014;Jason Tsay,Laura Dabbish,James D. Herbsleb;Let's talk about it: evaluating contributions through discussion in GitHub.;http://doi.acm.org/10.1145/2635868.2635882;144-154;11;Mining Software Repositories;
2014;Baishakhi Ray,Daryl Posnett,Vladimir Filkov,Premkumar T. Devanbu;A large scale study of programming languages and code quality in github.;http://doi.acm.org/10.1145/2635868.2635922;155-165;11;Mining Software Repositories;
2014;Hoan Anh Nguyen,Robert Dyer 0001,Tien N. Nguyen,Hridesh Rajan;Mining preconditions of APIs in large-scale code corpus.;http://doi.acm.org/10.1145/2635868.2635924;166-177;12;Mining Software Repositories;
2014;Ivo Krka,Yuriy Brun,Nenad Medvidovic;Automatic mining of specifications from invocation traces and method invariants.;http://doi.acm.org/10.1145/2635868.2635890;178-189;12;Mining Software Repositories;
2014;Maxime Cordy,Patrick Heymans,Axel Legay,Pierre-Yves Schobbens,Bruno Dawagne,Martin Leucker;Counterexample guided abstraction refinement of product-line behavioural models.;http://doi.acm.org/10.1145/2635868.2635919;190-201;12;Formal Methods and Verification;
2014;Akash Lal,Shaz Qadeer;Powering the static driver verifier using corral.;http://doi.acm.org/10.1145/2635868.2635894;202-212;11;Formal Methods and Verification;
2014;Amirhossein Vakili,Nancy A. Day;Verifying CTL-live properties of infinite state models using an SMT solver.;http://doi.acm.org/10.1145/2635868.2635911;213-223;11;Formal Methods and Verification;
2014;Richard Joiner,Thomas W. Reps,Somesh Jha,Mohan Dhawan,Vinod Ganapathy;Efficient runtime-enforcement techniques for policy weaving.;http://doi.acm.org/10.1145/2635868.2635907;224-234;11;Formal Methods and Verification;
2014;Sebastian G. Elbaum,Gregg Rothermel,John Penix;Techniques for improving regression testing in continuous integration development environments.;http://doi.acm.org/10.1145/2635868.2635910;235-245;11;Regression Testing;
2014;August Shi,Alex Gyori,Milos Gligoric,Andrey Zaytsev,Darko Marinov;Balancing trade-offs in test-suite reduction.;http://doi.acm.org/10.1145/2635868.2635921;246-256;11;Regression Testing;
2014;Amiangshu Bosu,Jeffrey Carver,Munawar Hafiz,Patrick Hilley,Derek Janni;Identifying the characteristics of vulnerable code changes: an empirical study.;http://doi.acm.org/10.1145/2635868.2635880;257-268;12;Regression Testing;
2014;Zhaopeng Tu,Zhendong Su,Premkumar T. Devanbu;On the localness of software.;http://doi.acm.org/10.1145/2635868.2635875;269-280;12;Improving Recommender Systems;
2014;Miltiadis Allamanis,Earl T. Barr,Christian Bird,Charles A. Sutton;Learning natural coding conventions.;http://doi.acm.org/10.1145/2635868.2635883;281-293;13;Improving Recommender Systems;
2014;Yoshiki Higo,Shinji Kusumoto;How should we measure functional sameness from program source code? an exploratory study on Java methods.;http://doi.acm.org/10.1145/2635868.2635886;294-305;12;Improving Recommender Systems;
2014;Earl T. Barr,Yuriy Brun,Premkumar T. Devanbu,Mark Harman,Federica Sarro;The plastic surgery hypothesis.;http://doi.acm.org/10.1145/2635868.2635898;306-317;12;Improving Recommender Systems;
2014;Peng Liu 0010,Omer Tripp,Charles Zhang;Grail: context-aware fixing of concurrency bugs.;http://doi.acm.org/10.1145/2635868.2635881;318-329;12;Concurrency and Parallelism;
2014;Mingxing Zhang,Yongwei Wu,Shan Lu,Shanxiang Qi,Jinglei Ren,Weimin Zheng;AI: a lightweight system for tolerating concurrency bugs.;http://doi.acm.org/10.1145/2635868.2635885;330-340;11;Concurrency and Parallelism;
2014;Yu Lin,Cosmin Radoi,Danny Dig;Retrofitting concurrency for Android applications through refactoring.;http://doi.acm.org/10.1145/2635868.2635903;341-352;12;Concurrency and Parallelism;
2014;Mahdi Eslamimehr,Jens Palsberg;Sherlock: scalable deadlock detection for concurrent programs.;http://doi.acm.org/10.1145/2635868.2635918;353-365;13;Concurrency and Parallelism;
2014;Alberto Goffi,Alessandra Gorla,Andrea Mattavelli,Mauro Pezze,Paolo Tonella;Search-based synthesis of equivalent method sequences.;http://doi.acm.org/10.1145/2635868.2635888;366-376;11;Self Adaptation and Repair / Program Analysis Applications;
2014;Jacob Swanson,Myra B. Cohen,Matthew B. Dwyer,Brady J. Garvin,Justin Firestone;Beyond the rainbow: self-adaptive failure avoidance in configurable systems.;http://doi.acm.org/10.1145/2635868.2635915;377-388;12;Self Adaptation and Repair / Program Analysis Applications;
2014;Lannan Luo,Jiang Ming,Dinghao Wu,Peng Liu 0005,Sencun Zhu;Semantics-based obfuscation-resilient binary code similarity comparison with applications to software plagiarism detection.;http://doi.acm.org/10.1145/2635868.2635900;389-400;12;Self Adaptation and Repair / Program Analysis Applications;
2014;Qi Xuan,Aaron Okano,Premkumar T. Devanbu,Vladimir Filkov;Focus-shifting patterns of OSS developers and their congruence with call graphs.;http://doi.acm.org/10.1145/2635868.2635914;401-412;12;Self Adaptation and Repair / Program Analysis Applications;
2014;Hyunmin Seo,Sunghun Kim 0001;How we get there: a context-guided search strategy in concolic testing.;http://doi.acm.org/10.1145/2635868.2635872;413-424;12;Symbolic Execution;
2014;Peter Dinges,Gul A. Agha;Solving complex path conditions through heuristic search on induced polytopes.;http://doi.acm.org/10.1145/2635868.2635889;425-436;12;Symbolic Execution;
2014;Antonio Filieri,Corina S. Pasareanu,Willem Visser,Jaco Geldenhuys;Statistical symbolic execution with informed sampling.;http://doi.acm.org/10.1145/2635868.2635899;437-448;12;Symbolic Execution;
2014;Guodong Li,Esben Andreasen,Indradeep Ghosh;SymJS: automatic symbolic testing of JavaScript web applications.;http://doi.acm.org/10.1145/2635868.2635913;449-459;11;Symbolic Execution;
2014;Annie T. T. Ying,Martin P. Robillard;Selection and presentation practices for code example summarization.;http://doi.acm.org/10.1145/2635868.2635877;460-471;12;Software Documentation;
2014;Miltiadis Allamanis,Charles A. Sutton;Mining idioms from source code.;http://doi.acm.org/10.1145/2635868.2635901;472-483;12;Software Documentation;
2014;Laura Moreno,Gabriele Bavota,Massimiliano Di Penta,Rocco Oliveto,Andrian Marcus,Gerardo Canfora;Automatic generation of release notes.;http://doi.acm.org/10.1145/2635868.2635870;484-495;12;Software Documentation;
2014;Davood Mazinanian,Nikolaos Tsantalis,Ali Mesbah 0001;Discovering refactoring opportunities in cascading style sheets.;http://doi.acm.org/10.1145/2635868.2635879;496-506;11;Web Apps;
2014;SungGyeong Bae,Hyunghun Cho,Inho Lim,Sukyoung Ryu;SAFEWAPI: web API misuse detector for web applications.;http://doi.acm.org/10.1145/2635868.2635916;507-517;11;Web Apps;
2014;Hung Viet Nguyen,Christian Kastner,Tien N. Nguyen;Building call graphs for embedded client-side code in dynamic web applications.;http://doi.acm.org/10.1145/2635868.2635928;518-529;12;Web Apps;
2014;Sebastian Baltes,Stephan Diehl 0001;Sketches and diagrams in practice.;http://doi.acm.org/10.1145/2635868.2635891;530-541;12;Architecture and Design;
2014;Klaus-Benedikt Schultis,Christoph Elsner,Daniel Lohmann;Architecture challenges for internal software ecosystems: a large-scale industry case study.;http://doi.acm.org/10.1145/2635868.2635876;542-552;11;Architecture and Design;
2014;Cecylia Bocovich,Joanne M. Atlee;Variable-specific resolutions for feature interactions.;http://doi.acm.org/10.1145/2635868.2635927;553-563;11;Architecture and Design;
2014;Guido Salvaneschi,Sven Amann,Sebastian Proksch,Mira Mezini;An empirical study on program comprehension with reactive programming.;http://doi.acm.org/10.1145/2635868.2635895;564-575;12;Architecture and Design;
2014;Yu Feng,Saswat Anand,Isil Dillig,Alexander Aiken;Apposcopy: semantics-based detection of Android malware through static analysis.;http://doi.acm.org/10.1145/2635868.2635869;576-587;12;Mobile Apps;
2014;Abhijeet Banerjee,Lee Kee Chong,Sudipta Chattopadhyay 0001,Abhik Roychoudhury;Detecting energy bugs and hotspots in mobile apps.;http://doi.acm.org/10.1145/2635868.2635871;588-598;11;Mobile Apps;
2014;Riyadh Mahmood,Nariman Mirzaei,Sam Malek;EvoDroid: segmented evolutionary testing of Android apps.;http://doi.acm.org/10.1145/2635868.2635896;599-609;11;Mobile Apps;
2014;Hammad Khalid,Meiyappan Nagappan,Emad Shihab,Ahmed E. Hassan;Prioritizing the devices to test your app on: a case study of Android game apps.;http://doi.acm.org/10.1145/2635868.2635909;610-620;11;Mobile Apps;
2014;Chen Huo,James A. Clause;Improving oracle quality by detecting brittle assertions and unused inputs in tests.;http://doi.acm.org/10.1145/2635868.2635917;621-631;11;Testing and Oracles;
2014;Marcel Bohme,Soumya Paul;On the efficiency of automated testing.;http://doi.acm.org/10.1145/2635868.2635923;632-642;11;Testing and Oracles;
2014;Qingzhou Luo,Farah Hariri,Lamyaa Eloussi,Darko Marinov;An empirical analysis of flaky tests.;http://doi.acm.org/10.1145/2635868.2635920;643-653;11;Testing and Oracles;
2014;Rene Just,Darioush Jalali,Laura Inozemtseva,Michael D. Ernst,Reid Holmes,Gordon Fraser;Are mutants a valid substitute for real faults in software testing?;http://doi.acm.org/10.1145/2635868.2635929;654-665;12;Testing and Oracles;
2014;Olga Baysal,Reid Holmes,Michael W. Godfrey;No issue left behind: reducing information overload in issue tracking.;http://doi.acm.org/10.1145/2635868.2635887;666-677;12;Evolution and Maintenance;
2014;Senthil Mani,Karthik Sankaranarayanan,Vibha Sinha,Premkumar T. Devanbu;Panning requirement nuggets in stream of software maintenance tickets.;http://doi.acm.org/10.1145/2635868.2635897;678-688;11;Evolution and Maintenance;
2014;Xin Ye,Razvan C. Bunescu,Chang Liu;Learning to rank relevant files for bug reports using domain knowledge.;http://doi.acm.org/10.1145/2635868.2635874;689-699;11;Evolution and Maintenance;
2014;Chengnian Sun,Haidong Zhang,Jian-Guang Lou,Hongyu Zhang,Qiang Wang,Dongmei Zhang,Siau-Cheng Khoo;Querying sequential software engineering data.;http://doi.acm.org/10.1145/2635868.2635902;700-710;11;Evolution and Maintenance;
2014;Yu Jiang,Hehua Zhang,Huafeng Zhang,Xinyan Zhao,Han Liu,Chengnian Sun,Xiaoyu Song,Ming Gu,Jiaguang Sun;Tsmart-GalsBlock: a toolkit for modeling, validation, and synthesis of multi-clocked embedded systems.;http://doi.acm.org/10.1145/2635868.2661664;711-714;4;Tool Demonstrations;
2014;Stefan Dziwok,Christopher Gerking,Steffen Becker,Sebastian Thiele,Christian Heinzemann,Uwe Pohlmann;A tool suite for the model-driven software engineering of cyber-physical systems.;http://doi.acm.org/10.1145/2635868.2661665;715-718;4;Tool Demonstrations;
2014;Nikolas Havrikov,Matthias Hoschele,Juan P. Galeotti,Andreas Zeller;XMLMate: evolutionary XML test generation.;http://doi.acm.org/10.1145/2635868.2661666;719-722;4;Tool Demonstrations;
2014;Marco Autili,Davide Di Ruscio,Amleto Di Salle,Alexander Perucci;CHOReOSynt: enforcing choreography realizability in the future internet.;http://doi.acm.org/10.1145/2635868.2661667;723-726;4;Tool Demonstrations;
2014;Lin Gui 0002,Jun Sun,Yang Liu 0003,Truong Khanh Nguyen,Jin Song Dong;RaPiD: a toolkit for reliability analysis of non-deterministic systems.;http://doi.acm.org/10.1145/2635868.2661668;727-730;4;Tool Demonstrations;
2014;Jianwen Li,Yinbo Yao,Geguang Pu,Lijun Zhang 0001,Jifeng He;Aalta: an LTL satisfiability checker over Infinite/Finite traces.;http://doi.acm.org/10.1145/2635868.2661669;731-734;4;Tool Demonstrations;
2014;Malavika Samak,Murali Krishna Ramanathan;Omen+: a precise dynamic deadlock detector for multithreaded Java libraries.;http://doi.acm.org/10.1145/2635868.2661670;735-738;4;Tool Demonstrations;
2014;Mehdi Mirakhorli,Ahmed Fakhry,Artem Grechko,Mateusz Wieloch,Jane Cleland-Huang;Archie: a tool for detecting, monitoring, and preserving architecturally significant code.;http://doi.acm.org/10.1145/2635868.2661671;739-742;4;Tool Demonstrations;
2014;Sebastian Baltes,Peter Schmitz 0001,Stephan Diehl 0001;Linking sketches and diagrams to source code artifacts.;http://doi.acm.org/10.1145/2635868.2661672;743-746;4;Tool Demonstrations;
2014;Felienne Hermans,Danny Dig;BumbleBee: a refactoring environment for spreadsheet formulas.;http://doi.acm.org/10.1145/2635868.2661673;747-750;4;Tool Demonstrations;
2014;Everton L. G. Alves,Myoungkyu Song,Miryung Kim;RefDistiller: a refactoring aware code review tool for inspecting manual refactoring edits.;http://doi.acm.org/10.1145/2635868.2661674;751-754;4;Tool Demonstrations;
2014;Tianyi Zhang,Myoungkyu Song,Miryung Kim;Critics: an interactive code review tool for searching and inspecting systematic changes.;http://doi.acm.org/10.1145/2635868.2661675;755-758;4;Tool Demonstrations;
2014;Gillian J. Greene,Bernd M. Fischer;ConceptCloud: a tagcloud browser for software archives.;http://doi.acm.org/10.1145/2635868.2661676;759-762;4;Tool Demonstrations;
2014;Lu Xiao,Yuanfang Cai,Rick Kazman;Titan: a toolset that connects software architecture with quality analysis.;http://doi.acm.org/10.1145/2635868.2661677;763-766;4;Tool Demonstrations;
2014;Ferdian Thung,Tien-Duy B. Le,Pavneet Singh Kochhar,David Lo;BugLocalizer: integrated tool support for bug localization.;http://doi.acm.org/10.1145/2635868.2661678;767-770;4;Tool Demonstrations;
2014;Rongxin Wu;Diagnose crashing faults on production software.;http://doi.acm.org/10.1145/2635868.2666601;771-774;4;Technical Presentations 1;
2014;Benjamin Behringer;Integrating approaches for feature implementation.;http://doi.acm.org/10.1145/2635868.2666605;775-778;4;Technical Presentations 2;
2014;Zheng Gao;Numerical program analysis and testing.;http://doi.acm.org/10.1145/2635868.2666603;779-782;4;Technical Presentations 2;
2014;Shuanglong Kan;Traceability and model checking to support safety requirement verification.;http://doi.acm.org/10.1145/2635868.2666606;783-786;4;Technical Presentations 2;
2014;Yamilet R. Serrano Llerena;Dealing with uncertainty in verification of nondeterministic systems.;http://doi.acm.org/10.1145/2635868.2666598;787-790;4;Technical Presentations 2;
2014;Abhijeet Banerjee;Static analysis driven performance and energy testing.;http://doi.acm.org/10.1145/2635868.2666602;791-794;4;Technical Presentations 3;
2014;Marc Brunink;Autonomous compliance monitoring of non-functional properties.;http://doi.acm.org/10.1145/2635868.2666599;795-798;4;Technical Presentations 3;
2014;Jonathan Bell;Detecting, isolating, and enforcing dependencies among and within test cases.;http://doi.acm.org/10.1145/2635868.2666597;799-802;4;Technical Presentations 3;
2014;Raphael Pham;Improving the software testing skills of novices during onboarding through social transparency.;http://doi.acm.org/10.1145/2635868.2666604;803-806;4;Technical Presentations 3;
2014;Bakhtiar Khan Kasi;Minimizing software conflicts through proactive detection of conflicts and task scheduling.;http://doi.acm.org/10.1145/2635868.2666600;807-810;4;Technical Presentations 4;
2014;Lu Xiao;Detecting and preventing the architectural roots of bugs.;http://doi.acm.org/10.1145/2635868.2661679;811-813;3;Student Research Competition Posters;
2014;Shuo Song;Estimating the effectiveness of spectrum-based fault localization.;http://doi.acm.org/10.1145/2635868.2661680;814-816;3;Student Research Competition Posters;
2014;David Wille;Managing lots of models: the FaMine approach.;http://doi.acm.org/10.1145/2635868.2661681;817-819;3;Student Research Competition Posters;
2014;Xin Yang;Social network analysis in open source software peer review.;http://doi.acm.org/10.1145/2635868.2661682;820-822;3;Student Research Competition Posters;
2014;Diego Marmsoler;Towards a theory of architectural styles.;http://doi.acm.org/10.1145/2635868.2661683;823-825;3;Student Research Competition Posters;
2014;Harry Raymond Joseph;Software programmer management: a machine learning and human computer interaction framework for optimal task assignment.;http://doi.acm.org/10.1145/2635868.2661684;826-828;3;Student Research Competition Posters;
2014;Marian Petre,Daniela E. Herlea;Methodology and culture: drivers of mediocrity in software engineering?;http://doi.acm.org/10.1145/2635868.2666607;829-832;4;Visions and Challenges;
2014;Sebastian G. Elbaum,David S. Rosenblum;Known unknowns: testing in the presence of uncertainty.;http://doi.acm.org/10.1145/2635868.2666608;833-836;4;Visions and Challenges;
2014;Marc Palyart,Gail C. Murphy,Emerson R. Murphy-Hill,Xavier Blanc;Speculative reprogramming.;http://doi.acm.org/10.1145/2635868.2666609;837-840;4;Visions and Challenges;
2014;Xavier Devroey,Gilles Perrouin,Maxime Cordy,Mike Papadakis,Axel Legay,Pierre-Yves Schobbens;A variability perspective of mutation analysis.;http://doi.acm.org/10.1145/2635868.2666610;841-844;4;Visions and Challenges;
2014;Minghui Zhou,Audris Mockus;Mining micro-practices from operational data.;http://doi.acm.org/10.1145/2635868.2666611;845-848;4;Visions and Challenges;
2014;Jane Cleland-Huang,Mona Rahimi,Patrick Mader;Achieving lightweight trustworthy traceability.;http://doi.acm.org/10.1145/2635868.2666612;849-852;4;Visions and Challenges;
2014;Gustavo Villavicencio;Software maintenance like maintenance in other engineering disciplines.;http://doi.acm.org/10.1145/2635868.2666613;853-856;4;Visions and Challenges;
2013;Justyna Petke,Shin Yoo,Myra B. Cohen,Mark Harman;Efficiency and early fault detection with lower and higher strength combinatorial interaction testing.;http://doi.acm.org/10.1145/2491411.2491436;26-36;11;Testing I;
2013;Azadeh Farzan,Andreas Holzer,Niloofar Razavi,Helmut Veith;Con2colic testing.;http://doi.acm.org/10.1145/2491411.2491453;37-47;11;Testing I;
2013;Joxan Jaffar,Vijayaraghavan Murali,Jorge A. Navas;Boosting concolic testing via interpolation.;http://doi.acm.org/10.1145/2491411.2491425;48-58;11;Testing I;
2013;Antonia Bertolino,Eda Marchetti,Andrea Morichetta;Adequate monitoring of service compositions.;http://doi.acm.org/10.1145/2491411.2491441;59-69;11;Dynamic and Variable Software;
2013;Marin Silic,Goran Delac,Sinisa Srbljic;Prediction of atomic web services reliability based on k-means clustering.;http://doi.acm.org/10.1145/2491411.2491424;70-80;11;Dynamic and Variable Software;
2013;Jorg Liebig,Alexander von Rhein,Christian Kastner,Sven Apel,Jens Dorre,Christian Lengauer;Scalable analysis of variable software.;http://doi.acm.org/10.1145/2491411.2491437;81-91;11;Dynamic and Variable Software;
2013;Guillaume Claret,Sriram K. Rajamani,Aditya V. Nori,Andy Gordon,Johannes Borgstrom;Bayesian inference using data flow analysis.;http://doi.acm.org/10.1145/2491411.2491423;92-102;11;Formal Reasoning;
2013;Kaituo Li,Christoph Reichenbach,Yannis Smaragdakis,Michal Young;Second-order constraints in dynamic invariant inference.;http://doi.acm.org/10.1145/2491411.2491457;103-113;11;Formal Reasoning;
2013;Yunhui Zheng,Xiangyun Zhang,Vijay Ganesh;Z3-str: a z3-based string solver for web application analysis.;http://doi.acm.org/10.1145/2491411.2491456;114-124;11;Formal Reasoning;
2013;Dong Qiu,Bixin Li,Zhendong Su;An empirical analysis of the co-evolution of schema and code in database applications.;http://doi.acm.org/10.1145/2491411.2491431;125-135;11;Empirical Studies I;
2013;Duy Cu Nguyen,Alessandro Marchetto,Paolo Tonella;Automated oracles: an empirical study on cost and effectiveness.;http://doi.acm.org/10.1145/2491411.2491434;136-146;11;Empirical Studies I;
2013;Foyzur Rahman,Daryl Posnett,Israel Herraiz,Premkumar T. Devanbu;Sample size vs. bias in defect prediction.;http://doi.acm.org/10.1145/2491411.2491418;147-157;11;Empirical Studies I;
2013;Peng Liu 0010,Julian Dolby,Charles Zhang;Finding incorrect compositions of atomicity.;http://doi.acm.org/10.1145/2491411.2491435;158-168;11;Parallel, Concurrent, and Distributed Systems;
2013;Omer Tripp,Noam Rinetzky;Tightfit: adaptive parallelization with foresight.;http://doi.acm.org/10.1145/2491411.2491443;169-179;11;Parallel, Concurrent, and Distributed Systems;
2013;Diptikalyan Saha,Pankaj Dhoolia,Gaurab Paul;Distributed program tracing.;http://doi.acm.org/10.1145/2491411.2491451;180-190;11;Parallel, Concurrent, and Distributed Systems;
2013;Chris Hawblitzel,Shuvendu K. Lahiri,Kshama Pawar,Hammad Hashmi,Sedar Gokbulut,Lakshan Fernando,Dave Detlefs,Scott Wadsworth;Will you still compile me tomorrow? static cross-version compiler validation.;http://doi.acm.org/10.1145/2491411.2491442;191-201;11;Software Development Activities;
2013;Peter C. Rigby,Christian Bird;Convergent contemporary software peer review practices.;http://doi.acm.org/10.1145/2491411.2491444;202-212;11;Software Development Activities;
2013;Kelly Blincoe,Giuseppe Valetto,Daniela E. Herlea;Do all task dependencies require coordination? the role of task properties in identifying critical coordination needs in software projects.;http://doi.acm.org/10.1145/2491411.2491440;213-223;11;Software Development Activities;
2013;Aravind Machiry,Rohan Tahiliani,Mayur Naik;Dynodroid: an input generation system for Android apps.;http://doi.acm.org/10.1145/2491411.2491450;224-234;11;Testing II;
2013;Paul Marinescu,Cristian Cadar;KATCH: high-coverage testing of software patches.;http://doi.acm.org/10.1145/2491411.2491438;235-245;11;Testing II;
2013;Aditya V. Nori,Rahul Sharma 0001;Termination proofs from tests.;http://doi.acm.org/10.1145/2491411.2491413;246-256;11;Testing II;
2013;Chang Hwan Peter Kim,Darko Marinov,Sarfraz Khurshid,Don S. Batory,Sabrina Souto,Paulo Barros,Marcelo d'Amorim;SPLat: lightweight dynamic analysis for reducing combinatorics in testing configurable systems.;http://doi.acm.org/10.1145/2491411.2491459;257-267;11;Dynamic Analysis;
2013;Khanh Nguyen,Guoqing (Harry) Xu;Cachetor: detecting cacheable data to remove bloat.;http://doi.acm.org/10.1145/2491411.2491416;268-278;11;Dynamic Analysis;
2013;Jingyue Wu,Gang Hu,Yang Tang,Junfeng Yang;Effective dynamic detection of alias analysis errors.;http://doi.acm.org/10.1145/2491411.2491439;279-289;11;Dynamic Analysis;
2013;Jean-Marc Davril,Edouard Delfosse,Negar Hariri,Mathieu Acher,Jane Cleland-Huang,Patrick Heymans;Feature model extraction from large collections of informal product descriptions.;http://doi.acm.org/10.1145/2491411.2491455;290-300;11;Models and Features;
2013;Julia Rubin-Mosin,Marsha Chechik;N-way model merging.;http://doi.acm.org/10.1145/2491411.2491446;301-311;11;Models and Features;
2013;Nishant Sinha,Rezwana Karim;Compiling mockups to flexible UIs.;http://doi.acm.org/10.1145/2491411.2491427;312-322;11;Models and Features;
2013;Kivanc Muslu,Yuriy Brun,Michael D. Ernst,David Notkin;Making offline analyses continuous.;http://doi.acm.org/10.1145/2491411.2491460;323-333;11;Test and Analysis;
2013;Marcel Bohme,Bruno C. d. S. Oliveira,Abhik Roychoudhury;Regression tests to expose change interaction errors.;http://doi.acm.org/10.1145/2491411.2491430;334-344;11;Test and Analysis;
2013;Shuvendu K. Lahiri,Kenneth L. McMillan,Rahul Sharma 0001,Chris Hawblitzel;Differential assertion checking.;http://doi.acm.org/10.1145/2491411.2491452;345-355;11;Test and Analysis;
2013;Mark Grechanik,B. M. Mainul Hossain,Ugo A. Buy,Haisheng Wang;Preventing database deadlocks in applications.;http://doi.acm.org/10.1145/2491411.2491412;356-366;11;Maintenance and Evolution;
2013;Joshua Garcia,Daniel Popescu,Gholamreza Safi,William G. J. Halfond,Nenad Medvidovic;Identifying message flow in distributed event-based systems.;http://doi.acm.org/10.1145/2491411.2491462;367-377;11;Maintenance and Evolution;
2013;Sugandha Lohar,Sorawit Amornborvornwong,Andrea Zisman,Jane Cleland-Huang;Improving trace accuracy through data-driven configuration and composition of tracing features.;http://doi.acm.org/10.1145/2491411.2491432;378-388;11;Maintenance and Evolution;
2013;Dirk Beyer 0001,Stefan Lowe,Evgeny Novikov,Andreas Stahlbauer,Philipp Wendler;Precision reuse for efficient regression verification.;http://doi.acm.org/10.1145/2491411.2491429;389-399;11;Formal Verification;
2013;Fokion Zervoudakis,David S. Rosenblum,Sebastian G. Elbaum,Anthony Finkelstein;Cascading verification: an integrated method for domain-specific model checking.;http://doi.acm.org/10.1145/2491411.2491454;400-410;11;Formal Verification;
2013;Pietro Braione,Giovanni Denaro,Mauro Pezze;Enhancing symbolic execution with built-in term rewriting and constrained lazy initialization.;http://doi.acm.org/10.1145/2491411.2491433;411-421;11;Formal Verification;
2013;Matthias Schur,Andreas Roth,Andreas Zeller;Mining behavior models from enterprise web applications.;http://doi.acm.org/10.1145/2491411.2491426;422-432;11;Model Inference and Synthesis;
2013;Joel Greenyer,Christian Brenner,Maxime Cordy,Patrick Heymans,Erika Gressi;Incrementally synthesizing controllers from scenario-based product line specifications.;http://doi.acm.org/10.1145/2491411.2491445;433-443;11;Model Inference and Synthesis;
2013;Shahar Maoz,Jan Oliver Ringert,Bernhard Rumpe;Synthesis of component and connector models from crosscutting structural views.;http://doi.acm.org/10.1145/2491411.2491414;444-454;11;Model Inference and Synthesis;
2013;Tiantian Wang,Mark Harman,Yue Jia,Jens Krinke;Searching for better configurations: a rigorous approach to clone evaluation.;http://doi.acm.org/10.1145/2491411.2491420;455-465;11;Empirical Studies II;
2013;Meiyappan Nagappan,Thomas Zimmermann 0001,Christian Bird;Diversity in software engineering research.;http://doi.acm.org/10.1145/2491411.2491415;466-476;11;Empirical Studies II;
2013;Mario Linares Vasquez,Gabriele Bavota,Carlos Bernal-Cardenas,Massimiliano Di Penta,Rocco Oliveto,Denys Poshyvanyk;API change and fault proneness: a threat to the success of Android apps.;http://doi.acm.org/10.1145/2491411.2491428;477-487;11;Empirical Studies II;
2013;Koushik Sen,Swaroop Kalasapur,Tasneem G. Brutch,Simon Gibbs;Jalangi: a selective record-replay and dynamic analysis framework for JavaScript.;http://doi.acm.org/10.1145/2491411.2491447;488-498;11;JavaScript;
2013;Magnus Madsen,V. Benjamin Livshits,Michael Fanning;Practical static analysis of JavaScript applications in the presence of frameworks and libraries.;http://doi.acm.org/10.1145/2491411.2491417;499-509;11;JavaScript;
2013;Casper Svenning Jensen,Anders Moller,Zhendong Su;Server interface descriptions for automated testing of JavaScript web applications.;http://doi.acm.org/10.1145/2491411.2491421;510-520;11;JavaScript;
2013;Martin Schaf,Daniel Schwartz-Narbonne,Thomas Wies;Explaining inconsistent code.;http://doi.acm.org/10.1145/2491411.2491448;521-531;11;Source Code and Programming;
2013;Tung Thanh Nguyen,Hoan Anh Nguyen,Hoan Anh Nguyen,Tien N. Nguyen;A statistical semantic language model for source code.;http://doi.acm.org/10.1145/2491411.2491458;532-542;11;Source Code and Programming;
2013;Alex Gyori,Lyle Franklin,Danny Dig,Jan Lahoda;Crossing the gap from imperative to functional programming through refactoring.;http://doi.acm.org/10.1145/2491411.2491461;543-553;11;Source Code and Programming;
2013;Scott McPeak,Charles-Henri Gros,Murali Krishna Ramanathan;Scalable and incremental software bug detection.;http://doi.acm.org/10.1145/2491411.2501854;554-564;11;Bug Detection;
2013;Guangtai Liang,Qianxiang Wang,Tao Xie,Hong Mei;Inferring project-specific bug patterns for detecting sibling bugs.;http://doi.acm.org/10.1145/2491411.2491422;565-575;11;Bug Detection;
2013;Chengnian Sun,Siau-Cheng Khoo;Mining succinct predicated bug signatures.;http://doi.acm.org/10.1145/2491411.2491449;576-586;11;Bug Detection;
2013;Fabio Calefato,Filippo Lanubile;SocialCDE: a social awareness tool for global software teams.;http://doi.acm.org/10.1145/2491411.2494592;587-590;4;Tool Demonstrations I;
2013;B. M. Mainul Hossain,Mark Grechanik,Ugo A. Buy,Haisheng Wang;REDACT: preventing database deadlocks from application-based transactions.;http://doi.acm.org/10.1145/2491411.2494594;591-594;4;Tool Demonstrations I;
2013;Elvira Albert,Puri Arenas-Sanchez,Miguel Gomez-Zamalloa,Peter Y. H. Wong;aPET: a test case generation tool for concurrent objects.;http://doi.acm.org/10.1145/2491411.2494590;595-598;4;Tool Demonstrations I;
2013;Chetan Arora 0002,Mehrdad Sabetzadeh,Lionel C. Briand,Frank Zimmer,Raul Gnaga;RUBRIC: a flexible tool for automated checking of conformance to requirement boilerplates.;http://doi.acm.org/10.1145/2491411.2494591;599-602;4;Tool Demonstrations II;
2013;Samaneh Navabpour,Yogi Joshi,Chun Wah Wallace Wu,Shay Berkovich,Ramy Medhat,Borzoo Bonakdarpour,Sebastian Fischmeister;RiTHM: a tool for enabling time-triggered runtime verification for C programs.;http://doi.acm.org/10.1145/2491411.2494596;603-606;4;Tool Demonstrations II;
2013;Fu Song,Tayssir Touili;PoMMaDe: pushdown model-checking for malware detection.;http://doi.acm.org/10.1145/2491411.2494599;607-610;4;Tool Demonstrations II;
2013;Tuan-Hung Pham,Michael W. Whalen;RADA: a tool for reasoning about algebraic data types with abstractions.;http://doi.acm.org/10.1145/2491411.2494597;611-614;4;Tool Demonstrations II;
2013;Koushik Sen,Swaroop Kalasapur,Tasneem G. Brutch,Simon Gibbs;Jalangi: a tool framework for concolic testing, selective record-replay, and dynamic analysis of JavaScript.;http://doi.acm.org/10.1145/2491411.2494598;615-618;4;Tool Demonstrations III;
2013;Andrew Diniz da Costa,Ricardo Venieris,Gustavo Robichez de Carvalho,Carlos Jose Pereira de Lucena;RSA-MBT: a test tool for generating test artifacts based on models.;http://doi.acm.org/10.1145/2491411.2494593;619-622;4;Tool Demonstrations III;
2013;Shuang Liu,Yang Liu 0003,Jun Sun,Manchun Zheng,Bimlesh Wadhwa,Jin Song Dong;USMMC: a self-contained model checker for UML state machines.;http://doi.acm.org/10.1145/2491411.2494595;623-626;4;Tool Demonstrations III;
2013;Qi Wang,Jingyu Zhou,Yuting Chen,Yizhou Zhang,Jianjun Zhao;Extracting URLs from JavaScript via program analysis.;http://doi.acm.org/10.1145/2491411.2494583;627-630;4;Analysis and Testing;
2013;Kivanc Muslu,Yuriy Brun,Alexandra Meliou;Data debugging with continuous testing.;http://doi.acm.org/10.1145/2491411.2494580;631-634;4;Analysis and Testing;
2013;Alessio Gambi,Antonio Filieri,Schahram Dustdar;Iterative test suites refinement for elastic computing systems.;http://doi.acm.org/10.1145/2491411.2494579;635-638;4;Analysis and Testing;
2013;Laura Inozemtseva,Hadi Hemmati,Reid Holmes;Using fault history to improve mutation reduction.;http://doi.acm.org/10.1145/2491411.2494586;639-642;4;Analysis and Testing;
2013;Hongyu Zhang,Shing-Chi Cheung;A cost-effectiveness criterion for applying software defect prediction models.;http://doi.acm.org/10.1145/2491411.2494581;643-646;4;Hunting Bugs;
2013;Jiangtao Gong,Hongyu Zhang;BugMap: a topographic map of bugs.;http://doi.acm.org/10.1145/2491411.2494582;647-650;4;Hunting Bugs;
2013;Hoan Anh Nguyen,Tung Thanh Nguyen,Tien N. Nguyen;Lexical statistical machine translation for language migration.;http://doi.acm.org/10.1145/2491411.2494584;651-654;4;Hunting Bugs;
2013;Annie T. T. Ying,Martin P. Robillard;Code fragment summarization.;http://doi.acm.org/10.1145/2491411.2494587;655-658;4;Hunting Bugs;
2013;Daniel J. Dubois,Giordano Tamburrelli;Understanding gamification mechanisms for software development.;http://doi.acm.org/10.1145/2491411.2494589;659-662;4;Understanding Software Development;
2013;Ripon Kumar Saha,Avigit K. Saha,Dewayne E. Perry;Toward understanding the causes of unanswered questions in software information sites: a case study of stack overflow.;http://doi.acm.org/10.1145/2491411.2494585;663-666;4;Understanding Software Development;
2013;Yael Dubinsky,Yishai A. Feldman,Maayan Goldstein;Where is the business logic?;http://doi.acm.org/10.1145/2491411.2494588;667-670;4;Understanding Software Development;
2013;Emitza Guzman,Bernd Brugge;Towards emotional awareness in software development teams.;http://doi.acm.org/10.1145/2491411.2494578;671-674;4;Understanding Software Development;
2013;Shrawan Kumar,Bharti Chimdyalwar,Ulka Shrotri;Precise range analysis on large industry code.;http://doi.acm.org/10.1145/2491411.2494569;675-678;4;Implementing Sound Software-Engineering Practices in Companies;
2013;Thijmen de Gooijer,Heiko Koziolek;Agreements for software reuse in corporations.;http://doi.acm.org/10.1145/2491411.2494576;679-682;4;Implementing Sound Software-Engineering Practices in Companies;
2013;Andrey A. Terekhov;Good technology makes the difficult task easy.;http://doi.acm.org/10.1145/2491411.2494571;683-686;4;Implementing Sound Software-Engineering Practices in Companies;
2013;Daniel J. Dubois,Yosuke Bando,Konosuke Watanabe,Henry Holtzman;ShAir: extensible middleware for mobile peer-to-peer resource sharing.;http://doi.acm.org/10.1145/2491411.2494573;687-690;4;Approaches to Quality;
2013;Audris Mockus,Randy L. Hackbarth,John Douglas Palframan;Risky files: an approach to focus quality improvement effort.;http://doi.acm.org/10.1145/2491411.2494572;691-694;4;Approaches to Quality;
2013;Yu Jiang,Hehua Zhang,Han Liu,Xiaoyu Song,William N. N. Hung,Ming Gu,Jiaguang Sun;System reliability calculation based on the run-time analysis of ladder program.;http://doi.acm.org/10.1145/2491411.2494570;695-698;4;Approaches to Quality;
2013;Clement Escoffier,Philippe Lalanda,Nicolas Rempulsky;h-ubu: an industrial-strength service-oriented component framework for JavaScript applications.;http://doi.acm.org/10.1145/2491411.2494577;699-702;4;Effective Industry Use of Software-Engineering Tools;
2013;Yu Jiang,Zonghui Li,Hehua Zhang,Yangdong Steve Deng,Xiaoyu Song,Ming Gu,Jiaguang Sun;Design and optimization of multi-clocked embedded systems using formal technique.;http://doi.acm.org/10.1145/2491411.2494575;703-706;4;Effective Industry Use of Software-Engineering Tools;
2013;Rahul Kumar,Aditya V. Nori;The economics of static analysis tools.;http://doi.acm.org/10.1145/2491411.2494574;707-710;4;Effective Industry Use of Software-Engineering Tools;
2013;Nicholas DiGiuseppe;Automatically describing software faults.;http://doi.acm.org/10.1145/2491411.2492401;711-714;4;Doctoral Papers 1;
2013;Marie Christin Platenius;Fuzzy service matching in on-the-fly computing.;http://doi.acm.org/10.1145/2491411.2492405;715-718;4;Doctoral Papers 1;
2013;Oleg Nenashev;PHRT: a model and programmable tool for hardware reengineering automation.;http://doi.acm.org/10.1145/2491411.2492406;719-722;4;Doctoral Papers 2;
2013;Nicolas Lopez;Using topic models to understand the evolution of a software ecosystem.;http://doi.acm.org/10.1145/2491411.2492402;723-726;4;Doctoral Papers 2;
2013;Yanja Dajsuren;Automotive architecture description and its quality.;http://doi.acm.org/10.1145/2491411.2492403;727-730;4;Doctoral Papers 3;
2013;Bahtijar Vogel;Towards open architecture system.;http://doi.acm.org/10.1145/2491411.2492407;731-734;4;Doctoral Papers 3;
2013;Ulyana Tikhonova;A framework for defining the dynamic semantics of DSLs.;http://doi.acm.org/10.1145/2491411.2492404;735-738;4;Doctoral Papers 4;
2012;Mark Gabel,Zhendong Su;Testing mined specifications.;http://doi.acm.org/10.1145/2393596.2393598;4;1;Program analysis;
2012;Taeho Kwon,Zhendong Su;Detecting and analyzing insecure component usage.;http://doi.acm.org/10.1145/2393596.2393599;5;1;Program analysis;
2012;Damien Octeau,Somesh Jha,Patrick D. McDaniel;Retargeting Android applications to Java bytecode.;http://doi.acm.org/10.1145/2393596.2393600;6;1;Program analysis;
2012;Gianpaolo Cugola,Carlo Ghezzi,Leandro Sales Pinto,Giordano Tamburrelli;SelfMotion: a declarative language for adaptive service-oriented mobile apps.;http://doi.acm.org/10.1145/2393596.2393602;7;1;Tool demo session 1;
2012;Baishakhi Ray,Christopher Wiley,Miryung Kim;REPERTOIRE: a cross-system porting analysis tool for forked software projects.;http://doi.acm.org/10.1145/2393596.2393603;8;1;Tool demo session 1;
2012;Vinay Augustine;Automating adaptive maintenance changes with SrcML and LINQ.;http://doi.acm.org/10.1145/2393596.2393604;9;1;Tool demo session 1;
2012;Wing-Kwan Chan,Hong Cheng,David Lo;Searching connected API subgraph via text phrases.;http://doi.acm.org/10.1145/2393596.2393606;10;1;Text analysis;
2012;Senthil Mani,Rose Catherine Kanjirathinkal,Vibha Sinha,Avinava Dubey;AUSUM: approach for unsupervised bug report summarization.;http://doi.acm.org/10.1145/2393596.2393607;11;1;Text analysis;
2012;Xusheng Xiao,Amit M. Paradkar,Suresh Thummalapenta,Tao Xie;Automated extraction of security policies from natural-language software documents.;http://doi.acm.org/10.1145/2393596.2393608;12;1;Text analysis;
2012;Mithun Acharya,Brian P. Robinson;Practical change impact analysis based on static program slicing for industrial software systems.;http://doi.acm.org/10.1145/2393596.2393610;13;1;Research demos session 2;
2012;Elvira Albert,Antonio Flores-Montoya,Samir Genaim;MayPar: a may-happen-in-parallel analyzer for concurrent objects.;http://doi.acm.org/10.1145/2393596.2393611;14;1;Research demos session 2;
2012;David C. Shepherd,Kostadin Damevski,Bartosz Ropski,Thomas Fritz;Sando: an extensible local code search framework.;http://doi.acm.org/10.1145/2393596.2393612;15;1;Research demos session 2;
2012;Xiaoying Wang,Lu Zhang,Tao Xie,Yingfei Xiong,Hong Mei;Automating presentation changes in dynamic web applications via collaborative hybrid analysis.;http://doi.acm.org/10.1145/2393596.2393614;16;1;Dynamic analysis;
2012;Kyle R. Canavera,Naeem Esfahani,Sam Malek;Mining the execution history of a software system to infer the best time for its adaptation.;http://doi.acm.org/10.1145/2393596.2393616;18;1;Dynamic analysis;
2012;Liliana Pasquale,Claudio Menghi,Mazeiar Salehie,Luca Cavallaro,Inah Omoronyia,Bashar Nuseibeh;SecuriTAS: a tool for engineering adaptive security.;http://doi.acm.org/10.1145/2393596.2393618;19;1;Research demos session 3;
2012;Bora Caglayan,Ayse Tosun Misirli,Gul Calikli,Ayse Bener,Turgay Aytac,Burak Turhan;Dione: an integrated measurement and defect prediction solution.;http://doi.acm.org/10.1145/2393596.2393619;20;1;Research demos session 3;
2012;Naeem Esfahani,Kaveh Razavi,Sam Malek;Dealing with uncertainty in early software architecture.;http://doi.acm.org/10.1145/2393596.2393621;21;1;NIER papers;
2012;Dawei Qi,Jooyong Yi,Abhik Roychoudhury;Software change contracts.;http://doi.acm.org/10.1145/2393596.2393622;22;1;NIER papers;
2012;Nicholas DiGiuseppe,James A. Jones;Semantic fault diagnosis: automatic natural-language fault descriptions.;http://doi.acm.org/10.1145/2393596.2393623;23;1;NIER papers;
2012;Janet Siegmund,Andre Brechmann,Sven Apel,Christian Kastner,Jorg Liebig,Thomas Leich,Gunter Saake;Toward measuring program comprehension with functional magnetic resonance imaging.;http://doi.acm.org/10.1145/2393596.2393624;24;1;NIER papers;
2012;Kathryn T. Stolee,Sebastian G. Elbaum;Toward semantic search via SMT solver.;http://doi.acm.org/10.1145/2393596.2393625;25;1;NIER papers;
2012;Ana Milanova,Wei Huang;Inference and checking of context-sensitive pluggable types.;http://doi.acm.org/10.1145/2393596.2393626;26;1;NIER papers;
2012;Mahinthan Chandramohan,Hee Beng Kuan Tan,Lwin Khin Shar;Scalable malware clustering through coarse-grained behavior modeling.;http://doi.acm.org/10.1145/2393596.2393627;27;1;NIER papers;
2012;Kaiping Liu,Hee Beng Kuan Tan,Mahinthan Chandramohan;Has this bug been reported?;http://doi.acm.org/10.1145/2393596.2393628;28;1;NIER papers;
2012;Nicholas DiGiuseppe,James A. Jones;Concept-based failure clustering.;http://doi.acm.org/10.1145/2393596.2393629;29;1;NIER papers;
2012;Matthias Book,Simon Grapenthin,Volker Gruhn;Seeing the forest and the trees: focusing team interaction on value and effort drivers.;http://doi.acm.org/10.1145/2393596.2393630;30;1;NIER papers;
2012;Han Xu,Oliver Creighton,Naoufel Boulila,Bernd Brugge;From pixels to bytes: evolutionary scenario based design with video.;http://doi.acm.org/10.1145/2393596.2393631;31;1;NIER papers;
2012;Dionysis Athanasopoulos,Apostolos V. Zarras,Panos Vassiliadis;Service selection for happy users: making user-intuitive quality abstractions.;http://doi.acm.org/10.1145/2393596.2393632;32;1;NIER papers;
2012;Leandro Sales Pinto,Saurabh Sinha,Alessandro Orso;Understanding myths and realities of test-suite evolution.;http://doi.acm.org/10.1145/2393596.2393634;33;1;Test suites;
2012;Razieh Nokhbeh Zaeem,Sarfraz Khurshid;Test input generation using dynamic programming.;http://doi.acm.org/10.1145/2393596.2393635;34;1;Test suites;
2012;Sangmin Park,B. M. Mainul Hossain,Ishtiaque Hussain,Christoph Csallner,Mark Grechanik,Kunal Taneja,Chen Fu,Qing Xie;CarFast: achieving higher statement coverage faster.;http://doi.acm.org/10.1145/2393596.2393636;35;1;Test suites;
2012;Emina Torlak;Scalable test data generation from multidimensional models.;http://doi.acm.org/10.1145/2393596.2393637;36;1;Test suites;
2012;Asadullah Shaikh,Uffe Kock Wiil;UMLtoCSP (UOST): a tool for efficient verification of UML/OCL class diagrams through model slicing.;http://doi.acm.org/10.1145/2393596.2393639;37;1;Research demos session 4;
2012;Wei Huang,Ana Milanova;ReImInfer: method purity inference for Java.;http://doi.acm.org/10.1145/2393596.2393640;38;1;Research demos session 4;
2012;Nikolai Tillmann,Michal Moskal,Jonathan de Halleux,Manuel Fahndrich,Sebastian Burckhardt;TouchDevelop: app development on mobile devices.;http://doi.acm.org/10.1145/2393596.2393641;39;1;Research demos session 4;
2012;Lingming Zhang,Miryung Kim,Sarfraz Khurshid;FaultTracer: a change impact and regression fault analysis tool for evolving Java programs.;http://doi.acm.org/10.1145/2393596.2393642;40;1;Research demos session 4;
2012;Suresh Thummalapenta,Nimit Singhania,Pranavadatta Devaki,Saurabh Sinha,Satish Chandra 0001,Achin K. Das,Srinivas Mangipudi;Efficiently scripting change-resilient tests.;http://doi.acm.org/10.1145/2393596.2393643;41;1;Research demos session 4;
2012;Emerson R. Murphy-Hill,Rahul Jiresal,Gail C. Murphy;Improving software developers' fluency by recommending development environment commands.;http://doi.acm.org/10.1145/2393596.2393645;42;1;Decision support;
2012;Francisco Servant,James A. Jones;History slicing: assisting code-evolution tasks.;http://doi.acm.org/10.1145/2393596.2393646;43;1;Decision support;
2012;Gerardo Canfora,Massimiliano Di Penta,Rocco Oliveto,Sebastiano Panichella;Who is going to mentor newcomers in open source projects?;http://doi.acm.org/10.1145/2393596.2393647;44;1;Decision support;
2012;Christian Bird,Thomas Zimmermann 0001;Assessing the value of branches with what-if analysis.;http://doi.acm.org/10.1145/2393596.2393648;45;1;Decision support;
2012;Malay K. Ganai,Dongyoon Lee,Aarti Gupta;DTAM: dynamic taint analysis of multi-threaded programs for relevancy.;http://doi.acm.org/10.1145/2393596.2393650;46;1;Concurrency;
2012;Azadeh Farzan,P. Madhusudan,Niloofar Razavi,Francesco Sorrentino 0002;Predicting null-pointer dereferences in concurrent programs.;http://doi.acm.org/10.1145/2393596.2393651;47;1;Concurrency;
2012;Michael Emmi,Akash Lal,Shaz Qadeer;Asynchronous programs with prioritized task-buffers.;http://doi.acm.org/10.1145/2393596.2393652;48;1;Concurrency;
2012;Robert J. Walker,Shreya Rawal,Jonathan Sillito;Do crosscutting concerns cause modularity problems?;http://doi.acm.org/10.1145/2393596.2393654;49;1;Modularity;
2012;Miryung Kim,Thomas Zimmermann 0001,Nachiappan Nagappan;A field study of refactoring challenges and benefits.;http://doi.acm.org/10.1145/2393596.2393655;50;1;Modularity;
2012;Yida Tao,Yingnong Dang,Tao Xie,Dongmei Zhang,Sunghun Kim 0001;How do software engineers understand code changes?: an exploratory study in industry.;http://doi.acm.org/10.1145/2393596.2393656;51;1;Modularity;
2012;Mehdi Mirakhorli,Patrick Mader,Jane Cleland-Huang;Variability points and design pattern usage in architectural tactics.;http://doi.acm.org/10.1145/2393596.2393657;52;1;Modularity;
2012;Baishakhi Ray,Miryung Kim;A case study of cross-system porting in forked projects.;http://doi.acm.org/10.1145/2393596.2393659;53;1;Empirical studies;
2012;Semih Okur,Danny Dig;How do developers use parallel libraries?;http://doi.acm.org/10.1145/2393596.2393660;54;1;Empirical studies;
2012;Bradley Cossette,Robert J. Walker;Seeking the ground truth: a retroactive study on the evolution and migration of software libraries.;http://doi.acm.org/10.1145/2393596.2393661;55;1;Empirical studies;
2012;Romain Robbes,Mircea Lungu,David Rothlisberger;How do developers react to API deprecation?: the case of a smalltalk ecosystem.;http://doi.acm.org/10.1145/2393596.2393662;56;1;Empirical studies;
2012;Dirk Beyer 0001,Thomas A. Henzinger,M. Erkan Keremoglu,Philipp Wendler;Conditional model checking: a technique to pass information between verifiers.;http://doi.acm.org/10.1145/2393596.2393664;57;1;Verification;
2012;Willem Visser,Jaco Geldenhuys,Matthew B. Dwyer;Green: reducing, reusing and recycling constraints in program analysis.;http://doi.acm.org/10.1145/2393596.2393665;58;1;Verification;
2012;Saswat Anand,Mayur Naik,Mary Jean Harrold,Hongseok Yang;Automated concolic testing of smartphone apps.;http://doi.acm.org/10.1145/2393596.2393666;59;1;Verification;
2012;Joseph P. Near,Daniel B. Jackson;Rubicon: bounded verification of web applications.;http://doi.acm.org/10.1145/2393596.2393667;60;1;Verification;
2012;Foyzur Rahman,Daryl Posnett,Premkumar T. Devanbu;"Recalling the ""imprecision"" of cross-project defect prediction.";http://doi.acm.org/10.1145/2393596.2393669;61;1;Bug prediction;
2012;Emad Shihab,Ahmed E. Hassan,Bram Adams,Zhen Ming Jiang;An industrial study on the risk of software changes.;http://doi.acm.org/10.1145/2393596.2393670;62;1;Bug prediction;
2012;Hoan Anh Nguyen,Tung Thanh Nguyen,Hoan Anh Nguyen,Tien N. Nguyen;Multi-layered approach for recovering links between bug reports and fixes.;http://doi.acm.org/10.1145/2393596.2393671;63;1;Bug prediction;
2011;Christian Bird,Nachiappan Nagappan,Brendan Murphy,Harald C. Gall,Premkumar T. Devanbu;Don't touch my code!: examining the effects of ownership on software quality.;http://doi.acm.org/10.1145/2025113.2025119;4-14;11;Bugs and changes;
2011;Rongxin Wu,Hongyu Zhang,Sunghun Kim 0001,Shing-Chi Cheung;ReLink: recovering links between bugs and changes.;http://doi.acm.org/10.1145/2025113.2025120;15-25;11;Bugs and changes;
2011;Zuoning Yin,Ding Yuan,Yuanyuan Zhou,Shankar Pasupathy,Lakshmi N. Bairavasundaram;How do fixes become bugs?;http://doi.acm.org/10.1145/2025113.2025121;26-36;11;Bugs and changes;
2011;Shoham Ben-David,Marsha Chechik,Arie Gurfinkel,Sebastian Uchitel;CSSL: a logic for specifying conditional scenarios.;http://doi.acm.org/10.1145/2025113.2025123;37-47;11;Models and requirements;
2011;Francis Palma,Angelo Susi,Paolo Tonella;Using an SMT solver for interactive requirements prioritization.;http://doi.acm.org/10.1145/2025113.2025124;48-58;11;Models and requirements;
2011;Simon Holm Jensen,Magnus Madsen,Anders Moller;Modeling the HTML DOM and browser API in static analysis of JavaScript web applications.;http://doi.acm.org/10.1145/2025113.2025125;59-69;11;Models and requirements;
2011;Corey Jergensen,Anita Sarma,Patrick Wagstrom;The onion patch: migration in open source ecosystems.;http://doi.acm.org/10.1145/2025113.2025127;70-80;11;Empirical studies;
2011;Andrew Meneely,Pete Rotella,Laurie A. Williams;Does adding manpower also affect quality?: an empirical, longitudinal analysis.;http://doi.acm.org/10.1145/2025113.2025128;81-90;10;Empirical studies;
2011;Christoph Treude,Margaret-Anne D. Storey;Effective communication of software development knowledge through community portals.;http://doi.acm.org/10.1145/2025113.2025129;91-101;11;Empirical studies;
2011;Swarat Chaudhuri,Sumit Gulwani,Roberto Lublinerman,Sara NavidPour;Proving programs robust.;http://doi.acm.org/10.1145/2025113.2025131;102-112;11;Analysis I;
2011;Evan Driscoll,Amanda Burton,Thomas W. Reps;Checking conformance of a producer and a consumer.;http://doi.acm.org/10.1145/2025113.2025132;113-123;11;Analysis I;
2011;Stelios Sidiroglou-Douskos,Sasa Misailovic,Henry Hoffmann,Martin C. Rinard;Managing performance vs. accuracy trade-offs with loop perforation.;http://doi.acm.org/10.1145/2025113.2025133;124-134;11;Analysis I;
2011;Alvin Cheung,Armando Solar-Lezama,Samuel Madden;Partial replay of long-running applications.;http://doi.acm.org/10.1145/2025113.2025135;135-145;11;Debugging;
2011;George K. Baah,Andy Podgurski,Mary Jean Harrold;Mitigating the confounding effects of program dependences for effective fault localization.;http://doi.acm.org/10.1145/2025113.2025136;146-156;11;Debugging;
2011;Diptikalyan Saha,Mangala Gowri Nanda,Pankaj Dhoolia,V. Krishna Nandivada,Vibha Sinha,Satish Chandra 0001;Fault localization for data-centric programs.;http://doi.acm.org/10.1145/2025113.2025137;157-167;11;Debugging;
2011;Yuriy Brun,Reid Holmes,Michael D. Ernst,David Notkin;Proactive detection of collaboration conflicts.;http://doi.acm.org/10.1145/2025113.2025139;168-178;11;Collaboration;
2011;Shahar Maoz,Jan Oliver Ringert,Bernhard Rumpe;ADDiff: semantic differencing for activity diagrams.;http://doi.acm.org/10.1145/2025113.2025140;179-189;11;Collaboration;
2011;Sven Apel,Jorg Liebig,Benjamin Brandl,Christian Lengauer,Christian Kastner;Semistructured merge: rethinking merge in revision control systems.;http://doi.acm.org/10.1145/2025113.2025141;190-200;11;Collaboration;
2011;Kunal Taneja,Mark Grechanik,Rayid Ghani,Tao Xie;Testing software in age of data privacy: a balancing act.;http://doi.acm.org/10.1145/2025113.2025143;201-211;11;Testing;
2011;Mark Harman,Yue Jia,William B. Langdon;Strong higher order mutation-based test data generation.;http://doi.acm.org/10.1145/2025113.2025144;212-222;11;Testing;
2011;Vilas Jagannath,Milos Gligoric,Dongyun Jin,Qingzhou Luo,Grigore Rosu,Darko Marinov;Improved multithreaded unit testing.;http://doi.acm.org/10.1145/2025113.2025145;223-233;11;Testing;
2011;Naeem Esfahani,Ehsan Kouroshfar,Sam Malek;Taming uncertainty in self-adaptive software.;http://doi.acm.org/10.1145/2025113.2025147;234-244;11;Configurations;
2011;Xiaoxing Ma,Luciano Baresi,Carlo Ghezzi,Valerio Panzica La Manna,Jian Lu;Version-consistent dynamic reconfiguration of component-based distributed systems.;http://doi.acm.org/10.1145/2025113.2025148;245-255;11;Configurations;
2011;Roberto Di Cosmo,Jerome Vouillon;On software component co-installability.;http://doi.acm.org/10.1145/2025113.2025149;256-266;11;Configurations;
2011;Ivan Beschastnikh,Yuriy Brun,Sigurd Schneider,Michael Sloan,Michael D. Ernst;Leveraging existing instrumentation to automatically infer invariant-constrained models.;http://doi.acm.org/10.1145/2025113.2025151;267-277;11;Analysis II;
2011;Dawei Qi,Hoang D. T. Nguyen,Abhik Roychoudhury;Path exploration based on symbolic output.;http://doi.acm.org/10.1145/2025113.2025152;278-288;11;Analysis II;
2011;Rishabh Singh,Armando Solar-Lezama;Synthesizing data structure manipulations from storyboards.;http://doi.acm.org/10.1145/2025113.2025153;289-299;11;Analysis II;
2011;Emad Shihab,Audris Mockus,Yasutaka Kamei,Bram Adams,Ahmed E. Hassan;High-impact defects: a study of breakage and surprise defects.;http://doi.acm.org/10.1145/2025113.2025155;300-310;11;Defects;
2011;Taek Lee,Jaechang Nam,DongGyun Han,Sunghun Kim 0001,Hoh Peter In;Micro interaction metrics for defect prediction.;http://doi.acm.org/10.1145/2025113.2025156;311-321;11;Defects;
2011;Foyzur Rahman,Daryl Posnett,Abram Hindle,Earl T. Barr,Premkumar T. Devanbu;BugCache for inspections: hit or miss?;http://doi.acm.org/10.1145/2025113.2025157;322-331;10;Defects;
2011;Brian Hackett,Alexander Aiken;Inferring data polymorphism in systems code.;http://doi.acm.org/10.1145/2025113.2025159;332-342;11;Analysis III;
2011;Lian Li,Cristina Garcia Cifuentes,Nathan Keynes;Boosting the performance of flow-sensitive points-to analysis using value flow.;http://doi.acm.org/10.1145/2025113.2025160;343-353;11;Analysis III;
2011;Fabian Beck,Stephan Diehl 0001;On the congruence of modularity and code coupling.;http://doi.acm.org/10.1145/2025113.2025162;354-364;11;Mining;
2011;Ahmed Tamrawi,Tung Thanh Nguyen,Jafar M. Al-Kofahi,Tien N. Nguyen;Fuzzy set and cache-based approach for bug triaging.;http://doi.acm.org/10.1145/2025113.2025163;365-375;11;Mining;
2011;Nicolas Bettenburg;Mining development repositories to study the impact of collaboration on software systems.;http://doi.acm.org/10.1145/2025113.2025165;376-379;4;Doctoral symposium - development documentation;
2011;Christian Prause;Reputation-based self-management of software process artifact quality in consortium research projects.;http://doi.acm.org/10.1145/2025113.2025166;380-383;4;Doctoral symposium - development documentation;
2011;Zoya Durdik;An architecture-centric approach for goal-driven requirements elicitation.;http://doi.acm.org/10.1145/2025113.2025167;384-387;4;Doctoral symposium - development documentation;
2011;Matthias Schur;Experimental specification mining for enterprise applications.;http://doi.acm.org/10.1145/2025113.2025169;388-391;4;Doctoral symposium - specification mining;
2011;Mathew Hall;Search based hierarchy generation for reverse engineered state machines.;http://doi.acm.org/10.1145/2025113.2025170;392-395;4;Doctoral symposium - specification mining;
2011;Mehdi MirzaAghaei;Automatic test suite evolution.;http://doi.acm.org/10.1145/2025113.2025172;396-399;4;Doctoral symposium - testing;
2011;Mauro Baluda;Automatic structural testing with abstraction refinement and coarsening.;http://doi.acm.org/10.1145/2025113.2025173;400-403;4;Doctoral symposium - testing;
2011;Jeremias Rossler;Understanding failures through facts.;http://doi.acm.org/10.1145/2025113.2025174;404-407;4;Doctoral symposium - testing;
2011;Antonio Filieri;QoS verification and model tuning @ runtime.;http://doi.acm.org/10.1145/2025113.2025176;408-411;4;Doctoral symposium - adaptation;
2011;Marco Mori;A software lifecycle process for context-aware adaptive systems.;http://doi.acm.org/10.1145/2025113.2025177;412-415;4;Doctoral symposium - adaptation;
2011;Gordon Fraser,Andrea Arcuri;EvoSuite: automatic test suite generation for object-oriented software.;http://doi.acm.org/10.1145/2025113.2025179;416-419;4;Tool demonstration - session 1;
2011;Yunho Kim,Moonzoo Kim;SCORE: a scalable concolic testing tool for reliable embedded software.;http://doi.acm.org/10.1145/2025113.2025180;420-423;4;Tool demonstration - session 1;
2011;Milos Gligoric,Sandro Badame,Ralph E. Johnson;SMutant: a tool for type-sensitive mutation testing in a dynamic language.;http://doi.acm.org/10.1145/2025113.2025181;424-427;4;Tool demonstration - session 1;
2011;Daiva Naudziuniene,Matko Botincan,Dino Distefano,Mike Dodds,Radu Grigore,Matthew J. Parkinson;jStar-eclipse: an IDE for automated verification of Java programs.;http://doi.acm.org/10.1145/2025113.2025182;428-431;4;Tool demonstration - session 1;
2011;Cristina Garcia Cifuentes,Nathan Keynes,Lian Li,Nathan Hawes,Manuel Valdiviezo,Andrew Browne,Jacob Zimmermann,Andrew Craik,Douglas Teoh,Christian Hoermann;Static deep error checking in large system applications using parfait.;http://doi.acm.org/10.1145/2025113.2025183;432-435;4;Tool demonstration - session 1;
2011;Salman Mirghasemi,John J. Barton,Claude Petitpierre;Querypoint: moving backwards on wrong values in the buggy execution.;http://doi.acm.org/10.1145/2025113.2025184;436-439;4;Tool demonstration - session 1;
2011;Na Meng,Miryung Kim,Kathryn S. McKinley;Sydit: creating and applying a program transformation from an example.;http://doi.acm.org/10.1145/2025113.2025185;440-443;4;Tool demonstration - session 1;
2011;Yuriy Brun,Reid Holmes,Michael D. Ernst,David Notkin;Crystal: precise and unobtrusive conflict warnings.;http://doi.acm.org/10.1145/2025113.2025187;444-447;4;Tool demonstration - session 2;
2011;Ivan Beschastnikh,Jenny Abrahamson,Yuriy Brun,Michael D. Ernst;Synoptic: studying logged behavior with inferred models.;http://doi.acm.org/10.1145/2025113.2025188;448-451;4;Tool demonstration - session 2;
2011;Andreas Demuth,Roberto Erick Lopez-Herrejon,Alexander Egyed;Cross-layer modeler: a tool for flexible multilevel modeling with consistency checking.;http://doi.acm.org/10.1145/2025113.2025189;452-455;4;Tool demonstration - session 2;
2011;Lionel Montrieux,Michel Wermelinger,Yijun Yu;Tool support for UML-based specification and verification of role-based access control properties.;http://doi.acm.org/10.1145/2025113.2025190;456-459;4;Tool demonstration - session 2;
2011;Davide Falessi,Shiva Nejati,Mehrdad Sabetzadeh,Lionel C. Briand,Antonio Messina;SafeSlice: a model slicing and design safety inspection tool for SysML.;http://doi.acm.org/10.1145/2025113.2025191;460-463;4;Tool demonstration - session 2;
2011;Daniela Costache,Georg Kalus,Marco Kuhrmann;Design and validation of feature-based process model tailoring: a sample implementation of PDE.;http://doi.acm.org/10.1145/2025113.2025192;464-467;4;Tool demonstration - session 2;
2011;Markus Lumpe,Indika Meedeniya,Lars Grunske;PSPWizard: machine-assisted definition of temporal logical properties with specification patterns.;http://doi.acm.org/10.1145/2025113.2025193;468-471;4;Tool demonstration - session 2;
2011;Ohad Barzilay,Orit Hazzan,Amiram Yehudai;Using social media to study the diversity of example usage among professional developers.;http://doi.acm.org/10.1145/2025113.2025195;472-475;4;New ideas I;
2011;Raian Ali,Carlos Solis,Mazeiar Salehie,Inah Omoronyia,Bashar Nuseibeh,Walid Maalej;Social sensing: when users become monitors.;http://doi.acm.org/10.1145/2025113.2025196;476-479;4;New ideas I;
2011;Wujie Zheng,Qirun Zhang,Michael R. Lyu;Cross-library API recommendation using web search engines.;http://doi.acm.org/10.1145/2025113.2025197;480-483;4;New ideas I;
2011;Paul C. Clements,Maria Jose Escalona Cuaresma,Paola Inverardi,Ivano Malavolta,Eda Marchetti;Exploiting software architecture to support requirements satisfaction testing.;http://doi.acm.org/10.1145/2025113.2025198;484-487;4;New ideas I;
2011;Marco Autili,Vittorio Cortellessa,Davide Di Ruscio,Paola Inverardi,Patrizio Pelliccione,Massimo Tivoli;EAGLE: engineering software in the ubiquitous globe by leveraging uncErtainty.;http://doi.acm.org/10.1145/2025113.2025199;488-491;4;New ideas I;
2011;Eric Bodden;Stateful breakpoints: a practical approach to defining parameterized runtime monitors.;http://doi.acm.org/10.1145/2025113.2025201;492-495;4;New ideas II;
2011;Kivanc Muslu,Bilge Soran,Jochen Wuttke;Finding bugs by isolating unit tests.;http://doi.acm.org/10.1145/2025113.2025202;496-499;4;New ideas II;
2011;Bruno Barbieri Pontes Cafeo,Joost Noppen,Fabiano Cutigi Ferrari,Ruzanna Chitchyan,Awais Rashid;Inferring test results for dynamic software product lines.;http://doi.acm.org/10.1145/2025113.2025203;500-503;4;New ideas II;
2011;Christoph Csallner,Leonidas Fegaras,Chengkai Li;New ideas track: testing mapreduce-style programs.;http://doi.acm.org/10.1145/2025113.2025204;504-507;4;New ideas II;
2011;Milton Inostroza,Eric Tanter,Eric Bodden;Join point interfaces for modular reasoning in aspect-oriented programs.;http://doi.acm.org/10.1145/2025113.2025205;508-511;4;New ideas II;
2011;Arun Ramamurthi,Subhajit Roy,Y. N. Srikant;Probabilistic dataflow analysis using path profiles on structure graphs.;http://doi.acm.org/10.1145/2025113.2025206;512-515;4;New ideas II;
2011;Javier Camara,Rogerio de Lemos,Carlo Ghezzi,Antonia Lopes;Workshop on assurances for self-adaptive systems (ASAS 2011).;http://doi.acm.org/10.1145/2025113.2025208;516-517;2;Workshop summaries;
2011;Romain Robbes,Anthony Cleve;IWPSE-EVOL 2011: 12th international workshop on principles on software evolution and 7th ERCIM workshop on software evolution.;http://doi.acm.org/10.1145/2025113.2025209;518-519;2;Workshop summaries;
2011;Jeff Foster,Lori L. Pollock;PASTE'11: Proceedings of the 10th ACM sigplan-sigsoft workshop on program analysis for software tools and engineering.;http://doi.acm.org/10.1145/2025113.2025210;520-521;2;Workshop summaries;
2011;Walid Maalej,Raian Ali;The 4th international workshop on social software engineering (SSE'11).;http://doi.acm.org/10.1145/2025113.2025211;522-523;2;Workshop summaries;
2011;Stefan Wagner 0001,Sunita Chulani,Bernard Wong;8th international workshop on software quality (WoSQ).;http://doi.acm.org/10.1145/2025113.2025212;524-525;2;Workshop summaries;
2010;Ahmed M. Elkhodary,Naeem Esfahani,Sam Malek;FUSION: a framework for engineering self-tuning self-adaptive software systems.;http://doi.acm.org/10.1145/1882291.1882296;7-16;10;Distributed systems;
2010;Charles Edwin Killian,Karthik Nagaraj,Salman Pervez,Ryan Braud,James W. Anderson,Ranjit Jhala;Finding latent performance bugs in systems implementations.;http://doi.acm.org/10.1145/1882291.1882297;17-26;10;Distributed systems;
2010;Sylvain Halle,Tevfik Bultan;Realizability analysis for message-based interactions using shared-state projections.;http://doi.acm.org/10.1145/1882291.1882298;27-36;10;Distributed systems;
2010;Francesco Sorrentino 0002,Azadeh Farzan,P. Madhusudan;PENELOPE: weaving threads to expose atomicity violations.;http://doi.acm.org/10.1145/1882291.1882300;37-46;10;Concurrency;
2010;Nishant Sinha,Chao Wang 0001;Staged concurrent program analysis.;http://doi.acm.org/10.1145/1882291.1882301;47-56;10;Concurrency;
2010;Nicholas Jalbert,Koushik Sen;A trace simplification technique for effective debugging of concurrent programs.;http://doi.acm.org/10.1145/1882291.1882302;57-66;10;Concurrency;
2010;Cemal Yilmaz,Adam A. Porter;Combining hardware and software instrumentation to classify program executions.;http://doi.acm.org/10.1145/1882291.1882304;67-76;10;Miscellaneous;
2010;Nicolas D'Ippolito,Victor A. Braberman,Nir Piterman,Sebastian Uchitel;Synthesis of live behaviour models.;http://doi.acm.org/10.1145/1882291.1882305;77-86;10;Miscellaneous;
2010;Xiaoying Wang,Lu Zhang,Tao Xie,Hong Mei,Jiasu Sun;Locating need-to-translate constant strings in web applications.;http://doi.acm.org/10.1145/1882291.1882306;87-96;10;Miscellaneous;
2010;Adrian Bachmann,Christian Bird,Foyzur Rahman,Premkumar T. Devanbu,Abraham Bernstein;The missing links: bugs and bug-fix commits.;http://doi.acm.org/10.1145/1882291.1882308;97-106;10;Empirical studies of systems;
2010;Narayan Ramasubbu,Rajesh Krishna Balan;Evolution of a bluetooth test application product line: a case study.;http://doi.acm.org/10.1145/1882291.1882309;107-116;10;Empirical studies of systems;
2010;Audris Mockus;Organizational volatility and its effects on software defects.;http://doi.acm.org/10.1145/1882291.1882311;117-126;10;Empirical studies of people;
2010;Barthelemy Dagenais,Martin P. Robillard;Creating and evolving developer documentation: understanding the decisions of open source contributors.;http://doi.acm.org/10.1145/1882291.1882312;127-136;10;Empirical studies of people;
2010;Minghui Zhou,Audris Mockus;Developer fluency: achieving true mastery in software projects.;http://doi.acm.org/10.1145/1882291.1882313;137-146;10;Empirical studies of people;
2010;Mark Gabel,Zhendong Su;A study of the uniqueness of source code.;http://doi.acm.org/10.1145/1882291.1882315;147-156;10;Code similarities;
2010;Sushil Krishna Bajracharya,Joel Ossher,Cristina Videira Lopes;Leveraging usage similarity for effective retrieval of examples in code repositories.;http://doi.acm.org/10.1145/1882291.1882316;157-166;10;Code similarities;
2010;Mu-Woong Lee,Jong-Won Roh,Seung-won Hwang,Sunghun Kim 0001;Instant code clone search.;http://doi.acm.org/10.1145/1882291.1882317;167-176;10;Code similarities;
2010;Ansuman Banerjee,Abhik Roychoudhury,Johannes A. Harlie,Zhenkai Liang;Golden implementation driven software debugging.;http://doi.acm.org/10.1145/1882291.1882319;177-186;10;Verification;
2010;Guodong Li,Ganesh Gopalakrishnan;Scalable SMT-based verification of GPU kernel functions.;http://doi.acm.org/10.1145/1882291.1882320;187-196;10;Verification;
2010;Ming Wu,Fan Long,Xi Wang,Zhilei Xu,Haoxiang Lin,Xuezheng Liu,Zhenyu Guo,Huayang Guo,Lidong Zhou,Zheng Zhang;Language-based replay via data flow cut.;http://doi.acm.org/10.1145/1882291.1882322;197-206;10;Replay;
2010;Jeff Huang 0001,Peng Liu 0010,Charles Zhang;LEAP: lightweight deterministic multi-processor replay of concurrent java programs.;http://doi.acm.org/10.1145/1882291.1882323;207-216;10;Replay;
2010;William N. Sumner,Xiangyun Zhang;Memory indexing: canonicalizing addresses across executions.;http://doi.acm.org/10.1145/1882291.1882324;217-226;10;Replay;
2010;Ilenia Epifani,Carlo Ghezzi,Giordano Tamburrelli;Change-point detection for black-box services.;http://doi.acm.org/10.1145/1882291.1882326;227-236;10;Web services;
2010;Antonio Carzaniga,Alessandra Gorla,Nicolo Perino,Mauro Pezze;Automatic workarounds for web applications.;http://doi.acm.org/10.1145/1882291.1882327;237-246;10;Web services;
2010;Jocelyn Simmonds,Shoham Ben-David,Marsha Chechik;Guided recovery for web service applications.;http://doi.acm.org/10.1145/1882291.1882328;247-256;10;Web services;
2010;Zhihong Xu,Yunho Kim,Moonzoo Kim,Gregg Rothermel,Myra B. Cohen;Directed test suite augmentation: techniques and tradeoffs.;http://doi.acm.org/10.1145/1882291.1882330;257-266;10;Testing;
2010;Hadi Hemmati,Lionel C. Briand,Andrea Arcuri,Shaukat Ali Khan;An enhanced test case selection approach for model-based testing: an industrial case study.;http://doi.acm.org/10.1145/1882291.1882331;267-276;10;Testing;
2010;Aditya Kanade,Rajeev Alur,Sriram K. Rajamani,Ganesan Ramalingam;Representation dependence testing using program inversion.;http://doi.acm.org/10.1145/1882291.1882332;277-286;10;Testing;
2010;Shay Litvak,Nurit Dor,Rastislav Bodik,Noam Rinetzky,Shmuel Sagiv;Field-sensitive program dependence analysis.;http://doi.acm.org/10.1145/1882291.1882334;287-296;10;Dependencies;
2010;Bradley Cossette,Robert J. Walker;DSketch: lightweight, adaptable dependency analysis.;http://doi.acm.org/10.1145/1882291.1882335;297-306;10;Dependencies;
2010;Wei Le,Mary Lou Soffa;Path-based fault correlations.;http://doi.acm.org/10.1145/1882291.1882336;307-316;10;Dependencies;
2010;Lian Li,Cristina Garcia Cifuentes,Nathan Keynes;Practical and effective symbolic analysis for buffer overflow detection.;http://doi.acm.org/10.1145/1882291.1882338;317-326;10;Analysis;
2010;Pallavi Joshi,Mayur Naik,Koushik Sen,David Gay;An effective dynamic analysis for detecting generalized deadlocks.;http://doi.acm.org/10.1145/1882291.1882339;327-336;10;Analysis;
2010;Eya Ben Charrada;Updating requirements from tests during maintenance and evolution.;http://doi.acm.org/10.1145/1882291.1882341;337-340;4;Doctoral symposium;
2010;Ivo Krka;From requirements to partial behavior models: an iterative approach to incremental specification refinement.;http://doi.acm.org/10.1145/1882291.1882342;341-344;4;Doctoral symposium;
2010;Ahmed M. Elkhodary;A learning-based approach for engineering feature-oriented self-adaptive software systems.;http://doi.acm.org/10.1145/1882291.1882343;345-348;4;Doctoral symposium;
2010;Hesham Shokry;Towards behavior elaboration and synthesis using modes.;http://doi.acm.org/10.1145/1882291.1882344;349-352;4;Doctoral symposium;
2010;Omar Bahy Badreddin,Timothy C. Lethbridge;A study of applying a research prototype tool in industrial practice.;http://doi.acm.org/10.1145/1882291.1882345;353-356;4;Doctoral symposium;
2010;Konstantin Rubinov;Generating integration test cases automatically.;http://doi.acm.org/10.1145/1882291.1882346;357-360;4;Doctoral symposium;
2010;Wei Jin,Alessandro Orso,Tao Xie;BERT: a tool for behavioral regression testing.;http://doi.acm.org/10.1145/1882291.1882348;361-362;2;Formal demonstrations;
2010;Steven Lauterburg,Rajesh K. Karmani,Darko Marinov,Gul A. Agha;Basset: a tool for systematic testing of actor programs.;http://doi.acm.org/10.1145/1882291.1882349;363-364;2;Formal demonstrations;
2010;Yang Liu 0003,Jun Sun,Jin Song Dong;Analyzing hierarchical complex real-time systems.;http://doi.acm.org/10.1145/1882291.1882350;365-366;2;Formal demonstrations;
2010;Del Myers,Margaret-Anne D. Storey;Using dynamic analysis to create trace-focused user interfaces for IDEs.;http://doi.acm.org/10.1145/1882291.1882351;367-368;2;Formal demonstrations;
2010;Christian Bird,Adrian Bachmann,Foyzur Rahman,Abraham Bernstein;LINKSTER: enabling efficient manual inspection and annotation of mined data.;http://doi.acm.org/10.1145/1882291.1882352;369-370;2;Formal demonstrations;
2010;Miryung Kim,Matthew Gee,Alex Loh,Napol Rachatasumrit;Ref-Finder: a refactoring reconstruction tool based on logic query templates.;http://doi.acm.org/10.1145/1882291.1882353;371-372;2;Formal demonstrations;
2010;Etienne Kneuss,Philippe Suter,Viktor Kuncak;Phantm: PHP analyzer for type mismatch.;http://doi.acm.org/10.1145/1882291.1882355;373-374;2;Informal demonstrations;
2010;Michael D. Ernst,Mahmood Ali;Building and using pluggable type systems.;http://doi.acm.org/10.1145/1882291.1882356;375-376;2;Informal demonstrations;
2010;Julien DeAntoni,Frederic Mallet,Frederic Thomas,Gonzague Reydet,Jean-Philippe Babau,Chokri Mraidha,Ludovic Gauthier,Laurent Rioux,Nicolas Sordon;RT-simex: retro-analysis of execution traces.;http://doi.acm.org/10.1145/1882291.1882357;377-378;2;Informal demonstrations;
2010;Marc Fisher II,Luke Marrs,Barbara G. Ryder;HI-C: diagnosing object churn in framework-based applications.;http://doi.acm.org/10.1145/1882291.1882358;379-380;2;Informal demonstrations;
2010;Andrew Begel,Yit Phang Khoo,Thomas Zimmermann 0001;WhoselsThat: finding software engineers with codebook.;http://doi.acm.org/10.1145/1882291.1882359;381-382;2;Informal demonstrations;
2010;Kristina Winbladh,Hadar Ziv,Debra J. Richardson;iMuse: interactive model-based use-case and storytelling environment.;http://doi.acm.org/10.1145/1882291.1882360;383-384;2;Informal demonstrations;
2010;Jeff Huang 0001,Peng Liu 0010,Charles Zhang;LEAP: lightweight deterministic multi-processor replay of concurrent java programs.;http://doi.acm.org/10.1145/1882291.1882361;385-386;2;Informal demonstrations;
2009;Jacob Burnim,Koushik Sen;Asserting and checking determinism for multithreaded programs.;http://doi.acm.org/10.1145/1595696.1595700;3-12;10;Specifications and verification 1;
2009;Vineet Kahlon,Nishant Sinha,Erik Kruus,Yun Zhang;Static data race detection for concurrent programs with asynchronous calls.;http://doi.acm.org/10.1145/1595696.1595701;13-22;10;Specifications and verification 1;
2009;Chao Wang 0001,Swarat Chaudhuri,Aarti Gupta,Yu Yang;Symbolic pruning of concurrent program executions.;http://doi.acm.org/10.1145/1595696.1595702;23-32;10;Specifications and verification 1;
2009;Dawei Qi,Abhik Roychoudhury,Zhenkai Liang,Kapil Vaswani;Darwin: an approach for debugging evolving programs.;http://doi.acm.org/10.1145/1595696.1595704;33-42;10;Analysis and testing 1;
2009;Zhenyu Zhang,Wing Kwong Chan,T. H. Tse,Bo Jiang,Xinming Wang;Capturing propagation of infected program states.;http://doi.acm.org/10.1145/1595696.1595705;43-52;10;Analysis and testing 1;
2009;Elena Sherman,Matthew B. Dwyer,Sebastian G. Elbaum;Saturation-based testing of concurrent programs.;http://doi.acm.org/10.1145/1595696.1595706;53-62;10;Analysis and testing 1;
2009;Cristina Videira Lopes;The massification and webification of systems' modeling and simulation with virtual worlds.;http://doi.acm.org/10.1145/1595696.1595708;63-70;8;Challenge paper;
2009;Pradeep Varma,Rudrapatna K. Shyamasundar,Harshit J. Shah;Backward-compatible constant-time exception-protected memory.;http://doi.acm.org/10.1145/1595696.1595710;71-80;10;Dependability;
2009;Cor-Paul Bezemer,Ali Mesbah 0001,Arie van Deursen;Automated security testing of web widget interactions.;http://doi.acm.org/10.1145/1595696.1595711;81-90;10;Dependability;
2009;Thomas Zimmermann 0001,Nachiappan Nagappan,Harald C. Gall,Emanuel Giger,Brendan Murphy;Cross-project defect prediction: a large scale experiment on data vs. domain vs. process.;http://doi.acm.org/10.1145/1595696.1595713;91-100;10;Empirical software engineering;
2009;Marcelo Cataldo,Sangeeth Nambiar;On the relationship between process maturity and geographic distribution: an empirical analysis of their impact on software quality.;http://doi.acm.org/10.1145/1595696.1595714;101-110;10;Empirical software engineering;
2009;Gaeul Jeong,Sunghun Kim 0001,Thomas Zimmermann 0001;Improving bug triage with bug tossing graphs.;http://doi.acm.org/10.1145/1595696.1595715;111-120;10;Empirical software engineering;
2009;Christian Bird,Adrian Bachmann,Eirik Aune,John Duffy,Abraham Bernstein,Vladimir Filkov,Premkumar T. Devanbu;Fair and balanced?: bias in bug-fix datasets.;http://doi.acm.org/10.1145/1595696.1595716;121-130;10;Empirical software engineering;
2009;Valeria Cardellini,Emiliano Casalicchio,Vincenzo Grassi,Francesco Lo Presti,Raffaela Mirandola;Qos-driven runtime adaptation of service oriented architectures.;http://doi.acm.org/10.1145/1595696.1595718;131-140;10;Service-oriented systems;
2009;Antonia Bertolino,Paola Inverardi,Patrizio Pelliccione,Massimo Tivoli;Automatic synthesis of behavior protocols for composable web-services.;http://doi.acm.org/10.1145/1595696.1595719;141-150;10;Service-oriented systems;
2009;Lijun Mei,Wing Kwong Chan,T. H. Tse;Data flow testing of service choreography.;http://doi.acm.org/10.1145/1595696.1595720;151-160;10;Service-oriented systems;
2009;Cesare Bartolini,Antonia Bertolino,Sebastian G. Elbaum,Eda Marchetti;Whitening SOA testing.;http://doi.acm.org/10.1145/1595696.1595721;161-170;10;Service-oriented systems;
2009;Ralf-Peter Schafer;IQ routes and HD traffic: technology insights about tomtom's time-dynamic navigation concept.;http://doi.acm.org/10.1145/1595696.1595698;171-172;2;Service-oriented systems;
2009;Jan Wloka,Manu Sridharan,Frank Tip;Refactoring for reentrancy.;http://doi.acm.org/10.1145/1595696.1595723;173-182;10;Software quality & performance;
2009;Lars Grunske,Pengcheng Zhang;Monitoring probabilistic properties.;http://doi.acm.org/10.1145/1595696.1595724;183-192;10;Software quality & performance;
2009;Suresh Thummalapenta,Tao Xie,Nikolai Tillmann,Jonathan de Halleux,Wolfram Schulte;MSeqGen: object-oriented unit-test generation via mining source code.;http://doi.acm.org/10.1145/1595696.1595725;193-202;10;Software quality & performance;
2009;Fan Long,Xi Wang,Yang Cai;Api hyperlinking via structural overlap.;http://doi.acm.org/10.1145/1595696.1595727;203-212;10;Tools & environment;
2009;Marcel Bruch,Martin Monperrus,Mira Mezini;Learning from examples to improve code completion systems.;http://doi.acm.org/10.1145/1595696.1595728;213-222;10;Tools & environment;
2009;Aharon Abadi,Ran Ettinger,Yishai A. Feldman;Improving slice accuracy by compression of data and control flow paths.;http://doi.acm.org/10.1145/1595696.1595729;223-232;10;Tools & environment;
2009;Marian Petre;Insights from expert software design practice.;http://doi.acm.org/10.1145/1595696.1595731;233-242;10;Challenge paper;
2009;Benjamin Delaware,William R. Cook,Don S. Batory;Fitting the pieces together: a machine-checked model of safe composition.;http://doi.acm.org/10.1145/1595696.1595733;243-252;10;Component-based software engineering;
2009;Giovanni Denaro,Mauro Pezze,Davide Tosi;Ensuring interoperable service-oriented systems through engineered self-healing.;http://doi.acm.org/10.1145/1595696.1595734;253-262;10;Component-based software engineering;
2009;Andreas Zeller;Debugging debugging: acm sigsoft impact paper award keynote.;http://doi.acm.org/10.1145/1595696.1595736;263-264;2;ACM SIGSOFT's impact paper award;
2009;Hui Liu,Limei Yang,Zhendong Niu,Zhiyi Ma,Weizhong Shao;Facilitating software refactoring with appropriate resolution order of bad smells.;http://doi.acm.org/10.1145/1595696.1595738;265-268;4;Short papers;
2009;Markus M. Geipel,Frank Schweitzer;Software change dynamics: evidence from 35 java projects.;http://doi.acm.org/10.1145/1595696.1595739;269-272;4;Short papers;
2009;Francois Bronsard;Practical framework constraints.;http://doi.acm.org/10.1145/1595696.1595740;273-276;4;Short papers;
2009;Iman I. Yusuf,Heinz W. Schmidt,Ian D. Peake;Evaluating recovery aware components for grid reliability.;http://doi.acm.org/10.1145/1595696.1595741;277-280;4;Short papers;
2009;Paulo Henrique M. Maia,Jeffrey Kramer,Sebastian Uchitel,Nabor C. Mendonca;Towards accurate probabilistic models using state refinement.;http://doi.acm.org/10.1145/1595696.1595742;281-284;4;Short papers;
2009;Marco Bozzano,Alessandro Cimatti,Marco Roveri,Joost-Pieter Katoen,Viet Yen Nguyen,Thomas Noll;Verification and performance evaluation of aadl models.;http://doi.acm.org/10.1145/1595696.1595744;285-286;2;Tool demonstrations;
2009;Farhad Arbab,Sun Meng,Young-Joo Moon,Marta Z. Kwiatkowska,Hongyang Qu;Reo2MC: a tool chain for performance analysis of coordination models.;http://doi.acm.org/10.1145/1595696.1595745;287-288;2;Tool demonstrations;
2009;Patrick Knab,Harald C. Gall,Martin Pinzger;Smart views for analyzing problem reports: tool demo.;http://doi.acm.org/10.1145/1595696.1595746;289-290;2;Tool demonstrations;
2009;Danhua Shao,Sarfraz Khurshid,Dewayne E. Perry;SCA: a semantic conflict analyzer for parallel changes.;http://doi.acm.org/10.1145/1595696.1595747;291-292;2;Tool demonstrations;
2009;Vipindeep Vangala,Jacek Czerwonka,Phani Talluri;Test case comparison and clustering using program profiles and static execution.;http://doi.acm.org/10.1145/1595696.1595748;293-294;2;Tool demonstrations;
2009;Shay Artzi,Sunghun Kim 0001,Michael D. Ernst;ReCrashJ: a tool for capturing and reproducing program crashes in deployed applications.;http://doi.acm.org/10.1145/1595696.1595749;295-296;2;Tool demonstrations;
2009;David Schuler,Andreas Zeller;Javalanche: efficient mutation testing for Java.;http://doi.acm.org/10.1145/1595696.1595750;297-298;2;Tool demonstrations;
2009;Eduardo Magno Lages Figueiredo,Jonathan P. Whittle,Alessandro Garcia;ConcernMorph: metrics-based detection of crosscutting patterns.;http://doi.acm.org/10.1145/1595696.1595751;299-300;2;Tool demonstrations;
2009;Animesh Pathak,Mahanth K. Gowda;Srijan: a graphical toolkit for sensor network macroprogramming.;http://doi.acm.org/10.1145/1595696.1595752;301-302;2;Tool demonstrations;
2009;Richard N. Taylor;Software architecture: many faces, many places, yet a central discipline.;http://doi.acm.org/10.1145/1595696.1595754;303-304;2;Outstanding research paper award;
2009;Ivo Krka,Yuriy Brun,George Edwards,Nenad Medvidovic;Synthesizing partial component-level behavior models from system specifications.;http://doi.acm.org/10.1145/1595696.1595756;305-314;10;Specification and verification 2;
2009;Yingfei Xiong,Zhenjiang Hu,Haiyan Zhao,Hui Song,Masato Takeichi,Hong Mei;Supporting automatic model inconsistency fixing.;http://doi.acm.org/10.1145/1595696.1595757;315-324;10;Specification and verification 2;
2009;Youssef Hanna,Samik Basu,Hridesh Rajan;Behavioral automata composition for automatic topology independent verification of parameterized systems.;http://doi.acm.org/10.1145/1595696.1595758;325-334;10;Specification and verification 2;
2009;Esteban Pavese,Victor A. Braberman,Sebastian Uchitel;Probabilistic environments in the quantitative analysis of (non-probabilistic) behaviour models.;http://doi.acm.org/10.1145/1595696.1595760;335-344;10;Analysis and testing 2;
2009;David Lo,Leonardo Mariani,Mauro Pezze;Automatic steering of behavioral model inference.;http://doi.acm.org/10.1145/1595696.1595761;345-354;10;Analysis and testing 2;
2009;Jason Belt,Robby,Xianghua Deng;Sireum/Topi LDP: a lightweight semi-decision procedure for optimizing symbolic execution-based analyses.;http://doi.acm.org/10.1145/1595696.1595762;355-364;10;Analysis and testing 2;
2009;Marco Brambilla 0001,Stefano Ceri;Engineering search computing applications: vision and challenges.;http://doi.acm.org/10.1145/1595696.1595764;365-372;8;Challenge paper;
2009;B. Ashok,Joseph M. Joy,Hongkang Liang,Sriram K. Rajamani,Gopal Srinivasa,Vipindeep Vangala;DebugAdvisor: a recommender system for debugging.;http://doi.acm.org/10.1145/1595696.1595766;373-382;10;Mining software repositories;
2009;Tung Thanh Nguyen,Hoan Anh Nguyen,Nam H. Pham,Jafar M. Al-Kofahi,Tien N. Nguyen;Graph-based mining of multiple object usage patterns.;http://doi.acm.org/10.1145/1595696.1595767;383-392;10;Mining software repositories;
2008;Martin Pinzger,Nachiappan Nagappan,Brendan Murphy;Can developer-module networks predict failures?;http://doi.acm.org/10.1145/1453101.1453105;2-12;11;Social structures;
2008;Andrew Meneely,Laurie A. Williams,Will Snipes,Jason A. Osborne;Predicting failures with developer networks and social network analysis.;http://doi.acm.org/10.1145/1453101.1453106;13-23;11;Social structures;
2008;Christian Bird,David S. Pattison,Raissa M. D'Souza,Vladimir Filkov,Premkumar T. Devanbu;Latent social structure in open source projects.;http://doi.acm.org/10.1145/1453101.1453107;24-35;12;Social structures;
2008;Eric Bodden,Patrick Lam 0001,Laurie J. Hendren;Finding programming errors earlier by evaluating runtime monitors ahead-of-time.;http://doi.acm.org/10.1145/1453101.1453109;36-47;12;Program analysis;
2008;Lingxiao Jiang,Zhendong Su;Profile-guided program simplification for effective testing and analysis.;http://doi.acm.org/10.1145/1453101.1453110;48-58;11;Program analysis;
2008;Bruno Dufour,Barbara G. Ryder,Gary Sevitsky;A scalable technique for characterizing the usage of temporaries in framework-intensive Java applications.;http://doi.acm.org/10.1145/1453101.1453111;59-70;12;Program analysis;
2008;Hyunsook Do,Siavash Mirarab,Ladan Tahvildari,Gregg Rothermel;An empirical study of the effect of time constraints on the cost-benefits of regression testing.;http://doi.acm.org/10.1145/1453101.1453113;71-82;12;Testing;
2008;Zhiqiang Lin,Xiangyun Zhang;Deriving input syntactic structure from execution.;http://doi.acm.org/10.1145/1453101.1453114;83-93;11;Testing;
2008;Zhifeng Lai,Shing-Chi Cheung,Wing Kwong Chan;Inter-context control-flow and data-flow test adequacy criteria for nesC applications.;http://doi.acm.org/10.1145/1453101.1453115;94-104;11;Testing;
2008;Jeffrey Stylos,Brad A. Myers;The implications of method placement on API learnability.;http://doi.acm.org/10.1145/1453101.1453117;105-112;8;Programming experiments and aids;
2008;Anita Sarma,David F. Redmiles,Andre van der Hoek;Empirical evidence of the benefits of workspace awareness in software configuration management.;http://doi.acm.org/10.1145/1453101.1453118;113-123;11;Programming experiments and aids;
2008;Andhy Koesnandar,Sebastian G. Elbaum,Gregg Rothermel,Lorin Hochstein,Christopher Scaffidi,Kathryn T. Stolee;Using assertions to help end-user programmers create dependable web macros.;http://doi.acm.org/10.1145/1453101.1453119;124-134;11;Programming experiments and aids;
2008;Chang-Seo Park,Koushik Sen;Randomized active atomicity violation detection in concurrent programs.;http://doi.acm.org/10.1145/1453101.1453121;135-145;11;Concurrency and transformation;
2008;Christopher Dragert,Jurgen Dingel,Karen Rudie;Generation of concurrency control code using discrete-event systems theory.;http://doi.acm.org/10.1145/1453101.1453122;146-157;12;Concurrency and transformation;
2008;Shriram Krishnamurthi,Kathi Fisler,Daniel J. Dougherty,Daniel Yoo;Alchemy: transmuting base alloy specifications into implementations.;http://doi.acm.org/10.1145/1453101.1453123;158-169;12;Concurrency and transformation;
2008;Franco Raimondi,James Skene,Wolfgang Emmerich;Efficient online monitoring of web-service SLAs.;http://doi.acm.org/10.1145/1453101.1453125;170-180;11;Web services;
2008;William G. J. Halfond,Alessandro Orso;Automated identification of parameter mismatches in web applications.;http://doi.acm.org/10.1145/1453101.1453126;181-191;11;Web services;
2008;Fang Yu,Chao Wang 0001,Aarti Gupta,Tevfik Bultan;Modular verification of web services using efficient symbolic encoding and summarization.;http://doi.acm.org/10.1145/1453101.1453127;192-202;11;Web services;
2008;Barthelemy Dagenais,Harold Ossher;Automatically locating framework extension examples.;http://doi.acm.org/10.1145/1453101.1453129;203-213;11;Tools and methods;
2008;Rylan Cottrell,Robert J. Walker,Jorg Denzinger;Semi-automating small-scale source code reuse via structural correspondence.;http://doi.acm.org/10.1145/1453101.1453130;214-225;12;Tools and methods;
2008;Suzette Person,Matthew B. Dwyer,Sebastian G. Elbaum,Corina S. Pasareanu;Differential symbolic execution.;http://doi.acm.org/10.1145/1453101.1453131;226-237;12;Tools and methods;
2008;Axel van Lamsweerde;Requirements engineering: from craft to discipline.;http://doi.acm.org/10.1145/1453101.1453133;238-249;12;ACM SIGSOFT outstanding research award;
2008;Dave King 0002,Trent Jaeger,Somesh Jha,Sanjit A. Seshia;Effective blame for information-flow violations.;http://doi.acm.org/10.1145/1453101.1453135;250-260;11;Security and fault detection;
2008;Michele Sama,David S. Rosenblum,Zhimin Wang,Sebastian G. Elbaum;Model-based fault detection in context-aware adaptive applications.;http://doi.acm.org/10.1145/1453101.1453136;261-271;11;Security and fault detection;
2008;Wei Le,Mary Lou Soffa;Marple: a demand-driven path-sensitive buffer overflow detector.;http://doi.acm.org/10.1145/1453101.1453137;272-282;11;Security and fault detection;
2008;Gautam Shroff;Dev 2.0: model driven development in the cloud.;http://doi.acm.org/10.1145/1453101.1453139;283;1;Keynote;
2008;David S. Rosenblum,Alexander L. Wolf;ACM SIGSOFT impact paper award: reflections and prospects.;http://doi.acm.org/10.1145/1453101.1453141;284;1;ACM SIGSOFT impact award;
2008;Shiva Nejati,Mehrdad Sabetzadeh,Marsha Chechik,Sebastian Uchitel,Pamela Zave;Towards compositional synthesis of evolving systems.;http://doi.acm.org/10.1145/1453101.1453143;285-296;12;Requirements;
2008;Dario Fischbein,Sebastian Uchitel;On correct and complete strong merging of partial behaviour models.;http://doi.acm.org/10.1145/1453101.1453144;297-307;11;Requirements;
2008;Nicolas Bettenburg,Sascha Just,Adrian Schroter,Cathrin Weiss,Rahul Premraj,Thomas Zimmermann 0001;What makes a good bug report?;http://doi.acm.org/10.1145/1453101.1453146;308-318;11;Process;
2008;Leon J. Osterweil,Lori A. Clarke,Aaron M. Ellison,Rodion M. Podorozhny,Alexander E. Wise,Emery R. Boose,Julian L. Hadley;Experience in using a process language to define scientific workflow and generate dataset provenance.;http://doi.acm.org/10.1145/1453101.1453147;319-329;11;Process;
2008;Yigit Kultur,Burak Turhan,Ayse Bener;ENNA: software effort estimation using ensemble of neural networks with associative memory.;http://doi.acm.org/10.1145/1453101.1453148;330-338;9;Process;
2008;Mark Gabel,Zhendong Su;Javert: fully automatic mining of general temporal properties from dynamic traces.;http://doi.acm.org/10.1145/1453101.1453150;339-349;11;Mining and restructuring;
2008;V. Benjamin Livshits,Emre Kiciman;Doloto: code splitting for network-bound web 2.0 applications.;http://doi.acm.org/10.1145/1453101.1453151;350-360;11;Mining and restructuring;
2007;Mihai Christodorescu,Somesh Jha,Christopher Krugel;Mining specifications of malicious behavior.;http://doi.acm.org/10.1145/1287624.1287628;5-14;10;Mining specifications and structure;
2007;Zachary M. Saul,Vladimir Filkov,Premkumar T. Devanbu,Christian Bird;Recommending random walks.;http://doi.acm.org/10.1145/1287624.1287629;15-24;10;Mining specifications and structure;
2007;Mithun Acharya,Tao Xie,Jian Pei,Jun Xu 0003;Mining API patterns as partial orders from source code: from usage scenarios to specifications.;http://doi.acm.org/10.1145/1287624.1287630;25-34;10;Mining specifications and structure;
2007;Andrzej Wasylkowski,Andreas Zeller,Christian Lindig;Detecting object usage anomalies.;http://doi.acm.org/10.1145/1287624.1287632;35-44;10;Fault detection;
2007;Sunghun Kim 0001,Michael D. Ernst;Which warnings should I fix first?;http://doi.acm.org/10.1145/1287624.1287633;45-54;10;Fault detection;
2007;Lingxiao Jiang,Zhendong Su,Edwin Chiu;Context-based detection of clone-related bugs.;http://doi.acm.org/10.1145/1287624.1287634;55-64;10;Fault detection;
2007;Prakash Chandrasekaran,Christopher L. Conway,Joseph M. Joy,Sriram K. Rajamani;Programming asynchronous layers with CLARITY.;http://doi.acm.org/10.1145/1287624.1287636;65-74;10;Code analysis;
2007;Yoav Zibin,Alex Potanin,Mahmood Ali,Shay Artzi,Adam Kiezun,Michael D. Ernst;Object and reference immutability using java generics.;http://doi.acm.org/10.1145/1287624.1287637;75-84;10;Code analysis;
2007;Guoqing (Harry) Xu,Atanas Rountev,Yan Tang,Feng Qin;Efficient checkpointing of java software using context-sensitive capture and replay.;http://doi.acm.org/10.1145/1287624.1287638;85-94;10;Code analysis;
2007;Mark Grechanik,Kathryn S. McKinley,Dewayne E. Perry;Recovering and using use-case-diagram-to-source-code traceability links.;http://doi.acm.org/10.1145/1287624.1287640;95-104;10;Development processes and tools;
2007;Moshood Omolade Saliu,Gunther Ruhe;Bi-objective release planning for evolving software systems.;http://doi.acm.org/10.1145/1287624.1287641;105-114;10;Development processes and tools;
2007;Hazeline U. Asuncion,Frederic Francois,Richard N. Taylor;An end-to-end industrial software traceability tool.;http://doi.acm.org/10.1145/1287624.1287642;115-124;10;Development processes and tools;
2007;Narayan Ramasubbu,Rajesh Krishna Balan;Globally distributed software development project performance: an empirical analysis.;http://doi.acm.org/10.1145/1287624.1287643;125-134;10;Development processes and tools;
2007;Sasa Misailovic,Aleksandar Milicevic,Nemanja Petrovic,Sarfraz Khurshid,Darko Marinov;Parallel test generation and execution with Korat.;http://doi.acm.org/10.1145/1287624.1287645;135-144;10;Test generation;
2007;William G. J. Halfond,Alessandro Orso;Improving test case generation for web applications using automated interface discovery.;http://doi.acm.org/10.1145/1287624.1287646;145-154;10;Test generation;
2007;Mark Harman,Youssef Hassoun,Kiran Lakhotia,Phil McMinn,Joachim Wegener;The impact of input domain reduction on search-based test data generation.;http://doi.acm.org/10.1145/1287624.1287647;155-164;10;Test generation;
2007;Rylan Cottrell,Joseph J. C. Chang,Robert J. Walker,Jorg Denzinger;Determining detailed structural correspondence for generalization tasks.;http://doi.acm.org/10.1145/1287624.1287649;165-174;10;Refactoring automation;
2007;Macneil Shonle,William G. Griswold,Sorin Lerner;Beyond refactoring: a framework for modular maintenance of crosscutting design idioms.;http://doi.acm.org/10.1145/1287624.1287650;175-184;10;Refactoring automation;
2007;Brett Daniel,Danny Dig,Kely Garcia,Darko Marinov;Automated testing of refactoring engines.;http://doi.acm.org/10.1145/1287624.1287651;185-194;10;Refactoring automation;
2007;Julian Dolby,Mandana Vaziri,Frank Tip;Finding bugs efficiently with a SAT solver.;http://doi.acm.org/10.1145/1287624.1287653;195-204;10;Scaling-up static analysis;
2007;Jan Wen Voung,Ranjit Jhala,Sorin Lerner;RELAY: static race detection on millions of lines of code.;http://doi.acm.org/10.1145/1287624.1287654;205-214;10;Scaling-up static analysis;
2007;Minh Ngoc Ngo,Hee Beng Kuan Tan;Detecting large number of infeasible paths through recognizing their patterns.;http://doi.acm.org/10.1145/1287624.1287655;215-224;10;Scaling-up static analysis;
2007;Howard Foster,Wolfgang Emmerich,Jeffrey Kramer,Jeffrey N. Magee,David S. Rosenblum,Sebastian Uchitel;Model checking service compositions under resource constraints.;http://doi.acm.org/10.1145/1287624.1287657;225-234;10;Service-oriented and mobile computing;
2007;Chunyang Ye,Shing-Chi Cheung,Wing Kwong Chan,Chang Xu;Detection and resolution of atomicity violation in service composition.;http://doi.acm.org/10.1145/1287624.1287658;235-244;10;Service-oriented and mobile computing;
2007;Jamie Payton,Christine Julien,Gruia-Catalin Roman;Automatic consistency assessment for query results in dynamic environments.;http://doi.acm.org/10.1145/1287624.1287659;245-254;10;Service-oriented and mobile computing;
2007;Justin R. Erenkrantz,Michael M. Gorlick,Girish Suryanarayana,Richard N. Taylor;From representations to computations: the evolution of web architectures.;http://doi.acm.org/10.1145/1287624.1287660;255-264;10;Service-oriented and mobile computing;
2007;Jacky Estublier,German Vega;Reconciling software configuration management and product data management.;http://doi.acm.org/10.1145/1287624.1287662;265-274;10;Modelling approaches;
2007;Abhik Roychoudhury,Ankit Goel,Bikram Sengupta;Symbolic message sequence charts.;http://doi.acm.org/10.1145/1287624.1287663;275-284;10;Modelling approaches;
2007;Felix Klar,Alexander Konigs,Andy Schurr;Model transformation in the large.;http://doi.acm.org/10.1145/1287624.1287664;285-294;10;Modelling approaches;
2007;Christoph Treude,Stefan Berlik,Sven Wenzel,Udo Kelter;Difference computation of large models.;http://doi.acm.org/10.1145/1287624.1287665;295-304;10;Modelling approaches;
2007;Elaine J. Weyuker;Software engineering research: from cradle to grave.;http://doi.acm.org/10.1145/1287624.1287667;305-311;7;ACM SIGSOFT outstanding research award;
2007;Matteo Pradella,Angelo Morzenti,Pierluigi San Pietro;The symmetry of the past and of the future: bi-infinite time in the verification of temporal properties.;http://doi.acm.org/10.1145/1287624.1287669;312-320;9;Verification techniques;
2007;Sriram Sankaranarayanan,Richard M. Chang,Guofei Jiang,Franjo Ivancic;State space exploration using feedback constraint generation and Monte-Carlo sampling.;http://doi.acm.org/10.1145/1287624.1287670;321-330;10;Verification techniques;
2007;Fang Yu,Tevfik Bultan,Erik Peterson;Automated size analysis for OCL.;http://doi.acm.org/10.1145/1287624.1287671;331-340;10;Verification techniques;
2007;Thomas Fritz,Gail C. Murphy,Emily Hill;Does a programmer's activity indicate knowledge of code?;http://doi.acm.org/10.1145/1287624.1287673;341-350;10;Developer-centric studies;
2007;Yunwen Ye,Yasuhiro Yamamoto,Kumiyo Nakakoji;A socio-technical framework for supporting programmers.;http://doi.acm.org/10.1145/1287624.1287674;351-360;10;Developer-centric studies;
2007;Thomas D. LaToza,David Garlan,James D. Herbsleb,Brad A. Myers;Program comprehension as fact finding.;http://doi.acm.org/10.1145/1287624.1287675;361-370;10;Developer-centric studies;
2007;Andre Scedrov;The work of Dean Rosenzweig: a tribute to a scientist and an innovator.;http://doi.acm.org/10.1145/1287624.1287677;371-374;4;In-memory talk;
2007;Leticia Duboc,David S. Rosenblum,Tony Wicks;A framework for characterization and analysis of software system scalability.;http://doi.acm.org/10.1145/1287624.1287679;375-384;10;Empirical system characterization;
2007;Lerina Aversano,Gerardo Canfora,Luigi Cerulo,Concettina Del Grosso,Massimiliano Di Penta;An empirical study on the evolution of design patterns.;http://doi.acm.org/10.1145/1287624.1287680;385-394;10;Empirical system characterization;
2007;Simon Goldsmith,Alexander Aiken,Daniel Shawcross Wilkerson;Measuring empirical computational complexity.;http://doi.acm.org/10.1145/1287624.1287681;395-404;10;Empirical system characterization;
2007;Osamu Mizuno,Tohru Kikuno;Training on errors experiment to detect fault-prone software modules by spam filter.;http://doi.acm.org/10.1145/1287624.1287683;405-414;10;Unit and system testing;
2007;Roberta Calegari,Mirco Musolesi,Franco Raimondi,Cecilia Mascolo;CTG: a connectivity trace generator for testing the performance of opportunistic mobile systems.;http://doi.acm.org/10.1145/1287624.1287684;415-424;10;Unit and system testing;
2007;Andreas Leitner,Ilinca Ciupa,Manuel Oriol,Bertrand Meyer,Arno Fiva;Contract driven development = test driven development - writing test cases.;http://doi.acm.org/10.1145/1287624.1287685;425-434;10;Unit and system testing;
2007;Fernando Silva Parreiras,Steffen Staab,Andreas Winter;On marrying ontological and metamodeling technical spaces.;http://doi.acm.org/10.1145/1287624.1287687;439-448;10;State-of-the-art presentations;
2007;Marta Z. Kwiatkowska;Quantitative verification: models techniques and tools.;http://doi.acm.org/10.1145/1287624.1287688;449-458;10;State-of-the-art presentations;
2007;Walt Scacchi;Free/open source software development.;http://doi.acm.org/10.1145/1287624.1287689;459-468;10;State-of-the-art presentations;
2007;Manzil e Maqsood,Talha Javed;Practicum in software project management: an endeavor to effective and pragmatic software project management education.;http://doi.acm.org/10.1145/1287624.1287691;471-480;10;Widened software engineering;
2007;Asim El-Sheikh,Haroon Tarawneh;A survey of web engineering practice in small Jordanian web development firms.;http://doi.acm.org/10.1145/1287624.1287692;481-490;10;Widened software engineering;
2007;Roumen Nikolov,Sylvia Ilieva;Building a research university ecosystem: the case of software engineering education at Sofia University.;http://doi.acm.org/10.1145/1287624.1287693;491-500;10;Widened software engineering;
2007;Helen C. Sharp,Tracy Hall,Nathan Baddoo,Sarah Beecham;Exploring motivational differences between software developers and project managers.;http://doi.acm.org/10.1145/1287624.1287695;501-504;4;ESEC/FSE'07 posters;
2007;Stig Larsson,Petri Myllyperkio,Fredrik Ekdahl;Product integration improvement based on analysis of build statistics.;http://doi.acm.org/10.1145/1287624.1287696;505-508;4;ESEC/FSE'07 posters;
2007;Mikael Patel,Andreas Borg,Kristian Sandahl;A case study in assessing and improving capacity using an anatomy of good practice.;http://doi.acm.org/10.1145/1287624.1287697;509-512;4;ESEC/FSE'07 posters;
2007;Hamid Abdul Basit,Stanislaw Jarzabek;Efficient token based clone detection with flexible tokenization.;http://doi.acm.org/10.1145/1287624.1287698;513-516;4;ESEC/FSE'07 posters;
2007;Xin Zhou,Ying Liu,Jun Zhu;A segment-based approach for reconcilable model transformation.;http://doi.acm.org/10.1145/1287624.1287699;517-520;4;ESEC/FSE'07 posters;
2007;Alessandro Fantechi,Stefania Gnesi;A behavioural model for product families.;http://doi.acm.org/10.1145/1287624.1287700;521-524;4;ESEC/FSE'07 posters;
2007;Engin Uzuncaova,Daniel Garcia,Sarfraz Khurshid,Don S. Batory;A specification-based approach to testing software product lines.;http://doi.acm.org/10.1145/1287624.1287701;525-528;4;ESEC/FSE'07 posters;
2007;Tushar Kumar,Jaswanth Sreeram,Romain Cledat,Santosh Pande;A profile-driven statistical analysis framework for the design optimization of soft real-time applications.;http://doi.acm.org/10.1145/1287624.1287702;529-532;4;ESEC/FSE'07 posters;
2007;Shan Lu,Weihang Jiang,Yuanyuan Zhou;A study of interleaving coverage criteria.;http://doi.acm.org/10.1145/1287624.1287703;533-536;4;ESEC/FSE'07 posters;
2007;Andriy V. Miranskyy,Nazim H. Madhavji,Mechelle Gittens,Matthew Davison,Mark Wilding,David Godwin;An iterative, multi-level, and scalable approach to comparing execution traces.;http://doi.acm.org/10.1145/1287624.1287704;537-540;4;ESEC/FSE'07 posters;
2007;Kenneth Koster,David C. Kao;State coverage: a structural test adequacy criterion for behavior checking.;http://doi.acm.org/10.1145/1287624.1287705;541-544;4;ESEC/FSE'07 posters;
2007;Trishul M. Chilimbi,Aditya V. Nori,Kapil Vaswani;Quantifying the effectiveness of testing via efficient residual path profiling.;http://doi.acm.org/10.1145/1287624.1287706;545-548;4;ESEC/FSE'07 posters;
2007;Robert B. Evans,Alberto Savoia;Differential testing: a new approach to change detection.;http://doi.acm.org/10.1145/1287624.1287707;549-552;4;ESEC/FSE'07 posters;
2007;Rupak Majumdar,Ru-Gang Xu;Directed test generation using symbolic grammars.;http://doi.acm.org/10.1145/1287624.1287708;553-556;4;ESEC/FSE'07 posters;
2007;Sandro Fouche,Myra B. Cohen,Adam A. Porter;Towards incremental adaptive covering arrays.;http://doi.acm.org/10.1145/1287624.1287709;557-560;4;ESEC/FSE'07 posters;
2007;Pallavi Joshi,Koushik Sen,Mark Shlimovich;Predictive testing: amplifying the effectiveness of software testing.;http://doi.acm.org/10.1145/1287624.1287710;561-564;4;ESEC/FSE'07 posters;
2007;Mark Sherriff,Sarah Smith Heckman,J. Michael Lake,Laurie A. Williams;Using groupings of static analysis alerts to identify files likely to contain field failures.;http://doi.acm.org/10.1145/1287624.1287711;565-568;4;ESEC/FSE'07 posters;
2007;Chang Xu,Shing-Chi Cheung,Wing Kwong Chan,Chunyang Ye;On impact-oriented automatic resolution of pervasive context inconsistency.;http://doi.acm.org/10.1145/1287624.1287712;569-572;4;ESEC/FSE'07 posters;
2007;Marcin Stefaniak;Visualising exemplary program values.;http://doi.acm.org/10.1145/1287624.1287714;575-578;4;Doctoral symposium;
2007;Irina Diana Coman;An analysis of developers' tasks using low-level, automatically collected data.;http://doi.acm.org/10.1145/1287624.1287715;579-582;4;Doctoral symposium;
2007;Pasqualina Potena;Composition and tradeoff of non-functional attributes in software systems: research directions.;http://doi.acm.org/10.1145/1287624.1287716;583-586;4;Doctoral symposium;
2007;Stefan Baerisch;Model-driven test-case construction.;http://doi.acm.org/10.1145/1287624.1287717;587-590;4;Doctoral symposium;
2007;Youssef Hanna;SLEDE: lightweight verification of sensor network security protocol implementations.;http://doi.acm.org/10.1145/1287624.1287718;591-594;4;Doctoral symposium;
2007;Madeline Diep;Analysis of a deployed software.;http://doi.acm.org/10.1145/1287624.1287719;595-598;4;Doctoral symposium;
2007;Roberto Pietrantuono;Component airbag: a novel approach to develop dependable component-based applications.;http://doi.acm.org/10.1145/1287624.1287720;599-602;4;Doctoral symposium;
2007;Sevan Kavaldjian;A model-driven approach to generating user interfaces.;http://doi.acm.org/10.1145/1287624.1287721;603-606;4;Doctoral symposium;
2007;Farhad Arbab,Christel Baier;Syanco 2007: international workshop on synthesis and analysis of component connectors.;http://doi.acm.org/10.1145/1287624.1287723;607-608;2;Workshops summaries;
2007;Jonathan Aldrich,Michael Barnett 0001,Dimitra Giannakopoulou,Gary T. Leavens,Natasha Sharygina;Specification and verification of component-based systems 2007.;http://doi.acm.org/10.1145/1287624.1287724;609-610;2;Workshops summaries;
2007;Massimiliano Di Penta,Michele Lanza;IWPSE 2007: 9th international workshop on principles of software evolution.;http://doi.acm.org/10.1145/1287624.1287725;611-612;2;Workshops summaries;
2007;Elisabetta Di Nitto,Andrea Polini,Andrea Zisman;2nd international workshop on service oriented software engineering (IW-SOSWE 2007).;http://doi.acm.org/10.1145/1287624.1287726;613-614;2;Workshops summaries;
2007;Giovanni Denaro,Mauro Pezze,Onn Shehory;SOQUA 2007: 4th international workshop on software quality assurance.;http://doi.acm.org/10.1145/1287624.1287727;615-616;2;Workshops summaries;
2007;Nicolas Guelfi,Henry Muccini,Patrizio Pelliccione,Alexander Romanovsky;EFTS 2007: the 2nd international workshop on engineering fault tolerant systems.;http://doi.acm.org/10.1145/1287624.1287728;617-618;2;Workshops summaries;
2007;Alexander L. Wolf;Engineering software services for pervasive environments.;http://doi.acm.org/10.1145/1287624.1287729;619-620;2;Workshops summaries;
2007;Alan Hartman,Mika Katara,Amit M. Paradkar;Domain specific approaches to software test automation.;http://doi.acm.org/10.1145/1287624.1287730;621-622;2;Workshops summaries;
2006;Mik Kersten,Gail C. Murphy;Using task context to improve programmer productivity.;http://doi.acm.org/10.1145/1181775.1181777;1-11;11;Empirical methods and program understanding;
2006;T. H. Ng,Shing-Chi Cheung,Wing Kwong Chan,Yuen-Tak Yu;Work experience versus refactoring to design patterns: a controlled experiment.;http://doi.acm.org/10.1145/1181775.1181778;12-22;11;Empirical methods and program understanding;
2006;Jonathan Sillito,Gail C. Murphy,Kris De Volder;Questions programmers ask during software evolution tasks.;http://doi.acm.org/10.1145/1181775.1181779;23-34;12;Empirical methods and program understanding;
2006;Sunghun Kim 0001,Kai Pan,Jim Whitehead;Memories of bug fixes.;http://doi.acm.org/10.1145/1181775.1181781;35-45;11;Mining failures and bugs;
2006;Chao Liu,Jiawei Han;Failure proximity: a fault localization-based approach.;http://doi.acm.org/10.1145/1181775.1181782;46-56;11;Mining failures and bugs;
2006;Maximilian Storzer,Barbara G. Ryder,Xiaoxia Ren,Frank Tip;Finding failure-inducing changes in java programs using change classification.;http://doi.acm.org/10.1145/1181775.1181783;57-68;12;Mining failures and bugs;
2006;Brian Hackett,Alexander Aiken;How is aliasing used in systems software?;http://doi.acm.org/10.1145/1181775.1181785;69-80;12;Program analysis;
2006;Xiangyun Zhang,Sriraman Tallam,Rajiv Gupta;Dynamic slicing long running programs through execution fast forwarding.;http://doi.acm.org/10.1145/1181775.1181786;81-91;11;Program analysis;
2006;Matthew B. Dwyer,Suzette Person,Sebastian G. Elbaum;Controlling factors in evaluating path-sensitive error detection techniques.;http://doi.acm.org/10.1145/1181775.1181787;92-104;13;Program analysis;
2006;Deepak Kapur,Rupak Majumdar,Calogero G. Zarba;Interpolation for data structures.;http://doi.acm.org/10.1145/1181775.1181789;105-116;12;Formal approaches to programming;
2006;Bhargav S. Gulavani,Thomas A. Henzinger,Yamini Kannan,Aditya V. Nori,Sriram K. Rajamani;SYNERGY: a new algorithm for property checking.;http://doi.acm.org/10.1145/1181775.1181790;117-127;11;Formal approaches to programming;
2006;Ranjit Jhala,Rupak Majumdar;Bit level types for high level reasoning.;http://doi.acm.org/10.1145/1181775.1181791;128-140;13;Formal approaches to programming;
2006;Hyunsook Do,Gregg Rothermel;An empirical study of regression testing techniques incorporating context and lifetime factors and improved cost-benefit models.;http://doi.acm.org/10.1145/1181775.1181793;141-151;11;Empirical studies;
2006;Fernando Castor Filho,Nelio Cacho,Eduardo Magno Lages Figueiredo,Raquel Maranhao,Alessandro Garcia,Cecilia Mary Fischer Rubira;Exceptions and aspects: the devil is in the details.;http://doi.acm.org/10.1145/1181775.1181794;152-162;11;Empirical studies;
2006;Olivier Giroux,Martin P. Robillard;Detecting increases in feature coupling using regression tests.;http://doi.acm.org/10.1145/1181775.1181795;163-174;12;Empirical studies;
2006;William G. J. Halfond,Alessandro Orso,Pete Manolios;Using positive tainting and syntax-aware evaluation to counter SQL injection attacks.;http://doi.acm.org/10.1145/1181775.1181797;175-185;11;Safety and security;
2006;Chunyang Ye,Shing-Chi Cheung,Wing Kwong Chan,Chang Xu;Local analysis of atomicity sphere for B2B collaboration.;http://doi.acm.org/10.1145/1181775.1181798;186-196;11;Safety and security;
2006;Christophe Damas,Bernard Lambeau,Axel van Lamsweerde;Scenarios, goals, and state machines: a win-win partnership for model synthesis.;http://doi.acm.org/10.1145/1181775.1181800;197-207;11;Requirements modeling;
2006;Rachel L. Cobleigh,George S. Avrunin,Lori A. Clarke;User guidance for creating precise and accessible property specifications.;http://doi.acm.org/10.1145/1181775.1181801;208-218;11;Requirements modeling;
2006;Shahar Maoz,David Harel;From multi-modal scenarios to code: compiling LSCs into aspectJ.;http://doi.acm.org/10.1145/1181775.1181802;219-230;12;Requirements modeling;
2006;Matthew J. Rutherford,Antonio Carzaniga,Alexander L. Wolf;Simulation-based test adequacy criteria for distributed systems.;http://doi.acm.org/10.1145/1181775.1181804;231-241;11;Testing;
2006;Heng Lu,Wing Kwong Chan,T. H. Tse;Testing context-aware middleware-centric programs: a data flow approach and an RFID-based experimentation.;http://doi.acm.org/10.1145/1181775.1181805;242-252;11;Testing;
2006;Sebastian G. Elbaum,Hui Nee Chin,Matthew B. Dwyer,Jonathan Dokulil;Carving differential unit test cases from system test cases.;http://doi.acm.org/10.1145/1181775.1181806;253-264;12;Testing;
2006;David Lo,Siau-Cheng Khoo;SMArTIC: towards building an accurate, robust and scalable specification miner.;http://doi.acm.org/10.1145/1181775.1181808;265-275;11;Specification mining;
2006;Mana Taghdiri,Robert Seater,Daniel B. Jackson;Lightweight extraction of syntactic specifications.;http://doi.acm.org/10.1145/1181775.1181809;276-286;11;Specification mining;
2005;Martin P. Robillard;Automatic generation of suggestions for program investigation.;http://doi.acm.org/10.1145/1081706.1081711;11-20;10;Software change analysis;
2005;Bill McCloskey,Eric A. Brewer;ASTEC: a new approach to refactoring C.;http://doi.acm.org/10.1145/1081706.1081712;21-30;10;Software change analysis;
2005;Thomas A. Henzinger,Ranjit Jhala,Rupak Majumdar;Permissive interfaces.;http://doi.acm.org/10.1145/1081706.1081713;31-40;10;Software change analysis;
2005;Renaud De Landtsheer,Axel van Lamsweerde;Reasoning about confidentiality at requirements engineering time.;http://doi.acm.org/10.1145/1081706.1081715;41-49;9;Requirements;
2005;Paul Baker,Paul Bristow,Clive Jervis,David J. King,Robert Thomson 0002,Bill Mitchell,Simon Burton;Detecting and resolving semantic pathologies in UML sequence diagrams.;http://doi.acm.org/10.1145/1081706.1081716;50-59;10;Requirements;
2005;Matthias Heindl,Stefan Biffl;A case study on value-based requirements tracing.;http://doi.acm.org/10.1145/1081706.1081717;60-69;10;Requirements;
2005;Emmanuel Letier,Jeffrey Kramer,Jeffrey N. Magee,Sebastian Uchitel;Fluent temporal logic for discrete-time event-based models.;http://doi.acm.org/10.1145/1081706.1081719;70-79;10;Models and components;
2005;Junrong Shen,Xi Sun,Gang Huang 0001,Wenpin Jiao,Yanchun Sun,Hong Mei;Towards a unified formal model for supporting mechanisms of dynamic component update.;http://doi.acm.org/10.1145/1081706.1081720;80-89;10;Models and components;
2005;Manos Renieris,Shashank Ramaprasad,Steven P. Reiss;Arithmetic program paths.;http://doi.acm.org/10.1145/1081706.1081721;90-98;9;Models and components;
2005;Stephane Ducasse,Tudor Girba,Oscar Nierstrasz;Moose: an agile reengineering environment.;http://doi.acm.org/10.1145/1081706.1081723;99-102;4;Research tool demonstrations I;
2005;Bradley R. Schmerl,David Garlan,Hong Yan;Dynamically discovering architectures with DiscoTect.;http://doi.acm.org/10.1145/1081706.1081724;103-106;4;Research tool demonstrations I;
2005;Jacek Sliwerski,Thomas Zimmermann 0001,Andreas Zeller;HATARI: raising risk awareness.;http://doi.acm.org/10.1145/1081706.1081725;107-110;4;Research tool demonstrations I;
2005;Paola Inverardi,Henry Muccini,Patrizio Pelliccione;CHARMY: an extensible tool for architectural analysis.;http://doi.acm.org/10.1145/1081706.1081726;111-114;4;Research tool demonstrations I;
2005;Yichen Xie,Alexander Aiken;Context- and path-sensitive memory leak detection.;http://doi.acm.org/10.1145/1081706.1081728;115-125;11;Application performance;
2005;Edu Metz,Raimondas Lencevicius,Teofilo F. Gonzalez;Performance data collection using a hybrid approach.;http://doi.acm.org/10.1145/1081706.1081729;126-135;10;Application performance;
2005;Kavitha Srinivas,Harini Srinivasan;Summarizing application performance from a components perspective.;http://doi.acm.org/10.1145/1081706.1081730;136-145;10;Application performance;
2005;Murali Haran,Alan F. Karr,Alessandro Orso,Adam A. Porter,Ashish P. Sanil;Applying classification techniques to remotely-collected program execution data.;http://doi.acm.org/10.1145/1081706.1081732;146-155;10;Patterns and aspects;
2005;Hamid Abdul Basit,Stanislaw Jarzabek;Detecting higher-level similarity patterns in programs.;http://doi.acm.org/10.1145/1081706.1081733;156-165;10;Patterns and aspects;
2005;Kevin J. Sullivan,William G. Griswold,Yuanyuan Song,Yuanfang Cai,Macneil Shonle,Nishit Tewari,Hridesh Rajan;Information hiding interfaces for aspect-oriented design.;http://doi.acm.org/10.1145/1081706.1081734;166-175;10;Patterns and aspects;
2005;Antonio S. Camara;Innovations in pervasive computing.;http://doi.acm.org/10.1145/1081706.1081708;176;1;Patterns and aspects;
2005;Jennifer Bevan,Jim Whitehead,Sunghun Kim 0001,Michael W. Godfrey;Facilitating software evolution research with kenyon.;http://doi.acm.org/10.1145/1081706.1081736;177-186;10;Software evolution analysis;
2005;Miryung Kim,Vibha Sazawal,David Notkin,Gail C. Murphy;An empirical study of code clone genealogies.;http://doi.acm.org/10.1145/1081706.1081737;187-196;10;Software evolution analysis;
2005;Xiangyun Zhang,Rajiv Gupta;Matching execution histories of program versions.;http://doi.acm.org/10.1145/1081706.1081738;197-206;10;Software evolution analysis;
2005;Viktor Kuncak,Daniel B. Jackson;Relational analysis of algebraic datatypes.;http://doi.acm.org/10.1145/1081706.1081740;207-216;10;Objects and datatypes;
2005;Kevin Bierhoff,Jonathan Aldrich;Lightweight object specification with typestates.;http://doi.acm.org/10.1145/1081706.1081741;217-226;10;Objects and datatypes;
2005;Jeffrey Fischer,Ranjit Jhala,Rupak Majumdar;Joining dataflow with predicates.;http://doi.acm.org/10.1145/1081706.1081742;227-236;10;Objects and datatypes;
2005;Reid Holmes,Robert J. Walker,Gail C. Murphy;Strathcona example recommendation tool.;http://doi.acm.org/10.1145/1081706.1081744;237-240;4;Research tool demonstrations II;
2005;Nikolai Tillmann,Wolfram Schulte;Parameterized unit tests with unit meister.;http://doi.acm.org/10.1145/1081706.1081745;241-244;4;Research tool demonstrations II;
2005;Robert Chatley,Thomas Timbul;KenyaEclipse: learning to program in eclipse.;http://doi.acm.org/10.1145/1081706.1081746;245-248;4;Research tool demonstrations II;
2005;Pavel Grigorenko,Ando Saabas,Enn Tyugu;Visual tool for generative programming.;http://doi.acm.org/10.1145/1081706.1081747;249-252;4;Research tool demonstrations II;
2005;Nikolai Tillmann,Wolfram Schulte;Parameterized unit tests.;http://doi.acm.org/10.1145/1081706.1081749;253-262;10;Testing;
2005;Koushik Sen,Darko Marinov,Gul A. Agha;CUTE: a concolic unit testing engine for C.;http://doi.acm.org/10.1145/1081706.1081750;263-272;10;Testing;
2005;Margus Veanes,Colin Campbell,Wolfram Schulte,Nikolai Tillmann;Online testing with model programs.;http://doi.acm.org/10.1145/1081706.1081751;273-282;10;Testing;
2005;Jeffrey Kramer,Jeffrey N. Magee;Engineering distributed software: a structural discipline.;http://doi.acm.org/10.1145/1081706.1081709;283-285;3;Testing;
2005;Chao Liu,Xifeng Yan,Long Fei,Jiawei Han,Samuel P. Midkiff;SOBER: statistical model-based bug localization.;http://doi.acm.org/10.1145/1081706.1081753;286-295;10;Bug localization;
2005;V. Benjamin Livshits,Thomas Zimmermann 0001;DynaMine: finding common error patterns by mining software revision histories.;http://doi.acm.org/10.1145/1081706.1081754;296-305;10;Bug localization;
2005;Zhenmin Li,Yuanyuan Zhou;PR-Miner: automatically extracting implicit programming rules and detecting violations in large software code.;http://doi.acm.org/10.1145/1081706.1081755;306-315;10;Bug localization;
2005;Jacky Estublier,German Vega;Reuse and variability in large software applications.;http://doi.acm.org/10.1145/1081706.1081757;316-325;10;Product lines and middleware;
2005;Ulf Pettersson,Stanislaw Jarzabek;Industrial experience with building a web portal product line using a lightweight, reactive approach.;http://doi.acm.org/10.1145/1081706.1081758;326-335;10;Product lines and middleware;
2005;Chang Xu,Shing-Chi Cheung;Inconsistency detection and resolution for context-aware middleware support.;http://doi.acm.org/10.1145/1081706.1081759;336-345;10;Product lines and middleware;
2005;Jorge Aranda,Steve M. Easterbrook;Anchoring and adjustment in software estimation.;http://doi.acm.org/10.1145/1081706.1081761;346-355;10;Effort estimation;
2005;Lorin Hochstein,Victor R. Basili,Marvin V. Zelkowitz,Jeffrey K. Hollingsworth,Jeffrey Carver;Combining self-reported and automatic data to improve programming effort measurement.;http://doi.acm.org/10.1145/1081706.1081762;356-365;10;Effort estimation;
2005;Aline Lucia Baroni;Quantitative assessment of UML dynamic models.;http://doi.acm.org/10.1145/1081706.1081764;366-369;4;Doctoral symposium;
2005;Andrew Le Gear,Jim Buckley;"Reengineering towards components using ""Reconn-exion"".";http://doi.acm.org/10.1145/1081706.1081765;370-373;4;Doctoral symposium;
2005;Ivonne Erfurth,Wilhelm Rossak;UPEX: user participation by example.;http://doi.acm.org/10.1145/1081706.1081766;374-376;3;Doctoral symposium;
2005;Marco Antonio Barbosa;A refinement calculus for software components and architectures.;http://doi.acm.org/10.1145/1081706.1081767;377-380;4;Doctoral symposium;
2005;Mark Sherriff;Utilizing verification and validation certificates to estimate software defect density.;http://doi.acm.org/10.1145/1081706.1081768;381-384;4;Doctoral symposium;
2005;Wiebe Hordijk,Roel Wieringa;Surveying the factors that influence maintainability: research design.;http://doi.acm.org/10.1145/1081706.1081769;385-388;4;Doctoral symposium;
2004;Alexander L. Wolf;Is security engineering really just good software engineering?;http://doi.acm.org/10.1145/1029894.1029895;1;1;Program analysis;
2004;Alexander Egyed;Resolving uncertainties during trace analysis.;http://doi.acm.org/10.1145/1029894.1029899;3-12;10;Program analysis;
2004;Jurgen Dingel,Hongzhi Liang;Automating comprehensive safety analysis of concurrent programs using verisoft and TXL.;http://doi.acm.org/10.1145/1029894.1029900;13-22;10;Program analysis;
2004;Jeff H. Perkins,Michael D. Ernst;Efficient incremental algorithms for dynamic detection of likely invariants.;http://doi.acm.org/10.1145/1029894.1029901;23-32;10;Program analysis;
2004;Sebastian Uchitel,Robert Chatley,Jeffrey Kramer,Jeffrey N. Magee;System architecture: the context for scenario-based model synthesis.;http://doi.acm.org/10.1145/1029894.1029903;33-42;10;Modeling and requirements;
2004;Sebastian Uchitel,Marsha Chechik;Merging partial behavioural models.;http://doi.acm.org/10.1145/1029894.1029904;43-52;10;Modeling and requirements;
2004;Emmanuel Letier,Axel van Lamsweerde;Reasoning about partial goal satisfaction for requirements and design engineering.;http://doi.acm.org/10.1145/1029894.1029905;53-62;10;Modeling and requirements;
2004;Roman Manevich,Manu Sridharan,Stephen Adams,Manuvir Das,Zhe Yang 0001;PSE: explaining program failures via postmortem static analysis.;http://doi.acm.org/10.1145/1029894.1029907;63-72;10;Error explanation;
2004;Sagar Chaki,Alex Groce,Ofer Strichman;Explaining abstract counterexamples.;http://doi.acm.org/10.1145/1029894.1029908;73-82;10;Error explanation;
2004;Ted Kremenek,Ken Ashcraft,Junfeng Yang,Dawson R. Engler;Correlation exploitation in error ranking.;http://doi.acm.org/10.1145/1029894.1029909;83-93;11;Error explanation;
2004;Joe Marks;The usability problem for home appliances: engineers caused it, engineers can fix it!;http://doi.acm.org/10.1145/1029894.1029896;95;1;Error explanation;
2004;Misha Zitser,Richard P. Lippmann,Timothy R. Leek;Testing static analysis tools using exploitable buffer overflows from open source code.;http://doi.acm.org/10.1145/1029894.1029911;97-106;10;Safety and security;
2004;Licia Capra;Engineering human trust in mobile system collaborations.;http://doi.acm.org/10.1145/1029894.1029912;107-116;10;Safety and security;
2004;Wei Xu,Daniel C. DuVarney,R. Sekar;An efficient and backwards-compatible transformation to ensure memory safety of C programs.;http://doi.acm.org/10.1145/1029894.1029913;117-126;10;Safety and security;
2004;Mira Mezini,Klaus Ostermann;Variability management with feature-oriented programming and aspects.;http://doi.acm.org/10.1145/1029894.1029915;127-136;10;Aspects;
2004;Shriram Krishnamurthi,Kathi Fisler,Michael Greenberg 0002;Verifying aspect advice modularly.;http://doi.acm.org/10.1145/1029894.1029916;137-146;10;Aspects;
2004;Martin C. Rinard,Alexandru Salcianu,Suhabe Bugrara;A classification system and analysis for aspect-oriented programs.;http://doi.acm.org/10.1145/1029894.1029917;147-158;12;Aspects;
2004;Robert J. Walker,Kevin Viggers;Implementing protocols via declarative event patterns.;http://doi.acm.org/10.1145/1029894.1029918;159-169;11;Aspects;
2004;Nancy G. Leveson,Kathryn Anne Weiss;Making embedded software reuse practical and safe.;http://doi.acm.org/10.1145/1029894.1029897;171-178;8;Aspects;
2004;Holger Giese,Sven Burmester,Wilhelm Schafer,Oliver Oberschelp;Modular design and verification of component-based mechatronic systems with online-reconfiguration.;http://doi.acm.org/10.1145/1029894.1029920;179-188;10;Verification;
2004;Jonathan Edwards,Daniel B. Jackson,Emina Torlak;A type system for object models.;http://doi.acm.org/10.1145/1029894.1029921;189-199;11;Verification;
2004;Jianbin Tan,George S. Avrunin,Lori A. Clarke,Shlomo Zilberstein,Stefan Leue;Heuristic-guided counterexample search in FLAVERS.;http://doi.acm.org/10.1145/1029894.1029922;201-210;10;Verification;
2004;Ying Pan,Lei Wang,Lu Zhang,Bing Xie,Fuqing Yang;Relevancy based semantic interoperation of reuse repositories.;http://doi.acm.org/10.1145/1029894.1029924;211-220;10;Development support;
2004;Cleidson Ronald Botelho de Souza,David F. Redmiles,Li-Te Cheng,David R. Millen,John F. Patterson;How a good software practice thwarts collaboration: the multiple roles of APIs in software development.;http://doi.acm.org/10.1145/1029894.1029925;221-230;10;Development support;
2004;Xiaofang Zhang,Michal Young,John Howard Eli Fiskio-Lasseter;Refining code-design mapping with flow analysis.;http://doi.acm.org/10.1145/1029894.1029926;231-240;10;Development support;
2004;Alessandro Orso,Nanjuan Shi,Mary Jean Harrold;Scaling regression testing to large software systems.;http://doi.acm.org/10.1145/1029894.1029928;241-251;11;Testing and reliability;
2004;Maria Jose Suarez Cabal,Javier Tuya;Using an SQL coverage measurement for testing database applications.;http://doi.acm.org/10.1145/1029894.1029929;253-262;10;Testing and reliability;
2004;Paul Luo Li,Mary M. Shaw,James D. Herbsleb,Bonnie K. Ray,Peter Santhanam;Empirical evaluation of defect projection models for widely-deployed production software systems.;http://doi.acm.org/10.1145/1029894.1029930;263-272;10;Testing and reliability;
2003;Giuseppe Longo;Computer modelling and natural phenomena.;http://doi.acm.org/10.1145/940071.940072;1-5;5;FSE;
2003;Leon J. Osterweil;Understanding process and the quest for deeper questions in software engineering research.;http://doi.acm.org/10.1145/940071.940073;6-14;9;FSE;
2003;Ari Jaaksi;Assessing software projects: tools for business owners.;http://doi.acm.org/10.1145/940071.940074;15-18;4;FSE;
2003;Sebastian Uchitel,Jeffrey Kramer,Jeffrey N. Magee;Behaviour model elaboration using partial labelled transition systems.;http://doi.acm.org/10.1145/940071.940076;19-27;9;Requirements engineering and design;
2003;Ralph D. Jeffords,Constance L. Heitmeyer;A strategy for efficiently verifying requirements.;http://doi.acm.org/10.1145/940071.940077;28-37;10;Requirements engineering and design;
2003;Holger Giese,Matthias Tichy,Sven Burmester,Stephan Flake;Towards the compositional verification of real-time UML designs.;http://doi.acm.org/10.1145/940071.940078;38-47;10;Requirements engineering and design;
2003;Don S. Batory,Jia Liu,Jacob Neal Sarvela;Refinements and multi-dimensional separation of concerns.;http://doi.acm.org/10.1145/940071.940079;48-57;10;Requirements engineering and design;
2003;Petri Selonen,Jianli Xu;Validating UML models against architectural profiles.;http://doi.acm.org/10.1145/940071.940081;58-67;10;Software architectures, patterns, and frameworks;
2003;Luciano Baresi,Reiko Heckel,Sebastian Thone,Daniel Varro;Modeling and validation of service-oriented architectures: application vs. style.;http://doi.acm.org/10.1145/940071.940082;68-77;10;Software architectures, patterns, and frameworks;
2003;Jeremy S. Bradbury,Jurgen Dingel;Evaluating and improving the automatic analysis of implicit invocation systems.;http://doi.acm.org/10.1145/940071.940083;78-87;10;Software architectures, patterns, and frameworks;
2003;Giovanni Vigna,Fredrik Valeur,Richard A. Kemmerer;Designing and implementing a family of intrusion detection systems.;http://doi.acm.org/10.1145/940071.940084;88-97;10;Software architectures, patterns, and frameworks;
2003;Gregory M. Kapfhammer,Mary Lou Soffa;A family of test adequacy criteria for database-driven applications.;http://doi.acm.org/10.1145/940071.940086;98-107;10;Testing and test tools;
2003;Nguyen Tran Sy,Yves Deville;Consistency techniques for interprocedural test data generation.;http://doi.acm.org/10.1145/940071.940087;108-117;10;Testing and test tools;
2003;Atif M. Memon,Mary Lou Soffa;Regression testing of GUIs.;http://doi.acm.org/10.1145/940071.940088;118-127;10;Testing and test tools;
2003;Alessandro Orso,Taweesup Apiwattanapong,Mary Jean Harrold;Leveraging field data for impact analysis and regression testing.;http://doi.acm.org/10.1145/940071.940089;128-137;10;Testing and test tools;
2003;James D. Herbsleb,Audris Mockus;Formulation and preliminary test of an empirical theory of coordination in software engineering.;http://doi.acm.org/10.1145/940071.940091;138-137;0;Software process and workflow;
2003;Tore Dyba;Factors of software process improvement success in small and large organizations: an empirical study in the scandinavian context.;http://doi.acm.org/10.1145/940071.940092;148-157;10;Software process and workflow;
2003;Joao W. Cangussu,Raymond A. DeCarlo,Aditya P. Mathur;Monitoring the software test process using statistical process control: a logarithmic approach.;http://doi.acm.org/10.1145/940071.940093;158-167;10;Software process and workflow;
2003;Matthias M. Muller,Frank Padberg;On the economic evaluation of XP projects.;http://doi.acm.org/10.1145/940071.940094;168-177;10;Software process and workflow;
2003;Jens Krinke;Context-sensitive slicing of concurrent programs.;http://doi.acm.org/10.1145/940071.940096;178-187;10;Validation and verification;
2003;Oksana Tkachuk,Matthew B. Dwyer;Adapting side effects analysis for modular program model checking.;http://doi.acm.org/10.1145/940071.940097;188-197;10;Validation and verification;
2003;Dennis Brylow,Jens Palsberg;Deadline analysis of interrupt-driven software.;http://doi.acm.org/10.1145/940071.940098;198-207;10;Validation and verification;
2003;Claus Pahl,Michael Casey;Ontology support for web service processes.;http://doi.acm.org/10.1145/940071.940099;208-216;9;Validation and verification;
2003;Jukka Viljamaa;Reverse engineering framework reuse interfaces.;http://doi.acm.org/10.1145/940071.940101;217-226;10;Software reuse and evolution;
2003;Dirk Ohst,Michael Welle,Udo Kelter;Differences between versions of UML diagrams.;http://doi.acm.org/10.1145/940071.940102;227-236;10;Software reuse and evolution;
2003;Stanislaw Jarzabek,Shubiao Li;"Eliminating redundancies with a ""composition with adaptation"" meta-programming technique.";http://doi.acm.org/10.1145/940071.940104;237-246;10;Software analysis and model checking;
2003;Yung-Pin Cheng,Michal Young,Che-Ling Huang,Chia-Yi Pan;Towards scalable compositional analysis by refactoring design models.;http://doi.acm.org/10.1145/940071.940105;247-256;10;Software analysis and model checking;
2003;Dimitra Giannakopoulou,Jeffrey N. Magee;Fluent model checking for event-based systems.;http://doi.acm.org/10.1145/940071.940106;257-266;10;Software analysis and model checking;
2003;Robby,Matthew B. Dwyer,John Hatcliff;Bogor: an extensible and highly-modular software model checking framework.;http://doi.acm.org/10.1145/940071.940107;267-276;10;Software analysis and model checking;
2003;Fei Xie,James C. Browne;Verified systems by composition from verified components.;http://doi.acm.org/10.1145/940071.940109;277-286;10;Component-based software engineering;
2003;Stephen McCamant,Michael D. Ernst;Predicting problems caused by component upgrades.;http://doi.acm.org/10.1145/940071.940110;287-296;10;Component-based software engineering;
2003;Hridesh Rajan,Kevin J. Sullivan;Eos: instance-level aspects for integrated system design.;http://doi.acm.org/10.1145/940071.940111;291-306;16;Component-based software engineering;
2003;Suan Hsi Yong,Susan Horwitz;Protecting C programs from attacks via invalid pointer dereferences.;http://doi.acm.org/10.1145/940071.940113;307-316;10;Safety and security;
2003;V. Benjamin Livshits,Monica S. Lam;Tracking pointers with path and context sensitivity for bug detection in C programs.;http://doi.acm.org/10.1145/940071.940114;317-326;10;Safety and security;
2003;Yichen Xie,Andy Chou,Dawson R. Engler;ARCHER: using symbolic, path-sensitive analysis to detect memory access errors.;http://doi.acm.org/10.1145/940071.940115;327-336;10;Safety and security;
2003;Koushik Sen,Grigore Rosu,Gul A. Agha;Runtime safety analysis of multithreaded programs.;http://doi.acm.org/10.1145/940071.940116;337-346;10;Safety and security;
2003;Nikunj R. Mehta,Nenad Medvidovic;Composing architectural styles from architectural primitives.;http://doi.acm.org/10.1145/940071.940118;347-350;4;Poster Session;
2003;Kleanthis Thramboulidis;Towards an engineering tool for implementing reusable distributed control systems.;http://doi.acm.org/10.1145/940071.940119;351-354;4;Poster Session;
2003;Antonia Bertolino,Stefania Gnesi;Use case-based testing of product lines.;http://doi.acm.org/10.1145/940071.940120;355-358;4;Poster Session;
2003;Rik Eshuis,Pierre Brimont,Eric Dubois 0001,Bertrand Gregoire,Sophie Ramel;EFFICIENT: a tool set for supporting the modelling and validation of ebXML.;http://doi.acm.org/10.1145/940071.940121;359-362;4;Poster Session;
2003;Simonetta Balsamo,Moreno Marzolla;A simulation-based approach to software performance modeling.;http://doi.acm.org/10.1145/940071.940122;363-366;4;Poster Session;
2003;Alexander Ran,Raimondas Lencevicius;Making sense of runtime architecture for mobile phone software.;http://doi.acm.org/10.1145/940071.940123;367-370;4;Poster Session;
2003;Eunyoung Lee,Andrew W. Appel;Policy-enforced linking of untrusted components.;http://doi.acm.org/10.1145/940071.940124;371-374;4;Poster Session;
2003;Paulo Asterio de Castro Guerra,Cecilia Mary Fischer Rubira,Alexander Romanovsky,Rogerio de Lemos;A fault-tolerant software architecture for COTS-based software systems.;http://doi.acm.org/10.1145/940071.940125;375-378;4;Poster Session;
2003;Richard S. Hall,Humberto Cervantes;Gravity: supporting dynamically available services in client-side applications.;http://doi.acm.org/10.1145/940071.940126;379-382;4;Poster Session;
2002;Andreas Zeller;Isolating cause-effect chains from computer programs.;http://doi.acm.org/10.1145/587051.587053;1-10;10;Dynamic program analysis;
2002;Jeremy W. Nimmer,Michael D. Ernst;Invariant inference for static checking.;http://doi.acm.org/10.1145/587051.587054;11-20;10;Dynamic program analysis;
2002;Christine Julien,Gruia-Catalin Roman;Egocentric context-aware programming in ad hoc mobile environments.;http://doi.acm.org/10.1145/587051.587056;21-30;10;Mobility;
2002;Licia Capra,Wolfgang Emmerich,Cecilia Mascolo;A micro-economic approach to conflict resolution in mobile computing.;http://doi.acm.org/10.1145/587051.587057;31-40;10;Mobility;
2002;Antonia Lopes,Jose Luiz Fiadeiro,Michel Wermelinger;Architectural primitives for distribution and mobility.;http://doi.acm.org/10.1145/587051.587058;41-50;10;Mobility;
2002;Yichen Xie,Dawson R. Engler;Using redundancies to find errors.;http://doi.acm.org/10.1145/587051.587060;51-60;10;Static program analysis;
2002;Glenn Bruns,Satish Chandra 0001;Searching for points-to analysis.;http://doi.acm.org/10.1145/587051.587061;61-70;10;Static program analysis;
2002;Markus Mock,Darren C. Atkinson,Craig Chambers,Susan J. Eggers;Improving program slicing with dynamic points-to data.;http://doi.acm.org/10.1145/587051.587062;71-80;10;Static program analysis;
2002;Gerard J. Holzmann;The logic of bugs.;http://doi.acm.org/10.1145/587051.587064;81-87;7;Award ceremony and keynote;
2002;Harry C. Li,Shriram Krishnamurthi,Kathi Fisler;Verifying cross-cutting features as open systems.;http://doi.acm.org/10.1145/587051.587066;89-98;10;Aspect-oriented programming;
2002;Mark Chu-Carroll,James L. Wright,David Shields;Supporting aggregation in fine grained software configuration management.;http://doi.acm.org/10.1145/587051.587067;99-108;10;Aspect-oriented programming;
2002;Sebastian Uchitel,Jeffrey Kramer,Jeffrey N. Magee;Negative scenarios for implied scenario elicitation.;http://doi.acm.org/10.1145/587051.587069;109-118;10;Requirements analysis;
2002;Emmanuel Letier,Axel van Lamsweerde;Deriving operational software specifications from system goals.;http://doi.acm.org/10.1145/587051.587070;119-128;10;Requirements analysis;
2002;Monika Vetterling,Guido Wimmel,Alexander K. Wisspeintner;Secure systems development based on the common criteria: the PalME project.;http://doi.acm.org/10.1145/587051.587071;129-138;10;Requirements analysis;
2002;Arie Gurfinkel,Benet Devereux,Marsha Chechik;Model exploration with temporal logic query checking.;http://doi.acm.org/10.1145/587051.587073;139-148;10;Modelling;
2002;Jianwei Niu,Joanne M. Atlee,Nancy A. Day;Composable semantics for model-based notations.;http://doi.acm.org/10.1145/587051.587074;149-158;10;Modelling;
2002;Jamieson M. Cobleigh,Leon J. Osterweil,Alexander E. Wise,Barbara Staudt Lerner;Containment units: a hierarchically composable architecture for adaptive systems.;http://doi.acm.org/10.1145/587051.587076;159-165;7;Dynamic response systems;
2002;Bikram Sengupta,Rance Cleaveland;Triggered message sequence charts.;http://doi.acm.org/10.1145/587051.587077;167-176;10;Dynamic response systems;
2001;Andre van der Hoek,Marija Mikic-Rakic,Roshanak Roshandel,Nenad Medvidovic;Taming architectural evolution.;http://doi.acm.org/10.1145/503209.503211;1-10;10;Architecture;
2001;Yoshitomi Morisawa,Koji Torii;An architectural style of product lines for distributed processing systems, and practical selection method.;http://doi.acm.org/10.1145/503209.503212;11-20;10;Architecture;
2001;Michel Wermelinger,Antonia Lopes,Jose Luiz Fiadeiro;A graph based architectural (Re)configuration language.;http://doi.acm.org/10.1145/503209.503213;21-32;12;Architecture;
2001;Timothy J. Sliski,Matthew P. Billmers,Lori A. Clarke,Leon J. Osterweil;An architecture for flexible, evolvable process-driven user-guidance environments.;http://doi.acm.org/10.1145/503209.503214;33-43;11;Architecture;
2001;Nima Kaveh,Wolfgang Emmerich;Deadlock detection in distribution object systems.;http://doi.acm.org/10.1145/503209.503216;44-51;8;Distributed systems;
2001;Ramesh Jagannathan,Paolo A. G. Sivilotti;Increasing client-side confidence in remote component implementations.;http://doi.acm.org/10.1145/503209.503217;52-61;10;Distributed systems;
2001;Daniel B. Jackson,Ilya Shlyakhter,Manu Sridharan;A micromodularity mechanism.;http://doi.acm.org/10.1145/503209.503219;62-73;12;Specification;
2001;Sebastian Uchitel,Jeffrey Kramer,Jeffrey N. Magee;Detecting implied scenarios in message sequence chart specifications.;http://doi.acm.org/10.1145/503209.503220;74-82;9;Specification;
2001;Peter Wendorff;A formal approach to the assessment and improvement of terminological models used in information systems engineering.;http://doi.acm.org/10.1145/503209.503221;83-87;5;Specification;
2001;Yvonne Coady,Gregor Kiczales,Mike Feeley,Greg Smolyn;Using aspectC to improve the modularity of path-specific customization in operating system code.;http://doi.acm.org/10.1145/503209.503223;88-98;11;Modularity;
2001;Kevin J. Sullivan,William G. Griswold,Yuanfang Cai,Ben Hallen;The structure and value of modularity in software design.;http://doi.acm.org/10.1145/503209.503224;99-108;10;Modularity;
2001;Luca de Alfaro,Thomas A. Henzinger;Interface automata.;http://doi.acm.org/10.1145/503209.503226;109-120;12;Component composition;
2001;Paola Inverardi,Massimo Tivoli;Automatic synthesis of deadlock free connectors for COM/DCOM applications.;http://doi.acm.org/10.1145/503209.503227;121-131;11;Component composition;
2001;Leigh A. Davis,Rose F. Gamble,Jamie Payton,Gerdur Jonsdottir,Dennis J. Underwood;A notation for problematic architecture interactions.;http://doi.acm.org/10.1145/503209.503228;132-141;10;Component composition;
2001;Alberto Coen-Porisini,Giovanni Denaro,Carlo Ghezzi,Mauro Pezze;Using symbolic execution for verifying safety-critical systems.;http://doi.acm.org/10.1145/503209.503230;142-151;10;Verification;
2001;Kathi Fisler,Shriram Krishnamurthi;Modular verification of collaboration-based software designs.;http://doi.acm.org/10.1145/503209.503231;152-163;12;Verification;
2001;Yunja Choi,Sanjai Rayadurgam,Mats Per Erik Heimdahl;Automatic abstraction for model checking software systems with interrelated numeric constraints.;http://doi.acm.org/10.1145/503209.503232;164-174;11;Verification;
2001;Norman Ramsey,Elod Csirmaz;An algebraic approach to file synchronization.;http://doi.acm.org/10.1145/503209.503233;175-185;11;Verification;
2001;Gregor Engels,Jochen Malte Kuster,Reiko Heckel,Luuk Groenewegen;A methodology for specifying and analyzing consistency of object-oriented behavioral models.;http://doi.acm.org/10.1145/503209.503235;186-195;10;Real time UML;
2001;Luigi Lavazza,Gabriele Quaroni,Matteo Venturelli;Combining UML and formal notations for modelling real-time systems.;http://doi.acm.org/10.1145/503209.503236;196-206;11;Real time UML;
2001;Chris Luer,David S. Rosenblum;WREN---an environment for component-based development.;http://doi.acm.org/10.1145/503209.503238;207-217;11;Components;
2001;Jens H. Weber-Jahnke;Engineering component-based net-centric systems for embedded applications.;http://doi.acm.org/10.1145/503209.503239;218-228;11;Components;
2001;Robert Bruce Findler,Mario Latendresse,Matthias Felleisen;Behavioral contracts and behavioral subtyping.;http://doi.acm.org/10.1145/503209.503240;229-236;8;Components;
2001;Jon Edvardsson,Mariam Kamkar;Analysis of the constraint solver in UNA based test data generation.;http://doi.acm.org/10.1145/503209.503242;237-245;9;Testing;
2001;William Dickinson,David Leon,Andy Podgurski;Pursuing failure: the distribution of program failures in a profile space.;http://doi.acm.org/10.1145/503209.503243;246-255;10;Testing;
2001;Atif M. Memon,Mary Lou Soffa,Martha E. Pollack;Coverage criteria for GUI testing.;http://doi.acm.org/10.1145/503209.503244;256-267;12;Testing;
2001;Reidar Conradi,Tore Dyba;An empirical study on the utility of formal routines to transfer knowledge and experience.;http://doi.acm.org/10.1145/503209.503246;268-276;9;Experiences and case studies;
2001;Bernd G. Freimut,Susanne Hartkopf,Peter Kaiser,Jyrki Kontio,Werner Kobitzsch;An industrial case study of implementing software risk management.;http://doi.acm.org/10.1145/503209.503247;277-287;11;Experiences and case studies;
2001;Forrest Shull,Jeffrey Carver,Guilherme Travassos;An empirical methodology for introducing software processes.;http://doi.acm.org/10.1145/503209.503248;288-296;9;Experiences and case studies;
2001;Premysl Brada;Component revision identification based on IDL/ADL component specification.;http://doi.acm.org/10.1145/503209.503250;297-298;2;Poster Presentations;
2001;Jacky Estublier,Herve Verjus,Pierre-Yves Cunin;Modelling and managing software federations.;http://doi.acm.org/10.1145/503209.503251;299-300;2;Poster Presentations;
2001;Duncan Clarke,Thierry Jeron,Vlad Rusu,Elena Zinovieva;STG: a tool for generating symbolic test programs and oracles from operational specifications.;http://doi.acm.org/10.1145/503209.503252;301-302;2;Poster Presentations;
2001;David A. Basin,Frank Rittinger,Luca Vigano 0001;A formal data-model of the CORBA security service.;http://doi.acm.org/10.1145/503209.503253;303-304;2;Poster Presentations;
2001;Vugranam C. Sreedhar;York: programming software components.;http://doi.acm.org/10.1145/503209.503254;305-306;2;Poster Presentations;
2001;Vincenzo Ambriola,R. Mark Greenwood;8th European workshop on software process technology: report and future directions.;http://doi.acm.org/10.1145/503209.503256;307-308;2;EWSPT Report;
2001;Robert L. Nord,Daniel J. Paulish,Robert W. Schwanke,Dilip Soni;Software architecture in a changing world: developing design strategies that anticipate change.;http://doi.acm.org/10.1145/503209.503258;309-310;2;Full-day Tutorials;
2001;Wolfgang Emmerich,Nima Kaveh;Component technologies: Java Beans, COM, CORBA, RMI, EJB and the CORBA Component Model.;http://doi.acm.org/10.1145/503209.503259;311-312;2;Full-day Tutorials;
2001;Gregor Kiczales,Erik Hilsdale;Aspect-oriented programming.;http://doi.acm.org/10.1145/503209.503260;313;1;Full-day Tutorials;
2001;Kurt C. Wallnau,Scott A. Hissam,Robert C. Seacord;Half day tutorial in methods of component-based software engineering essential concepts and classroom experience.;http://doi.acm.org/10.1145/503209.503262;314-315;2;Half-day Tutorials;
2001;Martin Lippert,Stefan Roock;Adapting XP to complex application domains.;http://doi.acm.org/10.1145/503209.503263;316-317;2;Half-day Tutorials;
2001;Engin Kirda;Engineering of Web services with XML and XSL.;http://doi.acm.org/10.1145/503209.503264;318-319;2;Half-day Tutorials;
2001;Paul Grunbacher,Barry W. Boehm;EasyWinWin: a groupware-supported methodology for requirements negotiation.;http://doi.acm.org/10.1145/503209.503265;320-321;2;Half-day Tutorials;
2001;Mike Mannion,Hermann Kaindl;Requirements-based product line engineering.;http://doi.acm.org/10.1145/503209.503266;322-323;2;Half-day Tutorials;
2001;Albert Zundorf;From use cases to code---rigorous software development with UML.;http://doi.acm.org/10.1145/503209.503267;324-325;2;Half-day Tutorials;
2001;Karl Aberer,Manfred Hauswirth;Peer-to-peer information systems: concepts and models, state-of-the-art, and future systems.;http://doi.acm.org/10.1145/503209.503268;326-327;2;Half-day Tutorials;
2001;Alexander Ran;Fundamental concepts for practical software architecture.;http://doi.acm.org/10.1145/503209.503269;328-329;2;Half-day Tutorials;
2000;Richard A. DeMillo;Software development for next generation communication networks.;http://portal.acm.org/citation.cfm?id=355045.355047;1;1;FSE;
2000;Martin P. Robillard,Gail C. Murphy;Designing robust Java programs with exceptions.;http://portal.acm.org/citation.cfm?id=355045.355046;2-10;9;FSE;
2000;Joseph E. Hollingsworth,Lori Blankenship,Bruce W. Weide;Experience report: using RESOLVE/C++ for commercial software.;http://portal.acm.org/citation.cfm?id=355045.355048;11-19;9;FSE;
2000;Reimer Behrends,R. E. Kurt Stirewalt;The universe model: an approach for improving the modularity and reliability of concurrent programs.;http://portal.acm.org/citation.cfm?id=355045.355049;20-29;10;FSE;
2000;Atif M. Memon,Martha E. Pollack,Mary Lou Soffa;Automated test oracles for GUIs.;http://portal.acm.org/citation.cfm?id=355045.355050;30-39;10;FSE;
2000;Patrice Godefroid,Lalita Jategaonkar Jagadeesan,Radha Jagadeesan,Konstantin Laufer;Automated systematic testing for constraint-based interactive services.;http://portal.acm.org/citation.cfm?id=355045.355051;40-49;10;FSE;
2000;Sergey Butkevich,Marco Renedo,Gerald Baumgartner,Michal Young;Compiler and tool support for debugging object protocols.;http://portal.acm.org/citation.cfm?id=355045.355052;50-59;10;FSE;
2000;Yunwen Ye,Gerhard G. Fischer,Brent Reeves;Integrating active information delivery and reuse repository systems.;http://portal.acm.org/citation.cfm?id=355045.355053;60-68;9;FSE;
2000;Robert J. Walker,Gail C. Murphy;Implicit context: easing software evolution and reuse.;http://portal.acm.org/citation.cfm?id=355045.355054;69-78;10;FSE;
2000;Richard D. Pethia;Bugs in the programs.;http://portal.acm.org/citation.cfm?id=355045.355056;79;1;FSE;
2000;Tetsuo Yamamoto,Makoto Matsushita,Katsuro Inoue;Accumulative versioning file system Moraine and its application to metrics environment MAME.;http://portal.acm.org/citation.cfm?id=355045.355057;80-87;8;FSE;
2000;Mark Chu-Carroll,Sara Sprenkle;Coven: brewing better collaboration through software configuration management.;http://portal.acm.org/citation.cfm?id=355045.355058;88-97;10;FSE;
2000;Peter F. Sweeney,Frank Tip;Extracting library-based object-oriented applications.;http://portal.acm.org/citation.cfm?id=355045.355059;98-107;10;FSE;
2000;Leon J. Osterweil,Lori A. Clarke,Michael Evangelist,Jeffrey Kramer,H. Dieter Rombach,Alexander L. Wolf;The impact project: determining the impact of software engineering research upon practice (panel session).;http://portal.acm.org/citation.cfm?id=355045.355060;108-109;2;FSE;
2000;Jonathan D. Hay,Joanne M. Atlee;Composing features and resolving interactions.;http://portal.acm.org/citation.cfm?id=355045.355061;110-119;10;FSE;
2000;Gerald Luttgen,Michael von der Beeck,Rance Cleaveland;A compositional approach to statecharts semantics.;http://portal.acm.org/citation.cfm?id=355045.355062;120-129;10;FSE;
2000;Daniel B. Jackson;Automating first-order relational logic.;http://portal.acm.org/citation.cfm?id=355045.355063;130-139;10;FSE;
2000;Marco Bernardo,Paolo Ciancarini,Lorenzo Donatiello;On the formalization of architectural types with process algebras.;http://portal.acm.org/citation.cfm?id=355045.355064;140-148;9;FSE;
2000;Daniel B. Jackson,Kevin J. Sullivan;COM revisited: tool-assisted modelling of an architectural framework.;http://portal.acm.org/citation.cfm?id=355045.355065;149-158;10;FSE;
2000;Gleb Naumovich,Lori A. Clarke;Classifying properties: an alternative to the safety-liveness classification.;http://portal.acm.org/citation.cfm?id=355045.355066;159-168;10;FSE;
2000;Richard F. Rashid;The shape of things to come?;http://portal.acm.org/citation.cfm?id=355045.355067;169;1;FSE;
1999;Manfred Hauswirth,Mehdi Jazayeri;A Component and Communication Model for Push Systems.;http://dx.doi.org/10.1007/3-540-48166-4_3;20-38;19;Software Components;
1999;Cecilia Mascolo,Gian Pietro Picco,Gruia-Catalin Roman;A Fine-Grained Model for Code Mobility.;http://dx.doi.org/10.1007/3-540-48166-4_4;39-56;18;Software Components;
1999;Vered Gafni;Robots: A Real-Time Systems Architectural Style.;http://dx.doi.org/10.1007/3-540-48166-4_5;57-74;18;Software Components;
1999;Brian Warboys,Dharini Balasubramaniam,R. Mark Greenwood,Graham N. C. Kirby,Kenneth R. Mayes,Ronald Morrison,David S. Munro;Collaboration and Composition: Issues for a Second Generation Process Language.;http://dx.doi.org/10.1007/3-540-48166-4_6;75-90;16;Software Process;
1999;Dirk Jager,Ansgar Schleicher,Bernhard Westfechtel;Using UML for Software Process Modeling.;http://dx.doi.org/10.1007/3-540-48166-4_7;91-108;18;Software Process;
1999;Frank Padberg;A Probabilistic Model for Software Projects.;http://dx.doi.org/10.1007/3-540-48166-4_8;109-126;18;Software Process;
1999;Nancy G. Leveson,Mats Per Erik Heimdahl,Jon Damon Reese;Designing Specification Languages for Process Control Systems: Lessons Learned and Steps to the Future.;http://dx.doi.org/10.1007/3-540-48166-4_9;127-145;19;Specification;
1999;Angelo Gargantini,Constance L. Heitmeyer;Using Model Checking to Generate Tests from Requirements Specifications.;http://dx.doi.org/10.1007/3-540-48166-4_10;146-162;17;Specification;
1999;Jeffrey M. Thompson,Mats Per Erik Heimdahl,Steven P. Miller;Specification-Based Prototyping for Embedded Systems.;http://dx.doi.org/10.1007/3-540-48166-4_11;163-179;17;Specification;
1999;Michael Siff,Satish Chandra 0001,Thomas A. Ball,Krishna Kunchithapadam,Thomas W. Reps;Coping with Type Casts in C.;http://dx.doi.org/10.1007/3-540-48166-4_12;180-198;19;Program Analysis;
1999;Donglin Liang,Mary Jean Harrold;Efficient Points-to Analysis for Whole-Program Analysis.;http://dx.doi.org/10.1007/3-540-48166-4_13;199-215;17;Program Analysis;
1999;Thomas A. Ball;The Concept of Dynamic Analysis.;http://dx.doi.org/10.1007/3-540-48166-4_14;216-234;19;Program Analysis;
1999;Atanas Rountev,Barbara G. Ryder,William Landi;Data-Flow Analysis of Program Fragments.;http://dx.doi.org/10.1007/3-540-48166-4_15;235-252;18;Program Analysis;
1999;Andreas Zeller;Yesterday, My Program Worked. Today, It Does Not. Why?;http://dx.doi.org/10.1007/3-540-48166-4_16;253-267;15;Testing and Debugging;
1999;Clara Jaramillo,Rajiv Gupta,Mary Lou Soffa;Comparison Checking: An Approach to Avoid Debugging of Optimized Code.;http://dx.doi.org/10.1007/3-540-48166-4_17;268-284;17;Testing and Debugging;
1999;Juei Chang,Debra J. Richardson;Structural Specification-Based Testing: Automated Support and Experimental Evaluation.;http://dx.doi.org/10.1007/3-540-48166-4_18;285-302;18;Testing and Debugging;
1999;Tibor Gyimothy,Arpad Beszedes,Istvan Forgacs;An Efficient Relevant Slicing Method for Debugging.;http://dx.doi.org/10.1007/3-540-48166-4_19;303-321;19;Testing and Debugging;
1999;Martin P. Robillard,Gail C. Murphy;Analyzing Exception Flow in Java Programs.;http://dx.doi.org/10.1007/3-540-48166-4_20;322-327;6;Java;
1999;Gleb Naumovich,George S. Avrunin,Lori A. Clarke;An Efficient Algorithm for Computing ;http://dx.doi.org/10.1007/3-540-48166-4_21;338-354;17;Java;
1999;Boris Bokowski;CoffeeStrainer: Statically-Checked Constraints on the Definition and Use of Types in Java.;http://dx.doi.org/10.1007/3-540-48166-4_22;355-374;20;Java;
1999;Hugo Fierz;The CIP Method: Component- and Model-Based Construction of Embedded Systems.;http://dx.doi.org/10.1007/3-540-48166-4_23;375-392;18;Architecture and Models;
1999;Michel Wermelinger,Jose Luiz Fiadeiro;Algebraic Software Architecture Reconfiguration.;http://dx.doi.org/10.1007/3-540-48166-4_24;393-409;17;Architecture and Models;
1999;Pascal Fradet,Daniel Le Metayer,Michael Perin;Consistency Checking for Multiple View Software Architectures.;http://dx.doi.org/10.1007/3-540-48166-4_25;410-428;19;Architecture and Models;
1999;Stanislaw Jarzabek,Peter Knauber;Synergy between Component-Based and Generative Approaches.;http://dx.doi.org/10.1007/3-540-48166-4_26;429-445;17;Reuse;
1999;Joachim Bayer,Jean-Francois Girard,Martin Wurthner,Jean-Marc DeBaud,Martin Apel;Transitioning Legacy Assets to a Product Line Architecture.;http://dx.doi.org/10.1007/3-540-48166-4_27;446-463;18;Reuse;
1999;Stephen E. Dossick,Gail E. Kaiser;CHIME: A Metadata-Based Distributed Software Development Environment.;http://dx.doi.org/10.1007/3-540-48166-4_28;464-475;12;Reuse;
1999;Gilles Grimaud,Jean-Louis Lanet,Jean-Jacques Vandewalle;FACADE: A Typed Intermediate Language Dedicated to Smart Cards.;http://dx.doi.org/10.1007/3-540-48166-4_29;476-493;18;Verification and Checking;
1999;Victor A. Braberman,Miguel Felder;Verification of Real-Time Designs: Combining Scheduling Theory with Automatic Formal Verification.;http://dx.doi.org/10.1007/3-540-48166-4_30;494-510;17;Verification and Checking;
1999;Dimitra Giannakopoulou,Jeffrey N. Magee,Jeffrey Kramer;Checking Progress with Action Priority: Is it Fair?;http://dx.doi.org/10.1007/3-540-48166-4_31;511-527;17;Verification and Checking;
1998;Mark Astley,Gul A. Agha;Customizaton and Compositon of Distributed Objects: Middleware Abstractions for Policy Management.;http://doi.acm.org/10.1145/288195.288206;1-9;9;FSE;
1998;Jochen Seemann,Jurgen Wolff von Gudenberg;Pattern-Based Design Recovery of Java Software.;http://doi.acm.org/10.1145/288195.288207;10-16;7;FSE;
1998;Perdita Stevens,Rob Pooley;Systems Reengineering Patterns.;http://doi.acm.org/10.1145/288195.288210;17-23;7;FSE;
1998;Gleb Naumovich,George S. Avrunin;A Conservative Data Flow Algorithm for Detecting All Pairs of Statement That May Happen in Parallel.;http://doi.acm.org/10.1145/288195.288213;24-34;11;FSE;
1998;Jonathan E. Cook,Alexander L. Wolf;Event-Base Detection of Concurrency.;http://doi.acm.org/10.1145/288195.288214;35-45;11;FSE;
1998;Darren C. Atkinson,William G. Griswold;Effective Whole-Program Analysis in the Presence of Pointers.;http://doi.acm.org/10.1145/288195.288217;46-55;10;FSE;
1998;Ralph D. Jeffords,Constance L. Heitmeyer;Automatic Generation of State Invariants from Requirements Specifications.;http://doi.acm.org/10.1145/288195.288218;56-69;14;FSE;
1998;Robert Allen,David Garlan;Formal Modeling and Analysis of the HLA Component Integration Standard.;http://doi.acm.org/10.1145/288195.288251;70-79;10;FSE;
1998;Sylvia Stuurman,Jan van Katwijk;On-Line Change Mechanisms.;http://doi.acm.org/10.1145/288195.288257;80-86;7;FSE;
1998;Michael S. Mahony;Finding a History for Software Engineering.;http://doi.acm.org/10.1145/288195.288260;87;1;FSE;
1998;Shriram Krishnamurthi,Matthias Felleisen;Toward a Formal Theory of Extensible Software.;http://doi.acm.org/10.1145/288195.288269;88-98;11;FSE;
1998;Gregor Snelting,Frank Tip;Reengineering Class Hierarchies Using Concept Analysis.;http://doi.acm.org/10.1145/288195.288273;99-110;12;FSE;
1998;Gou Masuda,Norihiro Sakamoto,Kazuo Ushijima;Applying Design Patterns to Decision Tree Learning System.;http://doi.acm.org/10.1145/288195.288279;111-120;10;FSE;
1998;Daniel B. Jackson;An Intermedicate Design Language and Its Analysis.;http://doi.acm.org/10.1145/288195.288282;121-130;10;FSE;
1998;Michael Karasick;The Architecture of Montana: An Open and Extensible Programming Environment with an Incremental C++.;http://doi.acm.org/10.1145/288195.288284;131-142;12;FSE;
1998;Anne M. Disney,Philip M. Johnson;Investigation Data Quality Problems in the PSP.;http://doi.acm.org/10.1145/288195.288292;143-152;10;FSE;
1998;Phyllis G. Frankl,Oleg Iakounenko;Further Empirical Studies of Test Effectiveness.;http://doi.acm.org/10.1145/288195.288298;153-162;10;FSE;
1998;Jyrki Kontio,Gerhard Getto,Dieter Landes;Experiences in Improving Risk Management Processes Using the Concepts of the Riskit Method.;http://doi.acm.org/10.1145/288195.288301;163-172;10;FSE;
1998;Rajeev Alur,Mihalis Yannakakis;Model Checking of Hierarchical State Machines.;http://doi.acm.org/10.1145/288195.288305;175-188;14;FSE;
1998;Matthew B. Dwyer,Corina S. Pasareanu;Filter-Based Model Checking of Partial Systems.;http://doi.acm.org/10.1145/288195.288307;189-202;14;FSE;
1998;Martin L. Griss;Software Engineering as a Profession: Industry and Academia Working Together.;http://doi.acm.org/10.1145/288195.288311;203-208;6;FSE;
1998;David Garlan,Somesh Jha,David Notkin;Reasoning about Implicit Invocation.;http://doi.acm.org/10.1145/288195.288312;209-221;13;FSE;
1998;Philip W. L. Fong,Robert D. Cameron;Proof Linking: An Architecture for Modular Verification of Dynamically-Linked Mobile Code.;http://doi.acm.org/10.1145/288195.288317;222-230;9;FSE;
1998;Neelam Gupta,Aditya P. Mathur,Mary Lou Soffa;Automated Test Data Generation Using an Iterative Relaxation Method.;http://doi.acm.org/10.1145/288195.288321;231-244;14;FSE;
1997;Nenad Medvidovic,Richard N. Taylor;A Framework for Classifying and Comparing Architecture Description Languages.;http://doi.acm.org/10.1145/267895.267903;60-76;17;Software Architecture;
1997;Gleb Naumovich,George S. Avrunin,Lori A. Clarke,Leon J. Osterweil;Applying Static Analysis to Software Architectures.;http://doi.acm.org/10.1145/267895.267904;77-93;17;Software Architecture;
1997;Theo Dirk Meijler,Serge Demeyer,Robert Engel;Making Design Patterns Explicit in FACE: A Frame Work Adaptive Composition Environment.;http://doi.acm.org/10.1145/267895.267905;94-110;17;Software Architecture;
1997;Graham Allen,Leighton Davies,Goran Lindmark,Even-Andre Karlsson;TTM15 - A Large Multi-Site Improvement Project.;http://doi.acm.org/10.1145/267895.267906;111-124;14;Processes;
1997;Gregor Joeris;Change Management Needs Integrated Process and Configuration Management.;http://doi.acm.org/10.1145/267895.267907;125-141;17;Processes;
1997;Stanley M. Sutton Jr.,Leon J. Osterweil;The Design of a Next-Generation Process Language.;http://doi.acm.org/10.1145/267895.267908;142-158;17;Processes;
1997;Andre van der Hoek,Richard S. Hall,Dennis Heimbigner,Alexander L. Wolf;Software Release Management.;http://doi.acm.org/10.1145/267895.267909;159-175;17;Configuration and Process Tools;
1997;Klaus Pohl,Klaus Weidenhaupt;A Contextual Approach for Process-Integrated Tools.;http://doi.acm.org/10.1145/267895.267910;176-192;17;Configuration and Process Tools;
1997;Jens H. Weber-Jahnke,Wilhelm Schafer,Albert Zundorf;Generic Fuzzy Reasoning Nets as a Basis for Reverse Engineering Relational Database Applications.;http://doi.acm.org/10.1145/267895.267911;193-210;18;Configuration and Process Tools;
1997;Andrea Alborghetti,Angelo Gargantini,Angelo Morzenti;Providing Automated Support to Deductive Analysis of Time Critical Systems.;http://doi.acm.org/10.1145/267895.267912;211-226;16;Formal Analysis;
1997;Shing-Chi Cheung,Dimitra Giannakopoulou,Jeffrey Kramer;Verification of Liveness Properties Using Compositional Reachability Analysis.;http://doi.acm.org/10.1145/267895.267913;227-243;17;Formal Analysis;
1997;Matthew B. Dwyer,Vicki Carr,Laura Hines;Model Checking Graphical User Interfaces Using Abstractions.;http://doi.acm.org/10.1145/267895.267914;244-261;18;Formal Analysis;
1997;Murray Wood,Marc Roper,Andrew Brooks,James Miller;Comparing and Combining Software Defect Detection Techniques: A Replicated Empirical Study.;http://doi.acm.org/10.1145/267895.267915;262-277;16;Empirical Studies;
1997;Christof Ebert;Experiences with Criticality Predictions in Software Development.;http://doi.acm.org/10.1145/267895.267916;278-293;16;Empirical Studies;
1997;Lesley Pek Wee Land,Christopher Sauer,D. Ross Jeffery;Validating the Defect Detection Performance Advantage of Group Designs for Software Reviews: Report of a Laboratory Experiment Using Program Code.;http://doi.acm.org/10.1145/267895.267917;294-309;16;Empirical Studies;
1997;Jules Desharnais,Marc Frappier,Ridha Khedri,Ali Mili;Integration of Sequential Scenarios.;http://doi.acm.org/10.1145/267895.267918;310-326;17;System Modeling;
1997;Gregor Engels,Reiko Heckel,Gabriele Taentzer,Hartmut Ehrig;A View-Oriented Approach to System Modelling Based on Graph Transformation.;http://doi.acm.org/10.1145/267895.267919;327-343;17;System Modeling;
1997;David S. Rosenblum,Alexander L. Wolf;A Design Framework for Internet-Scale Event Observation and Notification.;http://doi.acm.org/10.1145/267895.267920;344-360;17;System Modeling;
1997;Rastislav Bodik,Rajiv Gupta,Mary Lou Soffa;Refining Data Flow Information Using Infeasible Paths.;http://doi.acm.org/10.1145/267895.267921;361-377;17;Testing;
1997;Istvan Forgacs,Antonia Bertolino;Feasible Test Path Selection by Principal Slicing.;http://doi.acm.org/10.1145/267895.267922;378-394;17;Testing;
1997;Premkumar T. Devanbu,Stuart G. Stubblebine;Cryptographic Verification of Test Coverage Claims.;http://doi.acm.org/10.1145/267895.267923;395-413;19;Testing;
1997;Yih-Farn Chen,Emden R. Gansner,Eleftherios Koutsofios;A C++ Data Model Supporting Reachability Analysis and Dead Code Detection.;http://doi.acm.org/10.1145/267895.267924;414-431;18;Program Analysis;
1997;Thomas W. Reps,Thomas A. Ball,Manuvir Das,James R. Larus;The Use of Program Profiling for Software Maintenance with Applications to the Year 2000 Problem.;http://doi.acm.org/10.1145/267895.267925;432-449;18;Program Analysis;
1997;Mats Per Erik Heimdahl,Michael W. Whalen;Reduction and Slicing of Hierarchical State Machines.;http://doi.acm.org/10.1145/267895.267926;450-467;18;Program Analysis;
1997;Martin Schutze,Jan Peter Riegel,Gerhard Zimmermann;A Pattern-Based Application Generator for Building Simulation.;http://doi.acm.org/10.1145/267895.267927;468-482;15;Decomposition and Distribution;
1997;Stephane Ducasse,Tamar Richner;Executable Connectors: Towards Reusable Design Elements.;http://doi.acm.org/10.1145/267895.267928;483-499;17;Decomposition and Distribution;
1997;Gian Pietro Picco,Gruia-Catalin Roman,Peter J. McCann;Expressing Code Mobility in Mobile UNITY.;http://doi.acm.org/10.1145/267895.267929;500-518;19;Decomposition and Distribution;
1997;Even-Andre Karlsson,Lars Taxen;Incremental Development for AXE 10.;http://doi.acm.org/10.1145/267895.267930;519-520;2;Industrial Reports on Projects;
1997;Dewayne E. Perry,Lawrence G. Votta;The Tale of Two Projects - Abstract.;http://doi.acm.org/10.1145/267895.267931;521-522;2;Industrial Reports on Projects;
1997;J. Henk Obbink;Analysis of Software Architectures in High and Low Volume Electronic Systems, Industrial Experience Report.;http://dx.doi.org/10.1007/3-540-63531-9_36;523-524;2;Industrial Reports on Projects;
1997;A. Idri,B. Griech,A. El Iraki;Towards an Adaptation of the COCOMO Cost Model to the Software Measurement Theory.;http://doi.acm.org/10.1145/267895.267932;525-526;2;Industrial Reports on Projects;
1997;Petre Dini,Amina Belkhelladi,Walcelio L. Melo;Formalizing Software Architectures: An Industrial Experience.;http://doi.acm.org/10.1145/267895.267933;527-529;3;Industrial Reports on Projects;
1996;Jeffrey N. Magee,Jeffrey Kramer;Dynamic Structure in Software Architectures.;http://doi.acm.org/10.1145/239098.239104;3-14;12;Papers;
1996;Daniel Le Metayer;Software Architecture Styles as Graph Grammars.;http://doi.acm.org/10.1145/239098.239105;15-23;9;Papers;
1996;Nenad Medvidovic,Peyman Oreizy,Jason E. Robbins,Richard N. Taylor;Using Object-Oriented Typing to Support Architectural Design in the C2 Style.;http://doi.acm.org/10.1145/239098.239106;24-32;9;Papers;
1996;William G. Griswold,Morison I. Chen,Robert W. Bowdidge,J. David Morgenthaler;Tool Support for Planning the Restructuring of Data Abstractions in Large Systems.;http://doi.acm.org/10.1145/239098.239107;33-45;13;Papers;
1996;Linda M. Seiter,Jens Palsberg,Karl J. Lieberherr;Evolution of Object Behavior Using Context Relations.;http://doi.acm.org/10.1145/239098.239108;46-57;12;Papers;
1996;Michael VanHilst,David Notkin;Decoupling Change from Design.;http://doi.acm.org/10.1145/239098.239109;58-69;12;Papers;
1996;Craig Damon,Daniel B. Jackson,Somesh Jha;Checking Relational Specifications With Binary Decision Diagrams.;http://doi.acm.org/10.1145/239098.239110;70-80;11;Papers;
1996;Sean Zhang,Barbara G. Ryder,William Landi;Program Decomposition for Pointer Aliasing: A Step Toward Practical Analyses.;http://doi.acm.org/10.1145/239098.239112;81-92;12;Papers;
1996;Gleb Naumovich,Lori A. Clarke,Leon J. Osterweil;Verification of Communication Protocols Using Data Flow Analysis.;http://doi.acm.org/10.1145/239098.239114;93-105;13;Papers;
1996;Laura K. Dillon,Y. S. Ramakrishna;Generating Oracles from Your Favorite Temporal Logic Specifications.;http://doi.acm.org/10.1145/239098.239116;106-117;12;Papers;
1996;David S. Rosenblum,Elaine J. Weyuker;Predicting the Cost-Effectiveness of Regression Testing Strategies.;http://doi.acm.org/10.1145/239098.239118;118-126;9;Papers;
1996;Ioannis Parissis,Farid Ouabdesselam;Specification-based Testing of Synchronous Software.;http://doi.acm.org/10.1145/239098.239119;127-134;8;Papers;
1996;Michael Siff,Thomas W. Reps;Program Generalization for Software Reuse: From C to C++.;http://doi.acm.org/10.1145/239098.239121;135-146;12;Papers;
1996;Daniel J. Barrett,Alan Kaplan,Jack C. Wileden;Automated Support for Seamless Interoperability in Polylingual Software Systems.;http://doi.acm.org/10.1145/239098.239123;147-155;9;Papers;
1996;Richard J. Anderson,Paul Beame,Steve Burns,William Chan,Francesmary Modugno,David Notkin,Jon Damon Reese;Model Checking Large Software Specifications.;http://doi.acm.org/10.1145/239098.239127;156-166;11;Papers;
1996;Carl A. Gunter;Abstracting Dependencies between Software Configuration Items.;http://doi.acm.org/10.1145/239098.239129;167-178;12;Papers;
1996;Robert Darimont,Axel van Lamsweerde;Formal Refinement Patterns for Goal-Driven Requirements Elaboration.;http://doi.acm.org/10.1145/239098.239131;179-190;12;Papers;
1995;Amy Moormann Zaremski,Jeannette M. Wing;Specification Matching of Software Components.;http://doi.acm.org/10.1145/222124.222135;6-17;12;Papers;
1995;Gail C. Murphy,David Notkin,Kevin J. Sullivan;Software Reflexion Models: Bridging the Gap Between Source and High-Level Models.;http://doi.acm.org/10.1145/222124.222136;18-28;11;Papers;
1995;Rajiv Gupta,Mary Lou Soffa;Hybrid Slicing: An Approach for Refining Static Slices Using Dynamic Information.;http://doi.acm.org/10.1145/222124.222137;29-40;12;Papers;
1995;Thomas W. Reps,Genevieve Rosay;Precise Interprocedural Chopping.;http://doi.acm.org/10.1145/222124.222138;41-52;12;Papers;
1995;Daniel Hoffman,Paul A. Strooper;State Abstraction and Modular Software Development.;http://doi.acm.org/10.1145/222124.222139;53-61;9;Papers;
1995;Alan Fekete;Liveness Conditions in Model-Based Service Specifications: A Case Study.;http://doi.acm.org/10.1145/222124.222140;62-71;10;Papers;
1995;Jose Luiz Fiadeiro,Thomas Stephen Edward Maibaum;Interconnecting Formalisms: Supporting Modularity, Reuse and Incrementality.;http://doi.acm.org/10.1145/222124.222141;72-80;9;Papers;
1995;Elaine J. Weyuker;Using the Consequence of Failures for Testing and Reliability Assessment.;http://doi.acm.org/10.1145/222124.222143;81-91;11;Papers;
1995;Adam A. Porter,Harvey P. Siy,Carol A. Toman,Lawrence G. Votta;An Experiment to Assess the Cost-Benefits of Code Inspections in Large Scale Software Development.;http://doi.acm.org/10.1145/222124.222144;92-103;12;Papers;
1995;Susan Horwitz,Thomas W. Reps,Shmuel Sagiv;Demand Interprocedural Dataflow Analysis.;http://doi.acm.org/10.1145/222124.222146;104-115;12;Papers;
1995;Gail C. Murphy,David Notkin;Lightweight Source Model Extraction.;http://doi.acm.org/10.1145/222124.222147;116-127;12;Papers;
1995;Jeannette M. Wing,Mandana Vaziri;Model Checking Software Systems: A Case Study.;http://doi.acm.org/10.1145/222124.222148;128-139;12;Papers;
1995;Shing-Chi Cheung,Jeffrey Kramer;Compositional Reachability Analysis of Finite-State Distributed Systems with User-Specified Constraints.;http://doi.acm.org/10.1145/222124.222149;140-150;11;Papers;
1995;Andreas Zeller;A Unified Version Model for Configuration Management.;http://doi.acm.org/10.1145/222124.222151;151-160;10;Papers;
1995;Alan Kaplan,Jack C. Wileden;Formalization and Application of a Unifying Model for Name Management.;http://doi.acm.org/10.1145/222124.222152;161-172;12;Papers;
1994;Daniel B. Jackson,Eugene J. Rollins;A New Model of Program Dependences for Reverse Engineering.;http://doi.acm.org/10.1145/193173.195281;2-10;9;FSE;
1994;Thomas W. Reps,Susan Horwitz,Shmuel Sagiv,Genevieve Rosay;Speeding up Slicing.;http://doi.acm.org/10.1145/193173.195287;11-20;10;FSE;
1994;Vahid Mashayekhi,Chris Feulner,John Riedl;CAIS: Collaborative Asynchronous Inspection of Software.;http://doi.acm.org/10.1145/193173.195290;21-34;14;FSE;
1994;Gerard Cece,Alain Finkel,S. Purushothaman Iyer;Duplication, Insertion and Lossiness Errors in Unreliable Communication Channels.;http://doi.acm.org/10.1145/193173.195292;35-43;9;FSE;
1994;Gregory D. Abowd,Alan J. Dix;Integrating Status and Event Phenomena in Formal Specifications of Interactive Systems.;http://doi.acm.org/10.1145/193173.195293;44-52;9;FSE;
1994;James C. Corbett,George S. Avrunin;Towards Scalable Compositional Analysis.;http://doi.acm.org/10.1145/193173.195294;53-61;9;FSE;
1994;Matthew B. Dwyer,Lori A. Clarke;Data Flow Analysis for Verifying Properties of Concurrent Programs.;http://doi.acm.org/10.1145/193173.195295;62-75;14;FSE;
1994;Nicole Levy,G. Smith;A Language-Independent Approach to Specification Construction.;http://doi.acm.org/10.1145/193173.195296;76-86;11;FSE;
1994;David Evans,John V. Guttag,Jim Horning,Yang Meng Tan;LCLint: A Tool for Using Specifications to Check Code.;http://doi.acm.org/10.1145/193173.195297;87-96;10;FSE;
1994;Robert W. Bowdidge,William G. Griswold;Automated Support for Encapsulating Abstract Data Types.;http://doi.acm.org/10.1145/193173.195298;97-110;14;FSE;
1994;Don S. Batory,Jeff Thomas,Marty Sirkin;Reengineering a Complex Application Using a Scalable Data Structure Compiler.;http://doi.acm.org/10.1145/193173.195299;111-120;10;FSE;
1994;Mark T. Vandevoorde,John V. Guttag;Using Specialized Procedures and Specification-Based Analysis to Reduce the Runtime Costs of Modularity.;http://doi.acm.org/10.1145/193173.195300;121-127;7;FSE;
1994;Richard G. Hamlet;Foundations of Software Testing: Dependability Theory.;http://doi.acm.org/10.1145/193173.195400;128-139;12;FSE;
1994;Laura K. Dillon,Qing Yu;Oracles for Checking Temporal Properties of Concurrent Systems.;http://doi.acm.org/10.1145/193173.195401;140-153;14;FSE;
1994;Mary Jean Harrold,Gregg Rothermel;Performing Data Flow Testing on Classes.;http://doi.acm.org/10.1145/193173.195402;154-163;10;FSE;
1994;Mark Moriconi,Xiaolei Qian;Correctness and Composition of Software Architectures.;http://doi.acm.org/10.1145/193173.195403;164-174;11;FSE;
1994;David Garlan,Robert Allen,John Ockerbloom;Exploiting Style in Architectural Design Environments.;http://doi.acm.org/10.1145/193173.195404;175-188;14;FSE;
1993;Tony Hoare;Algebra and Models.;http://doi.acm.org/10.1145/256428.167053;1-8;8;FSE;
1993;Gregory D. Abowd,Robert Allen,David Garlan;Using Style to Understand Descriptions of Software Architecture.;http://doi.acm.org/10.1145/256428.167055;9-20;12;FSE;
1993;Robert M. Balzer,K. Narayanaswamy;Mechanisms for Generic Process Support.;http://doi.acm.org/10.1145/256428.167058;21-32;12;FSE;
1993;Boris Magnusson,Ulf Asklund,Sten Minor;Fine-Grained Revision Control for Collaborative Software Development.;http://doi.acm.org/10.1145/256428.167061;33-41;9;FSE;
1993;William G. Griswold;Direct Update of Data Flow Representations for a Meaning-Preserving Program Restructuring Tool.;http://doi.acm.org/10.1145/256428.167063;42-55;14;FSE;
1993;Peri L. Tarr,Lori A. Clarke;PLEIADES: An Object Management System for Software Engineering Environments.;http://doi.acm.org/10.1145/256428.167065;56-70;15;FSE;
1993;Jiazhen Cai,Robert Paige;Towards Increased Productivity of Algorithm Implementation.;http://doi.acm.org/10.1145/256428.167067;71-78;8;FSE;
1993;Kenneth R. Wood;A Practical Approach to Software Engineering Using Z and the Refinement Calculus.;http://doi.acm.org/10.1145/256428.167068;79-88;10;FSE;
1993;David A. Carrington,David J. Duke,Ian J. Hayes,Jim Welsh;Deriving Modular Designs from Formal Specifications.;http://doi.acm.org/10.1145/256428.167066;89-98;10;FSE;
1993;Robyn R. Lutz;Targeting Safety-Related Errors During Software Requirements Analysis.;http://doi.acm.org/10.1145/256428.167069;99-106;8;FSE;
1993;Lawrence G. Votta;Does Every Inspection Need a Meeting?;http://doi.acm.org/10.1145/256428.167070;107-114;8;FSE;
1993;Shing-Chi Cheung,Jeffrey Kramer;Enhancing Compositional Reachability Analysis with Context Constraints.;http://doi.acm.org/10.1145/256428.167071;115-125;11;FSE;
1993;Jean Paul Bahsoun,Stephan Merz,Corinne Servieres;A Framework for Programming and Formalizing Concurrent Objects.;http://doi.acm.org/10.1145/256428.167072;126-137;12;FSE;
1993;Russell Turpin;A Logical Approach to Data Structures.;http://doi.acm.org/10.1145/256428.167073;138-148;11;FSE;
1993;Francesco Bergadano;Test Case Generation by Means of Learning Techniques.;http://doi.acm.org/10.1145/256428.167074;149-162;14;FSE;
1993;David A. Gustafson,Joo T. Tan,Perla Weaver;Software Measure Specification.;http://doi.acm.org/10.1145/256428.167075;163-168;6;FSE;
1993;Andy Podgurski,Charles Yang;Partition testing, stratified sampling, and cluster analysis.;http://doi.acm.org/10.1145/256428.167076;169-181;13;FSE;
1993;Amy Moormann Zaremski,Jeannette M. Wing;Signature Matching: A Key to Reuse.;http://doi.acm.org/10.1145/256428.167077;182-190;9;FSE;
1993;Don S. Batory,Vivek Singhal,Marty Sirkin,Jeff Thomas;Scalable Software Libraries.;http://doi.acm.org/10.1145/256428.167078;191-199;9;FSE;
