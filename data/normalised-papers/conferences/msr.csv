2016;Tarek M. Ahmed,Cor-Paul Bezemer,Tse-Hsun Chen,Ahmed E. Hassan,Weiyi Shang;Studying the effectiveness of application performance management (APM) tools for detecting performance regressions for web applications: an experience report.;1-12;12;What's fast, green, and sounds like a robot?;
2016;Maria Gomez,Romain Rouvoy,Bram Adams,Lionel Seinturier;Mining test repositories for automatic detection of UI performance regressions in Android apps.;13-24;12;What's fast, green, and sounds like a robot?;
2016;Qi Luo,Denys Poshyvanyk,Mark Grechanik;Mining performance regression inducing code changes in evolving software.;25-36;12;What's fast, green, and sounds like a robot?;
2016;Lingfeng Bao,David Lo,Xin Xia,Xinyu Wang,Cong Tian;How android app developers manage power consumption?: an empirical study by mining power management commits.;37-48;12;What's fast, green, and sounds like a robot?;
2016;Shaiful Alam Chowdhury,Abram Hindle;GreenOracle: estimating software energy consumption with energy measurement corpora.;49-60;12;What's fast, green, and sounds like a robot?;
2016;Patrick Kreutzer,Georg Dotzler,Matthias Ring,Bjorn M. Eskofier,Michael Philippsen;Automatic clustering of code changes.;61-72;12;Plus ça change ...;
2016;Thomas Rolfsnes,Leon Moonen,Stefano Di Alesio,Razieh Behjati,David M. Binkley;Improving change recommendation using aggregated association rules.;73-84;12;Plus ça change ...;
2016;Nicolas Dintzner,Arie van Deursen,Martin Pinzger;FEVER: extracting feature-oriented changes from commits.;85-96;12;Plus ça change ...;
2016;Fabian Trautsch,Steffen Herbold,Philip Makedonski,Jens Grabowski;Adressing problems with external validity of repository mining studies through a smart data platform.;97-108;12;Tools of the trade;
2016;Daniel Rozenberg,Ivan Beschastnikh,Fabian Kosmale,Valerie Poser,Heiko Becker,Marc Palyart,Gail C. Murphy;Comparing repositories visually with repograms.;109-120;12;Tools of the trade;
2016;Ahmed E. Hassan;Raising MSR researchers: an experience report on teaching a graduate seminar course in mining software repositories (MSR).;121-125;5;Orphans (read:novel!);
2016;Kostadin Damevski,Hui Chen,David C. Shepherd,Lori L. Pollock;Interactive exploration of developer interaction traces using a hidden markov model.;126-136;11;Orphans (read:novel!);
2016;Valerio Cosentino,Javier Luis Canovas Izquierdo,Jordi Cabot;Findings from GitHub: methods, datasets and limitations.;137-141;5;Orphans (read:novel!);
2016;Jin Guo 0004,Mona Rahimi,Jane Cleland-Huang,Alexander Rasin,Jane Huffman Hayes,Michael Vierhauser;Cold-start software analytics.;142-153;12;Orphans (read:novel!);
2016;Suhas Kabinna,Cor-Paul Bezemer,Weiyi Shang,Ahmed E. Hassan;Logging library migrations: a case study for the apache software foundation projects.;154-164;11;Orphans (read:novel!);
2016;Tse-Hsun Chen,Weiyi Shang,Jinqiu Yang,Ahmed E. Hassan,Michael W. Godfrey,Mohamed N. Nasser,Parminder Flora;An empirical study on the practice of maintaining object-relational mapping code in Java systems.;165-176;12;The devil is in the details (source code mining);
2016;Waqar Ahmad,Christian Kastner,Joshua Sunshine,Jonathan Aldrich;Inter-app communication in Android: developer challenges.;177-188;12;The devil is in the details (source code mining);
2016;Tushar Sharma,Marios Fragkoulis,Diomidis Spinellis;Does your configuration code smell?;189-200;12;The devil is in the details (source code mining);
2016;Md Tajmilur Rahman,Louis-Philippe Querel,Peter C. Rigby,Bram Adams;Feature toggles: practitioner practices and a case study.;201-211;11;The devil is in the details (source code mining);
2016;Demostenes Sena,Roberta Coelho,Uira Kulesza,Rodrigo Bonifacio;Understanding the exception handling strategies of Java libraries: an empirical study.;212-222;11;The devil is in the details (source code mining);
2016;Daniel Avery,Khanh Hoa Dam,Bastin Tony Roy Savarimuthu,Aditya K. Ghose;Externalization of software behavior by the mining of norms.;223-234;12;Text mining:norms, feelings, youtube, and crashes;
2016;Cassio Castaldi Araujo Blaz,Karin Becker;Sentiment analysis in tickets for IT support.;235-246;12;Text mining:norms, feelings, youtube, and crashes;
2016;Mika Mantyla,Bram Adams,Giuseppe Destefanis,Daniel Graziotin,Marco Ortu;Mining valence, arousal, and dominance: possibilities for detecting burnout and productivity?;247-258;12;Text mining:norms, feelings, youtube, and crashes;
2016;Parisa Moslehi,Bram Adams,Juergen Rilling;On mining crowd-based speech documentation.;259-268;10;Text mining:norms, feelings, youtube, and crashes;
2016;Joshua Charles Campbell,Eddie Antonio Santos,Abram Hindle;The unreasonable effectiveness of traditional information retrieval in crash report deduplication.;269-280;12;Text mining:norms, feelings, youtube, and crashes;
2016;C. Albert Thompson,Gail C. Murphy,Marc Palyart,Marko Gasparic;How software developers use work breakdown relationships in issue repositories.;281-285;5;I've got issues ... and debt;
2016;Tezcan Dilshener,Michel Wermelinger,Yijun Yu;Locating bugs without looking back.;286-290;5;I've got issues ... and debt;
2016;Riivo Kikas,Marlon Dumas,Dietmar Pfahl;Using dynamic and contextual features to predict issue lifetime in GitHub projects.;291-302;12;I've got issues ... and debt;
2016;Lucas Layman,Allen P. Nikora,Joshua Meek,Tim Menzies;Topic modeling of NASA space system problem reports: research in practice.;303-314;12;I've got issues ... and debt;
2016;Gabriele Bavota,Barbara Russo;A large-scale empirical study on self-admitted technical debt.;315-326;12;I've got issues ... and debt;
2016;Stephany Bellomo,Robert L. Nord,Ipek Ozkaya,Mary Popeck;Got technical debt?: surfacing elusive technical debt in issue trackers.;327-338;12;I've got issues ... and debt;
2016;Takashi Ishio,Raula Gaikovina Kula,Tetsuya Kanda,Daniel M. German,Katsuro Inoue;Software ingredients: detection of third-party component reuse in Java software release.;339-350;12;Yuuuge! mining;
2016;Erik Wittern,Philippe Suter,Shriram Rajagopalan;A look at the dynamics of the JavaScript package ecosystem.;351-361;11;Yuuuge! mining;
2016;Hoan Anh Nguyen,Hoan Anh Nguyen,Tien N. Nguyen;A large-scale study on repetitiveness, containment, and composability of routines in open-source projects.;362-373;12;Yuuuge! mining;
2016;Daniel Alencar da Costa,Shane McIntosh,Uira Kulesza,Ahmed E. Hassan;The impact of switching to a rapid release cycle on the integration delay of addressed issues: an empirical study of the mozilla firefox project.;374-385;12;Process improvement;
2016;Daniel Izquierdo-Cortazar,Lars Kurth,Jesus M. Gonzalez-Barahona,Santiago Duenas,Nelson Sekitoleko;Characterization of the Xen project code review process: an experience report.;386-390;5;Process improvement;
2016;Di Yang,Aftab Hussain,Cristina Videira Lopes;From query to usable code: an analysis of stack overflow code snippets.;391-402;12;This session's gonna overflow;
2016;Muhammad Ahasanuzzaman,Muhammad Asaduzzaman,Chanchal Kumar Roy,Kevin A. Schneider;Mining duplicate questions in stack overflow.;402-412;11;This session's gonna overflow;
2016;Bowen Xu,Zhenchang Xing,Xin Xia,David Lo,Qingye Wang,Shanping Li;Domain-specific cross-language relevant question retrieval.;413-424;12;This session's gonna overflow;
2016;Bin Lin 0008,Alexander Serebrenik;Recognizing gender of stack overflow users.;425-429;5;This session's gonna overflow;
2016;Stefanie Beyer,Martin Pinzger;Grouping android tag synonyms on stack overflow.;430-440;11;This session's gonna overflow;
2016;Alexey Zagalsky,Carlos Gomez Teshima,Daniel M. German,Margaret-Anne D. Storey,German Poo-Caamano;How the R community creates and curates knowledge: a comparative study of stack overflow and mailing lists.;441-451;11;This session's gonna overflow;
2016;Megan Squire;Data sets: the circle of life in ruby hosting, 2003-2015.;452-459;8;Data showcase;
2016;Xin Yang,Raula Gaikovina Kula,Norihiro Yoshida,Hajimu Iida;Mining the modern code review repositories: a dataset of people, process and product.;460-463;4;Data showcase;
2016;Sven Amann,Sarah Nadi,Hoan A. Nguyen,Tien N. Nguyen,Mira Mezini;MUBench: a benchmark for API-misuse detectors.;464-467;4;Data showcase;
2016;Kevin Allix,Tegawende F. Bissyande,Jacques Klein,Yves Le Traon;AndroZoo: collecting millions of Android apps for the research community.;468-471;4;Data showcase;
2016;Jiaxin Zhu,Minghui Zhou,Hong Mei;Multi-extract and multi-level dataset of mozilla issue tracking history.;472-475;4;Data showcase;
2016;Sebastian Proksch,Sven Amann,Sarah Nadi,Mira Mezini;A dataset of simplified syntax trees for C#.;476-479;4;Data showcase;
2016;Marco Ortu,Alessandro Murgia,Giuseppe Destefanis,Parastou Tourani,Roberto Tonelli,Michele Marchesi,Bram Adams;The emotional side of software developers in JIRA.;480-483;4;Data showcase;
2016;Mary Beth Kery,Claire Le Goues,Brad A. Myers;Examining programmer practices for locally handling exceptions.;484-487;4;Challenge;
2016;Themistoklis G. Diamantopoulos,Klearchos Thomopoulos,Andreas L. Symeonidis;QualBoa: reusability-aware recommendations of source code components.;488-491;4;Challenge;
2016;Casimir Desarmeaux,Andrea Pecatikov,Shane McIntosh;The dispersion of build maintenance activity across maven lifecycle phases.;492-495;4;Challenge;
2016;Jacob G. Barnett,Charles K. Gathuru,Luke S. Soldano,Shane McIntosh;The relationship between commit message detail and defect proneness in Java projects on GitHub.;496-499;4;Challenge;
2016;Suman Nakshatri,Maithri Hegde,Sahithi Thandra;Analysis of exception handling patterns in Java projects: an empirical study.;500-503;4;Challenge;
2016;Eddie Antonio Santos,Abram Hindle;Judging a commit by its cover: correlating commit message entropy with build status on travis-CI.;504-507;4;Challenge;
2016;Shaiful Alam Chowdhury,Abram Hindle;Characterizing energy-aware software projects: are they different?;508-511;4;Challenge;
2016;Mauricio Soto,Ferdian Thung,Chu-Pan Wong,Claire Le Goues,David Lo;A deeper look into bug fixes: patterns, replacements, deletions, and additions.;512-515;4;Challenge;
2016;Muhammad Asaduzzaman,Muhammad Ahasanuzzaman,Chanchal Kumar Roy,Kevin A. Schneider;How developers use exception handling in Java?;516-519;4;Challenge;
2016;Vinayak Sinha,Alina Lazar,Bonita Sharif;Analyzing developer sentiment in commit logs.;520-523;4;Challenge;
2015;Radu Marinescu;Confessions of a Worldly Software Miner.;1;1;Keynote;
2015;Michaela Greiler,Kim Sebastian Herzig,Jacek Czerwonka;Code Ownership and Software Quality: A Replication Study.;2-12;11;Practice Papers (Reports from the Trenches);
2015;Masatomo Hashimoto,Masaaki Terai,Toshiyuki Maeda,Kazuo Minami;Extracting Facts from Performance Tuning History of Scientific Applications for Predicting Effective Optimization Patterns.;13-23;11;Practice Papers (Reports from the Trenches);
2015;Pietro Abate,Roberto Di Cosmo,Louis Gesbert,Fabrice Le Fessant,Ralf Treinen,Stefano Zacchiroli;Mining Component Repositories for Installability Issues.;24-33;10;Practice Papers (Reports from the Trenches);
2015;Baishakhi Ray,Meiyappan Nagappan,Christian Bird,Nachiappan Nagappan,Thomas Zimmermann 0001;The Uniqueness of Changes: Characteristics and Applications.;34-44;11;Everything Changes (Or Stays the Same);
2015;Yujuan Jiang,Bram Adams;Co-evolution of Infrastructure and Source Code - An Empirical Study.;45-55;11;Everything Changes (Or Stays the Same);
2015;Irineu Moura,Gustavo Pinto,Felipe Ebert,Fernando Castor Filho;Mining Energy-Aware Commits.;56-67;12;Everything Changes (Or Stays the Same);
2015;Zhongpeng Lin,Jim Whitehead;Why Power Laws? An Explanation from Fine-Grained Code Changes.;68-75;8;Everything Changes (Or Stays the Same);
2015;Lee Martie,Andre van der Hoek;Sameness: An Experiment in Code Search.;76-87;12;Everything Changes (Or Stays the Same);
2015;Motahareh Bahrami Zanjani,Huzefa H. Kagdi,Christian Bird;Using Developer-Interaction Trails to Triage Change Requests.;88-98;11;Interaction Data and App Mining;
2015;Tarek M. Ahmed,Weiyi Shang,Ahmed E. Hassan;An Empirical Study of the Copy and Paste Behavior during Development.;99-110;12;Interaction Data and App Mining;
2015;Mario Linares Vasquez,Martin White,Carlos Bernal-Cardenas,Kevin Moran,Denys Poshyvanyk;Mining Android App Usages for Generating Actionable GUI-Based Execution Scenarios.;111-122;12;Interaction Data and App Mining;
2015;William Martin,Mark Harman,Yue Jia,Federica Sarro,Yuanyuan Zhang;The App Sampling Problem for App Store Mining.;123-133;11;Interaction Data and App Mining;
2015;Roberta Coelho,Lucas Almeida,Georgios Gousios,Arie van Deursen;Unveiling Exception Handling Bug Hazards in Android Based on GitHub and Google Code Issues.;134-145;12;Interaction Data and App Mining;
2015;Amiangshu Bosu,Michaela Greiler,Christian Bird;Characteristics of Useful Code Reviews: An Empirical Study at Microsoft.;146-156;11;Code Review (That Passed Peer Review);
2015;Vincent Hellendoorn,Premkumar T. Devanbu,Alberto Bacchelli;Will They Like This? Evaluating Code Contributions with Language Models.;157-167;11;Code Review (That Passed Peer Review);
2015;Patanamon Thongtanunam,Shane McIntosh,Ahmed E. Hassan,Hajimu Iida;Investigating Code Review Practices in Defective Files: An Empirical Study of the Qt System.;168-179;12;Code Review (That Passed Peer Review);
2015;Yida Tao,Sunghun Kim;Partitioning Composite Code Changes to Facilitate Code Review.;180-190;11;Code Review (That Passed Peer Review);
2015;Christian Bird,Trevor Carnahan,Michaela Greiler;Lessons Learned from Building and Deploying a Code Review Analytics Platform.;191-201;11;Code Review (That Passed Peer Review);
2015;Kelly Blincoe,Francis Harrison,Daniela E. Herlea;Ecosystems in GitHub and a Method for Ecosystem Identification Using Reference Coupling.;202-211;10;Ecosystems, APIs, and Architecture;
2015;Maelick Claes,Tom Mens,Roberto Di Cosmo,Jerome Vouillon;A Historical Analysis of Debian Package Incompatibilities.;212-223;12;Ecosystems, APIs, and Architecture;
2015;Wei Wang 0001,Haroon Malik,Michael W. Godfrey;Recommending Posts concerning API Issues in Developer Q&A Sites.;224-234;11;Ecosystems, APIs, and Architecture;
2015;Duc Minh Le,Pooyan Behnamghader,Joshua Garcia,Daniel Link,Arman Shahbazian,Nenad Medvidovic;An Empirical Study of Architectural Change in Open-Source Software Systems.;235-245;11;Ecosystems, APIs, and Architecture;
2015;Ehsan Kouroshfar,Mehdi Mirakhorli,Hamid Bagheri,Lu Xiao,Sam Malek,Yuanfang Cai;A Study on the Role of Software Architecture in the Evolution and Quality of Software.;246-257;12;Ecosystems, APIs, and Architecture;
2015;Ripon Kumar Saha,Julia L. Lawall,Sarfraz Khurshid,Dewayne E. Perry;"Are These Bugs Really ""Normal""?";258-268;11;Scary Stuff:Bugs, Risks, and Vulnerabilities;
2015;Felivel Camilo,Andrew Meneely,Meiyappan Nagappan;Do Bugs Foreshadow Vulnerabilities? A Study of the Chromium Project.;269-279;11;Scary Stuff:Bugs, Risks, and Vulnerabilities;
2015;Morakot Choetkiertikul,Khanh Hoa Dam,Truyen Tran,Aditya K. Ghose;Characterization and Prediction of Issue-Related Risks in Software Projects.;280-291;12;Scary Stuff:Bugs, Risks, and Vulnerabilities;
2015;Gregory Burlet,Abram Hindle;An Empirical Study of End-User Programmers in the Computer Music Community.;292-302;11;Computer Musicians Bullied for Using Gists;
2015;Marco Ortu,Bram Adams,Giuseppe Destefanis,Parastou Tourani,Michele Marchesi,Roberto Tonelli;Are Bullies More Productive? Empirical Study of Affectiveness vs. Issue Fixing Time.;303-313;11;Computer Musicians Bullied for Using Gists;
2015;Weiliang Wang,German Poo-Caamano,Evan Wilde,Daniel M. German;What Is the Gist? Understanding the Use of Public Gists on GitHub.;314-323;10;Computer Musicians Bullied for Using Gists;
2015;Yuhao Wu,Yuki Manabe,Tetsuya Kanda,Daniel M. German,Katsuro Inoue;A Method to Detect License Inconsistencies in Large-Scale Open Source Projects.;324-333;10;Licenses, Deep Learning, and Process Mining;
2015;Martin White,Christopher Vendome,Mario Linares Vasquez,Denys Poshyvanyk;Toward Deep Learning Software Repositories.;334-345;12;Licenses, Deep Learning, and Process Mining;
2015;Monika Gupta 0003,Ashish Sureka,Srinivas Padmanabhuni,Allahbaksh M. Asadullah;Identifying Software Process Management Challenges: Survey of Practitioners in a Large Global IT Company.;346-356;11;Licenses, Deep Learning, and Process Mining;
2015;Erik van der Veen,Georgios Gousios,Andy Zaidman;Automatically Prioritizing Pull Requests.;357-361;5;Short Papers;
2015;Claudia Hauff,Georgios Gousios;Matching GitHub Developer Profiles to Job Advertisements.;362-366;5;Short Papers;
2015;Yue Yu,Huaimin Wang,Vladimir Filkov,Premkumar T. Devanbu,Bogdan Vasilescu;Wait for It: Determinants of Pull Request Evaluation Latency on GitHub.;367-371;5;Short Papers;
2015;Yoshiki Higo,Akio Ohtani,Shinpei Hayashi,Hideaki Hata,Shinji Kusumoto;Toward Reusing Code Changes.;372-376;5;Short Papers;
2015;Mehdi Mirakhorli,Jane Cleland-Huang;Modifications, Tweaks, and Bug Fixes in Architectural Tactics.;377-380;4;Short Papers;
2015;Adriaan Labuschagne,Reid Holmes;Do Onboarding Programs Work?;381-385;5;Short Papers;
2015;Marcus Schumacher,Colin Atkinson;An Enhanced Graph-Based Infrastructure for Software Search Engines.;386-390;5;Short Papers;
2015;Samuel M. Donadelli,Yue Cai Zhu,Peter C. Rigby;Organizational Volatility and Post-release Defects: A Replication Case Study Using Data from Google Chrome.;391-395;5;Short Papers;
2015;Vibha Sinha,Diptikalyan Saha,Pankaj Dhoolia,Rohan Padhye,Senthil Mani;Detecting and Mitigating Secret-Key Leaks in Source Code Repositories.;396-400;5;Short Papers;
2015;Luca Ponzanelli,Andrea Mocci,Michele Lanza;Summarizing Complex Development Artifacts by Mining Heterogeneous Data.;401-405;5;Short Papers;
2015;Neelamadhav Gantayat,Pankaj Dhoolia,Rohan Padhye,Senthil Mani,Vibha Sinha;The Synergy between Voting and Acceptance of Answers on StackOverflow - Or the Lack Thereof.;406-409;4;Mining Challenge;
2015;Maarten Duijn,Adam Kucera,Alberto Bacchelli;Quality Questions Need Quality Code: Classifying Code Fragments on Stack Overflow.;410-413;4;Mining Challenge;
2015;Jeffrey Goderie,Brynjolfur Mar Georgsson,Bastiaan van Graafeiland,Alberto Bacchelli;ETA: Estimated Time of Answer Predicting Response Time in Stack Overflow.;414-417;4;Mining Challenge;
2015;Haroon Malik,Peng Zhao,Michael W. Godfrey;Going Green: An Exploratory Analysis of Energy-Related Questions.;418-421;4;Mining Challenge;
2015;Shaiful Alam Chowdhury,Abram Hindle;Mining StackOverflow to Filter Out Off-Topic IRC Discussion.;422-425;4;Mining Challenge;
2015;Mohammad Masudur Rahman,Chanchal Kumar Roy;An Insight into the Unresolved Questions at Stack Overflow.;426-429;4;Mining Challenge;
2015;Fabio Calefato,Filippo Lanubile,Maria Concetta Marasciulo,Nicole Novielli;Mining Successful Answers in Stack Overflow.;430-433;4;Mining Challenge;
2015;Yong Jin,Xin Yang,Raula Gaikovina Kula,Eunjong Choi,Katsuro Inoue,Hajimu Iida;Quick Trigger on Stack Overflow: A Study of Gamification-Influenced Member Tendencies.;434-437;4;Mining Challenge;
2015;Verena Honsel,Steffen Herbold,Jens Grabowski;Intuition vs. Truth: Evaluation of Common Myths about StackOverflow Posts.;438-441;4;Mining Challenge;
2015;Selman Ercan,Quinten Stokkink,Alberto Bacchelli;Automatic Assessments of Code Explanations: Predicting Answering Times on Stack Overflow.;442-445;4;Mining Challenge;
2015;Jie Zou,Ling Xu,Weikang Guo,Meng Yan,Dan Yang,Xiaohong Zhang;Which Non-functional Requirements Do Developers Focus On? An Empirical Study on Stack Overflow Using Topic Analysis.;446-449;4;Mining Challenge;
2015;Andrew Marder;Stack Overflow Badges and User Behavior: An Econometric Approach.;450-453;4;Mining Challenge;
2015;Themistoklis G. Diamantopoulos,Andreas L. Symeonidis;Employing Source Code Information to Improve Question-Answering in Stack Overflow.;454-457;4;Mining Challenge;
2015;Rogier Slag,Mike de Waard,Alberto Bacchelli;One-Day Flies on StackOverflow - Why the Vast Majority of StackOverflow Users Only Posts Once.;458-461;4;Mining Challenge;
2015;Diomidis Spinellis;A Repository with 44 Years of Unix Evolution.;462-465;4;Data Showcase;
2015;Stefano Zacchiroli;The Debsources Dataset: Two Decades of Debian Source Code Metadata.;466-469;4;Data Showcase;
2015;Daniel M. German,Bram Adams,Ahmed E. Hassan;A Dataset of the Activity of the Git Super-repository of Linux in 2012.;470-473;4;Data Showcase;
2015;Luca Ponzanelli,Andrea Mocci,Michele Lanza;StORMeD: Stack Overflow Ready Made Data.;474-477;4;Data Showcase;
2015;Jesus M. Gonzalez-Barahona,Gregorio Robles,Daniel Izquierdo-Cortazar;The MetricsGrimoire Database Collection.;478-481;4;Data Showcase;
2015;Fabio Palomba,Dario Di Nucci,Michele Tufano,Gabriele Bavota,Rocco Oliveto,Denys Poshyvanyk,Andrea De Lucia;Landfill: An Open Dataset of Code Smells with Public Evaluation.;482-485;4;Data Showcase;
2015;Titus Barik,Kevin Lubick,Justin Smith,John Slankas,Emerson R. Murphy-Hill;Fuse: A Reproducible, Extendable, Internet-Scale Corpus of Spreadsheets.;486-489;4;Data Showcase;
2015;Andreas Mauczka,Florian Brosch,Christian Schanes,Thomas Grechenig;Dataset of Developer-Labeled Commit Messages.;490-493;4;Data Showcase;
2015;Harald Altinger,Sebastian Siegl,Yanja Dajsuren,Franz Wotawa;A Novel Industry Grade Dataset for Fault Prediction Based on Model-Driven Developed Automotive Embedded Software.;494-497;4;Data Showcase;
2015;Mayy Habayeb,Andriy V. Miranskyy,Syed Shariyar Murtaza,Leotis Buchanan,Ayse Bener;The Firefox Temporal Defect Dataset.;498-501;4;Data Showcase;
2015;Michel Wermelinger,Yijun Yu;An Architectural Evolution Dataset.;502-505;4;Data Showcase;
2015;Anand Ashok Sawant,Alberto Bacchelli;A Dataset for API Usage.;506-509;4;Data Showcase;
2015;Vassilios Karakoidas,Dimitrios Mitropoulos,Panos Louridas,Georgios Gousios,Diomidis Spinellis;Generating the Blueprints of the Java Ecosystem.;510-513;4;Data Showcase;
2015;Bogdan Vasilescu,Alexander Serebrenik,Vladimir Filkov;A Data Set for Social Diversity Studies of GitHub Teams.;514-517;4;Data Showcase;
2015;Masao Ohira,Yutaro Kashiwa,Yosuke Yamatani,Hayato Yoshiyuki,Yoshiya Maeda,Nachai Limsettho,Keisuke Fujino,Hideaki Hata,Akinori Ihara,Ken-ichi Matsumoto;A Dataset of High Impact Bugs: Manually-Classified Issue Reports.;518-521;4;Data Showcase;
2015;Daniel E. Krutz,Mehdi Mirakhorli,Samuel A. Malachowsky,Andres Ruiz,Jacob Peterson,Andrew Filipski,Jared Smith;A Dataset of Open-Source Android Applications.;522-525;4;Data Showcase;
2014;Audris Mockus;Is mining software repositories data science? (keynote).;1;1;Keynote;
2014;Mario Linares Vasquez,Gabriele Bavota,Carlos Bernal-Cardenas,Rocco Oliveto,Massimiliano Di Penta,Denys Poshyvanyk;Mining energy-greedy API usage patterns in Android apps: an empirical study.;2-11;10;Green Mining;
2014;Abram Hindle,Alex Wilson,Kent Rasmussen,E. Jed Barlow,Joshua Charles Campbell,Stephen Romansky;GreenMiner: a hardware based mining software repositories software energy consumption framework.;12-21;10;Green Mining;
2014;Gustavo Pinto,Fernando Castor Filho,Yu David Liu;Mining questions about software energy consumption.;22-31;10;Green Mining;
2014;Manishankar Mondal,Chanchal Kumar Roy,Kevin A. Schneider;Prediction and ranking of co-change candidates for clones.;32-41;10;Code Clones and Origin Analysis;
2014;Daniela Steidl,Benjamin Hummel,Elmar Jurgens;Incremental origin analysis of source code files.;42-51;10;Code Clones and Origin Analysis;
2014;Lisong Guo,Julia L. Lawall,Gilles Muller;Oops! where did that code snippet come from?;52-61;10;Code Clones and Origin Analysis;
2014;Mona Erfani Joorabchi,Mehdi MirzaAghaei,Ali Mesbah 0001;Works for me! characterizing non-reproducible bug reports.;62-71;10;Bug Characterizing;
2014;Harold Valdivia Garcia,Emad Shihab;Characterizing and predicting blocking bugs in open source projects.;72-81;10;Bug Characterizing;
2014;Tse-Hsun Chen,Meiyappan Nagappan,Emad Shihab,Ahmed E. Hassan;An empirical study of dormant bugs.;82-91;10;Bug Characterizing;
2014;Eirini Kalliamvakou,Georgios Gousios,Kelly Blincoe,Leif Singer,Daniel M. German,Daniela E. Herlea;The promises and perils of mining GitHub.;92-101;10;Mining Repos and QA Sites;
2014;Luca Ponzanelli,Gabriele Bavota,Massimiliano Di Penta,Rocco Oliveto,Michele Lanza;Mining StackOverflow to turn the IDE into a self-confident programming prompter.;102-111;10;Mining Repos and QA Sites;
2014;Kartik Bajaj,Karthik Pattabiraman,Ali Mesbah 0001;Mining questions asked by web developers.;112-121;10;Mining Repos and QA Sites;
2014;Monika Gupta 0003,Ashish Sureka,Srinivas Padmanabhuni;Process mining multiple repositories for software defect resolution from control and organizational perspective.;122-131;10;Mining Repos and QA Sites;
2014;Varun Tulsian,Aditya Kanade,Rahul Kumar,Akash Lal,Aditya V. Nori;MUX: algorithm selection for software model checkers.;132-141;10;Mining Applications;
2014;Jeff Anderson,Saeed Salem,Hyunsook Do;Improving the effectiveness of test suite through mining historical data.;142-151;10;Mining Applications;
2014;Quinn Hanam,Lin Tan,Reid Holmes,Patrick Lam;Finding patterns in static analysis alerts: improving actionable alert ranking.;152-161;10;Mining Applications;
2014;Motahareh Bahrami Zanjani,George Swartzendruber,Huzefa H. Kagdi;Impact analysis of change requests on source code based on interaction and commit histories.;162-171;10;Mining Applications;
2014;Takafumi Fukushima,Yasutaka Kamei,Shane McIntosh,Kazuhiro Yamashita,Naoyasu Ubayashi;An empirical study of just-in-time defect prediction using cross-project models.;172-181;10;Defect Prediction;
2014;Feng Zhang 0001,Audris Mockus,Iman Keivanloo,Ying Zou;Towards building a universal defect prediction model.;182-191;10;Defect Prediction;
2014;Shane McIntosh,Yasutaka Kamei,Bram Adams,Ahmed E. Hassan;The impact of code review coverage and code review participation on software quality: a case study of the qt, VTK, and ITK projects.;192-201;10;Code Review and Code Search;
2014;Moritz Beller,Alberto Bacchelli,Andy Zaidman,Elmar Jurgens;Modern code reviews in open-source projects: which problems do they fix?;202-211;10;Code Review and Code Search;
2014;Otavio Augusto Lazzarini Lemos,Adriano Carvalho de Paula,Felipe Capodifoglio Zanichelli,Cristina Videira Lopes;Thesaurus-based automatic query expansion for interface-driven code search.;212-221;10;Code Review and Code Search;
2014;Gregorio Robles,Jesus M. Gonzalez-Barahona,Carlos Cervigon,Andrea Capiluppi,Daniel Izquierdo-Cortazar;Estimating development effort in Free/Open source software projects by mining software repositories: a case study of OpenStack.;222-231;10;Effort Estimation and Reuse;
2014;Thanh H. D. Nguyen,Meiyappan Nagappan,Ahmed E. Hassan,Mohamed N. Nasser,Parminder Flora;An industrial case study of automatically identifying performance regression-causes.;232-241;10;Effort Estimation and Reuse;
2014;Mario Linares Vasquez,Andrew Holtzhauer,Carlos Bernal-Cardenas,Denys Poshyvanyk;Revisiting Android reuse studies in the context of code obfuscation and library usages.;242-251;10;Effort Estimation and Reuse;
2014;Joshua Charles Campbell,Abram Hindle,Jose Nelson Amaral;Syntax errors just aren't natural: improving error reporting with language models.;252-261;10;Mining Mix;
2014;Alessandro Murgia,Parastou Tourani,Bram Adams,Marco Ortu;Do developers feel emotions? an exploratory analysis of emotions in software artifacts.;262-271;10;Mining Mix;
2014;Rebecca Tiarks,Walid Maalej;How does a typical tutorial for mobile development look like?;272-281;10;Mining Mix;
2014;Ghazaleh Khodabandelou,Charlotte Hug,Rebecca Deneckere,Camille Salinesi;Unsupervised discovery of intentional process models from event logs.;282-291;10;Mining Mix;
2014;Beatrice Akerblom,Jonathan Stendahl,Mattias Tumlin,Tobias Wrigstad;Tracing dynamic features in python programs.;292-295;4;Short Research/Practice Papers;
2014;Pavneet Singh Kochhar,Tien-Duy B. Le,David Lo;It's not a bug, it's a feature: does misclassification affect bug localization?;296-299;4;Short Research/Practice Papers;
2014;Thorsten Merten,Bastian Mager,Simone Bursner,Barbara Paech;Classifying unstructured data into natural language text and technical information.;300-303;4;Short Research/Practice Papers;
2014;Yuriy Tymchuk,Andrea Mocci,Michele Lanza;Collaboration in open-source projects: myth or reality?;304-307;4;Short Research/Practice Papers;
2014;Alina Lazar,Sarah Ritchey,Bonita Sharif;Improving the accuracy of duplicate bug report detection using textual similarity measures.;308-311;4;Short Research/Practice Papers;
2014;Maria Kechagia,Diomidis Spinellis;Undocumented and unchecked: exceptions that spell trouble.;312-315;4;Short Research/Practice Papers;
2014;Remco Bloemen,Chintan Amrit,Stefan Kuhlmann,Gonzalo Ordonez-Matamoros;Innovation diffusion in open source software: preliminary analysis of dependency changes in the gentoo portage package database.;316-319;4;Short Research/Practice Papers;
2014;Katja Kevic,Thomas Fritz;A dictionary to translate change tasks to source code.;320-323;4;Short Research/Practice Papers;
2014;Nathan Klein,Christopher S. Corley,Nicholas A. Kraft;New features for duplicate bug detection.;324-327;4;Short Research/Practice Papers;
2014;Oleksii Kononenko,Olga Baysal,Reid Holmes,Michael W. Godfrey;Mining modern repositories with elasticsearch.;328-331;4;Short Research/Practice Papers;
2014;Rohan Padhye,Senthil Mani,Vibha Sinha;A study of external community contribution to open-source projects on GitHub.;332-335;4;Mining Challenge;
2014;Jyoti Sheoran,Kelly Blincoe,Eirini Kalliamvakou,Daniela E. Herlea,Jordan Ell;"Understanding ""watchers"" on GitHub.";336-339;4;Mining Challenge;
2014;Joao Brunet,Gail C. Murphy,Ricardo Terra,Jorge Cesar Abrantes de Figueiredo,Dalton Serey Guerrero;Do developers discuss design?;340-343;4;Mining Challenge;
2014;Kazuhiro Yamashita,Shane McIntosh,Yasutaka Kamei,Naoyasu Ubayashi;Magnet or sticky? an OSS project-by-project typology.;344-347;4;Mining Challenge;
2014;Daniel Pletea,Bogdan Vasilescu,Alexander Serebrenik;Security and emotion: sentiment analysis of security discussions on GitHub.;348-351;4;Mining Challenge;
2014;Emitza Guzman,David Azocar,Yang Li;Sentiment analysis of commit comments in GitHub: an empirical study.;352-355;4;Mining Challenge;
2014;Nicholas Drivalos Matragkas,James R. Williams,Dimitris S. Kolovos,Richard F. Paige;Analysing the 'biodiversity' of open source ecosystems: the GitHub case.;356-359;4;Mining Challenge;
2014;Karan Aggarwal,Abram Hindle,Eleni Stroulia;Co-evolution of project documentation and popularity within github.;360-363;4;Mining Challenge;
2014;Mohammad Masudur Rahman,Chanchal Kumar Roy;An insight into the pull requests of GitHub.;364-367;4;Mining Challenge;
2014;Georgios Gousios,Andy Zaidman;A dataset for pull-based development research.;368-371;4;Data Showcase;
2014;Dimitris Mitropoulos,Vassilios Karakoidas,Panos Louridas,Georgios Gousios,Diomidis Spinellis;The bug catalog of the maven ecosystem.;372-375;4;Data Showcase;
2014;Leonardo Teixeira Passos,Krzysztof Czarnecki;A dataset of feature additions and feature removals from the Linux kernel.;376-379;4;Data Showcase;
2014;Kenji Fujiwara,Hideaki Hata,Erina Makihara,Yusuke Fujihara,Naoki Nakayama,Hajimu Iida,Ken-ichi Matsumoto;Kataribe: a hosting service of historage repositories.;380-383;4;Data Showcase;
2014;Georgios Gousios,Bogdan Vasilescu,Alexander Serebrenik,Andy Zaidman;Lean GHTorrent: GitHub data on demand.;384-387;4;Data Showcase;
2014;Daniel E. Krutz,Wei Le;A code clone oracle.;388-391;4;Data Showcase;
2014;Alina Lazar,Sarah Ritchey,Bonita Sharif;Generating duplicate bug datasets.;392-395;4;Data Showcase;
2014;Gregorio Robles,Laura Arjona Reina,Alexander Serebrenik,Bogdan Vasilescu,Jesus M. Gonzalez-Barahona;FLOSS 2013: a survey dataset about free software contributors: challenges for curating, sharing, and combining.;396-399;4;Data Showcase;
2014;Chenlei Zhang,Abram Hindle;A green miner's dataset: mining the impact of software change on energy consumption.;400-403;4;Data Showcase;
2014;Remco Bloemen,Chintan Amrit,Stefan Kuhlmann,Gonzalo Ordonez-Matamoros;Gentoo package dependencies over time.;404-407;4;Data Showcase;
2014;James R. Williams,Davide Di Ruscio,Nicholas Drivalos Matragkas,Juri Di Rocco,Dimitris S. Kolovos;Models of OSS project meta-information: a dataset of three forges.;408-411;4;Data Showcase;
2014;Hiroaki Murakami,Yoshiki Higo,Shinji Kusumoto;A dataset of clone references with gaps.;412-415;4;Data Showcase;
2014;Vaibhav Saini,Hitesh Sajnani,Joel Ossher,Cristina Videira Lopes;A dataset for maven artifacts and bug patterns found in them.;416-419;4;Data Showcase;
2014;Gabriel Farah,Juan Sebastian Tejada,Dario Correal;OpenHub: a scalable architecture for the analysis of software quality attributes.;420-423;4;Data Showcase;
2014;Boris Baldassari,Philippe Preux;Understanding software evolution: the maisqual ant data set.;424-427;4;Data Showcase;
2013;Gail C. Murphy;What is software development productivity, anyway? (keynote).;1;1;Keynote;
2013;Ramin Shokripour,John Anvik,Zarinah Mohd Kasirun,Sima Zamani;Why so complicated? simple term filtering and weighting for location-based bug report assignment recommendation.;2-11;10;Bug Triaging;
2013;Debdoot Mukherjee,Malika Garg;Which work-item updates need your response?;12-21;10;Bug Triaging;
2013;Hoda Naguib,Nitesh Narayan,Bernd Brugge,Dina Helal;Bug report assignee recommendation using activity profiles.;22-30;9;Bug Triaging;
2013;Ryan Stevens,Jonathan Ganz,Vladimir Filkov,Premkumar T. Devanbu,Hao Chen 0003;Asking for (and about) permissions used by Android apps.;31-40;10;MSR Goes Mobile;
2013;Claudia Iacob,Rachel Harrison;Retrieving and analyzing mobile apps feature requests from online reviews.;41-44;4;MSR Goes Mobile;
2013;Murtuza Mukadam,Christian Bird,Peter C. Rigby;Gerrit software code review data from Android.;45-48;4;MSR Goes Mobile;
2013;Kazuki Hamasaki,Raula Gaikovina Kula,Norihiro Yoshida,Ana Erika Camargo Cruz,Kenji Fujiwara,Hajimu Iida;Who does what during a code review? datasets of OSS peer review repositories.;49-52;4;MSR Goes Mobile;
2013;Miltiadis Allamanis,Charles A. Sutton;Why, when, and what: analyzing stack overflow questions by topic, type, and code.;53-56;4;MSR Challenge;
2013;Joshua Charles Campbell,Chenlei Zhang,Zhen Xu,Abram Hindle,James Miller;Deficient documentation detection: a methodology to locate deficient project documentation using topic analysis.;57-60;4;MSR Challenge;
2013;Wei Wang 0001,Michael W. Godfrey;Detecting API usage obstacles: a study of iOS and Android developer questions.;61-64;4;MSR Challenge;
2013;Scott Grant,Buddy Betts;Encouraging user behaviour with achievements: an empirical study.;65-68;4;MSR Challenge;
2013;Patrick Morrison,Emerson R. Murphy-Hill;Is programming knowledge related to age? an exploration of stack overflow.;69-72;4;MSR Challenge;
2013;Avigit K. Saha,Ripon Kumar Saha,Kevin A. Schneider;A discriminative model approach for suggesting tags automatically for stack overflow questions.;73-76;4;MSR Challenge;
2013;Vibha Sinha,Senthil Mani,Monika Gupta 0002;Exploring activeness of users in QA forums.;77-80;4;MSR Challenge;
2013;Carlos Gomez Teshima,Brendan Cleary,Leif Singer;A study of innovation diffusion through link sharing on stack overflow.;81-84;4;MSR Challenge;
2013;Siddharth Subramanian,Reid Holmes;Making sense of online code snippets.;85-88;4;MSR Challenge;
2013;Amiangshu Bosu,Christopher S. Corley,Dustin Heaton,Debarshi Chatterji,Jeffrey Carver,Nicholas A. Kraft;Building reputation in StackOverflow: an empirical investigation.;89-92;4;MSR Challenge;
2013;Mario Linares Vasquez,Bogdan Dit,Denys Poshyvanyk;An exploratory analysis of mobile development issues using stack overflow.;93-96;4;MSR Challenge;
2013;Muhammad Asaduzzaman,Ahmed Shah Mashiyat,Chanchal Kumar Roy,Kevin A. Schneider;Answering questions about unanswered questions of stack overflow.;97-100;4;MSR Challenge;
2013;Yujuan Jiang,Bram Adams,Daniel M. German;Will my patch make it? and how fast?: case study on the Linux kernel.;101-110;10;Changes and Fixes;
2013;Sarah Nadi,Christian Dietrich 0001,Reinhard Tartler,Richard C. Holt,Daniel Lohmann;Linux variability anomalies: what causes them and how do they get fixed?;111-120;10;Changes and Fixes;
2013;Kim Sebastian Herzig,Andreas Zeller;The impact of tangled code changes.;121-130;10;Changes and Fixes;
2013;Bogdan Dit,Andrew Holtzhauer,Denys Poshyvanyk,Huzefa H. Kagdi;A dataset from change history to support evaluation of software maintenance tasks.;131-134;4;Changes and Fixes;
2013;Alexander C. MacLean,Charles D. Knutson;Apache commits: social network dataset.;135-138;4;Changes and Fixes;
2013;Ripon Kumar Saha,Chanchal Kumar Roy,Kevin A. Schneider,Dewayne E. Perry;Understanding the evolution of type-3 clones: an exploratory study.;139-148;10;Software Evolution;
2013;Shuai Xie,Foutse Khomh,Ying Zou;An empirical study of the fault-proneness of clone mutation and clone migration.;149-158;10;Software Evolution;
2013;Santiago Gala-Perez,Gregorio Robles,Jesus M. Gonzalez-Barahona,Israel Herraiz;Intensive metrics for the study of the evolution of open source projects: case studies from apache software foundation projects.;159-168;10;Software Evolution;
2013;Abdulkareem Alali,Brian Bartman,Christian D. Newman,Jonathan I. Maletic;A preliminary investigation of using age and distance measures in the detection of evolutionary couplings.;169-172;4;Software Evolution;
2013;Mehdi Amoui,Nilam Kaushik,Abraham Al-Dabbagh,Ladan Tahvildari,Shimin Li,Weining Liu;Search-based duplicate defect detection: an industrial experience.;173-182;10;Analysis of Bug Reports;
2013;Anahita Alipour,Abram Hindle,Eleni Stroulia;A contextual approach towards more accurate duplicate bug report detection.;183-192;10;Analysis of Bug Reports;
2013;Senthil Mani,Seema Nagar,Debdoot Mukherjee,Ramasuri Narayanam,Vibha Sinha,Amit Anil Nanavati;Bug resolution catalysts: identifying essential non-committers from bug repositories.;193-202;10;Analysis of Bug Reports;
2013;Ahmed Lamkanfi,Javier Perez,Serge Demeyer;The eclipse and mozilla defect tracking dataset: a genuine dataset for mining bug information.;203-206;4;Analysis of Bug Reports;
2013;Miltiadis Allamanis,Charles A. Sutton;Mining source code repositories at massive scale using language modeling.;207-216;10;Software Ecosystems, Big Data;
2013;Lucas Batista Leite de Souza,Marcelo de Almeida Maia;Do software categories impact coupling metrics?;217-220;4;Software Ecosystems, Big Data;
2013;Steven Raemaekers,Arie van Deursen,Joost Visser;The maven repository dataset of metrics, changes, and dependencies.;221-224;4;Software Ecosystems, Big Data;
2013;Mathieu Goeminne,Maelick Claes,Tom Mens;A historical dataset for the gnome ecosystem.;225-228;4;Software Ecosystems, Big Data;
2013;Patrick Wagstrom,Corey Jergensen,Anita Sarma;A network of rails: a graph dataset of ruby on rails and associated projects.;229-232;4;Software Ecosystems, Big Data;
2013;Georgios Gousios;The GHTorent dataset and tool suite.;233-236;4;Software Ecosystems, Big Data;
2013;Adrian Nistor,Tian Jiang,Lin Tan;Discovering, reporting, and fixing performance bugs.;237-246;10;Bug/Change Classification and Localization;
2013;Shaohua Wang,Foutse Khomh,Ying Zou;Improving bug localization using correlations in crash reports.;247-256;10;Bug/Change Classification and Localization;
2013;Steven Raemaekers,Gabriela F. Nane,Arie van Deursen,Joost Visser;Testing principles, current practices, and effects of change localization.;257-266;10;Bug/Change Classification and Localization;
2013;Kevin Dullemond,Ben van Gameren,Margaret-Anne D. Storey,Arie van Deursen;Fixing the 'out of sight out of mind' problem: one year of mood-based microblogging in a distributed software team.;267-276;10;Social Mining;
2013;Anja Guzzi,Alberto Bacchelli,Michele Lanza,Martin Pinzger,Arie van Deursen;Communication in open source software development mailing lists.;277-286;10;Social Mining;
2013;Xin Xia,David Lo,Xinyu Wang,Bo Zhou;Tag recommendation in software information sites.;287-296;10;Social Mining;
2013;Romain Robbes,David Rothlisberger;Using developer interaction data to compare expertise metrics.;297-300;4;Social Mining;
2013;Megan Squire;Project roles in the apache software foundation: a dataset.;301-304;4;Social Mining;
2013;Megan Squire;Apache-affiliated twitter screen names: a dataset.;305-308;4;Social Mining;
2013;Bunyamin Sisman,Avinash C. Kak;Assisting code search with automatic query reformulation for bug localization.;309-318;10;Search-Driven Development;
2013;Jue Wang,Yingnong Dang,Hongyu Zhang,Kai Chen,Tao Xie,Dongmei Zhang;Mining succinct and high-coverage API usage patterns from source code.;319-328;10;Search-Driven Development;
2013;Wei Ming Khoo,Alan Mycroft,Ross J. Anderson;Rendezvous: a search engine for binary code.;329-338;10;Search-Driven Development;
2013;Werner Janjic,Oliver Hummel,Marcus Schumacher,Colin Atkinson;An unabridged source code dataset for research in software reuse.;339-342;4;Search-Driven Development;
2013;Hadi Hemmati,Sarah Nadi,Olga Baysal,Oleksii Kononenko,Wei Wang 0001,Reid Holmes,Michael W. Godfrey;The MSR cookbook: mining a decade of research.;343-352;10;10 Years of MSR;
2013;Serge Demeyer,Alessandro Murgia,Kevin Wyckmans,Ahmed Lamkanfi;Happy birthday! a trend analysis on past MSR papers.;353-362;10;10 Years of MSR;
2013;Giacomo Ghezzi,Harald C. Gall;Replicating mining studies with SOFAS.;363-372;10;10 Years of MSR;
2013;Bogdan Vasilescu,Alexander Serebrenik,Tom Mens;A historical dataset of software engineering conferences.;373-376;4;10 Years of MSR;
2013;Matthew J. Howard,Samir Gupta,Lori L. Pollock,K. Vijay-Shanker;Automatically mining software-based, semantically-similar words from comment-code mappings.;377-386;10;Mining Unstructured Data;
2013;Michaela Greiler,Andy Zaidman,Arie van Deursen,Margaret-Anne D. Storey;Strategies for avoiding text fixture smells during software evolution.;387-396;10;Mining Unstructured Data;
2013;Qiang Fu,Jian-Guang Lou,Qingwei Lin,Rui Ding,Dongmei Zhang,Tao Xie;Contextual analysis of program logs for understanding system behaviors.;397-400;4;Mining Unstructured Data;
2013;David M. Binkley,Dawn Lawrie,Lori L. Pollock,Emily Hill,K. Vijay-Shanker;A dataset for evaluating identifier splitters.;401-404;4;Mining Unstructured Data;
2013;Simon Butler,Michel Wermelinger,Yijun Yu,Helen C. Sharp;INVocD: identifier name vocabulary dataset.;405-408;4;Mining Unstructured Data;
2013;Fayola Peters,Tim Menzies,Andrian Marcus;Better cross company defect prediction.;409-418;10;Predictor Models;
2013;Wei Hu,Kenny Wong;Using citation influence to predict software defects.;419-428;10;Predictor Models;
2013;Masateru Tsunoda,Koji Toda,Kyohei Fushida,Yasutaka Kamei,Meiyappan Nagappan,Naoyasu Ubayashi;Revisiting software development effort estimation based on early phase development activities.;429-438;10;Predictor Models;
2012;Dongmei Zhang;MSR 2012 keynote: Software analytics in practice - Approaches and experiences.;1;1;Keynote I;
2012;Rafael Lotufo,Leonardo Teixeira Passos,Krzysztof Czarnecki;Towards improving bug tracking systems with game mechanisms.;2-11;10;Software Repositories;
2012;Georgios Gousios,Diomidis Spinellis;GHTorrent: Github's data from a firehose.;12-21;10;Software Repositories;
2012;Daryl Posnett,Premkumar T. Devanbu,Vladimir Filkov;MIC check: A correlation tactic for ESE data.;22-31;10;Software Repositories;
2012;Iman Keivanloo,Christopher Forbes,Aseel Hmood,Mostafa Erfani,Christopher Neal,George Peristerakis,Juergen Rilling;A Linked Data platform for mining software repositories.;32-35;4;Software Repositories;
2012;Christian Rodriguez-Bustos,Jairo Aponte;How Distributed Version Control Systems impact open source software projects.;36-39;4;Software Repositories;
2012;Jihun Park,Miryung Kim,Baishakhi Ray,Doo-Hwan Bae;An empirical study of supplementary bug fixes.;40-49;10;Bug Fixing and Prediction;
2012;Bunyamin Sisman,Avinash C. Kak;Incorporating version histories in Information Retrieval based bug localization.;50-59;10;Bug Fixing and Prediction;
2012;Nicolas Bettenburg,Meiyappan Nagappan,Ahmed E. Hassan;Think locally, act globally: Improving defect and effort prediction models.;60-69;10;Bug Fixing and Prediction;
2012;Rodrigo Souza,Christina von Flach G. Chavez;Characterizing verification of bug fixes in two open source IDEs.;70-73;4;Bug Fixing and Prediction;
2012;Lucia,Ferdian Thung,David Lo,Lingxiao Jiang;Are faults localizable?;74-77;4;Bug Fixing and Prediction;
2012;Abram Hindle;Green mining: A methodology of relating software change to power consumption.;78-87;10;New MSR Trends;
2012;Pete Rotella,Sunita Chulani;Analysis of customer satisfaction survey data.;88-97;10;New MSR Trends;
2012;Olga Baysal,Reid Holmes,Michael W. Godfrey;Mining usage data and development artifacts.;98-107;10;New MSR Trends;
2012;Mark Harman,Yue Jia,Yuanyuan Zhang;App store mining and analysis: MSR for app stores.;108-111;4;New MSR Trends;
2012;Emad Shihab,Yasutaka Kamei,Pamela Bhattacharya;Mining challenge 2012: The Android platform.;112-115;4;Mining Challenge;
2012;Muhammad Asaduzzaman,Michael C. Bullock,Chanchal Kumar Roy,Kevin A. Schneider;Bug introducing changes: A case study with Android.;116-119;4;Mining Challenge;
2012;Lee Martie,Vijay Krishna Palepu,Hitesh Sajnani,Cristina Videira Lopes;Trendy bugs: Topic trends in the Android bug reports.;120-123;4;Mining Challenge;
2012;Victor Guana,Fabio Rocha,Abram Hindle,Eleni Stroulia;Do the stars align? Multidimensional analysis of Android's layered architecture.;124-127;4;Mining Challenge;
2012;Wei Hu,Dan Han,Abram Hindle,Kenny Wong;The build dependency perspective of Android's concrete architecture.;128-131;4;Mining Challenge;
2012;Vibha Sinha,Senthil Mani,Monika Gupta;MINCE: Mining change history of Android project.;132-135;4;Mining Challenge;
2012;Laura Arjona Reina,Gregorio Robles;Mining for localization in Android.;136-139;4;Mining Challenge;
2012;Margaret-Anne D. Storey;MSR 2012 keynote: The evolution of the social programmer.;140;1;Keynote II;
2012;Cyrille Valentin Artho,Kuniyasu Suzaki,Roberto Di Cosmo,Ralf Treinen,Stefano Zacchiroli;Why do software packages conflict?;141-150;10;Software Analysis;
2012;Anh Cuong Nguyen,Siau-Cheng Khoo;Discovering complete API rules with mutation testing.;151-160;10;Software Analysis;
2012;Jinqiu Yang,Lin Tan;Inferring semantically related words from software context.;161-170;10;Software Analysis;
2012;Caitlin Sadowski,Jaeheon Yi,Sunghun Kim;The evolution of data races.;171-174;4;Software Analysis;
2012;Alexander Breckel;Error mining: Bug detection through comparison with large code databases.;175-178;4;Software Analysis;
2012;Foutse Khomh,Tejinder Dhaliwal,Ying Zou,Bram Adams;Do faster releases improve software quality? An empirical case study of Mozilla Firefox.;179-188;10;Quality and Performance;
2012;Tse-Hsun Chen,Stephen W. Thomas,Meiyappan Nagappan,Ahmed E. Hassan;Explaining software defects using topic models.;189-198;10;Quality and Performance;
2012;Shahed Zaman,Bram Adams,Ahmed E. Hassan;A qualitative study on performance bugs.;199-208;10;Quality and Performance;
2012;Aigerim Issabayeva,Ariadi Nugroho,Joost Visser;Issue handling performance in proprietary software projects.;209-212;4;Quality and Performance;
2012;Maximilian Steff,Barbara Russo;Co-evolution of logical couplings and commits for defect estimation.;213-216;4;Quality and Performance;
2012;Emanuel Giger,Martin Pinzger,Harald C. Gall;Can we predict types of code changes? An empirical analysis.;217-226;10;Evolution and Process;
2012;Yossi Gil,Maayan Goldstein,Dany Moshkovich;An empirical investigation of changes in some software properties over time.;227-236;10;Evolution and Process;
2012;Christian Bird,Nachiappan Nagappan;Who? Where? What? Examining distributed development in two large open source projects.;237-246;10;Evolution and Process;
2012;Yuan Tian,Palakorn Achananuparp,Nelman Lubis Ibrahim,David Lo,Ee-Peng Lim;What does software engineering community microblog about?;247-250;4;Evolution and Process;
2012;Andrea Capiluppi,Alexander Serebrenik,Ahmmad Youssef;Developing an h-index for OSS developers.;251-254;4;Evolution and Process;
2011;Jim Whitehead;Fantasy, farms, and freemium: what game data mining teaches us about retention, conversion, and virality (keynote abstract).;1;1;Keynotes;
2011;Yuanyuan Zhou;Connecting technology with real-world problems - from copy-paste detection to detecting known bugs: (keynote abstract).;2;1;Keynotes;
2011;Chris Parnin,Christian Bird,Emerson R. Murphy-Hill;Java generics adoption: how new features are introduced, championed, or ignored.;3-12;10;Language evolution;
2011;Siim Karus,Harald C. Gall;A study of language usage evolution in open source software.;13-22;10;Language evolution;
2011;Oscar Callau,Romain Robbes,Eric Tanter,David Rothlisberger;How developers use the dynamic features of programming languages: the case of smalltalk.;23-32;10;Language evolution;
2011;Laleh Mousavi Eshkevari,Venera Arnaoudova,Massimiliano Di Penta,Rocco Oliveto,Yann-Gael Gueheneuc,Giuliano Antoniol;An exploratory study of identifier renamings.;33-42;10;Language evolution;
2011;Shivani Rao,Avinash C. Kak;Retrieval from software libraries for bug localization: a comparative study of generic and composite text models.;43-52;10;Retrieval, refactoring, clones, readability;
2011;Benjamin Biegel,Quinten David Soetens,Willi Hornig,Stephan Diehl,Serge Demeyer;Comparison of similarity metrics for refactoring detection.;53-62;10;Retrieval, refactoring, clones, readability;
2011;Armijn Hemel,Karl Trygve Kalleberg,Rob Vermaas,Eelco Dolstra;Finding software license violations through binary code clone detection.;63-72;10;Retrieval, refactoring, clones, readability;
2011;Daryl Posnett,Abram Hindle,Premkumar T. Devanbu;A simpler model of software readability.;73-82;10;Retrieval, refactoring, clones, readability;
2011;Emanuel Giger,Martin Pinzger,Harald C. Gall;Comparing fine-grained source code changes and code churn for bug prediction.;83-92;10;Software quality;
2011;Shahed Zaman,Bram Adams,Ahmed E. Hassan;Security versus performance bugs: a case study on Firefox.;93-102;10;Software quality;
2011;Sandeep Krishnan,Robyn R. Lutz,Katerina Goseva-Popstojanova;Empirical evaluation of reliability improvement in an evolving software product line.;103-112;10;Software quality;
2011;Pete Rotella,Sunita Chulani;Implementing quality metrics and goals at the corporate level.;113-122;10;Software quality;
2011;Dennis Pagano,Walid Maalej;How do developers blog?: an exploratory study.;123-132;10;Developers;
2011;Vibha Sinha,Senthil Mani,Saurabh Sinha;Entering the circle of trust: developer initiation as committers in open-source projects.;133-142;10;Developers;
2011;Gerardo Canfora,Luigi Cerulo,Marta Cimitile,Massimiliano Di Penta;Social interactions around cross-system bug fixings: the case of FreeBSD and OpenBSD.;143-152;10;Developers;
2011;Jon Eyolfson,Lin Tan,Patrick Lam;Do time of day and developer experience affect commit bugginess.;153-162;10;Developers;
2011;Abram Hindle,Neil A. Ernst,Michael W. Godfrey,John Mylopoulos;Automated topic naming to support cross-project analysis of software maintenance activities.;163-172;10;Development support;
2011;Stephen W. Thomas,Bram Adams,Ahmed E. Hassan,Dorothea Blostein;Modeling the evolution of topics in source code histories.;173-182;10;Development support;
2011;Julius Davies,Daniel M. German,Michael W. Godfrey,Abram Hindle;Software bertillonage: finding the provenance of an entity.;183-192;10;Development support;
2011;Alexander W. J. Bradley,Gail C. Murphy;Supporting software history exploration.;193-202;10;Development support;
2011;David M. Binkley,Matthew Hearn,Dawn Lawrie;Improving identifier informativeness using part of speech information.;203-206;4;Short papers;
2011;Pamela Bhattacharya,Iulian Neamtiu;Bug-fix time prediction models: can we do better?;207-210;4;Short papers;
2011;Yuan-Fang Li,Hongyu Zhang;Integrating software engineering data using semantic web technologies.;211-214;4;Short papers;
2011;Sergey Zeltyn,Perri Tarr,Murray Cantor,Robert Delmonico,Sateesh Kannegala,Mila Keren,Ashok Pon Kumar,Segev Wasserkrug;Improving efficiency in software maintenance.;215-218;4;Short papers;
2011;Caitlin Sadowski,Chris Lewis 0002,Zhongpeng Lin,Xiaoyan Zhu,Jim Whitehead;An empirical analysis of the FixCache algorithm.;219-222;4;Short papers;
2011;Brandon Heller,Eli Marschner,Evan Rosenfeld,Jeffrey Heer;Visualizing collaboration and influence in the open-source software community.;223-226;4;Short papers;
2011;Adrian Schroter;MSR Challenge 2011: Eclipse, Netbeans, Firefox, and Chrome.;227-229;3;Mining challenge;
2011;Xinlei (Oscar) Wang,Eilwoo Baik,Premkumar T. Devanbu;System compatibility analysis of Eclipse and Netbeans based on bug data.;230-233;4;Mining challenge;
2011;Mario Luca Bernardi,Carmine Sementa,Quirino Zagarese,Damiano Distante,Massimiliano Di Penta;What topics do Firefox and Chrome contributors discuss?;234-237;4;Mining challenge;
2011;Olga Baysal,Ian J. Davis,Michael W. Godfrey;A Tale of Two Browsers.;238-241;4;Mining challenge;
2011;Yukinao Hirata,Osamu Mizuno;Do comments explain codes adequately?: investigation by text filtering.;242-245;4;Mining challenge;
2011;Daniel M. German,Julius Davies;Apples vs. oranges?: an exploration of the challenges of comparing the source code of two software systems.;246-249;4;Mining challenge;
2010;James D. Herbsleb;MSR: Mining for scientific results?;;0;Keynotes;
2010;Michele Lanza;The visual terminator.;;0;Keynotes;
2010;Natalia Juristo Juzgado,Sira Vegas;Using differences among replications of software engineering experiments to gain knowledge.;;0;Invited Talk from ESEM 2009;
2010;Ahmed Lamkanfi,Serge Demeyer,Emanuel Giger,Bart Goethals;Predicting the severity of a reported bug.;1-10;10;Bugs, Bugs, Bugs;
2010;Michael Gegick,Pete Rotella,Tao Xie;Identifying security bug reports via text mining: An industrial case study.;11-20;10;Bugs, Bugs, Bugs;
2010;Ariadi Nugroho,Michel R. V. Chaudron,Erik Arisholm;Assessing UML design metrics for predicting fault-prone classes in a Java system.;21-30;10;Bugs, Bugs, Bugs;
2010;Marco D'Ambros,Michele Lanza,Romain Robbes;An extensive comparison of bug prediction approaches.;31-41;11;Bugs, Bugs, Bugs;
2010;Shane McIntosh,Bram Adams,Ahmed E. Hassan;The evolution of ANT build systems.;42-51;10;Evolution & Quality;
2010;Lucas Nussbaum,Stefano Zacchiroli;The Ultimate Debian Database: Consolidating bazaar metadata for Quality Assurance and data mining.;52-61;10;Evolution & Quality;
2010;Adrian Bachmann,Abraham Bernstein;When process data quality affects the number of bugs: Correlations in software engineering datasets.;62-71;10;Evolution & Quality;
2010;Foyzur Rahman,Christian Bird,Premkumar T. Devanbu;Clones: What is that smell?;72-81;10;Evolution & Quality;
2010;Abram Hindle,Israel Herraiz,Emad Shihab,Zhen Ming Jiang;Mining Challenge 2010: FreeBSD, GNOME Desktop and Debian/Ubuntu.;82-85;4;Mining Challenge;
2010;Julius Davies,Hanyu Zhang,Lucas Nussbaum,Daniel M. German;Perspectives on bugs in the Debian bug tracking system.;86-89;4;Mining Challenge;
2010;Andreas Mauczka,Christian Schanes,Florian Fankhauser,Mario Bernhart,Thomas Grechenig;Mining security changes in FreeBSD.;90-93;4;Mining Challenge;
2010;Bart Luijten,Joost Visser,Andy Zaidman;Assessment of issue handling efficiency.;94-97;4;Mining Challenge;
2010;Jens Krinke,Nicolas E. Gold,Yue Jia,David M. Binkley;Cloning and copying between GNOME projects.;98-101;4;Mining Challenge;
2010;Yusuke Sasaki,Tetsuo Yamamoto,Yasuhiro Hayase,Katsuro Inoue;Finding file clones in FreeBSD Ports Collection.;102-105;4;Mining Challenge;
2010;Gargi Bougie,Christoph Treude,Daniel M. German,Margaret-Anne D. Storey;A comparative exploration of FreeBSD bug lifetimes.;106-109;4;Mining Challenge;
2010;Antonio Vetro,Marco Torchiano,Maurizio Morisio;Assessing the precision of FindBugs by mining Java projects developed at a university.;110-113;4;Short Papers;
2010;Meiyappan Nagappan,Mladen A. Vouk;Abstracting log lines to log event types for mining software system logs.;114-117;4;Short Papers;
2010;Adrian Schroter,Nicolas Bettenburg,Rahul Premraj;Do stack traces help developers fix bugs?;118-121;4;Short Papers;
2010;Daryl Posnett,Christian Bird,Premkumar T. Devanbu;THEX: Mining metapatterns from java.;122-125;4;Short Papers;
2010;Methanias Colaco Jr.,Manoel Gomes de Mendonca Neto,Mario Farias,Paulo Henrique;OSS developers context-specific Preferred Representational systems: A initial Neurolinguistic text analysis of the Apache mailing list.;126-129;4;Short Papers;
2010;Joel Ossher,Sushil Krishna Bajracharya,Cristina Videira Lopes;Automated dependency resolution for open source software.;130-140;11;Search & Recommendation;
2010;Marcel Bruch,Mira Mezini,Martin Monperrus;Mining subclassing directives to improve framework reuse.;141-150;10;Search & Recommendation;
2010;Massimiliano Di Penta,Daniel M. German,Giuliano Antoniol;Identifying licensing of jar archives using a code-search approach.;151-160;10;Search & Recommendation;
2010;Romain Robbes,Damien Pollet,Michele Lanza;Replaying IDE interactions to evaluate and improve change prediction approaches.;161-170;10;Search & Recommendation;
2010;Gregorio Robles;Replicating MSR: A study of the potential replicability of papers published in the Mining Software Repositories proceedings.;171-180;10;Replication;
2010;Walid M. Ibrahim,Nicolas Bettenburg,Emad Shihab,Bram Adams,Ahmed E. Hassan;Should I contribute to this discussion?;181-190;10;People & Collaboration;
2010;Walid Maalej,Hans-Jorg Happel;Can development work describe itself?;191-200;10;People & Collaboration;
2010;Roozbeh Nia,Christian Bird,Premkumar T. Devanbu,Vladimir Filkov;Validity of network analyses in Open Source Projects.;201-209;9;People & Collaboration;
2009;Michael McAllister;Success factors of Business Intelligence.;;0;Keynotes;
2009;Thomas A. Ball;A brief history of software - from Bell Labs to Microsoft Research.;;0;Keynotes;
2009;Christian Bird,Peter C. Rigby,Earl T. Barr,David J. Hamilton,Daniel M. German,Premkumar T. Devanbu;The promises and perils of mining git.;1-10;10;Version Control and Infrastructure;
2009;Audris Mockus;Amassing and indexing a large sample of version control systems: Towards the census of public source code history.;11-20;10;Version Control and Infrastructure;
2009;Weiyi Shang,Zhen Ming Jiang,Bram Adams,Ahmed E. Hassan;MapReduce as a general framework to support research in Mining Software Repositories (MSR).;21-30;10;Version Control and Infrastructure;
2009;Georgios Gousios,Diomidis Spinellis;A platform for software engineering research.;31-40;10;Version Control and Infrastructure;
2009;Cathal Boogerd,Leon Moonen;Evaluating the relation between coding standard violations and faultswithin and across software versions.;41-50;10;Defect Prediction;
2009;Jayalath Ekanayake,Jonas Tappolet,Harald C. Gall,Abraham Bernstein;Tracking concept drift of software projects using defect prediction quality.;51-60;10;Defect Prediction;
2009;Yonghee Shin,Robert M. Bell,Thomas J. Ostrand,Elaine J. Weyuker;Does calling structure information improve the accuracy of fault prediction?;61-70;10;Defect Prediction;
2009;Eric Enslen,Emily Hill,Lori L. Pollock,K. Vijay-Shanker;Mining source code to automatically split identifiers for software analysis.;71-80;10;Text Analysis;
2009;Daniel M. German,Massimiliano Di Penta,Yann-Gael Gueheneuc,Giuliano Antoniol;Code siblings: Technical and legal implications of copying code between applications.;81-90;10;Text Analysis;
2009;Jason R. Casebolt,Jonathan L. Krein,Alexander C. MacLean,Charles D. Knutson,Daniel P. Delorey;Author entropy vs. file size in the gnome suite of applications.;91-94;4;MSR Chellenge;
2009;Holger Schackmann,Horst Lichter;Evaluating process quality in GNOME based on change request data.;95-98;4;MSR Chellenge;
2009;Erik Linstead,Pierre Baldi;Mining the coherence of GNOME bug reports with statistical topic models.;99-102;4;MSR Chellenge;
2009;Mircea Lungu,Jacopo Malnati,Michele Lanza;Visualizing Gnome with the Small Project Observatory.;103-106;4;MSR Chellenge;
2009;Emad Shihab,Zhen Ming Jiang,Ahmed E. Hassan;On the use of Internet Relay Chat (IRC) meetings by developers of the GNOME GTK+ project.;107-110;4;MSR Chellenge;
2009;Sushil Krishna Bajracharya,Cristina Videira Lopes;Mining search topics from a code search engine usage log.;111-120;10;Topic Mining;
2009;Walid Maalej,Hans-Jorg Happel;From work to word: How do software developers describe their work?;121-130;10;Developers;
2009;Dominique Matter,Adrian Kuhn,Oscar Nierstrasz;Assigning bug reports using a vocabulary-based expertise model of developers.;131-140;10;Developers;
2009;Lile Hattori,Michele Lanza;Mining the history of synchronous changes to refine code ownership.;141-150;10;Developers;
2009;Zeeger Lubsen,Andy Zaidman,Martin Pinzger;Using association rules to study the co-evolution of production & test code.;151-154;4;Poster Papers;
2009;Sarah Rastkar,Gail C. Murphy;On what basis to recommend: Changesets or interactions?;155-158;4;Poster Papers;
2009;Kim Sebastian Herzig,Andreas Zeller;Mining the Jazz repository: Challenges and opportunities.;159-162;4;Poster Papers;
2009;Kai Tian,Meghan Revelle,Denys Poshyvanyk;Using Latent Dirichlet Allocation for automatic categorization of software.;163-166;4;Poster Papers;
2009;Gregorio Robles,Jesus M. Gonzalez-Barahona,Israel Herraiz;Evolution of the core team of developers in libre software projects.;167-170;4;Poster Papers;
2009;Prasanth Anbalagan,Mladen A. Vouk;On mining data across software repositories.;171-174;4;Poster Papers;
2009;Adrian Kuhn;Automatic labeling of software components and their evolution using log-likelihood ratio of word frequencies in source code.;175-178;4;Poster Papers;
2009;Nathaniel Ayewah,William W. Pugh;Learning from defect removals.;179-182;4;Poster Papers;
2009;Joel Ossher,Sushil Krishna Bajracharya,Erik Linstead,Pierre Baldi,Cristina Videira Lopes;SourcererDB: An aggregated repository of statically analyzed and cross-linked open source Java projects.;183-186;4;Poster Papers;
2009;Pierre van de Laar;On the transfer of evolutionary couplings to industry.;187-190;4;Poster Papers;
2008;Israel Herraiz,Jesus M. Gonzalez-Barahona,Gregorio Robles;Determinism and evolution.;1-10;10;Mining 1;
2008;Kentaro Yoshimura,Fumio Narisawa,Koji Hashimoto,Tohru Kikuno;FAVE: factor analysis based approach for detecting product line variability from change history.;11-18;8;Mining 1;
2008;Chadd C. Williams,Jaime Spacco;Branching and merging in the repository.;19-22;4;Mining 1;
2008;Reid Holmes,Andrew Begel;Deep intellisense: a tool for rehydrating evaporated information.;23-26;4;Mining 1;
2008;Nicolas Bettenburg,Rahul Premraj,Thomas Zimmermann,Sunghun Kim;Extracting structural information from bug reports.;27-30;4;Bugs and changes;
2008;Takayuki Omori,Katsuhisa Maruyama;A change-aware development environment by recording editing operations of source code.;31-34;4;Bugs and changes;
2008;Jacek Ratzinger,Thomas Sigmund,Harald C. Gall;On the relation of refactorings and software defect prediction.;35-38;4;Bugs and changes;
2008;Sangeetha Sudhakrishnan,Janaki T. Madhavan,Jim Whitehead,Jose Renau;Understanding bug fix patterns in verilog.;39-42;4;Understanding and infrastructure;
2008;Lucas Layman,Nachiappan Nagappan,Sam Guckenheimer,Jeff Beehler,Andrew Begel;Mining software effort data: preliminary analysis of visual studio team system data.;43-46;4;Understanding and infrastructure;
2008;Robert Gobeille;The FOSSology project.;47-50;4;Understanding and infrastructure;
2008;Chris Parnin,Carsten Gorg;Improving change descriptions with change contexts.;51-60;10;Changes and clones;
2008;Hung-Fu Chang,Audris Mockus;Evaluation of source code copy detection methods on freebsd.;61-66;6;Changes and clones;
2008;Peter Weissgerber,Daniel Neu,Stephan Diehl;Small patches get in!;67-76;10;Changes and clones;
2008;Abraham Bernstein;How to learn enough data mining to be dangerous in 60 minutes.;77-78;2;How to learn enough data mining to be dangerous in 60 minutes;
2008;Emily Hill,Zachary P. Fry,Haley Boyd,Giriprasad Sridhara,Yana Novikova,Lori L. Pollock,K. Vijay-Shanker;AMAP: automatically mining abbreviation expansions in programs to enhance software maintenance tools.;79-88;10;Mining 2;
2008;Hideaki Hata,Osamu Mizuno,Tohru Kikuno;An extension of fault-prone filtering using precise training and a dynamic threshold.;89-98;10;Mining 2;
2008;Abram Hindle,Daniel M. German,Richard C. Holt;What do large commits tell us?: a taxonomical study of large commits.;99-108;10;Mining 2;
2008;Suresh Thummalapenta,Tao Xie;SpotWeb: detecting framework hotspots via mining open source repositories on the web.;109-112;4;Mining 3;
2008;David S. Pattison,Christian Bird,Premkumar T. Devanbu;Talk and work: a preliminary report.;113-116;4;Mining 3;
2008;Christopher Thomson,Mike Holcombe;Correctness of data mined from CVS.;117-120;4;Mining 3;
2008;David Schuler,Thomas Zimmermann;Mining usage expertise from version archives.;121-124;4;People are people, so ...;
2008;Omar Alonso,Premkumar T. Devanbu,Michael Gertz;Expertise identification and visualization from CVS.;125-128;4;People are people, so ...;
2008;Georgios Gousios,Eirini Kalliamvakou,Diomidis Spinellis;Measuring developer contribution from software repository data.;129-132;4;People are people, so ...;
2008;Michel Wermelinger,Yijun Yu;Analyzing the evolution of eclipse plugins.;133-136;4;Mining challenge results;
2008;Harvey P. Siy,Parvathi Chundi,Mahadevan Subramaniam;Summarizing developer work history using time series segmentation: challenge report.;137-140;4;Mining challenge results;
2008;Hongyu Zhang;An initial study of the growth of eclipse defects.;141-144;4;Mining challenge results;
2008;Israel Herraiz,Daniel M. German,Jesus M. Gonzalez-Barahona,Gregorio Robles;Towards a simplification of the bug report form in eclipse.;145-148;4;Mining challenge results;
2008;Reid Holmes,Robert J. Walker;A newbie's guide to eclipse APIs.;149-152;4;Mining challenge results;
2007;Cathrin Weiss,Rahul Premraj,Thomas Zimmermann,Andreas Zeller;How Long Will It Take to Fix This Bug?;1;1;Bugs;
2007;John Anvik,Gail C. Murphy;Determining Implementation Expertise from Bug Reports.;2;1;Bugs;
2007;Shuuji Morisaki,Akito Monden,Tomoko Matsumura,Haruaki Tamada,Ken-ichi Matsumoto;Defect Data Analysis Based on Extended Association Rule Mining.;3;1;Bugs;
2007;Osamu Mizuno,Shiro Ikami,Shuya Nakaichi,Tohru Kikuno;Spam Filter Based Approach for Finding Fault-Prone Software Modules.;4;1;Bugs;
2007;Shawn Minto,Gail C. Murphy;Recommending Emergent Teams.;5;1;Teams;
2007;Christian Bird,Alex Gourley,Premkumar T. Devanbu,Anand Swaminathan,Greta Hsu;Open Borders? Immigration in Open Source Projects.;6;1;Teams;
2007;Olga Baysal,Andrew J. Malton;Correlating Social Interactions to Release History during Software Evolution.;7;1;Teams;
2007;Liguo Yu,Srini Ramaswamy;Mining CVS Repositories to Understand Open-Source Project Developer Roles.;8;1;Teams;
2007;Peter Weissgerber,Mathias Pohl,Michael Burch;Visual Data Mining in Software Archives to Detect How Developers Work Together.;9;1;Mining;
2007;Christoph Kiefer,Abraham Bernstein,Jonas Tappolet;Mining Software Repositories with iSPAROL and a Software Evolution Ontology.;10;1;Mining;
2007;Thomas Zimmermann;Mining Workspace Updates in CVS.;11;1;Mining;
2007;Mark Grechanik,Kevin M. Conroy,Katharina Probst;Finding Relevant Applications for Prototyping.;12;1;Mining;
2007;Stephen P. Masticola;Lightweight Risk Mitigation for Software Development Projects Using Repository Mining.;13;1;Mining;
2007;Gerardo Canfora,Luigi Cerulo,Massimiliano Di Penta;Identifying Changed Source Code Lines from Version Repositories.;14;1;Changes;
2007;Romain Robbes;Mining a Change-Based Software Repository.;15;1;Changes;
2007;Filip Van Rysselberghe,Serge Demeyer;Studying Versioning Information to Understand Inheritance Hierarchy Changes.;16;1;Changes;
2007;Huzefa H. Kagdi,Jonathan I. Maletic;Combining Single-Version and Evolutionary Dependencies for Software-Change Prediction.;17;1;Changes;
2007;Angela Lozano,Michel Wermelinger,Bashar Nuseibeh;Evaluating the Harmfulness of Cloning: A Change Based Experiment.;18;1;Changes;
2007;Abram Hindle,Michael W. Godfrey,Richard C. Holt;Release Pattern Discovery via Partitioning: Methodology and Case Study.;19;1;Patterns and Models;
2007;Huzefa H. Kagdi,Michael L. Collard,Jonathan I. Maletic;Comparing Approaches to Mining Source Code for Call-Usage Patterns.;20;1;Patterns and Models;
2007;Israel Herraiz,Jesus M. Gonzalez-Barahona,Gregorio Robles;Towards a Theoretical Model for Software Growth.;21;1;Patterns and Models;
2007;Simone Livieri,Yoshiki Higo,Makoto Matsushita,Katsuro Inoue;Analysis of the Linux Kernel Evolution Using Code Clone Coverage.;22;1;Patterns and Models;
2007;Peter C. Rigby,Ahmed E. Hassan;What Can OSS Mailing Lists Tell Us? A Preliminary Psychometric Text Analysis of the Apache Developer Mailing List.;23;1;Developers, Developers, Developers;
2007;Daniel M. German;Using Software Distributions to Understand the Relationship among Free and Open Source Software Projects.;24;1;Developers, Developers, Developers;
2007;Giuseppe Valetto,Mary E. Helander,Kate Ehrlich,Sunita Chulani,Mark N. Wegman,Clay Williams;Using Software Repositories to Investigate Socio-technical Congruence in Development Projects.;25;1;Developers, Developers, Developers;
2007;Christian Bird,Alex Gourley,Premkumar T. Devanbu;Detecting Patch Submission and Acceptance in OSS Projects.;26;1;Developers, Developers, Developers;
2007;Sunghun Kim,Michael D. Ernst;Prioritizing Warning Categories by Analyzing Software History.;27;1;Developers, Developers, Developers;
2007;Jesus M. Gonzalez-Barahona,Gregorio Robles,Israel Herraiz;Impact of the Creation of the Mozilla Foundation in the Activity of Developers.;28;1;Mining Challenge;
2007;Lucas D. Panjer;Predicting Eclipse Bug Lifetimes.;29;1;Mining Challenge;
2007;Erik Linstead,Paul Rigor,Sushil Krishna Bajracharya,Cristina Videira Lopes,Pierre Baldi;Mining Eclipse Developer Contributions via Author-Topic Models.;30;1;Mining Challenge;
2007;Adrian Schroter;Predicting Defects and Changes with Import Relations.;31;1;Mining Challenge;
2007;Israel Herraiz,Jesus M. Gonzalez-Barahona,Gregorio Robles;Forecasting the Number of Changes in Eclipse Using Time Series Analysis.;32;1;Mining Challenge;
2007;Hemant Joshi,Chuanlei Zhang,Srini Ramaswamy,Coskun Bayrak;Local and Global Recency Weighting Approach to Bug Prediction.;33;1;Mining Challenge;
2006;Stephan Diehl,Harald C. Gall,Martin Pinzger,Ahmed E. Hassan;Introduction to MSR 2006.;1-2;2;;
2006;Gregorio Robles,Jesus M. Gonzalez-Barahona,Martin Michlmayr,Juan Jose Amor;Mining large software compilations over time: another perspective of software evolution.;3-9;7;Repositories;
2006;Yaojin Yang,Claudio Riva;Scenarios for mining the software architecture evolution.;10-13;4;Repositories;
2006;Masateru Tsunoda,Akito Monden,Hiroshi Yadohisa,Nahomi Kikuchi,Ken-ichi Matsumoto;Productivity analysis of Japanese enterprise software development projects.;14-17;4;Repositories;
2006;Gui Gui,Paul D. Scott;Coupling and cohesion measures for evaluation of component reusability.;18-21;4;Repositories;
2006;Sunghun Kim,Thomas Zimmermann,Miryung Kim,Ahmed E. Hassan,Audris Mockus,Tudor Girba,Martin Pinzger,Jim Whitehead,Andreas Zeller;TA-RE: an exchange language for mining software repositories.;22-25;4;Repositories;
2006;Marco D'Ambros,Michele Lanza,Mircea Lungu;The evolution radar: visualizing integrated logical coupling information.;26-32;7;Visualization;
2006;Lucian Voinea,Alexandru Telea;An open framework for CVS repository querying, analysis and visualization.;33-39;7;Visualization;
2006;Sunghun Kim,Kai Pan,Jim Whitehead;Micro pattern evolution.;40-46;7;Patterns;
2006;Huzefa H. Kagdi,Shehnaaz Yusuf,Jonathan I. Maletic;Mining sequences of changed-files from version histories.;47-53;7;Patterns;
2006;Tao Xie,Jian Pei;MAPO: mining API usages from open source repositories.;54-57;4;Patterns;
2006;Miryung Kim,David Notkin;Program element matching for multi-version program analyses.;58-64;7;Matching;
2006;Tobias Sager,Abraham Bernstein,Martin Pinzger,Christoph Kiefer;Detecting similar Java classes using tree algorithms.;65-71;7;Matching;
2006;Thomas Zimmermann,Sunghun Kim,Andreas Zeller,Jim Whitehead;Mining version archives for co-changed lines.;72-75;4;Matching;
2006;Hung-Fu Chang,Audris Mockus;Constructing universal version history.;76-79;4;Matching;
2006;Imed Hammouda,Kai Koskimies;Concern based mining of heterogeneous software repositories.;80-86;7;Concerns;
2006;Benjamin Sigonneau,Olivier Ridoux;Software engineering applications of logic file system: application to automated multi-criteria indexation of software components.;87-93;7;Concerns;
2006;Silvia Breu,Thomas Zimmermann,Christian Lindig;Mining eclipse for cross-cutting concerns.;94-97;4;Concerns;
2006;Robert J. Walker,Reid Holmes,Ian Hedgeland,Puneet Kapur,Andrew Smith;A lightweight approach to technical risk estimation via probabilistic impact analysis.;98-104;7;Impact analysis;
2006;Gerardo Canfora,Luigi Cerulo;Fine grained indexing of software repositories to support impact analysis.;105-111;7;Impact analysis;
2006;Peter Weissgerber,Stephan Diehl;Are refactorings less error-prone than other changes?;112-118;7;Defects;
2006;Patrick Knab,Martin Pinzger,Abraham Bernstein;Predicting defect densities in source code files with decision tree learners.;119-125;7;Defects;
2006;Mina Askari,Richard C. Holt;Information theoretic evaluation of change prediction models for large-scale software.;126-132;7;Defects;
2006;Jaime Spacco,David Hovemeyer,William W. Pugh;Tracking defect warnings across versions.;133-136;4;Defects;
2006;Christian Bird,Alex Gourley,Premkumar T. Devanbu,Michael Gertz,Anand Swaminathan;Mining email social networks.;137-143;7;Beyond source code;
2006;Gregorio Robles,Jesus M. Gonzalez-Barahona;Geographic location of developers at SourceForge.;144-150;7;Beyond source code;
2006;Gina Danielle Venolia;Textual alusions to artifacts in software-related repositories.;151-154;4;Beyond source code;
2006;Chris Parnin,Carsten Gorg,Spencer Rugaber;Enriching revision history with interactions.;155-158;4;Beyond source code;
2006;Daniel M. German,Peter C. Rigby,Margaret-Anne D. Storey;Using evolutionary annotations from change logs to enhance program comprehension.;159-162;4;Beyond source code;
2006;Daniel M. German;A study of the contributors of PostgreSQL.;163-164;2;MSR-challenge report;
2006;Dirk Beyer;Co-change visualization applied to PostgreSQL and ArgoUML: (MSR challenge report).;165-166;2;MSR-challenge report;
2006;Lucian Voinea,Alexandru Telea;Mining software repositories with CVSgrab.;167-168;2;MSR-challenge report;
2006;Thomas Zimmermann,Silvia Breu,Christian Lindig,V. Benjamin Livshits;Mining additions of method calls in ArgoUML.;169-170;2;MSR-challenge report;
2006;Takeshi Kakimoto,Akito Monden,Yasutaka Kamei,Haruaki Tamada,Masateru Tsunoda,Ken-ichi Matsumoto;Using software birthmarks to identify similar classes and major functionalities.;171-172;2;MSR-challenge report;
2006;Sunghun Kim,Jim Whitehead;How long did it take to fix bugs?;173-174;2;MSR-challenge report;
2006;Peter Weissgerber,Stephan Diehl,Carsten Gorg;Mining refactorings in ARGOUML.;175-176;2;MSR-challenge report;
2006;Marco D'Ambros,Michele Lanza;Applying the evolution radar to PostgreSQL.;177-178;2;MSR-challenge report;
2006;Zhen Ming Jiang,Ahmed E. Hassan;Examining the evolution of code comments in PostgreSQL.;179-180;2;MSR-challenge report;
2006;Masateru Tsunoda,Akito Monden,Takeshi Kakimoto,Yasutaka Kamei,Ken-ichi Matsumoto;Analyzing OSS developers' working time using mailing lists archives.;181-182;2;MSR-challenge report;
2006;Gerardo Canfora,Luigi Cerulo;Where is bug resolution knowledge stored?;183-184;2;MSR-challenge report;
2006;Christian Bird,Alex Gourley,Premkumar T. Devanbu,Michael Gertz,Anand Swaminathan;Mining email social networks in Postgres.;185-186;2;MSR-challenge report;
2005;Iulian Neamtiu,Jeffrey S. Foster,Michael W. Hicks;Understanding source code evolution using abstract syntax tree matching.;;0;Understanding Evolution and Change Patterns;
2005;Chadd C. Williams,Jeffrey K. Hollingsworth;Recovering system specific rules from software repositories.;;0;Understanding Evolution and Change Patterns;
2005;Michael Fischer,Johann Oberleitner,Jacek Ratzinger,Harald C. Gall;Mining evolution data of a product family.;;0;Understanding Evolution and Change Patterns;
2005;Miryung Kim,David Notkin;Using a clone genealogy extractor for understanding and supporting evolution of code clones.;;0;Understanding Evolution and Change Patterns;
2005;Jacek Sliwerski,Thomas Zimmermann,Andreas Zeller;When do changes induce fixes?;;0;Defect Analysis;
2005;Carsten Gorg,Peter Weissgerber;Error detection by refactoring reconstruction.;;0;Defect Analysis;
2005;Jaime Spacco,Jaymie Strecker,David Hovemeyer,William W. Pugh;Software repository mining with Marmoset: an automated programming project snapshot and testing system.;;0;Education;
2005;Keir Mierle,Kevin Laven,Sam T. Roweis,Greg Wilson;Mining student CVS repositories for performance indicators.;;0;Education;
2005;Masaru Ohba,Katsuhiko Gondow;"Toward mining ""concept keywords"" from identifiers in large software projects.";;0;Text Mining;
2005;Annie T. T. Ying,James L. Wright,Steven Abrams;Source code that talks: an exploration of Eclipse task comments and their implication to repository mining.;;0;Text Mining;
2005;Jane Huffman Hayes,Alexander Dekhtyar,Senthil Karthikeyan Sundaram;Text mining for software engineering: how analyst feedback impacts final results.;;0;Text Mining;
2005;Sunghun Kim,Jim Whitehead,Jennifer Bevan;Analysis of signature change patterns.;;0;Software Changes and Evolution;
2005;Jacek Ratzinger,Michael Fischer,Harald C. Gall;Improving evolvability through refactoring.;;0;Software Changes and Evolution;
2005;Giuliano Antoniol,Vincenzo Fabio Rollo,Gabriele Venturi;Linear predictive coding and cepstrum coefficients for mining time variant information from software repositories.;;0;Software Changes and Evolution;
2005;Michael VanHilst,Pankaj K. Garg,Christopher Lo;Repository mining and Six Sigma for process improvement.;1-4;4;Process and Collaboration;
2005;Shih-Kun Huang,Kang-min Liu;Mining version histories to verify the learning process of Legitimate Peripheral Participants.;;0;Process and Collaboration;
2005;Huzefa H. Kagdi,Michael L. Collard,Jonathan I. Maletic;Towards a taxonomy of approaches for mining of source code repositories.;;0;Taxonomies & Formal Representations;
2005;Daniel M. German,Davor Cubranic,Margaret-Anne D. Storey;A framework for describing and understanding mining tools in software development.;;0;Taxonomies & Formal Representations;
2005;Abram Hindle,Daniel M. German;SCQL: a formal model and a query language for source control repositories.;;0;Taxonomies & Formal Representations;
2005;Gregorio Robles,Jesus M. Gonzalez-Barahona;Developer identification methods for integrated data from various sources.;;0;Integration and Collaboration;
2005;Masao Ohira,Naoki Ohsugi,Tetsuya Ohoka,Ken-ichi Matsumoto;Accelerating cross-project knowledge collaboration using collaborative filtering and social networks.;;0;Integration and Collaboration;
2005;Megan Conklin,James Howison,Kevin Crowston;Collaboration using OSSmole: a repository of FLOSS data and analyses.;;0;Integration and Collaboration;
