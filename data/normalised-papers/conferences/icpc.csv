2016;Fabio Palomba,Annibale Panichella,Andrea De Lucia,Rocco Oliveto,Andy Zaidman;A textual-based technique for Smell Detection.;http://dx.doi.org/10.1109/ICPC.2016.7503704;1-10;10;Technical Research 1:Code Quality;
2016;Natthawute Sae-Lim,Shinpei Hayashi,Motoshi Saeki;Context-based code smells prioritization for prefactoring.;http://dx.doi.org/10.1109/ICPC.2016.7503705;1-10;10;Technical Research 1:Code Quality;
2016;Felienne Hermans,Efthimia Aivaloglou;Do code smells hamper novice programming? A controlled experiment on Scratch programs.;http://dx.doi.org/10.1109/ICPC.2016.7503706;1-10;10;Technical Research 1:Code Quality;
2016;Simone Scalabrino,Mario Linares Vasquez,Denys Poshyvanyk,Rocco Oliveto;Improving code readability models with textual features.;http://dx.doi.org/10.1109/ICPC.2016.7503707;1-10;10;Technical Research 1:Code Quality;
2016;Huascar Sanchez,Jim Whitehead,Martin Schaf;Multistaging to understand: Distilling the essence of java code examples.;http://dx.doi.org/10.1109/ICPC.2016.7503708;1-10;10;Technical Research 2:Program Comprehension;
2016;Mark Hills 0001;Navigating the WordPress plugin landscape.;http://dx.doi.org/10.1109/ICPC.2016.7503709;1-10;10;Technical Research 2:Program Comprehension;
2016;Vallary Singh,Lori L. Pollock,Will Snipes,Nicholas A. Kraft;A case study of program comprehension effort and technical debt estimations.;http://dx.doi.org/10.1109/ICPC.2016.7503710;1-9;9;Technical Research 2:Program Comprehension;
2016;Yorai Geffen,Shahar Maoz;On method ordering.;http://dx.doi.org/10.1109/ICPC.2016.7503711;1-10;10;Technical Research 2:Program Comprehension;
2016;Fabian Beck,Jan Melcher,Daniel Weiskopf;Identifying modularization patterns by visual comparison of multiple hierarchies.;http://dx.doi.org/10.1109/ICPC.2016.7503712;1-10;10;Technical Research 3:Supporting Software Developers;
2016;Ignacio Fernandez,Alexandre Bergel,Juan Pablo Sandoval Alcocer,Alejandro Infante,Tudor Girba;Glyph-based software component identification.;http://dx.doi.org/10.1109/ICPC.2016.7503713;1-10;10;Technical Research 3:Supporting Software Developers;
2016;Roberto Minelli,Andrea Mocci,Romain Robbes,Michele Lanza;Taming the IDE with fine-grained interaction data.;http://dx.doi.org/10.1109/ICPC.2016.7503714;1-10;10;Technical Research 3:Supporting Software Developers;
2016;Yuan Tian,Dinusha Wijedasa,David Lo,Claire Le Goues;Learning to rank for bug report assignee recommendation.;http://dx.doi.org/10.1109/ICPC.2016.7503715;1-10;10;Technical Research 3:Supporting Software Developers;
2016;Simon Kawuma,John Businge,Engineer Bainomugisha;Can we find stable alternatives for unstable Eclipse interfaces?;http://dx.doi.org/10.1109/ICPC.2016.7503716;1-10;10;Technical Research 4:Language Usage;
2016;Mohamed Aymen Saied,Houari A. Sahraoui;A cooperative approach for combining client-based and library-based API usage pattern mining.;http://dx.doi.org/10.1109/ICPC.2016.7503717;1-10;10;Technical Research 4:Language Usage;
2016;Guilherme Avelino,Leonardo Teixeira Passos,Andre C. Hora,Marco Tulio de Oliveira Valente;A novel approach for estimating Truck Factors.;http://dx.doi.org/10.1109/ICPC.2016.7503718;1-10;10;Technical Research 4:Language Usage;
2016;Sebastian Okon,Stefan Hanenberg;Can we enforce a benefit for dynamically typed languages in comparison to statically typed ones? A controlled experiment.;http://dx.doi.org/10.1109/ICPC.2016.7503719;1-10;10;Technical Research 4:Language Usage;
2016;Fang-Hsiang Su,Jonathan Bell,Gail E. Kaiser,Simha Sethumadhavan;Identifying functionally similar code in complex codebases.;http://dx.doi.org/10.1109/ICPC.2016.7503720;1-10;10;Technical Research 5:Assessing Code;
2016;Mario Linares Vasquez,Andrew Holtzhauer,Denys Poshyvanyk;On automatically detecting similar Android apps.;http://dx.doi.org/10.1109/ICPC.2016.7503721;1-10;10;Technical Research 5:Assessing Code;
2016;Xiao Cheng,Hao Zhong,Yuting Chen,Zhenjiang Hu,Jianjun Zhao;Rule-directed code clone synchronization.;http://dx.doi.org/10.1109/ICPC.2016.7503722;1-10;10;Technical Research 5:Assessing Code;
2016;Simone Romano 0001,Christopher Vendome,Giuseppe Scanniello,Denys Poshyvanyk;Are unreachable methods harmful? Results from a controlled experiment.;http://dx.doi.org/10.1109/ICPC.2016.7503723;1-10;10;Technical Research 5:Assessing Code;
2016;Latifa Guerrouj,Olga Baysal;Investigating the android apps' success: An empirical study.;http://dx.doi.org/10.1109/ICPC.2016.7503724;1-4;4;Short Papers 1:Getting Deep Insight Into Your Software;
2016;Lei Ma,Cheng Zhang,Bing Yu,Jianjun Zhao;Retrofitting automatic testing through library tests reusing.;http://dx.doi.org/10.1109/ICPC.2016.7503725;1-4;4;Short Papers 1:Getting Deep Insight Into Your Software;
2016;Syed Islam,Adel Noureddine,Rabih Bashroush;Measuring energy footprint of software features.;http://dx.doi.org/10.1109/ICPC.2016.7503726;1-4;4;Short Papers 1:Getting Deep Insight Into Your Software;
2016;Suresh Kothari,Ahmed Tamrawi,Jon Mathews;Human-machine resolution of Invisible Control Flow?;http://dx.doi.org/10.1109/ICPC.2016.7503727;1-4;4;Short Papers 1:Getting Deep Insight Into Your Software;
2016;Chelsea A. Metcalf,Farhaan Fowze,Tuba Yavuz,Jose Fortes;Extracting configuration parameter interactions using static analysis.;http://dx.doi.org/10.1109/ICPC.2016.7503728;1-4;4;Short Papers 1:Getting Deep Insight Into Your Software;
2016;Bo Zhang,Vasil L. Tenev,Martin Becker 0002;Android build dependency analysis.;http://dx.doi.org/10.1109/ICPC.2016.7503729;1-4;4;Short Papers 1:Getting Deep Insight Into Your Software;
2016;Brian Dillon,Richard Thompson;Software development and tool usability.;http://dx.doi.org/10.1109/ICPC.2016.7503730;1-4;4;Short Papers 2:Comprehension You Can Use;
2016;Erina Makihara,Hiroshi Igaki,Norihiro Yoshida,Kenji Fujiwara,Hajimu Iida;Detecting exploratory programming behaviors for introductory programming exercises.;http://dx.doi.org/10.1109/ICPC.2016.7503731;1-4;4;Short Papers 2:Comprehension You Can Use;
2016;Alexander Breckel,Matthias Tichy;Embedding programming context into source code.;http://dx.doi.org/10.1109/ICPC.2016.7503732;1-4;4;Short Papers 2:Comprehension You Can Use;
2016;Jeong Yang,Young Lee,David Hicks;Synchronized static and dynamic visualization in a web-based programming environment.;http://dx.doi.org/10.1109/ICPC.2016.7503733;1-4;4;Short Papers 2:Comprehension You Can Use;
2016;Madhusudan Srinivasan,Jeong Yang,Young Lee;Case studies of optimized sequence diagram for program comprehension.;http://dx.doi.org/10.1109/ICPC.2016.7503734;1-4;4;Short Papers 2:Comprehension You Can Use;
2016;Aniket Kulkarni;Comprehending source code of large software system for reuse.;http://dx.doi.org/10.1109/ICPC.2016.7503735;1-4;4;Short Papers 2:Comprehension You Can Use;
2016;Rijnard van Tonder,Claire Le Goues;Defending against the attack of the micro-clones.;http://dx.doi.org/10.1109/ICPC.2016.7503736;1-4;4;Short Papers 3:Attack of the Development Team;
2016;Gerald Schermann,Jurgen Cito,Philipp Leitner,Harald C. Gall;Towards quality gates in continuous delivery and deployment.;http://dx.doi.org/10.1109/ICPC.2016.7503737;1-4;4;Short Papers 3:Attack of the Development Team;
2016;Norihiro Yoshida,Tsubasa Saika,Eunjong Choi,Ali Ouni 0001,Katsuro Inoue;Revisiting the relationship between code smells and refactoring.;http://dx.doi.org/10.1109/ICPC.2016.7503738;1-4;4;Short Papers 3:Attack of the Development Team;
2016;Yusuke Yuki,Yoshiki Higo,Keisuke Hotta,Shinji Kusumoto;Generating clone references with less human subjectivity.;http://dx.doi.org/10.1109/ICPC.2016.7503739;1-4;4;Short Papers 3:Attack of the Development Team;
2016;Fabio Petrillo,Zaphyrin Soh,Foutse Khomh,Marcelo Soares Pimenta,Carla Maria Dal Sasso Freitas,Yann-Gael Gueheneuc;Understanding interactive debugging with Swarm Debug Infrastructure.;http://dx.doi.org/10.1109/ICPC.2016.7503740;1-4;4;Short Papers 3:Attack of the Development Team;
2016;Sven Amann,Sebastian Proksch,Sarah Nadi;FeedBaG: An interaction tracker for Visual Studio.;http://dx.doi.org/10.1109/ICPC.2016.7503741;1-3;3;Tool Demonstrations;
2016;Mohammad R. Azadmanesh,Matthias Hauswirth;InfectoMeter: A tool that helps to place bug fixes.;http://dx.doi.org/10.1109/ICPC.2016.7503742;1-3;3;Tool Demonstrations;
2016;Alexander Breckel,Matthias Tichy;INLINE: Now you're coding with portals.;http://dx.doi.org/10.1109/ICPC.2016.7503743;1-3;3;Tool Demonstrations;
2016;Jonathan Cloutier,Segla Kpodjedo,Ghizlane El-Boussaidi;WAVI: A reverse engineering tool for web applications.;http://dx.doi.org/10.1109/ICPC.2016.7503744;1-3;3;Tool Demonstrations;
2016;Syed S. Islam,David M. Binkley;PORBS: A parallel observation-based slicer.;http://dx.doi.org/10.1109/ICPC.2016.7503745;1-3;3;Tool Demonstrations;
2016;Saket Khatiwada,Michael Kelly,Anas Mahmoud;STAC: A tool for Static Textual Analysis of Code.;http://dx.doi.org/10.1109/ICPC.2016.7503746;1-3;3;Tool Demonstrations;
2016;Naoto Ogura,Jiachen Yang,Keisuke Hotta,Yoshiki Higo,Shinji Kusumoto;Hey! Are you injecting side effect?: A tool for detecting purity changes in java methods.;http://dx.doi.org/10.1109/ICPC.2016.7503747;1-3;3;Tool Demonstrations;
2016;Weisong Sun,Xiaobing Sun,Hui Yang,Bin Li;WB4SP: A tool to build the word base for specific programs.;http://dx.doi.org/10.1109/ICPC.2016.7503748;1-3;3;Tool Demonstrations;
2015;Gerald Schermann,Martin Brandtner,Sebastiano Panichella,Philipp Leitner,Harald C. Gall;Discovering loners and phantoms in commit and issue data.;http://dx.doi.org/10.1109/ICPC.2015.10;4-14;11;Mining software repositories - technical research papers;
2015;Omar Benomar,Hani Abdeen,Houari A. Sahraoui,Pierre Poulin,Mohamed Aymen Saied;Detection of software evolution phases based on development activities.;http://dx.doi.org/10.1109/ICPC.2015.11;15-24;10;Mining software repositories - technical research papers;
2015;Roberto Minelli,Andrea Mocci,Michele Lanza;I know what you did last summer: an investigation of how developers spend their time.;http://dx.doi.org/10.1109/ICPC.2015.12;25-35;11;Mining software repositories - technical research papers;
2015;Tien-Duy B. Le,Mario Linares Vasquez,David Lo,Denys Poshyvanyk;RCLinker: automated linking of issue reports and commits leveraging rich contextual information.;http://dx.doi.org/10.1109/ICPC.2015.13;36-47;12;Mining software repositories - technical research papers;
2015;Martin White,Mario Linares Vasquez,Peter Johnson,Carlos Bernal-Cardenas,Denys Poshyvanyk;Generating reproducible and replayable bug reports from Android application crashes.;http://dx.doi.org/10.1109/ICPC.2015.14;48-59;12;Mining software repositories - technical research papers;
2015;Ferdian Thung,Xuan-Bach D. Le,David Lo;Active semi-supervised defect categorization.;http://dx.doi.org/10.1109/ICPC.2015.15;60-70;11;Mining software repositories - technical research papers;
2015;Mohamed Aymen Saied,Hani Abdeen,Omar Benomar,Houari A. Sahraoui;Could we infer unordered API usage patterns only using the library source code?;http://dx.doi.org/10.1109/ICPC.2015.16;71-81;11;Learning and sharing program knowledge - technical research papers;
2015;Joshua Sunshine,James D. Herbsleb,Jonathan Aldrich;Searching the state space: a qualitative study of API protocol usability.;http://dx.doi.org/10.1109/ICPC.2015.17;82-93;12;Learning and sharing program knowledge - technical research papers;
2015;Stefanie Beyer,Martin Pinzger;Synonym suggestion for tags on stack overflow.;http://dx.doi.org/10.1109/ICPC.2015.18;94-103;10;Learning and sharing program knowledge - technical research papers;
2015;Laura MacLeod,Margaret-Anne D. Storey,Andreas Bergen;Code, camera, action: how software developers document and share program knowledge using YouTube.;http://dx.doi.org/10.1109/ICPC.2015.19;104-114;11;Learning and sharing program knowledge - technical research papers;
2015;Benedikt Hauptmann,Elmar Jurgens,Volkmar Woinke;Generating refactoring proposals to remove clones from automated system tests.;http://dx.doi.org/10.1109/ICPC.2015.20;115-124;10;Learning and sharing program knowledge - technical research papers;
2015;Raquel Fialho Lafeta,Marcelo de Almeida Maia,David Rothlisberger;Framework instantiation using cookbooks constructed with static and dynamic analysis.;http://dx.doi.org/10.1109/ICPC.2015.21;125-128;4;Learning and sharing program knowledge - early research achievement papers;
2015;Tobias Roehm;Two user perspectives in program comprehension: end users and developer users.;http://dx.doi.org/10.1109/ICPC.2015.22;129-139;11;Users, user interfaces, and feature location - technical research papers;
2015;Emily Hill,David C. Shepherd,Lori L. Pollock;Exploring the use of concern element role information in feature location evaluation.;http://dx.doi.org/10.1109/ICPC.2015.23;140-150;11;Users, user interfaces, and feature location - technical research papers;
2015;Fabian Beck,Bogdan Dit,Jaleo Velasco-Madden,Daniel Weiskopf,Denys Poshyvanyk;Rethinking user interfaces for feature location.;http://dx.doi.org/10.1109/ICPC.2015.24;151-162;12;Users, user interfaces, and feature location - technical research papers;
2015;Charlie Soh,Hee Beng Kuan Tan,Yauhen Leanidavich Arnatovich,Lipo Wang;Detecting clones in Android applications through analyzing user interfaces.;http://dx.doi.org/10.1109/ICPC.2015.25;163-173;11;Users, user interfaces, and feature location - technical research papers;
2015;Howell R. Jordan,Jacek Rosik,Sebastian Herold,Goetz Botterweck,Jim Buckley;Manually locating features in industrial source code: the search actions of software nomads.;http://dx.doi.org/10.1109/ICPC.2015.26;174-177;4;Users, user interfaces, and feature location - early research achievement papers;
2015;Eran Avidan,Dror G. Feitelson;From obfuscation to comprehension.;http://dx.doi.org/10.1109/ICPC.2015.27;178-181;4;Users, user interfaces, and feature location - early research achievement papers;
2015;Roberto Minelli,Andrea Mocci,Michele Lanza;The plague doctor: a promising cure for the window plague.;http://dx.doi.org/10.1109/ICPC.2015.28;182-185;4;Users, user interfaces, and feature location - early research achievement papers;
2015;Nevena Milojkovic,Andrea Caracciolo,Mircea Filip Lungu,Oscar Nierstrasz,David Rothlisberger,Romain Robbes;Polymorphism in the spotlight: studying its prevalence in Java and Smalltalk.;http://dx.doi.org/10.1109/ICPC.2015.29;186-195;10;Large scale empirical studies - technical research papers;
2015;Simon Butler,Michel Wermelinger,Yijun Yu;A survey of the forms of Java reference names.;http://dx.doi.org/10.1109/ICPC.2015.30;196-206;11;Large scale empirical studies - technical research papers;
2015;Douglas H. Martin,James R. Cordy,Bram Adams,Giuliano Antoniol;Make it simple: an empirical analysis of GNU make feature use in open source projects.;http://dx.doi.org/10.1109/ICPC.2015.31;207-217;11;Large scale empirical studies - technical research papers;
2015;Christopher Vendome,Mario Linares Vasquez,Gabriele Bavota,Massimiliano Di Penta,Daniel M. German,Denys Poshyvanyk;License usage and changes: a large-scale study of Java projects on GitHub.;http://dx.doi.org/10.1109/ICPC.2015.32;218-228;11;Large scale empirical studies - technical research papers;
2015;Javier Escobar-Avila,Mario Linares Vasquez,Sonia Haiduc;Unsupervised software categorization using bytecode.;http://dx.doi.org/10.1109/ICPC.2015.33;229-239;11;Large scale empirical studies - technical research papers;
2015;Moritz Beller,Andy Zaidman,Andrey N. Karpov;The last line effect.;http://dx.doi.org/10.1109/ICPC.2015.34;240-243;4;Large scale empirical studies - early research achievement papers;
2015;Ahmad Jbara,Dror G. Feitelson;How programmers read regular code: a controlled experiment using eye tracking.;http://dx.doi.org/10.1109/ICPC.2015.35;244-254;11;Reading and visualizing - technical research papers;
2015;Teresa Busjahn,Roman Bednarik,Andrew Begel,Martha E. Crosby,James H. Paterson,Carsten Schulte,Bonita Sharif,Sascha Tamm;Eye movements in code reading: relaxing the linear order.;http://dx.doi.org/10.1109/ICPC.2015.36;255-265;11;Reading and visualizing - technical research papers;
2015;Florian Fittkau,Santje Finke,Wilhelm Hasselbring,Jan Waller;Comparing trace visualizations for program comprehension through controlled experiments.;http://dx.doi.org/10.1109/ICPC.2015.37;266-276;11;Reading and visualizing - technical research papers;
2015;Marcello Romanelli,Andrea Mocci,Michele Lanza;Towards visual reflexion models.;http://dx.doi.org/10.1109/ICPC.2015.38;277-280;4;Reading and visualizing - early research achievement papers;
2015;Dan C. Cosma,Petru Florin Mihancea;Understanding web applications using component based visual patterns.;http://dx.doi.org/10.1109/ICPC.2015.39;281-284;4;Reading and visualizing - early research achievement papers;
2015;Pavan Kumar Chittimalli,Vipul Shah;Fault localization during system testing.;http://dx.doi.org/10.1109/ICPC.2015.40;285-286;2;Industry and experience reports;
2015;Chetan Khadke,Sunjit Rana,Vipul Shah;Recovering workflows from functional tests.;http://dx.doi.org/10.1109/ICPC.2015.41;287-288;2;Industry and experience reports;
2015;Yusuke Sabi,Hiroaki Murakami,Yoshiki Higo,Shinji Kusumoto;Reordering results of keyword-based code search for supporting simultaneous code changes.;http://dx.doi.org/10.1109/ICPC.2015.42;289-290;2;Industry and experience reports;
2015;Yuki Yano,Raula Gaikovina Kula,Takashi Ishio,Katsuro Inoue;VerXCombo: an interactive data visualization of popular library version combinations.;http://dx.doi.org/10.1109/ICPC.2015.43;291-294;4;Tool demos;
2015;Amir Saeidi,Jurriaan Hage,Ravi Khadka,Slinger Jansen;ITMViz: interactive topic modeling for source code analysis.;http://dx.doi.org/10.1109/ICPC.2015.44;295-298;4;Tool demos;
2015;Vahid Amintabar,Abbas Heydarnoori,Mohammad Ghafari;ExceptionTracer: a solution recommender for exceptions in an integrated development environment.;http://dx.doi.org/10.1109/ICPC.2015.45;299-302;4;Tool demos;
2015;Milan Pavlovic,Milan Radulovic,Alex Ramirez,Petar Radojkovic;Limpio: LIghtweight MPI instrumentatiOn.;http://dx.doi.org/10.1109/ICPC.2015.46;303-306;4;Tool demos;
2014;Mojtaba Shahin,Peng Liang,Zengyang Li;Do architectural design decisions improve the understanding of software architecture? two controlled experiments.;http://doi.acm.org/10.1145/2597008.2597139;3-13;11;Architecture;
2014;Vanius Zapalowski,Ingrid Nunes,Daltro Jose Nunes;Revealing the relationship between architectural elements and source code characteristics.;http://doi.acm.org/10.1145/2597008.2597156;14-25;12;Architecture;
2014;David M. Binkley,Daniel Heinz,Dawn Lawrie,Justin Overfelt;Understanding LDA in source code analysis.;http://doi.acm.org/10.1145/2597008.2597150;26-36;11;Supporting Software Engineers;
2014;Alexandre Perez,Rui Abreu;A diagnosis-based approach to software comprehension.;http://doi.acm.org/10.1145/2597008.2597151;37-47;11;Supporting Software Engineers;
2014;David H. White 0001;dsOli: data structure operation location and identification.;http://doi.acm.org/10.1145/2597008.2597800;48-52;5;Supporting Software Engineers;
2014;Shaowei Wang,David Lo;Version history, similar report, and structure: putting them together for improved bug localization.;http://doi.acm.org/10.1145/2597008.2597148;53-63;11;Supporting Software Engineers;
2014;Nesrine Noughi,Marco Mori,Loup Meurice,Anthony Cleve;Understanding the database manipulation behavior of programs.;http://doi.acm.org/10.1145/2597008.2597790;64-67;4;Supporting Software Engineers;
2014;Joe F. Shobe,Md Yasser Karim,Motahareh Bahrami Zanjani,Huzefa H. Kagdi;On mapping releases to commits in open source systems.;http://doi.acm.org/10.1145/2597008.2597792;68-71;4;Supporting Software Engineers;
2014;Lucas Batista Leite de Souza,Eduardo Cunha Campos,Marcelo de Almeida Maia;Ranking crowd knowledge to assist software development.;http://doi.acm.org/10.1145/2597008.2597146;72-82;11;Collaborative and Human Aspects;
2014;Mario Linares Vasquez,Gabriele Bavota,Massimiliano Di Penta,Rocco Oliveto,Denys Poshyvanyk;How do API changes trigger stack overflow discussions? a study on the Android SDK.;http://doi.acm.org/10.1145/2597008.2597155;83-94;12;Collaborative and Human Aspects;
2014;Bo Zhou,Xin Xia,David Lo,Cong Tian,Xinyu Wang;Towards more accurate content categorization of API discussions.;http://doi.acm.org/10.1145/2597008.2597142;95-105;11;Collaborative and Human Aspects;
2014;Carmine Vassallo,Sebastiano Panichella,Massimiliano Di Penta,Gerardo Canfora;CODES: mining source code descriptions from developers discussions.;http://doi.acm.org/10.1145/2597008.2597799;106-109;4;Collaborative and Human Aspects;
2014;Ferdian Thung,David Lo,Mohd Hafeez Osman,Michel R. V. Chaudron;Condensing class diagrams by analyzing design and network metrics using optimistic classification.;http://doi.acm.org/10.1145/2597008.2597157;110-121;12;Collaborative and Human Aspects;
2014;Renan Vasconcelos,Marcelo Schots,Claudia Werner;An information visualization feature model for supporting the selection of software visualizations.;http://doi.acm.org/10.1145/2597008.2597796;122-125;4;Collaborative and Human Aspects;
2014;Denis Delimarschi,George Swartzendruber,Huzefa H. Kagdi;Enabling integrated development environments with natural user interface interactions.;http://doi.acm.org/10.1145/2597008.2597791;126-129;4;Collaborative and Human Aspects;
2014;Kamal Hossen,Huzefa H. Kagdi,Denys Poshyvanyk;Amalgamating source code authors, maintainers, and change proneness to triage change requests.;http://doi.acm.org/10.1145/2597008.2597147;130-141;12;Recommendations;
2014;Mohammad Ghafari,Carlo Ghezzi,Andrea Mocci,Giordano Tamburrelli;Mining unit tests for code recommendation.;http://doi.acm.org/10.1145/2597008.2597789;142-145;4;Recommendations;
2014;Danilo Silva,Ricardo Terra,Marco Tulio de Oliveira Valente;Recommending automated extract method refactorings.;http://doi.acm.org/10.1145/2597008.2597141;146-156;11;Recommendations;
2014;Laleh Mousavi Eshkevari,Giuliano Antoniol,James R. Cordy,Massimiliano Di Penta;Identifying and locating interference issues in PHP applications: the case of WordPress.;http://doi.acm.org/10.1145/2597008.2597153;157-167;11;Recommendations;
2014;Daniela Steidl,Sebastian Eder;Prioritizing maintainability defects based on refactoring recommendations.;http://doi.acm.org/10.1145/2597008.2597805;168-176;9;Joint Session with CHASE 1;
2014;Sebastiano Panichella,Gerardo Canfora,Massimiliano Di Penta,Rocco Oliveto;How the evolution of emerging collaborations relates to code changes: an empirical study.;http://doi.acm.org/10.1145/2597008.2597145;177-188;12;Joint Session with CHASE 2;
2014;Ahmad Jbara,Dror G. Feitelson;On the effect of code regularity on comprehension.;http://doi.acm.org/10.1145/2597008.2597140;189-200;12;Understanding Comprehension;
2014;Braden Walters,Timothy Shaffer,Bonita Sharif,Huzefa H. Kagdi;Capturing software traceability links from developers' eye gazes.;http://doi.acm.org/10.1145/2597008.2597795;201-204;4;Understanding Comprehension;
2014;Vikrant S. Kaulgud,K. M. Annervaz,Janardan Misra,Gary Titus;Comprehension support during knowledge transitions: learning from field.;http://doi.acm.org/10.1145/2597008.2597804;205-206;2;Understanding Comprehension;
2014;Katsuhisa Maruyama,Takayuki Omori,Shinpei Hayashi;A visualization tool recording historical data of program comprehension tasks.;http://doi.acm.org/10.1145/2597008.2597802;207-211;5;Understanding Comprehension;
2014;Pujan Petersen,Stefan Hanenberg,Romain Robbes;An empirical comparison of static and dynamic type systems on API usage in the presence of an IDE: Java vs. groovy with eclipse.;http://doi.acm.org/10.1145/2597008.2597152;212-222;11;Understanding Comprehension;
2014;Andreas Stefik,Stefan Hanenberg,Mark McKenney,Anneliese von Mayrhauser,Srinivas Kalyan Yellanki,Susanna Siebert;What is the foundation of evidence of human factors decisions in language design? an empirical study on programming language workshops.;http://doi.acm.org/10.1145/2597008.2597154;223-231;9;Understanding Comprehension;
2014;Mario Linares Vasquez,Sam Klock,Collin McMillan,Aminata Sabane,Denys Poshyvanyk,Yann-Gael Gueheneuc;Domain matters: bringing further evidence of the relationships among anti-patterns, application domains, and quality-related metrics in Java mobile apps.;http://doi.acm.org/10.1145/2597008.2597144;232-243;12;Software Quality;
2014;Shrinath Gupta,Himanshu Kumar Singh,Radhika D. Venkatasubramanyam,Umesh Uppili;SCQAM: a scalable structured code quality assessment method for industrial software.;http://doi.acm.org/10.1145/2597008.2597806;244-252;9;Software Quality;
2014;Toshinori Matsumura,Takashi Ishio,Yu Kashima,Katsuro Inoue;Repeatedly-executed-method viewer for efficient visualization of execution paths and states in Java.;http://doi.acm.org/10.1145/2597008.2597803;253-257;5;Software Quality;
2014;Dirk Beyer 0001,Peter Haring;A formal evaluation of DepDegree based on weyuker's properties.;http://doi.acm.org/10.1145/2597008.2597794;258-261;4;Software Quality;
2014;Hiroyuki Kirinuki,Yoshiki Higo,Keisuke Hotta,Shinji Kusumoto;Hey! are you committing tangled changes?;http://doi.acm.org/10.1145/2597008.2597798;262-265;4;Software Quality;
2014;Shrinath Gupta,Himanshu Kumar Singh;A semiautomated method for classifying program analysis rules into a quality model.;http://doi.acm.org/10.1145/2597008.2597808;266-270;5;Software Quality;
2014;Takayuki Suzuki,Kazunori Sakamoto,Fuyuki Ishikawa,Shinichi Honiden;An approach for evaluating and suggesting method names using n-gram models.;http://doi.acm.org/10.1145/2597008.2597797;271-274;4;Software Quality;
2014;Xin Xia,David Lo,Xingen Wang,Chenyi Zhang,Xinyu Wang;Cross-language bug localization.;http://doi.acm.org/10.1145/2597008.2597788;275-278;4;Software Quality;
2014;Paul W. McBurney,Collin McMillan;Automatic documentation generation via source code summarization of method context.;http://doi.acm.org/10.1145/2597008.2597149;279-290;12;Novel Development Tooling;
2014;Paul W. McBurney,Cheng Liu,Collin McMillan,Tim Weninger;Improving topic model source code summarization.;http://doi.acm.org/10.1145/2597008.2597793;291-294;4;Novel Development Tooling;
2014;Aniket Kulkarni,Ravindra Metta;A code obfuscation framework using code clones.;http://doi.acm.org/10.1145/2597008.2597807;295-299;5;Novel Development Tooling;
2014;Ahmad Jbara,Dror G. Feitelson;JCSD: visual support for understanding code control structure.;http://doi.acm.org/10.1145/2597008.2597801;300-303;4;Novel Development Tooling;
2014;Zhenzhou Tian,Qinghua Zheng,Ting Liu,Ming Fan,Xiaodong Zhang,Zijiang Yang;Plagiarism detection for multithreaded software based on thread-aware software birthmarks.;http://doi.acm.org/10.1145/2597008.2597143;304-313;10;Novel Development Tooling;
2014;Mark Grechanik,Collin McMillan,Tathagata Dasgupta,Denys Poshyvanyk,Malcom Gethers;Redacting sensitive information in software artifacts.;http://doi.acm.org/10.1145/2597008.2597138;314-325;12;Novel Development Tooling;
2013;Samir Gupta,Sana Malik,Lori L. Pollock,K. Vijay-Shanker;Part-of-speech tagging of program identifiers for improved text-based software engineering tools.;http://dx.doi.org/10.1109/ICPC.2013.6613828;3-12;10;Textual Analysis;
2013;Brian P. Eddy,Jeffrey A. Robinson,Nicholas A. Kraft,Jeffrey Carver;Evaluating source code summarization techniques: Replication and expansion.;http://dx.doi.org/10.1109/ICPC.2013.6613829;13-22;10;Textual Analysis;
2013;Laura Moreno,Jairo Aponte,Giriprasad Sridhara,Andrian Marcus,Lori L. Pollock,K. Vijay-Shanker;Automatic generation of natural language summaries for Java classes.;http://dx.doi.org/10.1109/ICPC.2013.6613830;23-32;10;Textual Analysis;
2013;Zohreh Sharafi,Alessandro Marchetto,Angelo Susi,Giuliano Antoniol,Yann-Gael Gueheneuc;An empirical study on the efficiency of graphical vs. textual representations in requirements comprehension.;http://dx.doi.org/10.1109/ICPC.2013.6613831;33-42;10;The Role of Visualization in Program Comprehension;
2013;Kenichi Kobayashi,Manabu Kamimura,Keisuke Yano,Koki Kato,Akihiko Matsuo;SArF map: Visualizing software architecture from feature and layer viewpoints.;http://dx.doi.org/10.1109/ICPC.2013.6613832;43-52;10;The Role of Visualization in Program Comprehension;
2013;Jonas Trumper,Jurgen Dollner,Alexandru Telea;Multiscale visual comparison of execution traces.;http://dx.doi.org/10.1109/ICPC.2013.6613833;53-62;10;The Role of Visualization in Program Comprehension;
2013;Fabian Beck,Oliver Moseler,Stephan Diehl 0001,Gunter Daniel Rey;In situ understanding of performance bottlenecks through visually augmented code.;http://dx.doi.org/10.1109/ICPC.2013.6613834;63-72;10;The Role of Visualization in Program Comprehension;
2013;Tobias Roehm,Nigar Gurbanova,Bernd Brugge,Christophe Joubert,Walid Maalej;Monitoring user interactions for supporting failure reproduction.;http://dx.doi.org/10.1109/ICPC.2013.6613835;73-82;10;Software Quality;
2013;Daniela Steidl,Benjamin Hummel,Elmar Jurgens;Quality analysis of source code comments.;http://dx.doi.org/10.1109/ICPC.2013.6613836;83-92;10;Software Quality;
2013;Hiroaki Murakami,Keisuke Hotta,Yoshiki Higo,Hiroshi Igaki,Shinji Kusumoto;Gapped code clone detection with lightweight source code analysis.;http://dx.doi.org/10.1109/ICPC.2013.6613837;93-102;10;Source Code Comprehension;
2013;Manishankar Mondal,Chanchal Kumar Roy,Kevin A. Schneider;Insight into a method co-change pattern to identify highly coupled methods: An empirical study.;http://dx.doi.org/10.1109/ICPC.2013.6613838;103-112;10;Source Code Comprehension;
2013;Philip Mayer,Andreas Schroeder;Patterns of cross-language linking in java frameworks.;http://dx.doi.org/10.1109/ICPC.2013.6613839;113-122;10;Source Code Comprehension;
2013;Diana Diaz,Gabriele Bavota,Andrian Marcus,Rocco Oliveto,Silvia Takahashi,Andrea De Lucia;Using code ownership to improve IR-based Traceability Link Recovery.;http://dx.doi.org/10.1109/ICPC.2013.6613840;123-132;10;Traceability and Feature Location;
2013;Blake Bassett,Nicholas A. Kraft;Structural information based term weighting in text retrieval for feature location.;http://dx.doi.org/10.1109/ICPC.2013.6613841;133-141;9;Traceability and Feature Location;
2013;Yingying Zhang,Daqing Hou;Extracting problematic API features from forum discussions.;http://dx.doi.org/10.1109/ICPC.2013.6613842;142-151;10;Comprehending API;
2013;Coen De Roover,Ralf Lammel,Ekaterina Pek;Multi-dimensional exploration of API usage.;http://dx.doi.org/10.1109/ICPC.2013.6613843;152-161;10;Comprehending API;
2013;Anas Mahmoud,Nan Niu;Evaluating software clustering algorithms in the context of program comprehension.;http://dx.doi.org/10.1109/ICPC.2013.6613844;162-171;10;Comprehending Software Architectures;
2013;Leo Pruijt,Christian Koppe,Sjaak Brinkkemper;On the accuracy of Architecture Compliance Checking support Accuracy of dependency analysis and violation reporting.;http://dx.doi.org/10.1109/ICPC.2013.6613845;172-181;10;Comprehending Software Architectures;
2013;Mohamed Aly,Anis Charfi,Mira Mezini;Building extensions for applications: Towards the understanding of extension possibilities.;http://dx.doi.org/10.1109/ICPC.2013.6613846;182-191;10;Comprehending Software Architectures;
2013;Mario Bernhart,Thomas Grechenig;On the understanding of programs with continuous code reviews.;http://dx.doi.org/10.1109/ICPC.2013.6613847;192-198;7;Industry Track;
2013;Yuki Yamanaka,Eunjong Choi,Norihiro Yoshida,Katsuro Inoue,Tateki Sano;Applying clone change notification system into an industrial development process.;http://dx.doi.org/10.1109/ICPC.2013.6613848;199-206;8;Industry Track;
2013;Michele Lanza,Marco D'Ambros,Alberto Bacchelli,Lile Hattori,Francesco Rigotti;Manhattan: Supporting real-time visual team activity awareness.;http://dx.doi.org/10.1109/ICPC.2013.6613849;207-210;4;Early Reserarch Achievements Track;
2013;Chris Parnin,Christoph Treude,Margaret-Anne D. Storey;Blogging developer knowledge: Motivations, challenges, and future directions.;http://dx.doi.org/10.1109/ICPC.2013.6613850;211-214;4;Early Reserarch Achievements Track;
2013;Manabu Kamimura,Gail C. Murphy;Towards generating human-oriented summaries of unit test cases.;http://dx.doi.org/10.1109/ICPC.2013.6613851;215-218;4;Early Reserarch Achievements Track;
2013;Cataldo Basile,Mariano Ceccato;Towards a unified software attack model to assess software protections.;http://dx.doi.org/10.1109/ICPC.2013.6613852;219-222;4;Early Reserarch Achievements Track;
2013;Manishankar Mondal,Chanchal Kumar Roy,Kevin A. Schneider;Improving the detection accuracy of evolutionary coupling.;http://dx.doi.org/10.1109/ICPC.2013.6613853;223-226;4;Early Reserarch Achievements Track;
2013;Toshihiro Kamiya;Agec: An execution-semantic clone detection tool.;http://dx.doi.org/10.1109/ICPC.2013.6613854;227-229;3;Tool Demonstrations;
2013;Laura Moreno,Andrian Marcus,Lori L. Pollock,K. Vijay-Shanker;JSummarizer: An automatic generator of natural language summaries for Java classes.;http://dx.doi.org/10.1109/ICPC.2013.6613855;230-232;3;Tool Demonstrations;
2013;Michael Falcone,Bonita Sharif;OnionUML: An Eclipse plug-in for visualizing UML class diagrams in onion graph notation.;http://dx.doi.org/10.1109/ICPC.2013.6613856;233-235;3;Tool Demonstrations;
2013;Md. Sharif Uddin,Chanchal Kumar Roy,Kevin A. Schneider;SimCad: An extensible and faster clone detection tool for large scale software systems.;http://dx.doi.org/10.1109/ICPC.2013.6613857;236-238;3;Tool Demonstrations;
2012;Bernhard Katzmarski,Rainer Koschke;Program complexity metrics and programmer opinions.;http://dx.doi.org/10.1109/ICPC.2012.6240486;17-26;10;Cognitive Processes;
2012;Zohreh Sharafi,Zephyrin Soh,Yann-Gael Gueheneuc,Giuliano Antoniol;Women and men - Different but equal: On the impact of identifier style on source code reading.;http://dx.doi.org/10.1109/ICPC.2012.6240505;27-36;10;Cognitive Processes;
2012;Takashi Ishio,Shogo Etsuda,Katsuro Inoue;A lightweight visualization of interprocedural data-flow paths for source code reading.;http://dx.doi.org/10.1109/ICPC.2012.6240506;37-46;10;Cognitive Processes;
2012;Janet Feigenspan,Don S. Batory,Taylor L. Riche;Is the derivation of a model easier to understand than the model itself?;http://dx.doi.org/10.1109/ICPC.2012.6240508;47-52;6;Cognitive Processes;
2012;Chandan Raj Rupakheti,Daqing Hou;Evaluating forum discussions to inform the design of an API critic.;http://dx.doi.org/10.1109/ICPC.2012.6240509;53-62;10;The Role of the Developer;
2012;Sebastiano Panichella,Jairo Aponte,Massimiliano Di Penta,Andrian Marcus,Gerardo Canfora;Mining source code descriptions from developer communications.;http://dx.doi.org/10.1109/ICPC.2012.6240510;63-72;10;The Role of the Developer;
2012;Janet Feigenspan,Christian Kastner,Jorg Liebig,Sven Apel,Stefan Hanenberg;Measuring programming experience.;http://dx.doi.org/10.1109/ICPC.2012.6240511;73-82;10;The Role of the Developer;
2012;Ahmad Jbara,Adam Matan,Dror G. Feitelson;High-MCC functions in the Linux kernel.;http://dx.doi.org/10.1109/ICPC.2012.6240512;83-92;10;Measurement;
2012;John-Jose Nunez,Gregor Kiczales;Understanding registration-based abstractions: A quantitative user study.;http://dx.doi.org/10.1109/ICPC.2012.6240513;93-102;10;Measurement;
2012;Bruno Carreiro da Silva,Claudio Sant'Anna,Christina von Flach G. Chavez,Alessandro Garcia;Concern-based cohesion: Unveiling a hidden dimension of cohesion measurement.;http://dx.doi.org/10.1109/ICPC.2012.6240476;103-112;10;Measurement;
2012;Israel J. Mojica Ruiz,Meiyappan Nagappan,Bram Adams,Ahmed E. Hassan;Understanding reuse in the Android Market.;http://dx.doi.org/10.1109/ICPC.2012.6240477;113-122;10;Measurement;
2012;Chris Parnin,Spencer Rugaber;Programmer information needs after memory failure.;http://dx.doi.org/10.1109/ICPC.2012.6240479;123-132;10;Understanding and Architecture;
2012;Luay Alawneh,Abdelwahab Hamou-Lhadj;Identifying computational phases from inter-process communication traces of HPC applications.;http://dx.doi.org/10.1109/ICPC.2012.6240481;133-142;10;Understanding and Architecture;
2012;Amir Reza Yazdanshenas,Leon Moonen;Tracking and visualizing information flow in component-based systems.;http://dx.doi.org/10.1109/ICPC.2012.6240482;143-152;10;Understanding and Architecture;
2012;Sebastian Kleinschmager,Stefan Hanenberg,Romain Robbes,Eric Tanter,Andreas Stefik;Do static type systems improve the maintainability of software systems? An empirical study.;http://dx.doi.org/10.1109/ICPC.2012.6240483;153-162;10;Empirical Studies;
2012;Zephyrin Soh,Zohreh Sharafi,Bertrand Van den Plas,Gerardo Cepeda Porras,Yann-Gael Gueheneuc,Giuliano Antoniol;Professional status and expertise for UML class diagram comprehension: An empirical study.;http://dx.doi.org/10.1109/ICPC.2012.6240484;163-172;10;Empirical Studies;
2012;Christopher S. Corley,Elizabeth A. Kammer,Nicholas A. Kraft;Modeling the ownership of source code topics.;http://dx.doi.org/10.1109/ICPC.2012.6240485;173-182;10;Semantics and Traceability;
2012;Anas Mahmoud,Nan Niu,Songhua Xu;A semantic relatedness approach for traceability link recovery.;http://dx.doi.org/10.1109/ICPC.2012.6240487;183-192;10;Semantics and Traceability;
2012;Andrea De Lucia,Massimiliano Di Penta,Rocco Oliveto,Annibale Panichella,Sebastiano Panichella;Using IR methods for labeling source code artifacts: Is it worthwhile?;http://dx.doi.org/10.1109/ICPC.2012.6240488;193-202;10;Semantics and Traceability;
2012;Bogdan Dit,Evan Moritz,Denys Poshyvanyk;A TraceLab-based solution for creating, conducting, and sharing feature location experiments.;http://dx.doi.org/10.1109/ICPC.2012.6240489;203-208;6;Semantics and Traceability;
2012;Benedikt Hauptmann,Maximilian Junker,Sebastian Eder,Elmar Jurgens,Rudolf Vaas;Can clone detection support test comprehension?;http://dx.doi.org/10.1109/ICPC.2012.6240490;209-218;10;Source-Code Analysis;
2012;Jan Harder,Rebecca Tiarks;A controlled experiment on software clones.;http://dx.doi.org/10.1109/ICPC.2012.6240491;219-228;10;Source-Code Analysis;
2012;Carlos Noguera,Coen De Roover,Andy Kellens,Viviane Jonckers;Code querying by UML.;http://dx.doi.org/10.1109/ICPC.2012.6240492;229-238;10;Source-Code Analysis;
2012;Chandan Raj Rupakheti,Daqing Hou;CriticAL: A critic for APIs and libraries.;http://dx.doi.org/10.1109/ICPC.2012.6240493;241-243;3;Tool Demonstrations;
2012;Janet Feigenspan,Norbert Siegmund;Supporting comprehension experiments with human subjects.;http://dx.doi.org/10.1109/ICPC.2012.6240494;244-246;3;Tool Demonstrations;
2012;Iman Keivanloo,Chanchal Kumar Roy,Juergen Rilling;SeByte: A semantic clone detection tool for intermediate languages.;http://dx.doi.org/10.1109/ICPC.2012.6240495;247-249;3;Tool Demonstrations;
2012;Keisuke Hotta,Yoshiki Higo,Hiroshi Igaki,Shinji Kusumoto;CRat: A refactoring support tool for Form Template Method.;http://dx.doi.org/10.1109/ICPC.2012.6240496;250-252;3;Tool Demonstrations;
2012;Hiroshi Kazato,Shinpei Hayashi,Satoshi Okada,Shunsuke Miyata,Takashi Hoshino,Motoshi Saeki;Toward structured location of features.;http://dx.doi.org/10.1109/ICPC.2012.6240497;255-256;2;Poster Presentations;
2012;Bo Zhang;Extraction and improvement of conditionally compiled product line code.;http://dx.doi.org/10.1109/ICPC.2012.6240498;257-258;2;Poster Presentations;
2012;Vasil L. Tenev,Slawomir Duszynski;Applying bioinformatics in the analysis of software variants.;http://dx.doi.org/10.1109/ICPC.2012.6240499;259-260;2;Poster Presentations;
2012;Hitesh Sajnani,Joel Ossher,Cristina Videira Lopes;Parallel code clone detection using MapReduce.;http://dx.doi.org/10.1109/ICPC.2012.6240500;261-262;2;Poster Presentations;
2012;Hitesh Sajnani;Automatic software architecture recovery: A machine learning approach.;http://dx.doi.org/10.1109/ICPC.2012.6240501;265-268;4;Student Research Symposium;
2012;Anas Mahmoud;Toward an effective automated tracing process.;http://dx.doi.org/10.1109/ICPC.2012.6240502;269-272;4;Student Research Symposium;
2012;Ahmad Jbara;Characterization of the Linux configuration system.;http://dx.doi.org/10.1109/ICPC.2012.6240503;273-276;4;Student Research Symposium;
2012;Iman Keivanloo;Leveraging clone detection for Internet-scale source code search.;http://dx.doi.org/10.1109/ICPC.2012.6240504;277-280;4;Student Research Symposium;
2011;Giuseppe Scanniello,Andrian Marcus;Clustering Support for Static Concept Location in Source Code.;http://dx.doi.org/10.1109/ICPC.2011.13;1-10;10;Concept and Feature Location;
2011;Bogdan Dit,Latifa Guerrouj,Denys Poshyvanyk,Giuliano Antoniol;Can Better Identifier Splitting Techniques Help Feature Location?;http://dx.doi.org/10.1109/ICPC.2011.47;11-20;10;Concept and Feature Location;
2011;Andrea De Lucia,Massimiliano Di Penta,Rocco Oliveto,Annibale Panichella,Sebastiano Panichella;Improving IR-based Traceability Recovery Using Smoothing Filters.;http://dx.doi.org/10.1109/ICPC.2011.34;21-30;10;Concept and Feature Location;
2011;Annie T. T. Ying,Martin P. Robillard;The Influence of the Task on Programmer Behaviour.;http://dx.doi.org/10.1109/ICPC.2011.35;31-40;10;Empirical Studies of Programmers;
2011;Oleksandr Panchenko,Jan Karstens,Hasso Plattner,Alexander Zeier;Precise and Scalable Querying of Syntactical Source Code Patterns Using Sample Code Snippets and a Database.;http://dx.doi.org/10.1109/ICPC.2011.31;41-50;10;Empirical Studies of Programmers;
2011;Stefan Endrikat,Stefan Hanenberg;Is Aspect-Oriented Programming a Rewarding Investment into Future Code Changes? A Socio-technical Study on Development and Maintenance Time.;http://dx.doi.org/10.1109/ICPC.2011.46;51-60;10;Empirical Studies of Programmers;
2011;David Rothlisberger,Oscar Nierstrasz,Stephane Ducasse;SmartGroups: Focusing on Task-Relevant Source Artifacts in IDEs.;http://dx.doi.org/10.1109/ICPC.2011.20;61-70;10;Automated Support for Program Comprehension;
2011;Giriprasad Sridhara,Lori L. Pollock,K. Vijay-Shanker;Generating Parameter Comments and Integrating with Method Summaries.;http://dx.doi.org/10.1109/ICPC.2011.28;71-80;10;Automated Support for Program Comprehension;
2011;Marouane Kessentini,Wael Kessentini,Houari A. Sahraoui,Mounir Boukadoum,Ali Ouni 0001;Design Defects Detection and Correction by Example.;http://dx.doi.org/10.1109/ICPC.2011.22;81-90;10;Automated Support for Program Comprehension;
2011;Daqing Hou,Lin Li;Obstacles in Using Frameworks and APIs: An Exploratory Study of Programmers' Newsgroup Discussions.;http://dx.doi.org/10.1109/ICPC.2011.21;91-100;10;Collaborative Program Comprehension;
2011;Anja Guzzi,Lile Hattori,Michele Lanza,Martin Pinzger,Arie van Deursen;Collective Code Bookmarks for Program Comprehension.;http://dx.doi.org/10.1109/ICPC.2011.19;101-110;10;Collaborative Program Comprehension;
2011;Nasir Ali,Yann-Gael Gueheneuc,Giuliano Antoniol;Trust-Based Requirements Traceability.;http://dx.doi.org/10.1109/ICPC.2011.42;111-120;10;Collaborative Program Comprehension;
2011;Johan Fabry,Andy Kellens,Stephane Ducasse;AspectMaps: A Scalable Visualization of Join Point Shadows.;http://dx.doi.org/10.1109/ICPC.2011.11;121-130;10;Aspect-Oriented Programming;
2011;Rachel Burrows,Francois Taiani,Alessandro Garcia,Fabiano Cutigi Ferrari;Reasoning about Faults in Aspect-Oriented Programs: A Metrics-Based Evaluation.;http://dx.doi.org/10.1109/ICPC.2011.30;131-140;10;Aspect-Oriented Programming;
2011;Dominik Stein,Stefan Hanenberg;Comparison of a Visual and a Textual Notation to Express Data Constraints in Aspect-Oriented Join Point Selections: A Controlled Experiment.;http://dx.doi.org/10.1109/ICPC.2011.9;141-150;10;Aspect-Oriented Programming;
2011;James R. Cordy;Exploring Large-Scale System Similarity Using Incremental Clone Detection and Live Scatterplots.;http://dx.doi.org/10.1109/ICPC.2011.25;151-160;10;Software Evolution;
2011;Lile Hattori,Marco D'Ambros,Michele Lanza,Mircea Lungu;Software Evolution Comprehension: Replay to the Rescue.;http://dx.doi.org/10.1109/ICPC.2011.39;161-170;10;Software Evolution;
2011;Elmar Jurgens,Martin Feilkas,Markus Herrmannsdorfer,Florian Deissenboeck,Rudolf Vaas,Karl-Heinz Prommer;Feature Profiling for Evolving Systems.;http://dx.doi.org/10.1109/ICPC.2011.12;171-180;10;Software Evolution;
2011;Luay Alawneh,Abdelwahab Hamou-Lhadj;MTF: A Scalable Exchange Format for Traces of High Performance Computing Systems.;http://dx.doi.org/10.1109/ICPC.2011.15;181-184;4;Short Papers;
2011;Nicolas Bettenburg,Bram Adams,Ahmed E. Hassan,Michel Smidt;A Lightweight Approach to Uncover Technical Artifacts in Unstructured Data.;http://dx.doi.org/10.1109/ICPC.2011.36;185-188;4;Short Papers;
2011;Nir Eitan,Michal Gordon-Kiwkowitz,David Harel,Assaf Marron,Gera Weiss;On Visualization and Comprehension of Scenario-Based Programs.;http://dx.doi.org/10.1109/ICPC.2011.10;189-192;4;Short Papers;
2011;Nan Niu,Anas Mahmoud,Xiaoyong Yang;Faceted Navigation for Software Exploration.;http://dx.doi.org/10.1109/ICPC.2011.18;193-196;4;Short Papers;
2011;Chris Parnin;Subvocalization - Toward Hearing the Inner Thoughts of Developers.;http://dx.doi.org/10.1109/ICPC.2011.49;197-200;4;Short Papers;
2011;Gabriella Toth,Adam Zoltan Vegh,Arpad Beszedes,Tibor Gyimothy;Adding Process Metrics to Enhance Modification Complexity Prediction.;http://dx.doi.org/10.1109/ICPC.2011.41;201-204;4;Short Papers;
2011;Mengliao Wang,Xiaoyu Shi,Kenny Wong;Capturing Expert Knowledge for Automated Configuration Fault Diagnosis.;http://dx.doi.org/10.1109/ICPC.2011.24;205-208;4;Short Papers;
2011;Salima Hassaine,Ferdaous Boughanmi,Yann-Gael Gueheneuc,Sylvie Hamel,Giuliano Antoniol;Change Impact Analysis: An Earthquake Metaphor.;http://dx.doi.org/10.1109/ICPC.2011.54;209-210;2;Posters;
2011;Gayani Samaraweera,Macneil Shonle,John Quarles;Programming from the Reader's Perspective: Toward an Expectations Approach.;http://dx.doi.org/10.1109/ICPC.2011.32;211-212;2;Posters;
2011;Andreas Stefik,Susanna Siebert,Kim Slattery,Melissa Stefik;Toward Intuitive Programming Languages.;http://dx.doi.org/10.1109/ICPC.2011.33;213-214;2;Posters;
2011;Mark D. Syer,Bram Adams,Ahmed E. Hassan;Industrial Case Study on Supporting the Comprehension of System Behaviour under Load.;http://dx.doi.org/10.1109/ICPC.2011.38;215-216;2;Posters;
2011;James R. Cordy,Chanchal Kumar Roy;DebCheck: Efficient Checking for Open Source Code Clones in Software Systems.;http://dx.doi.org/10.1109/ICPC.2011.27;217-218;2;Tool Demonstrations;
2011;James R. Cordy,Chanchal Kumar Roy;The NiCad Clone Detector.;http://dx.doi.org/10.1109/ICPC.2011.26;219-220;2;Tool Demonstrations;
2011;Liang Huang,Kenny Wong;Anomaly Detection by Monitoring Filesystem Activities.;http://dx.doi.org/10.1109/ICPC.2011.23;221-222;2;Tool Demonstrations;
2011;Iman Keivanloo,Juergen Rilling,Philippe Charland;SeClone - A Hybrid Approach to Internet-Scale Real-Time Code Clone Search.;http://dx.doi.org/10.1109/ICPC.2011.29;223-224;2;Tool Demonstrations;
2011;Heidar Pirzadeh,Sara Shanian,Abdelwahab Hamou-Lhadj,Ali Mehrabian;The Concept of Stratified Sampling of Execution Traces.;http://dx.doi.org/10.1109/ICPC.2011.17;225-226;2;Tool Demonstrations;
2011;Andrew Begel,Jochen Quante;Industrial Program Comprehension Challenge 2011: Archeology and Anthropology of Embedded Control Systems.;http://dx.doi.org/10.1109/ICPC.2011.50;227-229;3;Industrial Challenge;
2011;Nasir Ali;Trustrace: Improving Automated Trace Retrieval through Resource Trust Analysis.;http://dx.doi.org/10.1109/ICPC.2011.55;230-233;4;Student Symposium;
2011;Sonia Haiduc,Andrian Marcus;On the Effect of the Query in IR-based Concept Location.;http://dx.doi.org/10.1109/ICPC.2011.48;234-237;4;Student Symposium;
2011;Soumaya Medini;Scalable Automatic Concept Mining from Execution Traces.;http://dx.doi.org/10.1109/ICPC.2011.44;238-241;4;Student Symposium;
2011;Manishankar Mondal,Md. Saidur Rahman 0002,Ripon Kumar Saha,Chanchal Kumar Roy,Jens Krinke,Kevin A. Schneider;An Empirical Study of the Impacts of Clones in Software Maintenance.;http://dx.doi.org/10.1109/ICPC.2011.14;242-245;4;Student Symposium;
2011;Scott David Ohlemacher,Andrian Marcus;Towards a Benchmark and Automatic Calibration for IR-Based Concept Location.;http://dx.doi.org/10.1109/ICPC.2011.56;246-249;4;Student Symposium;
2011;Chandan Raj Rupakheti,Daqing Hou;Satisfying Programmers' Information Needs in API-Based Programming.;http://dx.doi.org/10.1109/ICPC.2011.16;250-253;4;Student Symposium;
2011;Zohreh Sharafi;A Systematic Analysis of Software Architecture Visualization Techniques.;http://dx.doi.org/10.1109/ICPC.2011.40;254-257;4;Student Symposium;
2011;Zephyrin Soh;Context and Vision: Studying Two Factors Impacting Program Comprehension.;http://dx.doi.org/10.1109/ICPC.2011.37;258-261;4;Student Symposium;
2011;Wei Wu;Modeling Framework API Evolution as a Multi-objective Optimization Problem.;http://dx.doi.org/10.1109/ICPC.2011.43;262-265;4;Student Symposium;
2011;Minhaz Fahim Zibran,Chanchal Kumar Roy;Conflict-Aware Optimal Scheduling of Code Clone Refactoring: A Constraint Programming Approach.;http://dx.doi.org/10.1109/ICPC.2011.45;266-269;4;Student Symposium;
2010;Jean-Remy Falleri,Marianne Huchard,Mathieu Lafourcade,Clementine Nebut,Violaine Prince,Michel Dao;Automatic Extraction of a WordNet-Like Identifier Network from Software.;http://dx.doi.org/10.1109/ICPC.2010.12;4-13;10;Collecting Information;
2010;Meghan Revelle,Bogdan Dit,Denys Poshyvanyk;Using Data Fusion and Web Mining to Support Feature Location in Software.;http://dx.doi.org/10.1109/ICPC.2010.10;14-23;10;Collecting Information;
2010;Alberto Bacchelli,Marco D'Ambros,Michele Lanza;Extracting Source Code from E-Mails.;http://dx.doi.org/10.1109/ICPC.2010.47;24-33;10;Collecting Information;
2010;Janet Feigenspan,Christian Kastner,Mathias Frisch,Raimund Dachselt,Sven Apel;Visual Support for Understanding Product Lines.;http://dx.doi.org/10.1109/ICPC.2010.15;34-35;2;Tool Demonstrations;
2010;Petru Florin Mihancea;Patrools: Visualizing the Polymorphic Usage of Class Hierarchies.;http://dx.doi.org/10.1109/ICPC.2010.35;36-37;2;Tool Demonstrations;
2010;Patricia Jablonski,Daqing Hou;Renaming Parts of Identifiers Consistently within Code Clones.;http://dx.doi.org/10.1109/ICPC.2010.23;38-39;2;Tool Demonstrations;
2010;Dirk Beyer 0001,Ashgan Fararooy;DepDigger: A Tool for Detecting Complex Low-Level Dependencies.;http://dx.doi.org/10.1109/ICPC.2010.52;40-41;2;Tool Demonstrations;
2010;Dirk Beyer 0001,Ashgan Fararooy;CheckDep: A Tool for Tracking Software Dependencies.;http://dx.doi.org/10.1109/ICPC.2010.51;42-43;2;Tool Demonstrations;
2010;Andrzej Olszak,Bo Norregaard Jorgensen;Featureous: A Tool for Feature-Centric Analysis of Java Software.;http://dx.doi.org/10.1109/ICPC.2010.27;44-45;2;Tool Demonstrations;
2010;Domenico Amalfitano,Anna Rita Fasolino,Armando Polcaro,Porfirio Tramontana;DynaRIA: A Tool for Ajax Web Application Comprehension.;http://dx.doi.org/10.1109/ICPC.2010.16;46-47;2;Tool Demonstrations;
2010;Mario Luca Bernardi,Giuseppe A. Di Lucca;The ConAn Tool to Identify Crosscutting Concerns in Object Oriented Systems.;http://dx.doi.org/10.1109/ICPC.2010.34;48-49;2;Tool Demonstrations;
2010;Daniel Rolls,Carl Joslin,Sven-Bodo Scholz;Unibench: A Tool for Automated and Collaborative Benchmarking.;http://dx.doi.org/10.1109/ICPC.2010.36;50-51;2;Tool Demonstrations;
2010;Lerina Aversano,Fiammetta Marulli,Maria Tortorella;Recovering Traceability Links between Business Process and Software System Components.;http://dx.doi.org/10.1109/ICPC.2010.54;52-53;2;Posters;
2010;Sandro Boccuzzo,Harald C. Gall;Multi-touch for Software Exploration.;http://dx.doi.org/10.1109/ICPC.2010.30;54-55;2;Posters;
2010;Mehdi Amoui,Sen Li,Edson A. Oliveira Jr.,Ladan Tahvildari;Towards Developing a Meta-model for Comprehending Software Adaptability.;http://dx.doi.org/10.1109/ICPC.2010.50;56-57;2;Posters;
2010;Lewis Berman;Sound as an Aid in Understanding Low-Level Program Architecture.;http://dx.doi.org/10.1109/ICPC.2010.55;58-59;2;Posters;
2010;Mario Marcelo Beron,Maria Joao Varanda Pereira,Nuno Oliveira 0001,Daniela Carneiro da Cruz;SVS, BORS, SVSi: Three Strategies to Relate Problem and Program Domains.;http://dx.doi.org/10.1109/ICPC.2010.24;60-61;2;Posters;
2010;Sergio Areias,Daniela Carneiro da Cruz,Jorge Sousa Pinto;Contract-Based Slicing Helps on Safety Reuse.;http://dx.doi.org/10.1109/ICPC.2010.44;62-63;2;Posters;
2010;Mark Shtern,Vassilios Tzerpos;On the Comparability of Software Clustering Algorithms.;http://dx.doi.org/10.1109/ICPC.2010.25;64-67;4;Supporting Program Comprehension;
2010;Rocco Oliveto,Malcom Gethers,Denys Poshyvanyk,Andrea De Lucia;On the Equivalence of Information Retrieval Methods for Automated Traceability Link Recovery.;http://dx.doi.org/10.1109/ICPC.2010.20;68-71;4;Supporting Program Comprehension;
2010;Ahmad Taherkhani;Recognizing Sorting Algorithms with the C4.5 Decision Tree Classifier.;http://dx.doi.org/10.1109/ICPC.2010.11;72-75;4;Supporting Program Comprehension;
2010;Liliane Barbour,Hao Yuan,Ying Zou;A Technique for Just-in-Time Clone Detection in Large Scale Systems.;http://dx.doi.org/10.1109/ICPC.2010.13;76-79;4;Supporting Program Comprehension;
2010;Dirk Beyer 0001,Ashgan Fararooy;A Simple and Effective Measure for Complex Low-Level Dependencies.;http://dx.doi.org/10.1109/ICPC.2010.49;80-83;4;Supporting Program Comprehension;
2010;Daniel M. German,Massimiliano Di Penta,Julius Davies;Understanding and Auditing the Licensing of Open Source Software Distributions.;http://dx.doi.org/10.1109/ICPC.2010.48;84-93;10;Program Analysis;
2010;Daniel Ratiu,Lars Heinemann;Utilizing Web Search Engines for Program Analysis.;http://dx.doi.org/10.1109/ICPC.2010.26;94-103;10;Program Analysis;
2010;Ralf Lammel,Ekaterina Pek;Vivisection of a Non-Executable, Domain-Specific Language - Understanding (the Usage of) the P3P Language.;http://dx.doi.org/10.1109/ICPC.2010.45;104-113;10;Program Analysis;
2010;Brian Chan,Ying Zou,Ahmed E. Hassan,Anand Sinha;Visualizing the Results of Field Testing.;http://dx.doi.org/10.1109/ICPC.2010.9;114-123;10;Software Quality;
2010;Nicolas Bettenburg,Ahmed E. Hassan;Studying the Impact of Social Structures on Software Quality.;http://dx.doi.org/10.1109/ICPC.2010.46;124-133;10;Software Quality;
2010;Gerardo Canfora,Luigi Cerulo,Massimiliano Di Penta,Francesco Pacilio;An Exploratory Study of Factors Influencing Change Entropy.;http://dx.doi.org/10.1109/ICPC.2010.32;134-143;10;Software Quality;
2010;Mahmoud O. Elish;Exploring the Relationships between Design Metrics and Package Understandability: A Case Study.;http://dx.doi.org/10.1109/ICPC.2010.43;144-147;4;People;
2010;Maen Hammad,Michael L. Collard,Jonathan I. Maletic;Measuring Class Importance in the Context of Design Evolution.;http://dx.doi.org/10.1109/ICPC.2010.31;148-151;4;People;
2010;Eric Bouwers,Joost Visser,Carola Lilienthal,Arie van Deursen;A Cognitive Model for Software Architecture Complexity.;http://dx.doi.org/10.1109/ICPC.2010.28;152-155;4;People;
2010;Surafel Lemma Abebe,Paolo Tonella;Natural Language Parsing of Program Element Names for Concept Extraction.;http://dx.doi.org/10.1109/ICPC.2010.29;156-159;4;People;
2010;Andrew Sutton,Ryan Holeman,Jonathan I. Maletic;Identification of Idiom Usage in C++ Generic Libraries.;http://dx.doi.org/10.1109/ICPC.2010.37;160-169;10;Software and System Structure;
2010;Patricia Jablonski,Daqing Hou;Aiding Software Maintenance with Copy-and-Paste Clone-Awareness.;http://dx.doi.org/10.1109/ICPC.2010.22;170-179;10;Software and System Structure;
2010;Giuseppe Scanniello,Anna D'Amico,Carmela D'Amico,Teodora D'Amico;Using the Kleinberg Algorithm and Vector Space Model for Software System Clustering.;http://dx.doi.org/10.1109/ICPC.2010.17;180-189;10;Software and System Structure;
2010;Andrew Begel;From Program Comprehension to People Comprehension.;http://dx.doi.org/10.1109/ICPC.2010.42;190-191;2;Industrial Challenges;
2010;Nuno Oliveira 0001,Maria Joao Varanda Pereira,Daniela Carneiro da Cruz,Mario Marcelo Beron;Influence of Synchronized Domain Visualizations on Program Comprehension.;http://dx.doi.org/10.1109/ICPC.2010.21;192-195;4;Working Session;
2010;Bonita Sharif,Jonathan I. Maletic;An Eye Tracking Study on camelCase and under_score Identifier Styles.;http://dx.doi.org/10.1109/ICPC.2010.41;196-205;10;Human Factors;
2010;Sukanya Ratanotayanon,Hye Jung Choi,Susan Elliott Sim;My Repository Runneth Over: An Empirical Study on Diversifying Data Sources to Improve Feature Search.;http://dx.doi.org/10.1109/ICPC.2010.33;206-215;10;Human Factors;
2010;Nick Matthijssen,Andy Zaidman,Margaret-Anne D. Storey,R. Ian Bull,Arie van Deursen;Connecting Traces: Understanding Client-Server Interactions in Ajax Applications.;http://dx.doi.org/10.1109/ICPC.2010.14;216-225;10;Human Factors;
2009;Maksym Petrenko,Vaclav Rajlich;Variable granularity for improving precision of impact analysis.;http://dx.doi.org/10.1109/ICPC.2009.5090023;10-19;10;Impact Analysis and Changes;
2009;Maen Hammad,Michael L. Collard,Jonathan I. Maletic;Automatically identifying changes that impact code-to-design traceability.;http://dx.doi.org/10.1109/ICPC.2009.5090024;20-29;10;Impact Analysis and Changes;
2009;Abram Hindle,Daniel M. German,Michael W. Godfrey,Richard C. Holt;Automatic classication of large changes into maintenance categories.;http://dx.doi.org/10.1109/ICPC.2009.5090025;30-39;10;Impact Analysis and Changes;
2009;Eric Larson;A plethora of paths.;http://dx.doi.org/10.1109/ICPC.2009.5090026;40-49;10;Static Analysis;
2009;Yin Liu,Ana Milanova;Practical static analysis for inference of security-related program properties.;http://dx.doi.org/10.1109/ICPC.2009.5090027;50-59;10;Static Analysis;
2009;Dehua Zhang,Ekwa Duala-Ekoko,Laurie J. Hendren;Impact analysis and visualization toolkit for static crosscutting in AspectJ.;http://dx.doi.org/10.1109/ICPC.2009.5090028;60-69;10;Static Analysis;
2009;Dennis Jeffrey,Min Feng,Neelam Gupta,Rajiv Gupta;BugFix: A learning-based tool to assist developers in fixing bugs.;http://dx.doi.org/10.1109/ICPC.2009.5090029;70-79;10;Cognitive and Other Issues;
2009;Chris Parnin,Spencer Rugaber;Resumption strategies for interrupted programming tasks.;http://dx.doi.org/10.1109/ICPC.2009.5090030;80-89;10;Cognitive and Other Issues;
2009;Gail C. Murphy,Petcharat Viriyakattiyaporn,David C. Shepherd;Using activity traces to characterize programming behaviour beyond the lab.;http://dx.doi.org/10.1109/ICPC.2009.5090031;90-94;5;Cognitive and Other Issues;
2009;Tara Kelly,Jim Buckley;An in-vivo study of the cognitive levels employed by programmers during software maintenance.;http://dx.doi.org/10.1109/ICPC.2009.5090032;95-99;5;Cognitive and Other Issues;
2009;Bas Cornelissen,Andy Zaidman,Arie van Deursen,Bart Van Rompaey;Trace visualization for program comprehension: A controlled experiment.;http://dx.doi.org/10.1109/ICPC.2009.5090033;100-109;10;Visualization and Sonification;
2009;Andreas Stefik,Ed Gellenbeck;Using spoken text to aid debugging: An empirical study.;http://dx.doi.org/10.1109/ICPC.2009.5090034;110-119;10;Visualization and Sonification;
2009;Khaled Hussein,Eli Tilevich,Ivica Ico Bukvic,SooBeen Kim;Sonification design guidelines to enhance program comprehension.;http://dx.doi.org/10.1109/ICPC.2009.5090035;120-129;10;Visualization and Sonification;
2009;Dennis Edwards,Norman Wilde,Sharon Simmons,Eric Golden;Instrumenting time-sensitive software for feature location.;http://dx.doi.org/10.1109/ICPC.2009.5090036;130-137;8;Features and Concerns;
2009;Eduardo Magno Lages Figueiredo,Bruno Carreiro da Silva,Claudio Sant'Anna,Alessandro Garcia,Jonathan P. Whittle,Daltro Jose Nunes;Crosscutting patterns and design stability: An exploratory analysis.;http://dx.doi.org/10.1109/ICPC.2009.5090037;138-147;10;Features and Concerns;
2009;Giovanni Capobianco,Andrea De Lucia,Rocco Oliveto,Annibale Panichella,Sebastiano Panichella;On the role of the nouns in IR-based traceability recovery.;http://dx.doi.org/10.1109/ICPC.2009.5090038;148-157;10;Features and Concerns;
2009;David M. Binkley,Marcia Davis,Dawn Lawrie,Christopher Morrell;To camelcase or under_score.;http://dx.doi.org/10.1109/ICPC.2009.5090039;158-167;10;Source Code Reading;
2009;Uri Dekel,James D. Herbsleb;Reading the documentation of invoked API functions in program comprehension.;http://dx.doi.org/10.1109/ICPC.2009.5090040;168-177;10;Source Code Reading;
2009;Mariano Ceccato,Massimiliano Di Penta,Jasvir Nagra,Paolo Falcarin,Filippo Ricca,Marco Torchiano,Paolo Tonella;The effectiveness of source code obfuscation: An experimental assessment.;http://dx.doi.org/10.1109/ICPC.2009.5090041;178-187;10;Source Code Reading;
2009;Martin Feilkas,Daniel Ratiu,Elmar Jurgens;The loss of architectural knowledge during system evolution: An industrial case study.;http://dx.doi.org/10.1109/ICPC.2009.5090042;188-197;10;Architecture and Design;
2009;Alexander Serebrenik,Serguei A. Roubtsov,Mark van den Brand;Dn-based architecture assessment of Java Open Source software systems.;http://dx.doi.org/10.1109/ICPC.2009.5090043;198-207;10;Architecture and Design;
2009;Gunter Kniesel,Alexander Binun;Standing on the shoulders of giants - A data fusion approach to design pattern detection.;http://dx.doi.org/10.1109/ICPC.2009.5090044;208-217;10;Architecture and Design;
2009;Meghan Revelle,Denys Poshyvanyk;An exploratory study on assessing feature location techniques.;http://dx.doi.org/10.1109/ICPC.2009.5090045;218-222;5;Short Papers I;
2009;Jens Nilsson,Welf Lowe,Johan Hall,Joakim Nivre;Natural language parsing for fact extraction from source code.;http://dx.doi.org/10.1109/ICPC.2009.5090046;223-227;5;Short Papers I;
2009;Derrin Pierret,Denys Poshyvanyk;An empirical exploration of regularities in open-source software lexicons.;http://dx.doi.org/10.1109/ICPC.2009.5090047;228-232;5;Short Papers I;
2009;Scott Grant,James R. Cordy;Vector space analysis of software clones.;http://dx.doi.org/10.1109/ICPC.2009.5090048;233-237;5;Short Papers I;
2009;Daqing Hou,Patricia Jablonski,Ferosh Jacob;CnP: Towards an environment for the proactive management of copy-and-paste programming.;http://dx.doi.org/10.1109/ICPC.2009.5090049;238-242;5;Short Papers I;
2009;Michel Chilowicz,Etienne Duris,Gilles Roussel;Syntax tree fingerprinting for source code similarity detection.;http://dx.doi.org/10.1109/ICPC.2009.5090050;243-247;5;Short Papers I;
2009;Mark Shtern,Vassilios Tzerpos;Methods for selecting and improving software clustering algorithms.;http://dx.doi.org/10.1109/ICPC.2009.5090051;248-252;5;Short Papers II;
2009;David Rothlisberger,Oscar Nierstrasz,Stephane Ducasse,Damien Pollet,Romain Robbes;Supporting task-oriented navigation in IDEs with configurable HeatMaps.;http://dx.doi.org/10.1109/ICPC.2009.5090052;253-257;5;Short Papers II;
2009;Reinhard Schauer,Rudolf K. Keller;A case for concept programs.;http://dx.doi.org/10.1109/ICPC.2009.5090053;258-262;5;Short Papers II;
2009;Katerina Troshina,Alexander Chernov,Alexander Fokin;Profile-based type reconstruction for decompilation.;http://dx.doi.org/10.1109/ICPC.2009.5090054;263-267;5;Short Papers II;
2009;Bonita Sharif,Jonathan I. Maletic;An empirical study on the comprehension of stereotyped UML class diagram layouts.;http://dx.doi.org/10.1109/ICPC.2009.5090055;268-272;5;Short Papers II;
2009;Huzefa H. Kagdi,Denys Poshyvanyk;Who can help me with this change request?;http://dx.doi.org/10.1109/ICPC.2009.5090056;273-277;5;Short Papers II;
2009;Yann-Gael Gueheneuc,Huzefa H. Kagdi,Jonathan I. Maletic;Working session: Using eye-tracking to understand program comprehension.;http://dx.doi.org/10.1109/ICPC.2009.5090057;278-279;2;Working Sessions;
2009;Marco Torchiano,Alberto Sillitti;TDD = too dumb developers? Implications of Test-Driven Development on maintainability and comprehension of software.;http://dx.doi.org/10.1109/ICPC.2009.5090058;280-282;3;Working Sessions;
2009;Munakata Satoshi,Takashi Ishio,Katsuro Inoue;OGAN: Visualizing object interaction scenarios based on dynamic interaction context.;http://dx.doi.org/10.1109/ICPC.2009.5090059;283-284;2;Tool Demonstrations;
2009;Daniel Porto,Manoel Gomes de Mendonca Neto,Sandra Camargo Pinto Ferraz Fabbri;CRISTA: A tool to support code comprehension based on visualization and reading technique.;http://dx.doi.org/10.1109/ICPC.2009.5090060;285-286;2;Tool Demonstrations;
2009;Sunghun Kim 0001,Shivkumar Shivaji,Jim Whitehead;Kenyon-web: Reconfigurable web-based feature extractor.;http://dx.doi.org/10.1109/ICPC.2009.5090061;287-288;2;Tool Demonstrations;
2009;Yi Huang,Laura K. Dillon,R. E. Kurt Stirewalt;Prototyping synchronization policies for existing programs.;http://dx.doi.org/10.1109/ICPC.2009.5090062;289-290;2;Tool Demonstrations;
2009;Glauco de Figueiredo Carneiro,Manoel Gomes de Mendonca Neto,Rodrigo Chaves Magnavita;Proposing a visual approach to support the characterization of software comprehension activities.;http://dx.doi.org/10.1109/ICPC.2009.5090063;291-292;2;Tool Demonstrations;
2009;Andreas Stefik,Andrew Haywood,Shahzada Mansoor,Brock Dunda,Daniel Garcia;SODBeans.;http://dx.doi.org/10.1109/ICPC.2009.5090064;293-294;2;Tool Demonstrations;
2009;Zhixiong Han,Linzhang Wang,Liqian Yu,Xin Chen,Jianhua Zhao,Xuandong Li;Design pattern directed clustering for understanding open source code.;http://dx.doi.org/10.1109/ICPC.2009.5090065;295-296;2;Posters;
2009;Olga Baysal,Michael W. Godfrey,Robin Cohen;A bug you like: A framework for automated assignment of bugs.;http://dx.doi.org/10.1109/ICPC.2009.5090066;297-298;2;Posters;
2009;Sukanya Ratanotayanon,Susan Elliott Sim;Creating task-based concern maps by merging concern fragments.;http://dx.doi.org/10.1109/ICPC.2009.5090067;299-300;2;Posters;
2009;Mireille Samia,Michael Leuschel;Towards pie tree visualization of graphs and large software architectures.;http://dx.doi.org/10.1109/ICPC.2009.5090068;301-302;2;Posters;
2009;Susan Elliott Sim,Sukanya Ratanotayanon,Leyna Cotran;Structure transition graphs: An ECG for program comprehension?;http://dx.doi.org/10.1109/ICPC.2009.5090069;303-304;2;Posters;
2009;Daniel Popescu,Joshua Garcia,Nenad Medvidovic;Enabling more precise dependency analysis in event-based systems.;http://dx.doi.org/10.1109/ICPC.2009.5090070;305-306;2;Posters;
2009;Khaironi Yatim Sharif,Jim Buckley;Observation of Open Source programmers' information seeking.;http://dx.doi.org/10.1109/ICPC.2009.5090071;307-308;2;Posters;
2009;Andreas Bartho;Creating and maintaining tutorials with DEFT.;http://dx.doi.org/10.1109/ICPC.2009.5090072;309-310;2;Posters;
2009;Andrew Forward,Timothy C. Lethbridge,Dusan Brestovansky;Improving program comprehension by enhancing program constructs: An analysis of the Umple language.;http://dx.doi.org/10.1109/ICPC.2009.5090073;311-312;2;Posters;
2009;Erik Linstead,Lindsey Hughes,Cristina Videira Lopes,Pierre Baldi;Capturing Java naming conventions with first-order Markov models.;http://dx.doi.org/10.1109/ICPC.2009.5090074;313-314;2;Posters;
2009;Suman Karumuri,Steven P. Reiss;Automatic detection of internal queues and stages in message processing systems.;http://dx.doi.org/10.1109/ICPC.2009.5090075;315-316;2;Posters;
2009;Chris Parnin,Carsten Gorg,Spencer Rugaber;TaskBoard: Tracking pertinent task artifacts and plans.;http://dx.doi.org/10.1109/ICPC.2009.5090076;317-318;2;Posters;
2009;Benjapol Auprasert,Yachai Limpiyakorn;Representing source code with Granular hierarchical structures.;http://dx.doi.org/10.1109/ICPC.2009.5090077;319-320;2;Posters;
2008;Maksym Petrenko,Vaclav Rajlich,Radu Vanciu;Partial Domain Comprehension in Software Evolution and Maintenance.;http://dx.doi.org/10.1109/ICPC.2008.14;13-22;10;Software Evolution;
2008;Scott D. Fleming,Eileen Kraemer,R. E. Kurt Stirewalt,Laura K. Dillon,Shaohua Xie;Refining Existing Theories of Program Comprehension During Maintenance for Concurrent Software.;http://dx.doi.org/10.1109/ICPC.2008.40;23-32;10;Software Evolution;
2008;Xinyi Dong,Michael W. Godfrey;Identifying Architectural Change Patterns in Object-Oriented Systems.;http://dx.doi.org/10.1109/ICPC.2008.19;33-42;10;Software Evolution;
2008;Andrew R. Dalton,Jason O. Hallstrom;A Toolkit for Visualizing the Runtime Behavior of TinyOS Applications.;http://dx.doi.org/10.1109/ICPC.2008.22;43-52;10;Dynamic Analysis;
2008;Marc Eaddy,Alfred V. Aho,Giuliano Antoniol,Yann-Gael Gueheneuc;CERBERUS: Tracing Requirements to Source Code Using Information Retrieval, Dynamic Analysis, and Program Analysis.;http://dx.doi.org/10.1109/ICPC.2008.39;53-62;10;Dynamic Analysis;
2008;David Rothlisberger,Orla Greevy,Oscar Nierstrasz;Exploiting Runtime Information in the IDE.;http://dx.doi.org/10.1109/ICPC.2008.32;63-72;10;Dynamic Analysis;
2008;Jochen Quante;Do Dynamic Object Process Graphs Support Program Understanding? - A Controlled Experiment.;http://dx.doi.org/10.1109/ICPC.2008.15;73-82;10;Program Comprehension Studies;
2008;David M. Binkley,Dawn Lawrie,Steve Maex,Christopher Morrell;Impact of Limited Memory Resources.;http://dx.doi.org/10.1109/ICPC.2008.31;83-92;10;Program Comprehension Studies;
2008;Andrea De Lucia,Carmine Gravino,Rocco Oliveto,Genoveffa Tortora;Data Model Comprehension: An Empirical Comparison of ER and UML Class Diagrams.;http://dx.doi.org/10.1109/ICPC.2008.26;93-102;10;Program Comprehension Studies;
2008;Ahron Abadi,Mordechai Nisenson,Yahalomit Simionovici;A Traceability Technique for Specifications.;http://dx.doi.org/10.1109/ICPC.2008.30;103-112;10;Domain Terms;
2008;Sonia Haiduc,Andrian Marcus;On the Use of Domain Terms in Source Code.;http://dx.doi.org/10.1109/ICPC.2008.29;113-122;10;Domain Terms;
2008;Giriprasad Sridhara,Emily Hill,Lori L. Pollock,K. Vijay-Shanker;Identifying Word Relations in Software: A Comparative Study of Semantic Similarity Tools.;http://dx.doi.org/10.1109/ICPC.2008.18;123-132;10;Domain Terms;
2008;Abram Hindle,Michael W. Godfrey,Richard C. Holt;Reading Beside the Lines: Indentation as a Proxy for Complexity Metric.;http://dx.doi.org/10.1109/ICPC.2008.13;133-142;10;Metrics;
2008;Simon Denier,Yann-Gael Gueheneuc;Mendel: A Model, Metrics, and Rules to Understand Class Hierarchies.;http://dx.doi.org/10.1109/ICPC.2008.37;143-152;10;Metrics;
2008;Chanchal Kumar Roy,James R. Cordy;Scenario-Based Comparison of Clone Detection Techniques.;http://dx.doi.org/10.1109/ICPC.2008.42;153-162;10;Cloning, Slicing, and Parsing;
2008;Laszlo Vidacs,Judit Jasz,Arpad Beszedes,Tibor Gyimothy;Combining Preprocessor Slicing with C/C++ Language Slicing.;http://dx.doi.org/10.1109/ICPC.2008.33;163-171;9;Cloning, Slicing, and Parsing;
2008;Chanchal Kumar Roy,James R. Cordy;NICAD: Accurate Detection of Near-Miss Intentional Clones Using Flexible Pretty-Printing and Code Normalization.;http://dx.doi.org/10.1109/ICPC.2008.41;172-181;10;Cloning, Slicing, and Parsing;
2008;Abdulkareem Alali,Huzefa H. Kagdi,Jonathan I. Maletic;What's a Typical Commit? A Characterization of Open Source Software Repositories.;http://dx.doi.org/10.1109/ICPC.2008.24;182-191;10;Analysis of Revision History;
2008;Adam Vanya,Lennart Holland,Steven Klusener,Pierre van de Laar,Johannes C. van Vliet;Assessing Software Archives with Evolutionary Clusters.;http://dx.doi.org/10.1109/ICPC.2008.34;192-201;10;Analysis of Revision History;
2008;Martin P. Robillard,Putra Manggala;Reusing Program Investigation Knowledge for Code Understanding.;http://dx.doi.org/10.1109/ICPC.2008.10;202-211;10;Analysis of Revision History;
2008;Irina Diana Coman,Alberto Sillitti;Automated Identification of Tasks in Development Sessions.;http://dx.doi.org/10.1109/ICPC.2008.16;212-217;6;Short Paper Session 1;
2008;William M. Mongan,Maxim Shevertalov,Spiros Mancoridis;Re-Engineering a Reverse Engineering Portal to a Distributed SOA.;http://dx.doi.org/10.1109/ICPC.2008.17;218-223;6;Short Paper Session 1;
2008;David A. McMeekin,Brian R. von Konsky,Elizabeth Chang,David J. A. Cooper;Checklist Inspections and Modifications: Applying Bloom's Taxonomy to Categorise Developer Comprehension.;http://dx.doi.org/10.1109/ICPC.2008.20;224-229;6;Short Paper Session 1;
2008;Muhammad Usman Bhatti,Stephane Ducasse,Awais Rashid;Aspect Mining in Procedural Object Oriented Code.;http://dx.doi.org/10.1109/ICPC.2008.45;230-235;6;Short Paper Session 1;
2008;Abhishek Rohatgi,Abdelwahab Hamou-Lhadj,Juergen Rilling;An Approach for Mapping Features to Code Based on Static and Dynamic Analysis.;http://dx.doi.org/10.1109/ICPC.2008.35;236-241;6;Short Paper Session 2;
2008;Daniel Ratiu,Jan Jurjens;Evaluating the Reference and Representation of Domain Concepts in APIs.;http://dx.doi.org/10.1109/ICPC.2008.11;242-247;6;Short Paper Session 2;
2008;Martin Feilkas,Daniel Ratiu;Ensuring Well-Behaved Usage of APIs through Syntactic Constraints.;http://dx.doi.org/10.1109/ICPC.2008.12;248-253;6;Short Paper Session 2;
2008;Martin Pinzger,Katja Grafenhain,Patrick Knab,Harald C. Gall;A Tool for Visual Understanding of Source Code Dependencies.;http://dx.doi.org/10.1109/ICPC.2008.23;254-259;6;Short Paper Session 2;
2008;Ruben Filipe Cardoso da Fonseca,Daniela Carneiro da Cruz,Pedro Rangel Henriques,Maria Joao Varanda Pereira;How to Interconnect Operational and Behavioral Views of Web Applications.;http://dx.doi.org/10.1109/ICPC.2008.25;263-267;5;Tool Demonstrations;
2008;Johannes Bohnet,Stefan Voigt,Jurgen Dollner;Locating and Understanding Features of Complex Software Systems by Synchronizing Time-, Collaboration- and Code-Focused Views on Execution Traces.;http://dx.doi.org/10.1109/ICPC.2008.21;268-271;4;Tool Demonstrations;
2008;Tatsuya Sato,Buntarou Shizuki,Jiro Tanaka;Support for Understanding GUI Programs by Visualizing Execution Traces Synchronized with Screen Transitions.;http://dx.doi.org/10.1109/ICPC.2008.28;272-275;4;Tool Demonstrations;
2008;Juergen Rilling,Rene Witte,Dragan Gasevic,Jeff Z. Pan;Semantic Technologies in System Maintenance (STSM 2008).;http://dx.doi.org/10.1109/ICPC.2008.38;279-282;4;Workshops;
2008;Thomas Roy Dean,Joost Visser;Industrial Realities of Program Comprehension (IRPC 2008).;http://dx.doi.org/10.1109/ICPC.2008.43;283-284;2;Workshops;
2008;Mathieu Verbaere,Michael W. Godfrey,Tudor Girba;Query Technologies and Applications for Program Comprehension (QTAPC 2008).;http://dx.doi.org/10.1109/ICPC.2008.27;285-288;4;Workshops;
2007;Jay Kothari,Trip Denton,Ali Shokoufandeh,Spiros Mancoridis;Reducing Program Comprehension Effort in Evolving Software by Recognizing Feature Implementation Convergence.;http://dx.doi.org/10.1109/ICPC.2007.33;17-26;10;Feature and Concept Analysis;
2007;Maurice M. Carey,Gerald C. Gannod;Recovering Concepts from Source Code with Automated Concept Identification.;http://dx.doi.org/10.1109/ICPC.2007.31;27-36;10;Feature and Concept Analysis;
2007;Denys Poshyvanyk,Andrian Marcus;Combining Formal Concept Analysis with Information Retrieval for Concept Location in Source Code.;http://dx.doi.org/10.1109/ICPC.2007.13;37-48;12;Feature and Concept Analysis;
2007;Bas Cornelissen,Danny Holten,Andy Zaidman,Leon Moonen,Jarke J. van Wijk,Arie van Deursen;Understanding Execution Traces Using Massive Sequence and Circular Bundle Views.;http://dx.doi.org/10.1109/ICPC.2007.39;49-58;10;Dynamic Analysis;
2007;Adrian Lienhard,Orla Greevy,Oscar Nierstrasz;Tracking Objects to Detect Feature Dependencies.;http://dx.doi.org/10.1109/ICPC.2007.38;59-68;10;Dynamic Analysis;
2007;Andreas Stefik,Roger T. Alexander,Robert Patterson,Jonathan Brown;WAD: A Feasibility study using the Wicked Audio Debugger.;http://dx.doi.org/10.1109/ICPC.2007.42;69-80;12;Dynamic Analysis;
2007;Michael W. Godfrey;A Hybrid Program Model for Object-Oriented Reverse Engineering.;http://dx.doi.org/10.1109/ICPC.2007.7;81-90;10;Conceptual Models;
2007;Daniel Ratiu,Florian Deissenboeck;From Reality to Programs and (Not Quite) Back Again.;http://dx.doi.org/10.1109/ICPC.2007.22;91-102;12;Conceptual Models;
2007;Brian de Alwis,Gail C. Murphy,Martin P. Robillard;A Comparative Study of Three Program Exploration Tools.;http://dx.doi.org/10.1109/ICPC.2007.6;103-112;10;Empirical Studies;
2007;Shehnaaz Yusuf,Huzefa H. Kagdi,Jonathan I. Maletic;Assessing the Comprehension of UML Class Diagrams via Eye Tracking.;http://dx.doi.org/10.1109/ICPC.2007.10;113-122;10;Empirical Studies;
2007;Shaohua Xie,Eileen Kraemer,R. E. Kurt Stirewalt;Empirical Evaluation of a UML Sequence Diagram with Adornments to Support Understanding of Thread Interactions.;http://dx.doi.org/10.1109/ICPC.2007.19;123-134;12;Empirical Studies;
2007;Lijie Zou,Michael W. Godfrey,Ahmed E. Hassan;Detecting Interaction Coupling from Task Interaction Histories.;http://dx.doi.org/10.1109/ICPC.2007.18;135-144;10;Mining Software Repositories;
2007;Huzefa H. Kagdi,Jonathan I. Maletic,Bonita Sharif;Mining Software Repositories for Traceability Links.;http://dx.doi.org/10.1109/ICPC.2007.28;145-154;10;Mining Software Repositories;
2007;Romain Robbes,Michele Lanza;Characterizing and Understanding Development Sessions.;http://dx.doi.org/10.1109/ICPC.2007.12;155-166;12;Mining Software Repositories;
2007;Chanchal Kumar Roy,Mohammad Gias Uddin,Banani Roy,Thomas Roy Dean;Evaluating Aspect Mining Techniques: A Case Study.;http://dx.doi.org/10.1109/ICPC.2007.21;167-176;10;Aspects and Change;
2007;Siavash Mirarab,Alaa Hassouna,Ladan Tahvildari;Using Bayesian Belief Networks to Predict Change Propagation in Software Systems.;http://dx.doi.org/10.1109/ICPC.2007.41;177-188;12;Aspects and Change;
2007;Niklas Pettersson,Welf Lowe;A Non-conservative Approach to Software Pattern Detection.;http://dx.doi.org/10.1109/ICPC.2007.8;189-198;10;Static Analysis;
2007;Maokeng Hung,Ying Zou;Recovering Workflows from Multi Tiered E-commerce Systems.;http://dx.doi.org/10.1109/ICPC.2007.32;198-207;10;Static Analysis;
2007;Yi Zhang,S. Purushothaman Iyer;Error Report Driven Post-Mortem Analysis.;http://dx.doi.org/10.1109/ICPC.2007.43;208-220;13;Static Analysis;
2007;Christian F. J. Lange,Michel R. V. Chaudron;Interactive Views to Improve the Comprehension of UML Models - An Experimental Validation.;http://dx.doi.org/10.1109/ICPC.2007.23;221-230;10;Visualization;
2007;Richard Wettel,Michele Lanza;Program Comprehension through Software Habitability.;http://dx.doi.org/10.1109/ICPC.2007.30;231-240;10;Visualization;
2007;Rogardt Heldal,Jenny Samuelsson,Ola Sundin;Scenario Explorer: Interactive Visualization of Use Cases.;http://dx.doi.org/10.1109/ICPC.2007.34;241-252;12;Visualization;
2007;Nomair A. Naeem,Michael Batchelder,Laurie J. Hendren;Metrics for Measuring the Effectiveness of Decompilers and Obfuscators.;http://dx.doi.org/10.1109/ICPC.2007.27;253-258;6;Short Papers Session;
2007;Juanjuan Jiang,Johannes Koskinen,Anna Ruokonen,Tarja Systa;Constructing Usage Scenarios for API Redocumentation.;http://dx.doi.org/10.1109/ICPC.2007.16;259-264;6;Short Papers Session;
2007;Tommi Reinikainen,Imed Hammouda,Juha Laiho,Kai Koskimies,Tarja Systa;Software Comprehension through Concern-based Queries.;http://dx.doi.org/10.1109/ICPC.2007.36;265-270;6;Short Papers Session;
2007;C. Dylan Shearer,Michael L. Collard;Enforcing Constraints Between Documentary Comments and Source Code.;http://dx.doi.org/10.1109/ICPC.2007.20;271-280;10;Short Papers Session;
2007;Scott R. Tilley;15 Years of Program Comprehension.;http://dx.doi.org/10.1109/ICPC.2007.1;279-280;2;Working Sessions;
2007;Massimiliano Di Penta,R. E. Kurt Stirewalt,Eileen Kraemer;Designing your Next Empirical Study on Program Comprehension.;http://dx.doi.org/10.1109/ICPC.2007.17;281-285;5;Working Sessions;
2007;Giuseppe A. Di Lucca,Michael Smit,Bruce Fraser,Eleni Stroulia,H. James Hoover;Comprehending Aspect-Oriented Programs: Challenges and Open Issues.;http://dx.doi.org/10.1109/ICPC.2007.14;286-292;7;Working Sessions;
2007;Andrejs Jermakovics,Marco Scotto,Alberto Sillitti,Giancarlo Succi;Lagrein: Visualizing User Requirements and Development Effort.;http://dx.doi.org/10.1109/ICPC.2007.24;293-296;4;Tool Demonstrations;
2007;Rodrigo A. Vivanco;Use of a Genetic Algorithm to Identify Source Code Metrics Which Improves Cognitive Complexity Predictive Models.;http://dx.doi.org/10.1109/ICPC.2007.40;297-300;4;Tool Demonstrations;
2006;Dawn Lawrie,Christopher Morrell,Henry Feild,David M. Binkley;What's in a Name? A Study of Identifiers.;http://dx.doi.org/10.1109/ICPC.2006.51;3-12;10;Experimental Studies;
2006;Chris Parnin,Carsten Gorg;Building Usage Contexts During Program Comprehension.;http://dx.doi.org/10.1109/ICPC.2006.14;13-22;10;Experimental Studies;
2006;Curtis Schofield,Brendan Tansey,Zhenchang Xing,Eleni Stroulia;Digging the Development Dust for Refactorings.;http://dx.doi.org/10.1109/ICPC.2006.18;23-34;12;Experimental Studies;
2006;Beat Fluri,Harald C. Gall;Classifying Change Types for Qualifying Change Couplings.;http://dx.doi.org/10.1109/ICPC.2006.16;35-45;11;Evolution;
2006;Jay Kothari,Ali Shokoufandeh,Spiros Mancoridis,Ahmed E. Hassan;Studying the Evolution of Software Systems Using Change Clusters.;http://dx.doi.org/10.1109/ICPC.2006.44;46-55;10;Evolution;
2006;Mihai Balint,Radu Marinescu 0001,Tudor Girba;How Developers Copy.;http://dx.doi.org/10.1109/ICPC.2006.25;56-68;13;Evolution;
2006;Bradley L. Vinz,Letha H. Etzkorn;A Synergistic Approach to Program Comprehension.;http://dx.doi.org/10.1109/ICPC.2006.7;69-73;5;Short Papers;
2006;Andy Zaidman,Bart Du Bois,Serge Demeyer;How Webmining and Coupling Metrics Improve Early Program Comprehension.;http://dx.doi.org/10.1109/ICPC.2006.26;74-78;5;Short Papers;
2006;Daniel Ratiu,Florian Deissenboeck;Programs are Knowledge Bases.;http://dx.doi.org/10.1109/ICPC.2006.41;79-83;5;Short Papers;
2006;Hossein Safyallah,Kamran Sartipi;Dynamic Analysis of Software Systems using Execution Pattern Mining.;http://dx.doi.org/10.1109/ICPC.2006.19;84-88;5;Short Papers;
2006;Andreas Stefik,Kelly Fitz,Roger T. Alexander;Layered Program Auralization: Using Music to Increase Runtime Program Comprehension and Debugging Effectiveness.;http://dx.doi.org/10.1109/ICPC.2006.33;89-93;5;Short Papers;
2006;Dean Jin,James R. Cordy;Integrating Reverse Engineering Tools Using a Service-Sharing Methodology.;http://dx.doi.org/10.1109/ICPC.2006.30;94-99;6;Short Papers;
2006;R. Ian Bull,Margaret-Anne D. Storey,Jean-Marie Favre,Marin Litoiu;An Architecture to Support Model Driven Software Visualization.;http://dx.doi.org/10.1109/ICPC.2006.11;100-106;7;Short Papers;
2006;Raoul Praful Jetley,Yi Zhang,S. Purushothaman Iyer;Using Abstraction-driven Slicing for Postmortem Analysis of Software.;http://dx.doi.org/10.1109/ICPC.2006.50;107-116;10;Static Analysis;
2006;Minh Ngoc Ngo,Hee Beng Kuan Tan,Doanh Trinh;Automated Extraction of Database Interactions in Web Applications.;http://dx.doi.org/10.1109/ICPC.2006.13;117-126;10;Static Analysis;
2006;Ying Zou,Maokeng Hung;An Approach for Extracting Workflows from E-Commerce Applications.;http://dx.doi.org/10.1109/ICPC.2006.9;127-136;10;Static Analysis;
2006;Denys Poshyvanyk,Andrian Marcus,Vaclav Rajlich,Yann-Gael Gueheneuc,Giuliano Antoniol;Combining Probabilistic Ranking and Latent Semantic Indexing for Feature Identification.;http://dx.doi.org/10.1109/ICPC.2006.17;137-148;12;Static Analysis;
2006;Dawn Lawrie,Henry Feild,David M. Binkley;Leveraged Quality Assessment using Information Retrieval Techniques.;http://dx.doi.org/10.1109/ICPC.2006.34;149-158;10;Quality Assessment;
2006;Mazeiar Salehie,Shimin Li,Ladan Tahvildari;A Metric-Based Heuristic Framework to Detect Object-Oriented Design Flaws.;http://dx.doi.org/10.1109/ICPC.2006.6;159-168;10;Quality Assessment;
2006;Cristina Marinescu;Identification of Design Roles for the Assessment of Design Quality in Enterprise Applications.;http://dx.doi.org/10.1109/ICPC.2006.27;169-180;12;Quality Assessment;
2006;Abdelwahab Hamou-Lhadj,Timothy C. Lethbridge;Summarizing the Content of Large Traces to Facilitate the Understanding of the Behaviour of a Software System.;http://dx.doi.org/10.1109/ICPC.2006.45;181-190;10;Dynamic Analysis;
2006;Sokhom Pheng,Clark Verbrugge;Dynamic Data Structure Analysis for Java Programs.;http://dx.doi.org/10.1109/ICPC.2006.20;191-201;11;Dynamic Analysis;
2006;Coen De Roover,Isabel Michiels,Kim Gybels,Kris Gybels,Theo D'Hondt;An Approach to High-Level Behavioral Program Documentation Allowing Lightweight Verification.;http://dx.doi.org/10.1109/ICPC.2006.10;202-211;10;Dynamic Analysis;
2006;Johannes Koskinen,Markus Kettunen,Tarja Systa;Profile-Based Approach to Support Comprehension of Software Behavior.;http://dx.doi.org/10.1109/ICPC.2006.37;212-224;13;Dynamic Analysis;
2006;Lewis Irwin Berman,Sebastian Danicic,Keith Gallagher,Nicolas E. Gold;The Sound of Software: Using Sonification to Aid Comprehension.;http://dx.doi.org/10.1109/ICPC.2006.47;225-229;5;Working Sessions;
2006;Giuseppe A. Di Lucca,Massimiliano Di Penta;Experimental Settings in Program Comprehension: Challenges and Open Issues.;http://dx.doi.org/10.1109/ICPC.2006.23;229-234;6;Working Sessions;
2006;Dennis B. Smith,Liam O'Brien,Kostas Kontogiannis;Working Session: Program Comprehension and Migration Strategies for Web Service and Service-Oriented Architectures.;http://dx.doi.org/10.1109/ICPC.2006.52;235-240;6;Working Sessions;
2006;Brendan Cleary,Christopher Exton;The Cognitive Assignment Eclipse Plug-in.;http://dx.doi.org/10.1109/ICPC.2006.46;241-244;4;Tool Demonstrations;
2006;Aiden Grandfield,Christopher Exton;INFORM: A Framework for Performance Informed Software Development.;http://dx.doi.org/10.1109/ICPC.2006.29;245-247;3;Tool Demonstrations;
2006;Dirk Beyer 0001,Ahmed E. Hassan;Evolution Storyboards: Visualization of Software Structure Dynamics.;http://dx.doi.org/10.1109/ICPC.2006.21;248-251;4;Tool Demonstrations;
2006;Denys Poshyvanyk,Andrian Marcus,Yubo Dong;JIRiSS - an Eclipse plug-in for Source Code Exploration.;http://dx.doi.org/10.1109/ICPC.2006.32;252-255;4;Tool Demonstrations;
2006;Kamran Sartipi,Lingdong Ye,Hossein Safyallah;Alborz: An Interactive Toolkit to Extract Static and Dynamic Views of a Software System.;http://dx.doi.org/10.1109/ICPC.2006.8;256-259;4;Tool Demonstrations;
2006;Michael Desmond,Margaret-Anne D. Storey,Christopher Exton;Fluid Source Code Views.;http://dx.doi.org/10.1109/ICPC.2006.24;260-263;4;Tool Demonstrations;
2006;Shimin Li,Ladan Tahvildari;JComp: A Reuse-Driven Componentization Framework for Java Applications.;http://dx.doi.org/10.1109/ICPC.2006.31;264-267;4;Tool Demonstrations;
2006;Matias Madou,Ludo Van Put,Koenraad De Bosschere;Understanding Obfuscated Code.;http://dx.doi.org/10.1109/ICPC.2006.49;268-274;7;Tool Demonstrations;
2006;Tara Kelly,Jim Buckley;A Context-Aware Analysis Scheme for Bloom's Taxonomy.;http://dx.doi.org/10.1109/ICPC.2006.5;275-284;10;Cognitive Approaches;
2006;Petru Florin Mihancea;Towards a Client Driven Characterization of Class Hierarchies.;http://dx.doi.org/10.1109/ICPC.2006.48;285-294;10;Cognitive Approaches;
2006;Daniel L. Moise,Kenny Wong,H. James Hoover,Daqing Hou;Reverse Engineering Scripting Language Extensions.;http://dx.doi.org/10.1109/ICPC.2006.42;295-306;12;Cognitive Approaches;
2006;Andrea De Lucia,Fausto Fasano,Rocco Oliveto,Genoveffa Tortora;Can Information Retrieval Techniques Effectively Support Traceability Link Recovery?;http://dx.doi.org/10.1109/ICPC.2006.15;307-316;10;Traceability and Languages;
2006;Andrea De Lucia,Rocco Oliveto,Francesco Zurolo,Massimiliano Di Penta;Improving Comprehensibility of Source Code via Traceability Information: a Controlled Experiment.;http://dx.doi.org/10.1109/ICPC.2006.28;317-326;10;Traceability and Languages;
2006;Nomair A. Naeem,Laurie J. Hendren;Programmer-friendly Decompiled Java.;http://dx.doi.org/10.1109/ICPC.2006.40;327-336;10;Traceability and Languages;
2005;Mariano Ceccato,Marius Marin,Kim Mens,Leon Moonen,Paolo Tonella,Tom Tourwe;A Qualitative Comparison of Three Aspect Mining Techniques.;http://dx.doi.org/10.1109/WPC.2005.2;13-22;10;Concerns and Concepts;
2005;Meghan Revelle,Tiffany Broadbent,David Coppit;Understanding Concerns in Software: Insights Gained from Two Case Studies.;http://dx.doi.org/10.1109/WPC.2005.43;23-32;10;Concerns and Concepts;
2005;Andrian Marcus,Vaclav Rajlich,Joseph Buchta,Maksym Petrenko,Andrey Sergeyev;Static Techniques for Concept Location in Object-Oriented Code.;http://dx.doi.org/10.1109/WPC.2005.33;33-42;10;Concerns and Concepts;
2005;Adam Murray,Timothy C. Lethbridge;Presenting Micro-Theories of Program Comprehension in Pattern Form.;http://dx.doi.org/10.1109/WPC.2005.28;45-54;10;Theories of Program Comprehension;
2005;Jorma Sajaniemi,Raquel Navarro-Prieto;An Investigation into Professional Programmers' Mental Representations of Variables.;http://dx.doi.org/10.1109/WPC.2005.8;55-64;10;Theories of Program Comprehension;
2005;Pamela O'Shea,Christopher Exton;An Investigation of Java Abstraction Usage for Program Modifications.;http://dx.doi.org/10.1109/WPC.2005.9;65-74;10;Theories of Program Comprehension;
2005;Douglas Samuel Kirk,Marc Roper,Murray Wood;Identifying and Addressing Problems in Framework Reuse.;http://dx.doi.org/10.1109/WPC.2005.21;77-86;10;Framework Understanding;
2005;Daqing Hou,Kenny Wong,H. James Hoover;What Can Programmer Questions Tell Us About Frameworks?;http://dx.doi.org/10.1109/WPC.2005.47;87-96;10;Framework Understanding;
2005;Florian Deissenboeck,Markus Pizka;Concise and Consistent Naming.;http://dx.doi.org/10.1109/WPC.2005.14;97-106;10;Framework Understanding;
2005;Anthony Cox,Michael L. Collard;Working Session: Textual Views of Source Code to Support Comprehension.;http://dx.doi.org/10.1109/WPC.2005.49;109-112;4;Working Session;
2005;Ida Hogganvik,Ketil Stolen;On the Comprehension of Security Risk Scenarios.;http://dx.doi.org/10.1109/WPC.2005.27;115-124;10;Empirical Studies;
2005;Michael P. O'Brien,Jim Buckley;Modelling the Information-Seeking Behaviour of Programmers - An Empirical Approach.;http://dx.doi.org/10.1109/WPC.2005.24;125-134;10;Empirical Studies;
2005;Anneliese von Mayrhauser,Andreas Stefik,Nina Picone,Sudipto Ghosh;A COTS Component Comprehension Process.;http://dx.doi.org/10.1109/WPC.2005.1;135-144;10;Empirical Studies;
2005;Paul Anderson,Mark Zarins;The CodeSurfer Software Understanding Platform.;http://dx.doi.org/10.1109/WPC.2005.37;147-148;2;Tool Demonstrations;
2005;Jonathan Buckner,Joseph Buchta,Maksym Petrenko,Vaclav Rajlich;JRipples: A Tool for Program Comprehension during Incremental Change.;http://dx.doi.org/10.1109/WPC.2005.22;149-152;4;Tool Demonstrations;
2005;Jussi Koskinen;HyperSoft System: Tool Demonstration and Use Example.;http://dx.doi.org/10.1109/WPC.2005.20;153-156;4;Tool Demonstrations;
2005;Abdelwahab Hamou-Lhadj,Timothy C. Lethbridge,Lianjiang Fu;SEAT: A Usable Trace Analysis Tool.;http://dx.doi.org/10.1109/WPC.2005.30;157-160;4;Tool Demonstrations;
2005;Grace Gui,Holger M. Kienle,Hausi A. Muller;REGoLive: Web Site Comprehension with Viewpoints.;http://dx.doi.org/10.1109/WPC.2005.29;161-164;4;Tool Demonstrations;
2005;Steven P. Reiss;Tool Demonstration: CHET: Checking Specifications in Java Systems.;http://dx.doi.org/10.1109/WPC.2005.40;165-168;4;Tool Demonstrations;
2005;Steven P. Reiss,Manos Renieris;Tool Demonstration: JIVE and JOVE: Java as it Happens.;http://dx.doi.org/10.1109/WPC.2005.41;169-172;4;Tool Demonstrations;
2005;Janice A. Singer,Robert Elves,Margaret-Anne D. Storey;NavTracks: Supporting Navigation in Software.;http://dx.doi.org/10.1109/WPC.2005.25;173-175;3;Tool Demonstrations;
2005;Nikita Synytskyy,Richard C. Holt,Ian J. Davis;Browsing Software Architectures With LSEdit.;http://dx.doi.org/10.1109/WPC.2005.11;176-178;3;Tool Demonstrations;
2005;Margaret-Anne D. Storey;Theories, Methods and Tools in Program Comprehension: Past, Present and Future.;http://dx.doi.org/10.1109/WPC.2005.38;181-191;11;Keynote;
2005;Katsuhisa Maruyama,Shinichirou Yamamoto;Design and Implementation of an Extensible and Modifiable Refactoring Tool.;http://dx.doi.org/10.1109/WPC.2005.17;195-204;10;Code Understanding and Refactoring;
2005;Carsten Gorg,Peter Weissgerber;Detecting and Visualizing Refactorings from Software Archives.;http://dx.doi.org/10.1109/WPC.2005.18;205-214;10;Code Understanding and Refactoring;
2005;Neil Walkinshaw,Marc Roper,Murray Wood;Understanding Object-Oriented Source Code from the Behavioural Perspective.;http://dx.doi.org/10.1109/WPC.2005.44;215-224;10;Code Understanding and Refactoring;
2005;Scott A. Hendrickson,Eric M. Dashofy,Richard N. Taylor;An (Architecture-Centric) Approach for Tracing, Organizing, and Understanding Events in Event-Based Software Architectures.;http://dx.doi.org/10.1109/WPC.2005.6;227-236;10;Dynamic Analysis;
2005;Michael Fischer,Johann Oberleitner,Harald C. Gall,Thomas Gschwind;System Evolution Tracking through Execution Trace Analysis.;http://dx.doi.org/10.1109/WPC.2005.35;237-246;10;Dynamic Analysis;
2005;Steven P. Reiss;Efficient Monitoring and Display of Thread State in Java.;http://dx.doi.org/10.1109/WPC.2005.19;247-256;10;Dynamic Analysis;
2005;Dirk Beyer 0001,Andreas Noack;Clustering Software Artifacts Based on Frequent Common Changes.;http://dx.doi.org/10.1109/WPC.2005.12;259-268;10;Clustering and Components;
2005;Zhihua Wen,Vassilios Tzerpos;Software Clustering based on Omnipresent Object Detection.;http://dx.doi.org/10.1109/WPC.2005.31;269-278;10;Clustering and Components;
2005;Andrew Le Gear,Jim Buckley,Brendan Cleary,J. J. Collins,Kieran O'Dea;Achieving a Reuse Perspective within a Component Recovery Process: An Industrial Scale Case Study.;http://dx.doi.org/10.1109/WPC.2005.4;279-288;10;Clustering and Components;
2005;Dean Jin,Andreas Winter;Working Session on Interoperable Reengineering Services.;http://dx.doi.org/10.1109/WPC.2005.48;291-293;3;Working Session;
2005;David Dearman,Anthony Cox,Maryanne Fisher;Adding Control-Flow to a Visual Data-Flow Representation.;http://dx.doi.org/10.1109/WPC.2005.5;297-306;10;Software Visualization;
2005;Andrian Marcus,Denise Comorski,Andrey Sergeyev;Supporting the Evolution of a Software Visualization Tool Through Usability Studies.;http://dx.doi.org/10.1109/WPC.2005.34;307-316;10;Software Visualization;
2005;Dabo Sun,Kenny Wong;On Evaluating the Layout of UML Class Diagrams for Program Comprehension.;http://dx.doi.org/10.1109/WPC.2005.26;317-326;10;Software Visualization;
2005;Michael English,Jim Buckley,Anthony Cahill,Kristian Lynch;An Empirical Study of the Use of Friends in C++ Software.;http://dx.doi.org/10.1109/WPC.2005.7;329-332;4;Short Papers;
2005;Andrea De Lucia,Rita Francese,Giuseppe Scanniello,Genoveffa Tortora;Understanding Cloned Patterns in Web Applications.;http://dx.doi.org/10.1109/WPC.2005.42;333-336;4;Short Papers;
2005;Bradley Dux,Anand Iyer,Saumya K. Debray,David Forrester,Stephen G. Kobourov;Visualizing the Behavior of Dynamically Modifiable Code.;http://dx.doi.org/10.1109/WPC.2005.45;337-340;4;Short Papers;
2005;Susan Elliott Sim;A Small Social History of Software Architecture.;http://dx.doi.org/10.1109/WPC.2005.3;341-344;4;Short Papers;
2004;Ludwik Kuzniarz,Miroslaw Staron,Claes Wohlin;An Empirical Study on Using Stereotypes to Improve Understanding of UML Models.;http://dx.doi.org/10.1109/WPC.2004.1311043;14-23;10;Understanding of UML Models;
2004;Imed Hammouda,Olcay Guldogan,Kai Koskimies,Tarja Systa;Tool-Supported Customization of UML Class Diagrams for Learning Complex System Models.;http://dx.doi.org/10.1109/WPC.2004.1311044;24-33;10;Understanding of UML Models;
2004;Zhenchang Xing,Eleni Stroulia;Understanding Class Evolution in Object-Oriented Software.;http://dx.doi.org/10.1109/WPC.2004.1311045;34-45;12;Understanding of UML Models;
2004;Pierre Kelsen;A Simple Static Model for Understanding the Dynamic Behavior of Programs.;http://dx.doi.org/10.1109/WPC.2004.1311046;46-51;6;Theories and Models for Software Comprehension;
2004;Thomas Panas,Jonas Lundberg,Welf Lowe;Reuse in Reverse Engineering.;http://dx.doi.org/10.1109/WPC.2004.1311047;52-61;10;Theories and Models for Software Comprehension;
2004;Gerardo Canfora,Aniello Cimitile,Corrado Aaron Visaggio;Working in Pairs as a Means for Design Knowledge Building: An Empirical Study.;http://dx.doi.org/10.1109/WPC.2004.1311048;62-69;8;Theories and Models for Software Comprehension;
2004;Abdelwahab Hamou-Lhadj,Timothy C. Lethbridge,Lianjiang Fu;Challenges and Requirements for an Effective Trace Exploration Tool.;http://dx.doi.org/10.1109/WPC.2004.1311049;70-78;9;Analysis Techniques;
2004;Christopher A. Mennie,Charles L. A. Clarke;Giving Meaning to Macros.;http://dx.doi.org/10.1109/WPC.2004.1311050;79-88;10;Analysis Techniques;
2004;Sebastian Danicic,Andrea De Lucia,Mark Harman;Building Executable Union Slices using Conditioned Slicing.;http://dx.doi.org/10.1109/WPC.2004.1311051;89-99;11;Analysis Techniques;
2004;Christoph Stoermer,Liam O'Brien,Chris Verhoef;Architectural Views through Collapsing Strategies.;http://dx.doi.org/10.1109/WPC.2004.1311052;100-110;11;Reverse Engineering and Visualization of Software Artifacts;
2004;Camilo Sarmiento,Silvia Takahashi;Understanding CASE Generated Legacy Applications: A Case Study.;http://dx.doi.org/10.1109/WPC.2004.1311053;111-119;9;Reverse Engineering and Visualization of Software Artifacts;
2004;Giuliano Antoniol,Massimiliano Di Penta,Michele Zazzara;Understanding Web Applications through Dynamic Analysis.;http://dx.doi.org/10.1109/WPC.2004.1311054;120-131;12;Reverse Engineering and Visualization of Software Artifacts;
2004;Andrea De Lucia,Rita Francese,Giuseppe Scanniello,Genoveffa Tortora;Reengineering Web Applications Based on Cloned Pattern Analysis.;http://dx.doi.org/10.1109/WPC.2004.1311055;132-141;10;Understanding Web-Based Systems;
2004;Damiano Distante,Tauhida Parveen,Scott R. Tilley;Towards a Technique for Reverse Engineering Web Transactions from a User's Perspective.;http://dx.doi.org/10.1109/WPC.2004.1311056;142-150;9;Understanding Web-Based Systems;
2004;Nicolas E. Gold,Keith H. Bennett;Program Comprehension for Web Services.;http://dx.doi.org/10.1109/WPC.2004.1311057;151-161;11;Understanding Web-Based Systems;
2004;Harry M. Sneed;Program Comprehension for the Purpose of Testing.;http://dx.doi.org/10.1109/WPC.2004.1311058;162-171;10;Program Comprehension in-the-large;
2004;Andrea Capiluppi,Maurizio Morisio,Juan Fernandez-Ramil;Structural Evolution of an Open Source System: A Case Study.;http://dx.doi.org/10.1109/WPC.2004.1311059;172-182;11;Program Comprehension in-the-large;
2004;Ahmed E. Hassan,Richard C. Holt;Using Development History Sticky Notes to Understand Software Architecture.;http://dx.doi.org/10.1109/WPC.2004.1311060;183-193;11;Program Comprehension in-the-large;
2004;Zhihua Wen,Vassilios Tzerpos;An Effectiveness Measure for Software Clustering Algorithms.;http://dx.doi.org/10.1109/WPC.2004.1311061;194-203;10;Clustering for Program Comprehension;
2004;Filippo Ricca,Paolo Tonella,Christian Girardi,Emanuele Pianta;An Empirical Study on Keyword-based Web Site Clustering.;http://dx.doi.org/10.1109/WPC.2004.1311062;204-213;10;Clustering for Program Comprehension;
2004;Yiannis Kanellopoulos,Christos Tjortjis;Data Mining Source Code to Facilitate Program Comprehension: Experiments on Clustering Data Retrieved from C++ Programs.;http://dx.doi.org/10.1109/WPC.2004.1311063;214-225;12;Clustering for Program Comprehension;
2004;Marco Torchiano;Empirical Assessment of UML Static Object Diagrams.;http://dx.doi.org/10.1109/WPC.2004.1311064;226-230;5;Short Papers;
2004;Andrew Foss,Kenny Wong;On Migrating a Legacy Application to the Palm Platform.;http://dx.doi.org/10.1109/WPC.2004.1311065;231-235;5;Short Papers;
2004;Andrew Mohan,Nicolas E. Gold;Programming Style Changes in Evolving Source Code.;http://dx.doi.org/10.1109/WPC.2004.1311066;236-240;5;Short Papers;
2004;Jingwei Wu,Richard C. Holt;Resolving Linkage Anomalies in Extracted Software System Models.;http://dx.doi.org/10.1109/WPC.2004.1311067;241-245;5;Short Papers;
2004;Bogdan Korel,Luay Ho Tahat;Understanding Modifications in State-Based Models.;http://dx.doi.org/10.1109/WPC.2004.1311068;246-250;5;Short Papers;
2004;Dirk Beyer 0001,Thomas A. Henzinger,Ranjit Jhala,Rupak Majumdar;An Eclipse Plug-in for Model Checking.;http://dx.doi.org/10.1109/WPC.2004.1311069;251-255;5;Short Papers;
2004;Ladan Tahvildari,Kostas Kontogiannis;Requirements Driven Software Evolution.;http://dx.doi.org/10.1109/WPC.2004.1311070;258-259;2;Working Sessions;
2004;Liam O'Brien,Dennis B. Smith;Working Session: Program Comprehension Strategies for Web Service and Service-oriented Architectures.;http://dx.doi.org/10.1109/WPC.2004.1311071;260-263;4;Working Sessions;
2004;Manu De Backer,Guido Dedene,Jacques Vandenbulcke;Web Services Composition, Execution and Visualization.;http://dx.doi.org/10.1109/WPC.2004.1311072;264-265;2;Tool Demonstrations;
2004;Claude Tadonki;Universal Report: A Generic Reverse Engineering Tool.;http://dx.doi.org/10.1109/WPC.2004.1311073;266-267;2;Tool Demonstrations;
2004;Brendan Cleary,Christopher Exton;CHIVE - A Program Source Visualisation Framework.;http://dx.doi.org/10.1109/WPC.2004.1311074;268-270;3;Tool Demonstrations;
2003;Giuliano Antoniol,Massimiliano Di Penta,Ettore Merlo;YAAB (Yet Another AST Browser): Using OCL to Navigate ASTs.;http://dx.doi.org/10.1109/WPC.2003.1199185;13-22;10;Analysis Techniques;
2003;Thomas Roy Dean,Yuling Chen;Design Recovery of a Two Level System.;http://dx.doi.org/10.1109/WPC.2003.1199186;23-32;10;Analysis Techniques;
2003;Raghavan Komondoor,Susan Horwitz;Effective, Automatic Procedure Extraction.;http://dx.doi.org/10.1109/WPC.2003.1199187;33-43;11;Analysis Techniques;
2003;James M. Bieman,Anneliese von Mayrhauser,Helen J. Yang;Understanding Change-Proneness in OO Software through Visualization.;http://dx.doi.org/10.1109/WPC.2003.1199188;44-53;10;Program Understanding Tools and Technique;
2003;Martin Pinzger,Johann Oberleitner,Harald C. Gall;Analyzing and Understanding Architectural Characteristics of COM+ Components.;http://dx.doi.org/10.1109/WPC.2003.1199189;54-63;10;Program Understanding Tools and Technique;
2003;Panagiotis K. Linos,Zhi-Hong Chen,Seth Berrier,Brian O'Rourke;A Tool For Understanding Multi-Language Program Dependencies.;http://dx.doi.org/10.1109/WPC.2003.1199190;64-73;10;Program Understanding Tools and Technique;
2003;Steven P. Reiss;Event-Based Performance Analysis.;http://dx.doi.org/10.1109/WPC.2003.1199191;74-83;10;Dynamic Analysis Techniques;
2003;Edward B. Duffy,J. Paul Gibson,Brian A. Malloy;Applying the Decorator Pattern for Profiling Object-Oriented Software.;http://dx.doi.org/10.1109/WPC.2003.1199192;84-93;10;Dynamic Analysis Techniques;
2003;Dirk Heuzeroth,Thomas Holl,Gustav Hogstrom,Welf Lowe;Automatic Design Pattern Detection.;http://dx.doi.org/10.1109/WPC.2003.1199193;94-104;11;Dynamic Analysis Techniques;
2003;Andrian Marcus,Louis Feng,Jonathan I. Maletic;Comprehension of Software Analysis Data Using 3D Visualization.;http://dx.doi.org/10.1109/WPC.2003.1199194;105-114;10;Program Comprehension Approache;
2003;Juergen Rilling,Tuomas Klemola;Identifying Comprehension Bottlenecks Using Program Slicing and Cognitive Complexity Metric.;http://dx.doi.org/10.1109/WPC.2003.1199195;115-124;10;Program Comprehension Approache;
2003;Christos Tjortjis,Loukas Sinos,Paul J. Layzell;Facilitating Program Comprehension by Mining Association Rules from Source Code.;http://dx.doi.org/10.1109/WPC.2003.1199196;125-133;9;Program Comprehension Approache;
2003;Michael L. Collard,Huzefa H. Kagdi,Jonathan I. Maletic;An XML-Based Lightweight C++ Fact Extractor.;http://doi.ieeecomputersociety.org/10.1109/IWPC.2003.10005;134-143;10;Fact Extraction Techniques;
2003;James R. Cordy;Generalized Selective XML Markup of Source Code Using Agile Parsing.;http://doi.ieeecomputersociety.org/10.1109/IWPC.2003.10007;144-153;10;Fact Extraction Techniques;
2003;Anthony Cox,Charles L. A. Clarke;Syntactic Approximation Using Iterative Lexical Analysis.;http://doi.ieeecomputersociety.org/10.1109/IWPC.2003.10006;154-164;11;Fact Extraction Techniques;
2003;Jim Buckley,Christopher Exton;Blooms? Taxonomy: A Framework for Assessing Programmers? Knowledge of Software Systems.;http://dx.doi.org/10.1109/WPC.2003.1199200;165-174;10;Comprehension Frameworks and Evaluation;
2003;Andy Ko,Bob Uttl;Individual Differences in Program Comprehension Strategies in Unfamiliar Programming Systems.;http://dx.doi.org/10.1109/WPC.2003.1199201;175-184;10;Comprehension Frameworks and Evaluation;
2003;Andrew Walenstein;Observing and Measuring Cognitive Support: Steps Toward Systematic Tool Evaluation and Engineering.;http://dx.doi.org/10.1109/WPC.2003.1199202;185-195;11;Comprehension Frameworks and Evaluation;
2003;James R. Cordy;Comprehending Reality - Practical Barriers to Industrial Adoption of Software Maintenance Automation.;http://dx.doi.org/10.1109/WPC.2003.1199203;196-206;11;Keynote;
2003;Filippo Ricca,Paolo Tonella;Using Clustering to Support the Migration from Static to Dynamic Web Pages.;http://dx.doi.org/10.1109/WPC.2003.1199204;207-216;10;Clustering Applications and Evaluation;
2003;Yves Chiricota,Fabien Jourdan,Guy Melancon;Software Components Capture Using Graph Clustering.;http://dx.doi.org/10.1109/WPC.2003.1199205;217-226;10;Clustering Applications and Evaluation;
2003;Zhihua Wen,Vassilios Tzerpos;An Optimal Algorithm for MoJo Distance.;http://dx.doi.org/10.1109/WPC.2003.1199206;227-236;10;Clustering Applications and Evaluation;
2003;Andrew Chan,Reid Holmes,Gail C. Murphy,Annie T. T. Ying;Scaling an Object-Oriented System Execution Visualizer through Sampling.;http://dx.doi.org/10.1109/WPC.2003.1199207;237-244;8;Short Papers I;
2003;Thomas Gschwind,Johann Oberleitner,Martin Pinzger;Using Run-Time Data for Program Comprehension.;http://dx.doi.org/10.1109/WPC.2003.1199208;245-250;6;Short Papers I;
2003;Keith Gallagher,Lucas Layman;Are Decomposition Slices Clones?.;http://dx.doi.org/10.1109/WPC.2003.1199209;251-257;7;Short Papers I;
2003;Gerald C. Gannod,Shilpa Murthy;Verification of Recovered Software Architectures.;http://dx.doi.org/10.1109/WPC.2003.1199210;258-265;8;Short Papers II;
2003;Igor Ivkovic,Michael W. Godfrey;Enhancing Domain-Specific Software Architecture Recovery.;http://dx.doi.org/10.1109/WPC.2003.1199211;266-273;8;Short Papers II;
2003;Jorg Niere,Jorg P. Wadsack,Lothar Wendehals;Handling Large Search Space in Pattern-Based Reverse Engineering.;http://dx.doi.org/10.1109/WPC.2003.1199212;274-280;7;Short Papers II;
2003;Shihong Huang,Scott R. Tilley;Workshop on Graphical Documentation for Programmers: Assessing the Efficacy of UML Diagrams for Program Understanding.;http://dx.doi.org/10.1109/WPC.2003.1199213;281-282;2;Working Sessions;
2003;Arie van Deursen,Jean-Marie Favre,Rainer Koschke,Juergen Rilling;Experiences in Teaching Software Evolution and Program Comprehension.;http://dx.doi.org/10.1109/WPC.2003.1199214;283-284;2;Working Sessions;
2003;Arun Lakhotia,Junwei Li,Andrew Walenstein,Yun Yang;Towards a Clone Detection Benchmark Suite and Results Archive.;http://dx.doi.org/10.1109/WPC.2003.1199215;285-287;3;Working Sessions;
2003;S. Dhinakar Jacob,Madhuchhanda Das;TALK2C: A Tool for Automatic Migratio.;http://dx.doi.org/10.1109/WPC.2003.1199217;288-289;2;Tool Demonstrations;
2003;Marbod Hopfner,Dietmar Seipel,Jurgen Wolff von Gudenberg;Comprehending and Visualizing Software Based on XML - Representations and Call Graphs.;http://dx.doi.org/10.1109/WPC.2003.1199218;290-291;2;Tool Demonstrations;
2003;Nishant Bawa,Sudipto Ghosh;Visualizing Interactions in Distributed Java Applications.;http://dx.doi.org/10.1109/WPC.2003.1199219;292-293;2;Tool Demonstrations;
2003;Dirk Beyer 0001,Claus Lewerentz;CrocoPat: Efficient Pattern Analysis in Object-Oriented Programs.;http://dx.doi.org/10.1109/WPC.2003.1199220;294-295;2;Tool Demonstrations;
2003;Andreas Zeller;Isolating Cause-Effect Chains with AskIgo.;http://dx.doi.org/10.1109/WPC.2003.1199221;296-297;2;Tool Demonstrations;
2003;Mark Hennessy,Brian A. Malloy,James F. Power;gccXfront: Exploiting gcc as a Front End for Program Comprehension Tools via XML/XSLT.;http://dx.doi.org/10.1109/WPC.2003.1199222;298-;1;Tool Demonstrations;
2002;Alexandru Telea,Alessandro Maccari,Claudio Riva;An Open Visualization Toolkit for Reverse Architecting.;http://dx.doi.org/10.1109/WPC.2002.1021303;3-10;8;Visualization and User Interaction;
2002;Aaron J. Quigley;Experience with FADE for the Visualization and Abstraction of Software Views.;http://dx.doi.org/10.1109/WPC.2002.1021304;11-20;10;Visualization and User Interaction;
2002;Mohammad El-Ramly,Eleni Stroulia,Paul G. Sorenson;Mining System-User Interaction Traces for Use Case Models.;http://dx.doi.org/10.1109/WPC.2002.1021305;21-29;9;Visualization and User Interaction;
2002;Steve Counsell,Emilia Mendes,Stephen Swift;Comprehension of Object-Oriented Software Cohesion: The Empirical Quagmire.;http://dx.doi.org/10.1109/WPC.2002.1021308;33-42;10;Theories and Models for Software Comprehension I;
2002;Thomas Vestdam,Kurt Normark;Aspects of Internal Program Documentation - An Elucidative Perspective.;http://dx.doi.org/10.1109/WPC.2002.1021315;43-52;10;Theories and Models for Software Comprehension I;
2002;Martin Pinzger,Harald C. Gall;Pattern-Supported Architecture Recovery.;http://dx.doi.org/10.1109/WPC.2002.1021318;53-61;9;Theories and Models for Software Comprehension I;
2002;Dean Jin,James R. Cordy,Thomas Roy Dean;Where's the Schema? A Taxonomy of Patterns for Software Exchange.;http://dx.doi.org/10.1109/WPC.2002.1021320;65-74;10;Theories and Models for Software Comprehension II;
2002;Andrew Walenstein;Theory-based Analysis of Cognitive Support in Software Comprehension Tools.;http://dx.doi.org/10.1109/WPC.2002.1021322;75-84;10;Theories and Models for Software Comprehension II;
2002;Stephane Soteg Some,Timothy C. Lethbridge;Enhancing Program Comprehension with Recovered State Models.;http://dx.doi.org/10.1109/WPC.2002.1021325;85-93;9;Theories and Models for Software Comprehension II;
2002;David M. Binkley;An Empirical Study of the Effect of Semantic Differences on Programmer Comprehension.;http://dx.doi.org/10.1109/WPC.2002.1021327;97-106;10;Experimental and Empirical Studies;
2002;Elizabeth Burd,Dawn Overy,Ady Wheetman;Evaluating Using Animation to Improve Understanding of Sequence Diagrams.;http://dx.doi.org/10.1109/WPC.2002.1021329;107-113;7;Experimental and Empirical Studies;
2002;Susan Elliott Sim,Richard C. Holt,Steve M. Easterbrook;On Using a Benchmark to Evaluate C++ Extractors.;http://dx.doi.org/10.1109/WPC.2002.1021331;114-123;10;Experimental and Empirical Studies;
2002;Qiang Tu,Michael W. Godfrey;An Integrated Approach for Studying Architectural Evolution.;http://dx.doi.org/10.1109/WPC.2002.1021334;127-136;10;Tools and Integration;
2002;Arie van Deursen,Joost Visser;Building Program Understanding Tools Using Visitor Combinators.;http://dx.doi.org/10.1109/WPC.2002.1021335;137-146;10;Tools and Integration;
2002;Claire Knight,Malcolm Munro;"Program Comprehension Experiences with GXL; Comprehension for Comprehension.";http://dx.doi.org/10.1109/WPC.2002.1021336;147-156;10;Tools and Integration;
2002;Abdelwahab Hamou-Lhadj,Timothy C. Lethbridge;Compression Techniques to Simplify the Analysis of Large Execution Traces.;http://dx.doi.org/10.1109/WPC.2002.1021337;159-168;10;Analysis of Dynamic Aspects;
2002;Tomonori Takada,Fumiaki Ohata,Katsuro Inoue;Dependence-Cache Slicing: A Program Slicing Method Using Lightweight Dynamic Information.;http://dx.doi.org/10.1109/WPC.2002.1021338;169-177;9;Analysis of Dynamic Aspects;
2002;Igor Ivkovic,Michael W. Godfrey;Architecture Recovery of Dynamically Linked Applications: A Case Study.;http://dx.doi.org/10.1109/WPC.2002.1021339;178-184;7;Analysis of Dynamic Aspects;
2002;Jens H. Weber-Jahnke,Hausi A. Muller,Andrew Walenstein,Nikolai Mansurov,Kenny Wong;Fused Data-Centric Visualizations for Software Evolution Environments.;http://dx.doi.org/10.1109/WPC.2002.1021340;187-196;10;Evolution and Reuse;
2002;Lerina Aversano,Gerardo Canfora,Andrea De Lucia,Silvio Stefanucci;Evolving Ispell: A Case Study of Program Understanding for Reuse.;http://dx.doi.org/10.1109/WPC.2002.1021341;197-206;10;Evolution and Reuse;
2002;Massimiliano Di Penta,Sara Gradara,Giuliano Antoniol;Traceability Recovery in RAD Software Systems.;http://dx.doi.org/10.1109/WPC.2002.1021342;207-216;10;Evolution and Reuse;
2002;Leon Moonen;Lightweight Impact Analysis using Island Grammars.;http://dx.doi.org/10.1109/WPC.2002.1021343;219-228;10;Analysis I;
2002;Anthony Cox,Charles L. A. Clarke;Relocating XML Elements from Preprocessed to Unprocessed Code.;http://dx.doi.org/10.1109/WPC.2002.1021344;229-238;10;Analysis I;
2002;Jingwei Wu,Ahmed E. Hassan,Richard C. Holt;Using Graph Patterns to Extract Scenarios.;http://dx.doi.org/10.1109/WPC.2002.1021345;239-247;9;Analysis I;
2002;Jianjun Zhao;Slicing Aspect-Oriented Software.;http://dx.doi.org/10.1109/WPC.2002.1021346;251-260;10;Analysis II;
2002;Giuseppe A. Di Lucca,Anna Rita Fasolino,F. Pace,Porfirio Tramontana,Ugo de Carlini;Comprehending Web Applications by a Clustering Based Approach.;http://dx.doi.org/10.1109/WPC.2002.1021347;261-270;10;Analysis II;
2002;Vaclav Rajlich,Norman Wilde;The Role of Concepts in Program Comprehension.;http://dx.doi.org/10.1109/WPC.2002.1021348;271-278;8;Analysis II;
2002;Christopher Exton;Constructivism and Program Comprehension Strategies.;http://dx.doi.org/10.1109/WPC.2002.1021349;281-284;4;Short Papers;
2002;Scott R. Tilley,Shihong Huang;On Selecting Software Visualization Tools for Program Understanding in an Industrial Context.;http://dx.doi.org/10.1109/WPC.2002.1021350;285-288;4;Short Papers;
2002;Jonathan I. Maletic,Michael L. Collard,Andrian Marcus;Source Code Files as Structured Documents.;http://dx.doi.org/10.1109/WPC.2002.1021351;289-292;4;Short Papers;
2001;Sarita Bassil,Rudolf K. Keller;Software Visualization Tools: Survey and Analysis.;http://dx.doi.org/10.1109/WPC.2001.921708;7-17;11;Visualization;
2001;Claire Knight,Malcolm Munro;Mediating Diverse Visualisations for Comprehension.;http://dx.doi.org/10.1109/WPC.2001.921710;18-25;8;Visualization;
2001;Jonathan I. Maletic,Andrian Marcus,Greg Dunlap,Jason Leigh;Visualizing Object-Oriented Software in Virtual Reality.;http://dx.doi.org/10.1109/WPC.2001.921711;26-35;10;Visualization;
2001;Alessandro Orso,Saurabh Sinha,Mary Jean Harrold;Effects of Pointers on Data Dependences.;http://dx.doi.org/10.1109/WPC.2001.921712;39-49;11;Analysis I;
2001;Yunbo Deng,Suraj C. Kothari,Yogy Namara;Program Slice Browser.;http://dx.doi.org/10.1109/WPC.2001.921713;50-59;10;Analysis I;
2001;Johan Moe,David A. Carr;Understanding Distributed Systems via Execution Trace Data.;http://dx.doi.org/10.1109/WPC.2001.921714;60-67;8;Analysis I;
2001;Michael P. O'Brien,Jim Buckley;Inference-Based and Expectation-Based Processing in Program Comprehension.;http://dx.doi.org/10.1109/WPC.2001.921715;71-78;8;Program Understanding;
2001;Russell Mosemann,Susan Wiedenbeck;Navigation and Comprehension of Programs by Novice Programmers.;http://dx.doi.org/10.1109/WPC.2001.921716;79-88;10;Program Understanding;
2001;Chris Fox,Sebastian Danicic,Mark Harman,Robert M. Hierons;Backward Conditioning: A New Program Specialisation Technique and Its Application to Program Comprehension.;http://dx.doi.org/10.1109/WPC.2001.921717;89-97;9;Program Understanding;
2001;Yang Li,Hongji Yang;Simplicity: A Key Engineering Concept for Program Understanding.;http://dx.doi.org/10.1109/WPC.2001.921718;98-107;10;Program Understanding;
2001;Margaret-Anne D. Storey,Casey Best,Jeff Michaud;SHriMP Views: An Interactive Environment for Exploring Java Programs.;http://dx.doi.org/10.1109/WPC.2001.921719;111-112;2;Tool Demo;
2001;Mark E. M. Stewart;Automated Analysis of Scientific and Engineering Semantics.;http://dx.doi.org/10.1109/WPC.2001.921720;113-114;2;Tool Demo;
2001;Kamran Sartipi;Alborz: A Query-based Tool for Software Architecture Recovery.;http://dx.doi.org/10.1109/WPC.2001.921721;115-116;2;Tool Demo;
2001;Timothy C. Lethbridge;Report from the Dagstuhl Seminar on Interoperability of Reengineering Tools.;http://dx.doi.org/10.1109/WPC.2001.921722;119;1;Working Session Track I;
2001;Eleni Stroulia,Tarja Systa;Structure-Behavior-Function Program Understanding.;http://dx.doi.org/10.1109/WPC.2001.921723;120;1;Working Session Track I;
2001;Dewayne E. Perry;Software Architecture: Leverage for System/Program Comprehension.;;123-126;4;Keynote Address;
2001;Andrew J. Malton,Kevin A. Schneider,James R. Cordy,Thomas Roy Dean,Darren Cousineau,Jason Reynolds;Processing Software Source Text in Automated Design Recovery and Transformation.;http://dx.doi.org/10.1109/WPC.2001.921724;127-134;8;Design Recovery;
2001;Nicolas E. Gold,Keith H. Bennett;A Flexible Method for Segmentation in Concept Assignmen.;http://dx.doi.org/10.1109/WPC.2001.921725;135-144;10;Design Recovery;
2001;James R. Cordy,Kevin A. Schneider,Thomas Roy Dean,Andrew J. Malton;HSML: Design Directed Source Code Hot Spots.;http://dx.doi.org/10.1109/WPC.2001.921726;145-154;10;Design Recovery;
2001;Periklis Andritsos,Renee J. Miller;Reverse Engineering Meets Data Analysis.;http://dx.doi.org/10.1109/WPC.2001.921727;157-166;10;Techniques and Methods;
2001;Harry M. Sneed;Extracting Business Logic from Existing COBOL Programs as a Basis for Redevelopment.;http://dx.doi.org/10.1109/WPC.2001.921728;167-175;9;Techniques and Methods;
2001;Giuseppe A. Di Lucca,Anna Rita Fasolino,Ugo de Carlini;An Algebraic Notation for Representing Threads in Object Oriented Software Comprehension.;http://dx.doi.org/10.1109/WPC.2001.921729;176-185;10;Techniques and Methods;
2001;Scott R. Tilley,Mohan DeSouza;Spreading Knowledge about Gnutella: A Case Study in Understanding Net-Centric Applications.;http://dx.doi.org/10.1109/WPC.2001.921730;189-198;10;Case Studies;
2001;Lerina Aversano,Gerardo Canfora,Silvio Stefanucci;Understanding and Improving the Maintenance Process: A Method and Two Case Studies.;http://dx.doi.org/10.1109/WPC.2001.921731;199-208;10;Case Studies;
2001;Carola Lange,Andreas Winter,Harry M. Sneed;Comparing Graph-Based Program Comprehension Tools to Relational Database-Based Tools.;http://dx.doi.org/10.1109/WPC.2001.921732;209-218;10;Case Studies;
2001;Gerald C. Gannod,Betty H. C. Cheng;A Suite of Tools for Facilitating Reverse Engineering Using Formal Methods.;http://dx.doi.org/10.1109/WPC.2001.921733;221-232;12;Analysis Tools;
2001;Jean-Marie Favre;GSEE: A Generic Software Exploration Environment.;http://dx.doi.org/10.1109/WPC.2001.921734;233-244;12;Analysis Tools;
2001;Iyad Zayour,Timothy C. Lethbridge;Adoption of Reverse Engineering Tools: A Cognitive Perspective and Methodology.;http://dx.doi.org/10.1109/WPC.2001.921735;245-255;11;Analysis Tools;
2001;Kamran Sartipi;A Software Evaluation Model Using Component Association Views.;http://dx.doi.org/10.1109/WPC.2001.921736;259-268;10;Redocumentation;
2001;Reinder J. Bril,Andre Postma;An Architectural Connectivity Metric and Its Support for Incremental Re-Architecting of Large Legacy Systems.;http://dx.doi.org/10.1109/WPC.2001.921737;269-280;12;Redocumentation;
2001;Giuliano Antoniol,Massimiliano Di Penta,Gerardo Casazza,Ettore Merlo;A Method to Re-Organize Legacy Systems via Concept Analysis.;http://dx.doi.org/10.1109/WPC.2001.921738;281-290;10;Redocumentation;
2001;Zhifeng Yu,Vaclav Rajlich;Hidden Dependencies in Program Comprehension and Change Propagation.;http://dx.doi.org/10.1109/WPC.2001.921739;293-299;7;Analysis II;
2001;Thomas Eisenbarth,Rainer Koschke,Daniel Simon;Feature-Driven Program Understanding Using Concept Analysis of Execution Traces.;http://dx.doi.org/10.1109/WPC.2001.921740;300-309;10;Analysis II;
2001;Mark Harman,Malcolm Munro,Lin Hu,Xingyuan Zhang;Side-Effect Removal Transformation.;http://dx.doi.org/10.1109/WPC.2001.921741;310-319;10;Analysis II;
2001;Kenny Wong;Research Challenges in the Reverse Engineering Community.;http://dx.doi.org/10.1109/WPC.2001.921742;323;1;Working Session Track II;
2000;Claes Wohlin,Martin Host,Magnus C. Ohlsson;Understanding the Sources of Software Defects: A Filtering Approach.;http://dx.doi.org/10.1109/WPC.2000.852475;9-17;9;Software Quality Analysis;
2000;Jens H. Weber-Jahnke,Jorg Niere,Jorg P. Wadsack;Automated Quality Analysis of Component Software for Embedded Systems.;http://dx.doi.org/10.1109/WPC.2000.852476;18-26;9;Software Quality Analysis;
2000;Lars Bratthall,Claes Wohlin;Understanding Some Software Quality Aspects from Architecture and Design Models.;http://dx.doi.org/10.1109/WPC.2000.852477;27-34;8;Software Quality Analysis;
2000;Kamran Sartipi,Kostas Kontogiannis,Farhad Mavaddat;A Pattern Matching Framework for Software Architecture Recovery and Restructuring.;http://dx.doi.org/10.1109/WPC.2000.852478;37-47;11;Architecture Recovery;
2000;John B. Tran,Michael W. Godfrey,Eric H. S. Lee,Richard C. Holt;Architectural Repair of Open Source Software.;http://dx.doi.org/10.1109/WPC.2000.852479;48-59;12;Architecture Recovery;
2000;Steve Counsell,Peter Newson,Emilia Mendes;Architectural Level Hypothesis Testing through Reverse Engineering of Object-Oriented Software.;http://dx.doi.org/10.1109/WPC.2000.852480;60-66;7;Architecture Recovery;
2000;Jean-Christophe Deprez,Arun Lakhotia;A Formalism to Automate Mapping from Program Features to Code.;http://dx.doi.org/10.1109/WPC.2000.852481;69-78;10;Reverse Engineering;
2000;Giuliano Antoniol,Gerardo Canfora,Andrea De Lucia,Gerardo Casazza,Ettore Merlo;Tracing Object-Oriented Code into Functional Requirements.;http://dx.doi.org/10.1109/WPC.2000.852482;79-86;8;Reverse Engineering;
2000;Jean-Francois Girard,Martin Wurthner;Evaluating the Accessor Classification Approach to Detect Abstract Data Types.;http://dx.doi.org/10.1109/WPC.2000.852483;87-95;9;Reverse Engineering;
2000;Jorma Sajaniemi;Program Comprehension through Multiple Simultaneous Views: A Session with VinEd.;http://dx.doi.org/10.1109/WPC.2000.852484;99-108;10;Tools and Environments;
2000;Neil M. Goldman;Smiley-An Interactive Tool for Monitoring Inter-Module Function Calls.;http://dx.doi.org/10.1109/WPC.2000.852485;109-118;10;Tools and Environments;
2000;Kurt Normark;Requirements for an Elucidative Programming Environment.;http://dx.doi.org/10.1109/WPC.2000.852486;119-128;10;Tools and Environments;
2000;Stan Rifkin,Lionel E. Deimel;Program Comprehension Techniques Improve Software Inspections: A Case Study.;http://dx.doi.org/10.1109/WPC.2000.852487;131-138;8;Program Comprehension Studies;
2000;Cynthia L. Corritore,Susan Wiedenbeck;Direction and Scope of Comprehension-Related Activities by Procedural and Object-Oriented Programmers: An Empirical Study.;http://dx.doi.org/10.1109/WPC.2000.852488;139-148;10;Program Comprehension Studies;
2000;Alessandro Bianchi,Giuseppe Visaggio,Anna Rita Fasolino;An Exploratory Case Study of the Maintenance Effectiveness of Traceability Models.;http://dx.doi.org/10.1109/WPC.2000.852489;149-158;10;Program Comprehension Studies;
2000;David M. Binkley,L. Ross Raszewski,Christopher Smith,Mark Harman;An Empirical Study of Amorphous Slicing as a Program Comprehension Support Tool.;http://dx.doi.org/10.1109/WPC.2000.852490;161-170;10;Metrics and Slicing;
2000;James F. Power,Brian A. Malloy;Metric-Based Analysis of Context-Free Grammars.;http://dx.doi.org/10.1109/WPC.2000.852491;171-178;8;Metrics and Slicing;
2000;Harry M. Sneed;Source Animation as a Means of Program Comprehension.;http://dx.doi.org/10.1109/WPC.2000.852492;179-187;9;Metrics and Slicing;
2000;Derek Rayside,Steve Reuss,Erik Hedges,Kostas Kontogiannis;The Effect of Call Graph Construction Algorithms for Object-Oriented Programs on Automatic Clustering.;http://dx.doi.org/10.1109/WPC.2000.852493;191-200;10;Clustering Techniques;
2000;Rainer Koschke,Thomas Eisenbarth;A Framework for Experimental Evaluation of Clustering Techniques.;http://dx.doi.org/10.1109/WPC.2000.852494;201-210;10;Clustering Techniques;
2000;Vassilios Tzerpos,Richard C. Holt;On the Stability of Software Clustering Algorithms.;http://dx.doi.org/10.1109/WPC.2000.852495;211-218;8;Clustering Techniques;
2000;Tobias Kuipers,Leon Moonen;Types and Concept Analysis for Legacy Systems.;http://dx.doi.org/10.1109/WPC.2000.852496;221-230;10;Concept Analysis;
2000;Nicolas Anquetil;A Comparison of Graphs of Concept for Reverse Engineering.;http://dx.doi.org/10.1109/WPC.2000.852497;231-240;10;Concept Analysis;
2000;Kunrong Chen,Vaclav Rajlich;Case Study of Feature Location Using Dependence Graph.;http://dx.doi.org/10.1109/WPC.2000.852498;241-247;7;Concept Analysis;
2000;Giuliano Antoniol,Gerardo Casazza,Ettore Merlo;Identification of Lower-Level Artifacts.;http://dx.doi.org/10.1109/WPC.2000.852502;253;1;Working Sessions;
2000;Marian Petre;Empirical Studies of Programming-in-the-Large: How?;http://dx.doi.org/10.1109/WPC.2000.852503;254;1;Working Sessions;
2000;Keith Gallagher;Tools for Program Comprehension: Building a Comprehender's Workbench.;http://dx.doi.org/10.1109/WPC.2000.852500;255;1;Working Sessions;
2000;Francoise Balmas,Harald Wertz,Janice A. Singer;Understanding Program Understanding.;http://dx.doi.org/10.1109/WPC.2000.852501;256;1;Working Sessions;
1999;Claire Knight,Malcolm Munro;Comprehension with[in] Virtual Environment Visualisations.;http://dx.doi.org/10.1109/WPC.1999.777733;4-11;8;Visualization;
1999;Panagiotis K. Linos,Esther T. Ososanya,Vijay Karunakaran;Improving the Visibility of Graphical Program Displays: An Experimental Study.;http://dx.doi.org/10.1109/WPC.1999.777735;12-19;8;Visualization;
1999;James Westland Cain,Rachel Jane McCrindle;Program Visualisation using C++ Lenses.;http://dx.doi.org/10.1109/WPC.1999.777738;20-26;7;Visualization;
1999;Ivan T. Bowman,Richard C. Holt;Reconstructing Ownership Architectures To Help Understand Software Systems.;http://dx.doi.org/10.1109/WPC.1999.777740;28-37;10;Architectures for Understanding;
1999;M. P. A. Sellink,Chris Verhoef;An Architecture for Automated Software Maintenance.;http://dx.doi.org/10.1109/WPC.1999.777742;38-48;11;Architectures for Understanding;
1999;Jean-Francois Patenaude,Ettore Merlo,Michel R. Dagenais,Bruno Lague;Extending Software Quality Assessment Techniques to Java Systems.;http://dx.doi.org/10.1109/WPC.1999.777743;49-56;8;Architectures for Understanding;
1999;Anna Rita Fasolino,Giuseppe Visaggio;Improving Software Comprehension through an Automated Dependency Tracer.;http://dx.doi.org/10.1109/WPC.1999.777744;58-65;8;Integration Frameworks;
1999;Ilene Burnstein,Floyd Saner;An Application of Fuzzy Reasoning to Support Automated Program Comprehension.;http://dx.doi.org/10.1109/WPC.1999.777745;66-73;8;Integration Frameworks;
1999;Arie van Deursen,Leon Moonen;Understanding COBOL Systems using Inferred Types.;http://dx.doi.org/10.1109/WPC.1999.777746;74-81;8;Integration Frameworks;
1999;Beniamino Di Martino,Antonino Mazzeo,Nicola Mazzocca,Umberto Villano;Restructuring Parallel Programs by Transformation of Point-To-Point Interactions into Collective Communication.;http://dx.doi.org/10.1109/WPC.1999.777747;84-91;8;Comprehension Strategies;
1999;Harry M. Sneed,Tomas Dombovari;Comprehending a Complex, Distributed, Object-Oriented Software System a Report from the Field.;http://dx.doi.org/10.1109/WPC.1999.777761;218-225;8;Comprehension Strategies;
1999;Bogdan Korel;Black-Box Understanding of COTS Components.;http://dx.doi.org/10.1109/WPC.1999.777748;92-99;8;Comprehension Strategies;
1999;Margaret Ann Francel,Spencer Rugaber;The Relationship of Slicing and Debugging to Program Understanding.;http://dx.doi.org/10.1109/WPC.1999.777749;106-113;8;Parsing;
1999;Gregory Knapen,Bruno Lague,Michel R. Dagenais,Ettore Merlo;Parsing C++ Despite Missing Declarations.;http://dx.doi.org/10.1109/WPC.1999.777750;114-125;12;Parsing;
1999;Jianjun Zhao;Slicing Concurrent Java Programs.;http://dx.doi.org/10.1109/WPC.1999.777751;126-133;8;Parsing;
1999;Gerardo Canfora,Aniello Cimitile,Andrea De Lucia,Giuseppe A. Di Lucca;A Case Study of Applying an Eclectic Approach to Identify Objects in Code.;http://dx.doi.org/10.1109/WPC.1999.777752;136-143;8;Decomposition and Composition;
1999;Liwu Li;On Managing Classes for Evolving Software.;http://dx.doi.org/10.1109/WPC.1999.777753;144-150;7;Decomposition and Composition;
1999;Giuliano Antoniol,Alessandra Potrich,Paolo Tonella,Roberto Fiutem;Evolving Object Oriented Design to Improve Code Traceability.;http://dx.doi.org/10.1109/WPC.1999.777754;151-160;10;Decomposition and Composition;
1999;Jussi Koskinen;Empirical Evaluation of Hypertextual Information Access from Program Text.;http://dx.doi.org/10.1109/WPC.1999.777755;162-169;8;Empirical Aspects;
1999;Anneliese von Mayrhauser,Stephen Lang;On the Role of Static Analysis during Software Maintenance.;http://dx.doi.org/10.1109/WPC.1999.777756;170-177;8;Empirical Aspects;
1999;Paul Warren,Cornelia Boldyreff,Malcolm Munro;The Evolution of Websites.;http://dx.doi.org/10.1109/WPC.1999.777757;178-185;8;Empirical Aspects;
1999;Cristina Garcia Cifuentes,Mike Van Emmerik;Recovery of Jump Table Case Statements from Binary Code.;http://dx.doi.org/10.1109/WPC.1999.777758;192-199;8;Program Analysis;
1999;Christoph W. Kessler,Craig Smith;The SPARAMAT Approach to Automatic Comprehension of Sparse Matrix Computations.;http://dx.doi.org/10.1109/WPC.1999.777759;200-207;8;Program Analysis;
1999;Mark Harman,Chris Fox,Robert M. Hierons,David M. Binkley,Sebastian Danicic;Program Simplification as a Means of Approximating Undecidable Propositions.;http://dx.doi.org/10.1109/WPC.1999.777760;208-217;10;Program Analysis;
1998;Reinhard Schauer,Rudolf K. Keller;Pattern Visualization for Software Comprehension.;http://dx.doi.org/10.1109/WPC.1998.693273;4-12;9;Visualization;
1998;Susan K. Burkwald,Stephen G. Eick,Kurt D. Rivard,John D. Pyrce;Visualizing Year 2000 Program Changes.;http://dx.doi.org/10.1109/WPC.1998.693275;13-18;6;Visualization;
1998;Peter Young,Malcolm Munro;Visualizing Software in Virtual Reality.;http://dx.doi.org/10.1109/WPC.1998.693276;19-26;8;Visualization;
1998;Nabor C. Mendonca,Jeffrey Kramer;Developing an Approach for the Recovery of Distributed Software Architectures.;http://dx.doi.org/10.1109/WPC.1998.693279;28-36;9;Architecture;
1998;Bruno Lague,Charles Leduc,Andre Le Bon,Ettore Merlo,Michel R. Dagenais;An Analysis Framework for Understanding Layered Software Architectures.;http://dx.doi.org/10.1109/WPC.1998.693281;37-44;8;Architecture;
1998;Spiros Mancoridis,Brian S. Mitchell,Chris Rorres,Yih-Farn Chen,Emden R. Gansner;Using Automatic Clustering to Produce High-Level System Organizations of Source Code.;http://dx.doi.org/10.1109/WPC.1998.693283;45-52;8;Architecture;
1998;Steven G. Woods,Liam O'Brien,Tao Lin,Keith Gallagher,Alex Quilici;An Architecture for Interoperable Program Understanding Tools.;http://dx.doi.org/10.1109/WPC.1998.693285;54-63;10;Integration Frameworks;
1998;Manfred Kamp;Managing a Multi-File, Multi-Language Software Repository for Program Comprehension Tools 3/4 A Generic Approach.;http://dx.doi.org/10.1109/WPC.1998.693287;64-71;8;Integration Frameworks;
1998;Arun Lakhotia;DIME: A Direct Manipulation Environment for Evolutionary Development of Software.;http://dx.doi.org/10.1109/WPC.1998.693289;72-79;8;Integration Frameworks;
1998;Francoise Detienne,Jean-Marie Burkhardt,Susan Wiedenbeck;The Effect of Object-Oriented Programming Expertise in Several Dimensions of Comprehension Strategies.;http://dx.doi.org/10.1109/WPC.1998.693294;82-89;8;Comprehension Strategies;
1998;Arie van Deursen,Tobias Kuipers;Rapid System Understanding: Two COBOL Case Studies.;http://dx.doi.org/10.1109/WPC.1998.693319;90-97;8;Comprehension Strategies;
1998;Katalin Erdos,Harry M. Sneed;Partial Comprehension of Complex Programs (enough to perform maintenance).;http://dx.doi.org/10.1109/WPC.1998.693322;98-105;8;Comprehension Strategies;
1998;Mark van den Brand,M. P. A. Sellink,Chris Verhoef;Current Parsing Techniques in Software Renovation Considered Harmful.;http://dx.doi.org/10.1109/WPC.1998.693325;108-117;10;Parsing;
1998;Stephane Soteg Some,Timothy C. Lethbridge;Parsing Minimization when Extracting Information from Code in the Presence of Conditional Compilation.;http://dx.doi.org/10.1109/WPC.1998.693328;118-125;8;Parsing;
1998;Cristina Garcia Cifuentes,Shane Sendall;Specifying the Semantics of Machine Instructions.;http://dx.doi.org/10.1109/WPC.1998.693332;126-133;8;Parsing;
1998;Gerardo Canfora,Aniello Cimitile,Andrea De Lucia,Giuseppe A. Di Lucca;Decomposing Legacy Programs: A First Step Towards Migrating to Client-Server Platforms.;http://dx.doi.org/10.1109/WPC.1998.693336;136-144;9;Decomposition;
1998;Bogdan Korel,Juergen Rilling;Program Slicing in Understanding of Large Programs.;http://dx.doi.org/10.1109/WPC.1998.693339;145-152;8;Decomposition;
1998;Giuliano Antoniol,Roberto Fiutem,L. Cristoforetti;Design Pattern Recovery in Object-Oriented Software.;http://dx.doi.org/10.1109/WPC.1998.693342;153-160;8;Decomposition;
1998;Anneliese von Mayrhauser,A. Marie Vans;Program Understanding Behavior During Adaptation of Large Scale Software.;http://dx.doi.org/10.1109/WPC.1998.693345;164-172;9;Empirical Studies;
1998;Janice A. Singer,Timothy C. Lethbridge;Studying Work Practices to Assist Tool Design in Software Engineering.;http://dx.doi.org/10.1109/WPC.1998.693348;173-179;7;Empirical Studies;
1998;Susan Elliott Sim,Charles L. A. Clarke,Richard C. Holt;Archetypal Source Code Searches: A Survey of Software Developers and Maintainers.;http://dx.doi.org/10.1109/WPC.1998.693351;180-187;8;Empirical Studies;
1998;Alessio Bechini,Kuo-Chung Tai;Design of a Toolset for Dynamic Analysis of Concurrent Java Program.;http://dx.doi.org/10.1109/WPC.1998.693354;190-197;8;Program Analysis;
1998;David M. Binkley,Bruce Duncan,Brennan Jubb,April Wielgosz;The Feedback Compiler.;http://dx.doi.org/10.1109/WPC.1998.693358;198-205;8;Program Analysis;
1998;Beniamino Di Martino,Antonino Mazzeo,Nicola Mazzocca,Umberto Villano;Automatic Detection of Interaction Patterns for Parallel Program Analysis and Development .;http://dx.doi.org/10.1109/WPC.1998.693361;206-213;8;Program Analysis;
1997;Giuseppe Visaggio;Relationships between Documentation and Maintenance Activities.;http://dx.doi.org/10.1109/WPC.1997.601256;4-16;13;Program Understanding-In-The-Large;
1997;Margaret-Anne D. Storey,F. David Fracchia,Hausi A. Muller;Cognitive Design Elements to Support the Construction of a Mental Model during Software Visualization.;http://dx.doi.org/10.1109/WPC.1997.601257;17-28;12;Program Understanding-In-The-Large;
1997;Jean-Marie Favre;Understanding-In-The-Large.;http://dx.doi.org/10.1109/WPC.1997.601260;29-38;10;Program Understanding-In-The-Large;
1997;Ilene Burnstein,Katherine Roberson;Automated Chunking to Support Program Comprehension.;http://dx.doi.org/10.1109/WPC.1997.601262;40-49;10;Automated Program Understanding;
1997;Dejan Markovic,Jack R. Hagemeister,Cauligi S. Raghavendra,Sanjay Bhansali;Semi-automatic Generation of Parallelizable Patterns from Source Code Examples.;http://dx.doi.org/10.1109/WPC.1997.601263;50-59;10;Automated Program Understanding;
1997;Melody Moore Jackson,Spencer Rugaber;Using Knowledge Representation to Understand Interactive Systems.;http://dx.doi.org/10.1109/WPC.1997.601265;60-67;8;Automated Program Understanding;
1997;Mark Harman,Sebastian Danicic;Amorphous Program Slicing.;http://dx.doi.org/10.1109/WPC.1997.601266;70-79;10;Program Analysis;
1997;Bogdan Korel,Juergen Rilling;Dynamic Program Slicing in Understanding of Program Execution.;http://dx.doi.org/10.1109/WPC.1997.601269;80-89;10;Program Analysis;
1997;Paolo Tonella,Giuliano Antoniol,Roberto Fiutem,Ettore Merlo;Points-to Analysis for Program Understanding.;http://dx.doi.org/10.1109/WPC.1997.601271;90-99;10;Program Analysis;
1997;Richard Clayton,Spencer Rugaber,Lyman Taylor,Linda M. Wills;A Case Study of Domain-based Program Understanding.;http://dx.doi.org/10.1109/WPC.1997.601273;102-110;9;Program Comprehension;
1997;Jelber Sayyad-Shirabad,Timothy C. Lethbridge,Steve Lyon;A Little Knowledge Can Go a Long Way Towards Program Understanding.;http://dx.doi.org/10.1109/WPC.1997.601275;111-117;7;Program Comprehension;
1997;Rene Klosch,Johannes Weidl,Georg Trausmuth,Harald C. Gall;Facilitating Program Comprehension via Generic Components for State Machines.;http://dx.doi.org/10.1109/WPC.1997.601277;118-127;10;Program Comprehension;
1997;Elizabeth Burd,Malcolm Munro;Enriching Program Comprehension for Software Reuse.;http://dx.doi.org/10.1109/WPC.1997.601279;130-137;8;Finding Reusable Assets;
1997;Aniello Cimitile,Andrea De Lucia,Giuseppe A. Di Lucca,Anna Rita Fasolino;Identifying objects in legacy systems.;http://dx.doi.org/10.1109/WPC.1997.601281;138-147;10;Finding Reusable Assets;
1997;Hongji Yang,Paul Luker,William Cheng-Chung Chu;Code Understanding through Program Transformation for Reusable Component Identification.;http://dx.doi.org/10.1109/WPC.1997.601283;148-157;10;Finding Reusable Assets;
1997;Vaclav Rajlich,George S. Cowan;Towards Standard for Experiments in Program Comprehension.;http://dx.doi.org/10.1109/WPC.1997.601284;160-161;2;Panel Infrastructure for Software Comprehension and Reengineering;
1997;Spencer Rugaber,Linda M. Wills;Position Paper on Research Infrastructure for Reengineering.;http://dx.doi.org/10.1109/WPC.1997.601286;162-164;3;Panel Infrastructure for Software Comprehension and Reengineering;
1997;Steve Lang,Anneliese von Mayrhauser;Building a Research Infrastructure for Program Comprehension Observations.;http://dx.doi.org/10.1109/WPC.1997.601287;165-169;5;Panel Infrastructure for Software Comprehension and Reengineering;
1997;Scott R. Tilley,Dennis B. Smith;On Using the Web as Infrastructure for Reengineering.;http://dx.doi.org/10.1109/WPC.1997.601289;170-173;4;Panel Infrastructure for Software Comprehension and Reengineering;
1997;Anthony Berglas,John V. Harrison;Evaluation of the ITOC information system design recovery tool.;http://dx.doi.org/10.1109/WPC.1997.601290;176-182;7;Tools;
1997;Mei C. Chuah,Stephen G. Eick;Glyphs for Software Visualization.;http://dx.doi.org/10.1109/WPC.1997.601291;183-191;9;Tools;
1997;Pui-Shan Chan,Malcolm Munro;PUI: A Tool to Support Program Understanding.;http://dx.doi.org/10.1109/WPC.1997.601293;192-198;7;Tools;
1996;Stephen G. Eick,Amy Wards;An Interactive Visualization for Message Sequence Charts.;http://dx.doi.org/10.1109/WPC.1996.501115;2-7;6;Program Comprehension;
1996;Andrea De Lucia,Anna Rita Fasolino,Malcolm Munro;Understanding Function Behaviors through Program Slicing.;http://dx.doi.org/10.1109/WPC.1996.501116;9-10;2;Program Comprehension;
1996;Scott R. Tilley,Dennis B. Smith,Santanu Paul;Towards a Framework for Program Understanding.;http://dx.doi.org/10.1109/WPC.1996.501117;19-;1;Program Comprehension;
1996;Gerardo Canfora,L. Mancini,Maria Tortorella;A Workbench for Program Comprehension during Software Maintenance.;http://dx.doi.org/10.1109/WPC.1996.501118;30-39;10;Tools and Environments;
1996;Kevin J. Sullivan;Rapid Development of Simple, Custom Program Analysis Tools.;http://dx.doi.org/10.1109/WPC.1996.501119;40-44;5;Tools and Environments;
1996;T. C. Nicholas Graham;A Method for The Formal Testing of Program Visualization Tools.;http://dx.doi.org/10.1109/WPC.1996.501120;45-54;10;Tools and Environments;
1996;Alex Quilici,Steven G. Woods;Toward a Constraint-Satisfaction Framework for Evaluating Program-Understanding Algorithms.;http://dx.doi.org/10.1109/WPC.1996.501121;55-;1;Tools and Environments;
1996;Anneliese von Mayrhauser,A. Marie Vans;On the Role of Hypotheses during Opportunistic Understanding While Porting Large Scale Code.;http://dx.doi.org/10.1109/WPC.1996.501122;68-77;10;Comprehension Experiments and Estimation;
1996;Piernicola Fiore,Filippo Lanubile,Giuseppe Visaggio;Effort Estimation for Program Comprehension.;http://dx.doi.org/10.1109/WPC.1996.501123;78-;1;Comprehension Experiments and Estimation;
1996;Kenny Wong;On Inserting Program Understanding Technology into the Software Change Process.;http://dx.doi.org/10.1109/WPC.1996.501124;90-99;10;Software Evolution;
1996;Cornelia Boldyreff,Elizabeth Burd,R. M. Hather,Malcolm Munro,E. J. Younger;Greater Understanding Through Maintainer Driven Traceability.;http://dx.doi.org/10.1109/WPC.1996.501125;100-;1;Software Evolution;
1996;Harry M. Sneed,Katalin Erdos;Extracting Business Rules from Source Code .;http://dx.doi.org/10.1109/WPC.1996.501138;240-;1;Software Evolution;
1996;Tim Bull;Comprehension of Safety-Critical Systems Using Domain-Specific Languages.;http://dx.doi.org/10.1109/WPC.1996.501126;108-122;15;Domain-Specific Program Comprehension;
1996;Wayne Citrin,Carlos Santiago,Benjamin G. Zorn;Scalable Interfaces to Support Program Comprehension.;http://dx.doi.org/10.1109/WPC.1996.501127;123-132;10;Domain-Specific Program Comprehension;
1996;Sandrine Blazy,Philippe Facon;Interprocedural analysis for program comprehension by specialization.;http://dx.doi.org/10.1109/WPC.1996.501128;133-;1;Domain-Specific Program Comprehension;
1996;William G. Griswold,Darren C. Atkinson,Collin McCurdy;Fast, Flexible Syntactic Pattern Matching and Processing.;http://dx.doi.org/10.1109/WPC.1996.501129;144-153;10;Pattern Matching Algorithms;
1996;Paulo S. C. Alencar,Donald D. Cowan,Thomas Kunz,Carlos Jose Pereira de Lucena;A Formal Architectural Design Patterns-Based Approach to Software Understanding.;http://dx.doi.org/10.1109/WPC.1996.501130;154-163;10;Pattern Matching Algorithms;
1996;Beniamino Di Martino,Giulio Iannello;PAP Recognizer: A Tool for Automatic Recognition of Parallelizable Patterns.;http://dx.doi.org/10.1109/WPC.1996.501131;164-;1;Pattern Matching Algorithms;
1996;Kurt C. Wallnau,Paul C. Clements,Edwin J. Morris,Robert Krut;The Gadfly: An Approach to Architectural-Level System Comprehension.;http://dx.doi.org/10.1109/WPC.1996.501132;178-186;9;Software Architecture Comprehension;
1996;Roberto Fiutem,Ettore Merlo,Giuliano Antoniol,Paolo Tonella;Understanding the architecture of software systems.;http://dx.doi.org/10.1109/WPC.1996.501133;187-;1;Software Architecture Comprehension;
1996;Thomas Kunz;Evaluating process clusters to support automatic program understanding.;http://dx.doi.org/10.1109/WPC.1996.501134;198-207;10;Hierarchical Program Comprehension;
1996;Rene Klosch,Roland T. Mittermeir;Improving Program Understanding by Unfolding Layers of Interacting Patterns.;http://dx.doi.org/10.1109/WPC.1996.501135;208-217;10;Hierarchical Program Comprehension;
1996;Michael Doorley,Anthony Cahill;Experiences in Automatic Leveling of Data Flow Diagrams.;http://dx.doi.org/10.1109/WPC.1996.501136;218-229;12;Hierarchical Program Comprehension;
1996;Paul A. Bailes,Paul Burnim,Murray Chapman,Dan B. Johnston;Derivation and Presentation of an Abstract Program Space for Ada.;http://dx.doi.org/10.1109/WPC.1996.501137;230-;1;Hierarchical Program Comprehension;
