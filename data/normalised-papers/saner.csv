2016;Hui Liu,Yuting Wu,Wenmei Liu,Qiurong Liu,Chao Li;Domino Effect: Move More Methods Once a Method is Moved.;1-12;12;SANER;
2016;Xiao Cheng,Yuting Chen,Zhenjiang Hu,Tao Zan,Mengyu Liu,Hao Zhong,Jianjun Zhao;Supporting Selective Undo for Refactoring.;13-23;11;SANER;
2016;Rodrigo Morales,Aminata Sabane,Pooya Musavi,Foutse Khomh,Francisco Chicano,Giuliano Antoniol;Finding the Best Compromise Between Design Quality and Testing Effort During Refactoring.;24-35;12;SANER;
2016;Bilal Karasneh,Michel R. V. Chaudron,Foutse Khomh,Yann-Gael Gueheneuc;Studying the Relation between Anti-Patterns in Design Models and in Source Code.;36-45;10;SANER;
2016;Henrique Rocha,Marco Tulio de Oliveira Valente,Humberto Marques-Neto,Gail C. Murphy;An Empirical Study on Recommendations of Similar Bugs.;46-56;11;SANER;
2016;Yikun Hu,Yuanyuan Zhang,Juanru Li,Dawu Gu;Cross-Architecture Binary Semantics Understanding via Similar Code Comparison.;57-67;11;SANER;
2016;Judith F. Islam,Manishankar Mondal,Chanchal Kumar Roy;Bug Replication in Code Clones: An Empirical Study.;68-78;11;SANER;
2016;Stefan Wagner 0001,Asim Abdulkhaleq,Kamer Kaya,Alexander Paar;On the Relationship of Inconsistent Software Clones and Faults: An Empirical Study.;79-89;11;SANER;
2016;Deheng Ye,Zhenchang Xing,Chee Yong Foo,Zi Qun Ang,Jing Li,Nachiket Kapre;Software-Specific Named Entity Recognition in Software Engineering Social Content.;90-101;12;SANER;
2016;Ayushi Rastogi,Nachiappan Nagappan;Forking and the Sustainability of the Developer Community Participation - An Empirical Investigation on Outcomes and Reasons.;102-111;10;SANER;
2016;Gustavo Pinto,Igor Steinmacher,Marco Aurelio Gerosa;More Common Than You Think: An In-depth Study of Casual Contributors.;112-123;12;SANER;
2016;Sven Amann,Sebastian Proksch,Sarah Nadi,Mira Mezini;A Study of Visual Studio Usage in Practice.;124-134;11;SANER;
2016;Sohon Roy,Felienne Hermans,Efthimia Aivaloglou,Jos Winter,Arie van Deursen;Evaluating Automatic Spreadsheet Metadata Extraction on a Large Set of Responses from MOOC Participants.;135-145;11;SANER;
2016;Bing Liu,Lucia,Shiva Nejati,Lionel C. Briand,Thomas Bruckmann;Localizing Multiple Faults in Simulink Models.;146-156;11;SANER;
2016;He Jiang,Jingxuan Zhang,Xiaochen Li,Zhilei Ren,David Lo;A More Accurate Model for Finding Tutorial Segments Explaining APIs.;157-167;11;SANER;
2016;Davood Mazinanian,Nikolaos Tsantalis;An Empirical Study on the Use of CSS Preprocessors.;168-178;11;SANER;
2016;Sultan Wehaibi,Emad Shihab,Latifa Guerrouj;Examining the Impact of Self-Admitted Technical Debt on Software Quality.;179-188;10;SANER;
2016;Parastou Tourani,Bram Adams;The Impact of Human Discussions on Just-in-Time Quality Assurance: An Empirical Study on OpenStack and Eclipse.;189-200;12;SANER;
2016;Thomas Rolfsnes,Stefano Di Alesio,Razieh Behjati,Leon Moonen,Dave W. Binkley;Generalizing the Analysis of Evolutionary Coupling for Software Change Impact Analysis.;201-212;12;SANER;
2016;Xuan-Bach D. Le,David Lo,Claire Le Goues;History Driven Program Repair.;213-224;12;SANER;
2016;David Tengeri,Ferenc Horvath,Arpad Beszedes,Tamas Gergely,Tibor Gyimothy;Negative Effects of Bytecode Instrumentation on Java Source Code Coverage.;225-235;11;SANER;
2016;Shuai Wang,Pei Wang,Dinghao Wu;UROBOROS: Instrumenting Stripped Binaries with Static Reassembling.;236-247;12;SANER;
2016;Kevin Leach,Chad Spensky,Westley Weimer,Fengwei Zhang;Towards Transparent Introspection.;248-259;12;SANER;
2016;Laurent Christophe,Elisa Gonzalez Boix,Wolfgang De Meuter,Coen De Roover;Linvail: A General-Purpose Platform for Shadow Execution of JavaScript.;260-270;11;SANER;
2016;David Wille,Sandro Schulze,Christoph Seidl,Ina Schaefer;Custom-Tailored Variability Mining for Block-Based Languages.;271-282;12;SANER;
2016;Boris Spasojevic,Mircea Lungu,Oscar Nierstrasz;A Case Study on Type Hints in Method Argument Names in Pharo Smalltalk Projects.;283-292;10;SANER;
2016;Tobias Weck,Matthias Tichy;Visualizing Data-Flows in Functional Programs.;293-303;11;SANER;
2016;Haidar Osman,Manuel Leuenberger,Mircea Lungu,Oscar Nierstrasz;Tracking Null Checks in Open-Source Java Systems.;304-313;10;SANER;
2016;Annibale Panichella,Bogdan Dit,Rocco Oliveto,Massimiliano Di Penta,Denys Poshyvanyk,Andrea De Lucia;Parameterizing and Assembling IR-Based Solutions for SE Tasks Using Genetic Algorithms.;314-325;12;SANER;
2016;Suhas Kabinna,Weiyi Shang,Cor-Paul Bezemer,Ahmed E. Hassan;Examining the Stability of Logging Statements.;326-337;12;SANER;
2016;Chunyang Chen,Sa Gao,Zhenchang Xing;Mining Analogical Libraries in Q&A Discussions - Incorporating Relational and Categorical Knowledge into Word Embedding.;338-348;11;SANER;
2016;Mohammad Masudur Rahman 0001,Chanchal Kumar Roy,David Lo;RACK: Automatic API Recommendation Using Crowdsourced Knowledge.;349-359;11;SANER;
2016;Gleison Brito,Andre C. Hora,Marco Tulio de Oliveira Valente,Romain Robbes;Do Developers Deprecate APIs with Replacement Messages? A Large-Scale Analysis on Java Systems.;360-369;10;SANER;
2016;Zhou Xu,Jifeng Xuan,Jin Liu,Xiaohui Cui;MICHAC: Defect Prediction via Feature Selection Based on Maximal Information Coefficient with Hierarchical Agglomerative Clustering.;370-381;12;SANER;
2016;Ons Mlouki,Foutse Khomh,Giuliano Antoniol;On the Detection of Licenses Violations in the Android Ecosystem.;382-392;11;SANER;
2016;Zephyrin Soh,Aiko Fallas Yamashita,Foutse Khomh,Yann-Gael Gueheneuc;Do Code Smells Impact the Effort of Different Maintenance Programming Activities?;393-402;10;SANER;
2016;Li Li 0029,Tegawende F. Bissyande,Jacques Klein,Yves Le Traon;An Investigation into the Use of Common Libraries in Android Apps.;403-414;12;SANER;
2016;Le Yu,Xiapu Luo,Chenxiong Qian,Shuai Wang;Revisiting the Description-to-Behavior Fidelity in Android Applications.;415-426;12;SANER;
2016;Md Yasser Karim,Huzefa H. Kagdi,Massimiliano Di Penta;Mining Android Apps to Recommend Permissions.;427-437;11;SANER;
2016;Ruben Saborido,Giovanni Beltrame,Foutse Khomh,Enrique Alba Torres,Giuliano Antoniol;Optimizing User Experience in Choosing Android Applications.;438-448;11;SANER;
2016;Jiabin Ye,Cheng Zhang,Lei Ma,Haibo Yu,Jianjun Zhao;Efficient and Precise Dynamic Slicing for Client-Side JavaScript Programs.;449-459;11;SANER;
2016;Andreas Grimmer,Florian Angerer,Herbert Prahofer,Paul Grunbacher;Supporting Program Analysis for Non-Mainstream Languages: Experiences and Lessons Learned.;460-469;10;SANER;
2016;Moritz Beller,Radjino Bholanath,Shane McIntosh,Andy Zaidman;Analyzing the State of Static Analysis: A Large-Scale Evaluation in Open Source Software.;470-481;12;SANER;
2016;Andrea Caracciolo,Bledar Aga,Mircea Lungu,Oscar Nierstrasz;Marea: A Semi-Automatic Decision Support System for Breaking Dependency Cycles.;482-492;11;SANER;
2016;Alexandre Decan,Tom Mens,Maelick Claes,Philippe Grosjean;When GitHub Meets CRAN: An Analysis of Inter-Repository Package Dependency Problems.;493-504;12;SANER;
2016;Lorena Arcega,Jaime Font,Oystein Haugen,Carlos Cetina;Achieving Knowledge Evolution in Dynamic Software Product Lines.;505-516;12;SANER;
2016;Luis Gabriel Lima,Francisco Soares-Neto,Paulo Lieuthier,Fernando Castor Filho,Gilberto Melfe,Joao Paulo Fernandes;Haskell in Green Land: Analyzing the Energy Behavior of a Purely Functional Language.;517-528;12;SANER;
2016;Shaiful Alam Chowdhury,Varun Sapra,Abram Hindle;Client-Side Energy Efficiency of HTTP/2 for Web and Mobile App Developers.;529-540;12;SANER;
2016;Christian Macho,Shane McIntosh,Martin Pinzger;Predicting Build Co-changes with Source Code Change and Commit Categories.;541-551;11;SANER;
2016;Maleknaz Nayebi,Bram Adams,Guenther Ruhe;Release Practices for Mobile Apps - What do Users and Developers Think?;552-562;11;SANER;
2016;Pavneet Singh Kochhar,Dinusha Wijedasa,David Lo;A Large Scale Study of Multiple Programming Languages and Code Quality.;563-573;11;SANER;
2016;Noureddine Kerzazi,Bram Adams;Botched Releases: Do We Need to Roll Back? Empirical Study on a Commercial Web App.;574-583;10;SANER;
2016;Li Li 0029,Tegawende F. Bissyande,Jacques Klein,Yves Le Traon;Parameter Values of Android APIs: A Preliminary Study on 100, 000 Apps.;584-588;5;SANER;
2016;Wellington Oliveira,Weslley Torres,Fernando Castor Filho,Bianca H. Ximenes;Native or Web? A Preliminary Study on the Energy Consumption of Android Development Models.;589-593;5;SANER;
2016;Yusuke Takahashi,Naoya Nitta;Composite Refactoring for Decoupling Multiple Classes.;594-598;5;SANER;
2016;Istvan Kadar,Peter Hegedus,Rudolf Ferenc,Tibor Gyimothy;A Code Refactoring Dataset and Its Assessment Regarding Software Maintainability.;599-603;5;SANER;
2016;Hayley Borck,Mark S. Boddy,Ian J. De Silva,Steven A. Harp,Ken Hoyme,Steven Johnston,August Schwerdfeger,Mary Southern;Frankencode: Creating Diverse Programs Using Code Clones.;604-608;5;SANER;
2016;Francesca Arcelli Fontana,Jens Dietrich,Bartosz Walter,Aiko Fallas Yamashita,Marco Zanoni;Antipattern and Code Smell False Positives: Preliminary Conceptualization and Classification.;609-613;5;SANER;
2016;Tamara Mendes,Marco Tulio de Oliveira Valente,Andre C. Hora,Alexander Serebrenik;Identifying Utility Functions Using Random Forests.;614-618;5;SANER;
2016;Stevche Radevski,Hideaki Hata,Ken-ichi Matsumoto;Towards Building API Usage Example Metrics.;619-623;5;SANER;
2016;Juriaan Kennedy van Dam,Vadim Zaytsev;Software Language Identification with Natural Language Classifiers.;624-628;5;SANER;
2016;Jan-Peter Ostberg,Stefan Wagner 0001;At Ease with Your Warnings: The Principles of the Salutogenesis Model Applied to Automatic Static Analysis.;629-633;5;SANER;
2016;Marcel Reboucas,Gustavo Pinto,Felipe Ebert,Weslley Torres,Alexander Serebrenik,Fernando Castor Filho;An Empirical Study on the Usage of the Swift Programming Language.;634-638;5;SANER;
2016;Yudi Zheng,Andrea Rosa,Luca Salucci,Yao Li,Haiyang Sun,Omar Javed,Lubomir Bulej,Yiyu Chen,Zhengwei Qi,Walter Binder;AutoBench: Finding Workloads That You Need Using Pluggable Hybrid Analyses.;639-643;5;SANER;
2016;Kanako Kina,Masateru Tsunoda,Hideaki Hata,Haruaki Tamada,Hiroshi Igaki;Analyzing the Decision Criteria of Software Developers Based on Prospect Theory.;644-648;5;SANER;
2016;Mathieu Nayrolles,Abdelwahab Hamou-Lhadj;BUMPER: A Tool for Coping with Natural Language Searches of Millions of Bugs and Fixes.;649-652;4;SANER;
2016;Robin David,Sebastien Bardin,Thanh Dinh Ta,Laurent Mounier,Josselin Feist,Marie-Laure Potet,Jean-Yves Marion;BINSEC/SE: A Dynamic Symbolic Execution Toolkit for Binary-Level Analysis.;653-656;4;SANER;
2016;Andreas Sailer,Michael Deubzer,Gerald Luttgen,Jurgen Mottok;CoreTAna: A Trace Analyzer for Reverse Engineering Real-Time Software.;657-660;4;SANER;
2016;Yuichi Nishimura,Katsuhisa Maruyama;Supporting Merge Conflict Resolution by Using Fine-Grained Code Change History.;661-664;4;SANER;
2016;Angela Lozano,Carlos Noguera,Viviane Jonckers;Managing Traceability Links with MaTraca.;665-668;4;SANER;
2016;Tim Molderez,Coen De Roover;Automated Generalization and Refinement of Code Templates with Ekeko/X.;669-672;4;SANER;
2016;Alaaeddin Swidan,Felienne Hermans,Ruben Koesoemowidjojo;Improving the Performance of a Large Scale Spreadsheet: A Case Study.;673-677;5;SANER;
2016;Timothy C. Fanelli,Scott C. Simons,Sean Banerjee;A Systematic Framework for Modernizing Legacy Application Systems.;678-682;5;SANER;
2016;Gunter Fleck,Wilhelm Kirchmayr,Michael Moser,Ludwig Nocke,Josef Pichler,Rudolf Tober,Michael Witlatschil;Experience Report on Building ASTM Based Tools for Multi-language Reverse Engineering.;683-687;5;SANER;
2016;Harald Altinger,Yanja Dajsuren,Sebastian Siegl,Jurgen J. Vinju,Franz Wotawa;On Error-Class Distribution in Automotive Model-Based Software.;688-692;5;SANER;
2016;Gabor Szoke,Csaba Nagy,Rudolf Ferenc,Tibor Gyimothy;Designing and Developing Automated Refactoring Transformations: An Experience Report.;693-697;5;SANER;
2015;Jiajun Hu,Xiaobing Sun,David Lo,Bin Li;Modeling the evolution of development topics using Dynamic Topic Models.;3-12;10;Information Retrieval;
2015;Shihai Jiang,Liwei Shen,Xin Peng,Zhaojin Lv,Wenyun Zhao;Understanding developers' natural language queries with interactive clarification.;13-22;10;Information Retrieval;
2015;Mohamed Aymen Saied,Omar Benomar,Hani Abdeen,Houari A. Sahraoui;Mining Multi-level API Usage Patterns.;23-32;10;APIs and Patterns;
2015;Mohamed Aymen Saied,Houari A. Sahraoui,Bruno Dufour;An observational study on API usage constraints and their documentation.;33-42;10;APIs and Patterns;
2015;Nicolas Palix,Jean-Remy Falleri,Julia L. Lawall;Improving pattern tracking with a language-aware tree differencing algorithm.;43-52;10;APIs and Patterns;
2015;Shouzheng Yang,Ayesha Manzer,Vassilios Tzerpos;Measuring the quality of design pattern detection results.;53-62;10;APIs and Patterns;
2015;Laleh Mousavi Eshkevari,Fabien Dos Santos,James R. Cordy,Giuliano Antoniol;Are PHP applications ready for Hack?;63-72;10;Analysis of Programming Languages;
2015;Leonardo Humberto Silva,Miguel Ramos,Marco Tulio de Oliveira Valente,Alexandre Bergel,Nicolas Anquetil;Does JavaScript software embrace classes?;73-82;10;Analysis of Programming Languages;
2015;Kazuo Kobori,Makoto Matsushita,Katsuro Inoue;Evolution analysis for Accessibility Excessiveness in Java.;83-90;8;Analysis of Programming Languages;
2015;Gergely Ladanyi,Zoltan Toth,Rudolf Ferenc,Tibor Keresztesi;A software quality model for RPG.;91-100;10;Analysis of Programming Languages;
2015;Mathieu Nayrolles,Abdelwahab Hamou-Lhadj,Sofiene Tahar,Alf Larsson;JCHARMING: A bug reproduction approach using crash traces and directed model checking.;101-110;10;On Crashes and Traces;
2015;Luay Alawneh,Abdelwahab Hamou-Lhadj,Jameleddine Hassine;Towards a common metamodel for traces of high performance computing systems to enable software analysis tasks.;111-120;10;On Crashes and Traces;
2015;Tobias Roehm,Stefan Nosovic,Bernd Brugge;Automated extraction of failure reproduction steps from user interaction traces.;121-130;10;On Crashes and Traces;
2015;Tommaso Dal Sasso,Andrea Mocci,Michele Lanza;Misery loves company: CrowdStacking traces to aid problem detection.;131-140;10;On Crashes and Traces;
2015;Patanamon Thongtanunam,Chakkrit Tantithamthavorn,Raula Gaikovina Kula,Norihiro Yoshida,Hajimu Iida,Ken-ichi Matsumoto;Who should review my code? A file location-based code-reviewer recommendation approach for Modern Code Review.;141-150;10;Code Reviews;
2015;Yuriy Tymchuk,Andrea Mocci,Michele Lanza;Code review: Veni, ViDI, vici.;151-160;10;Code Reviews;
2015;Sebastiano Panichella,Venera Arnaoudova,Massimiliano Di Penta,Giuliano Antoniol;Would static analysis tools help developers with code reviews?;161-170;10;Code Reviews;
2015;Rodrigo Morales,Shane McIntosh,Foutse Khomh;Do code review practices impact design quality? A case study of the Qt, VTK, and ITK projects.;171-180;10;Code Reviews;
2015;Kostadin Damevski,David C. Shepherd,Lori L. Pollock;Scaling up evaluation of code search tools through developer usage metrics.;181-190;10;Searching and Cloning;
2015;Xiaoli Lian,Li Zhang;Optimized feature selection towards functional and non-functional requirements in Software Product Lines.;191-200;10;Searching and Cloning;
2015;Iman Keivanloo,Feng Zhang 0001,Ying Zou;Threshold-free code clone detection for a large-scale heterogeneous Java repository.;201-210;10;Searching and Cloning;
2015;Karan Aggarwal,Tanner Rutgers,Finbarr Timbers,Abram Hindle,Russell Greiner,Eleni Stroulia;Detecting duplicate bug reports with software engineering domain knowledge.;211-220;10;Searching and Cloning;
2015;Marwan Abi-Antoun,Yibin Wang,Ebrahim Khalaj,Andrew Giang,Vaclav Rajlich;Impact analysis based on a global hierarchical Object Graph.;221-230;10;Change Impact Analysis;
2015;Haipeng Cai,Raul A. Santelices;A framework for cost-effective dependence-based dynamic impact analysis.;231-240;10;Change Impact Analysis;
2015;Tosin Daniel Oyetoyan,Jean-Remy Falleri,Jens Dietrich,Kamil Jezek;Circular dependencies and change-proneness: An empirical study.;241-250;10;Change Impact Analysis;
2015;Heider Sanchez,Romain Robbes,Victor M. Gonzalez;An empirical study of work fragmentation in software evolution tasks.;251-260;10;Change Impact Analysis;
2015;Jing Qiu,Xiaohong Su,Peijun Ma;Library functions identification in binary code by using graph isomorphism testings.;261-270;10;SCAM at SANER;
2015;Sven Mattsen,Arne Wichmann 0001,Sibylle Schupp;A non-convex abstract domain for the value analysis of binaries.;271-280;10;SCAM at SANER;
2015;Raveendra Kumar Medicherla,Raghavan Komondoor;Precision vs. scalability: Context sensitive analysis with prefix approximation.;281-290;10;SCAM at SANER;
2015;Vineet Singh,Rajiv Gupta,Iulian Neamtiu;MG++: Memory graphs for analyzing dynamic data structures.;291-300;10;SCAM at SANER;
2015;Martin Brandtner,Sebastian Muller,Philipp Leitner,Harald C. Gall;SQA-Profiles: Rule-based activity profiles for Continuous Integration environments.;301-310;10;Mining Software Repositories;
2015;Xin Xia,David Lo,Shane McIntosh,Emad Shihab,Ahmed E. Hassan;Cross-project build co-change prediction.;311-320;10;Mining Software Repositories;
2015;Latifa Guerrouj,Shams Azad,Peter C. Rigby;The influence of App churn on App success and StackOverflow discussions.;321-330;10;Mining Software Repositories;
2015;Tien-Duy B. Le,David Lo;Beyond support and confidence: Exploring interestingness measures for rule-based specification mining.;331-340;10;Mining Software Repositories;
2015;Martin Dias,Alberto Bacchelli,Georgios Gousios,Damien Cassou,Stephane Ducasse;Untangling fine-grained code changes.;341-350;10;On Code Changes;
2015;Masatomo Hashimoto,Akira Mori,Tomonori Izumida;A comprehensive and scalable method for analyzing fine-grained source code change patterns.;351-360;10;On Code Changes;
2015;Qingtao Jiang,Xin Peng,Hai Wang,Zhenchang Xing,Wenyun Zhao;Summarizing Evolutionary Trajectory by Grouping and Aggregating relevant code changes.;361-370;10;On Code Changes;
2015;Hayatou Oumarou,Nicolas Anquetil,Anne Etien,Stephane Ducasse,Dina Taiwe Kolyang;Identifying the exact fixing actions of static rule violation.;371-379;9;On Code Changes;
2015;Edmund Wong,Taiyue Liu,Lin Tan;CloCom: Mining existing source code for automatic comment generation.;380-389;10;The Human Within;
2015;Hongwei Li,Xuejiao Zhao,Zhenchang Xing,Lingfeng Bao,Xin Peng,Dongjing Gao,Wenyun Zhao;amAssist: In-IDE ambient search of online programming resources.;390-398;9;The Human Within;
2015;Lingfeng Bao,Jing Li,Zhenchang Xing,Xinyu Wang,Bo Zhou;Reverse engineering time-series interaction data from screen-captured videos.;399-408;10;The Human Within;
2015;Jose Ricardo da Silva Jr.,Esteban Clua,Leonardo Murta,Anita Sarma;Niche vs. breadth: Calculating expertise over time through a fine-grained analysis.;409-418;10;The Human Within;
2015;Boze Zekan,Mark Shtern,Vassilios Tzerpos;Protecting web applications via Unicode extension.;419-428;10;Search, Touch, Tweet;
2015;Amir Saeidi,Jurriaan Hage,Ravi Khadka,Slinger Jansen;A search-based approach to multi-view clustering of software systems.;429-438;10;Search, Touch, Tweet;
2015;Remo Lemma,Michele Lanza,Andrea Mocci;CEL: Touching software modeling in essence.;439-448;10;Search, Touch, Tweet;
2015;Abhishek Sharma,Yuan Tian,David Lo;NIRMAL: Automatic identification of software relevant tweets leveraging language model.;449-458;10;Search, Touch, Tweet;
2015;Sreeja Nair,Raoul Jetley,Anil R. Nair,Stefan Hauck-Stattelmann;A static code analysis tool for control system software.;459-463;5;Tool Demonstrations;
2015;Michael Moser,Josef Pichler,Gunther Fleck,Michael Witlatschil;RbG: A documentation generator for scientific and engineering software.;464-468;5;Tool Demonstrations;
2015;Shinpei Hayashi,Daiki Hoshino,Jumpei Matsuda,Motoshi Saeki,Takayuki Omori,Katsuhisa Maruyama;Historef: A tool for edit history refactoring.;469-473;5;Tool Demonstrations;
2015;Hiroaki Murakami,Yoshiki Higo,Shinji Kusumoto;ClonePacker: A tool for clone set visualization.;474-478;5;Tool Demonstrations;
2015;Javier Luis Canovas Izquierdo,Valerio Cosentino,Belen Rolandi,Alexandre Bergel,Jordi Cabot;GiLA: GitHub label analyzer.;479-483;5;Tool Demonstrations;
2015;Manishankar Mondal,Chanchal Kumar Roy,Kevin A. Schneider;SPCP-Miner: A tool for mining code clones that are important for refactoring or tracking.;484-488;5;Tool Demonstrations;
2015;Haipeng Cai,Raul A. Santelices;TRACERJD: Generic trace-based dynamic dependence analysis with fine-grained logging.;489-493;5;Tool Demonstrations;
2015;Miguel Garzon,Hamoud I. Aljamaan,Timothy C. Lethbridge;Umple: A framework for Model Driven Development of Object-Oriented Systems.;494-498;5;Tool Demonstrations;
2015;Valerio Cosentino,Javier Luis Canovas Izquierdo,Jordi Cabot;Assessing the bus factor of Git repositories.;499-503;5;Tool Demonstrations;
2015;Erik Ammerlaan,Wim Veninga,Andy Zaidman;Old habits die hard: Why refactoring for understandability does not give immediate benefits.;504-507;4;Industrial Research;
2015;Ian J. Davis,Mike Wexler,Cheng Zhang,Richard C. Holt,Theresa Weber;Bash2py: A bash to Python translator.;508-511;4;Industrial Research;
2015;Tukaram Muske,Prasad Bokil;On implementational variations in static analysis tools.;512-515;4;Industrial Research;
2015;Mircea Cadariu,Eric Bouwers,Joost Visser,Arie van Deursen;Tracking known security vulnerabilities in proprietary software systems.;516-519;4;Industrial Research;
2015;Raula Gaikovina Kula,Daniel M. German,Takashi Ishio,Katsuro Inoue;Trusting a library: A study of the latency to adopt the latest Maven release.;520-524;5;Evolution and Reuse;
2015;Mark Hills 0001;Evolution of dynamic feature usage in PHP.;525-529;5;Evolution and Reuse;
2015;Sascha Lity,Hauke Baller,Ina Schaefer;Towards incremental model slicing for delta-oriented software product lines.;530-534;5;Evolution and Reuse;
2015;Cor-Paul Bezemer,Johan Pouwelse,Brendan Gregg;Understanding software performance regressions using differential flame graphs.;535-539;5;Evolution and Reuse;
2015;Mohammad Masudur Rahman 0001,Chanchal Kumar Roy;TextRank based search term identification for software change tasks.;540-544;5;Text and Labeling;
2015;Meili Lu,Xiaobing Sun,Shaowei Wang,David Lo,Yucong Duan;Query expansion via WordNet for effective code search.;545-549;5;Text and Labeling;
2015;Jordi Cabot,Javier Luis Canovas Izquierdo,Valerio Cosentino,Belen Rolandi;Exploring the use of labels to categorize issues in Open-Source Software projects.;550-554;5;Text and Labeling;
2015;Jiajun Hu,Xiaobing Sun,Bin Li;Explore the evolution of development topics via on-line LDA.;555-559;5;Text and Labeling;
2015;Pavneet Singh Kochhar,Ferdian Thung,David Lo;Code coverage and test suite effectiveness: Empirical study with real bugs in large systems.;560-564;5;Bugs and Violations;
2015;Sebastian Herold,Michael English,Jim Buckley,Steve Counsell,Mel O Cinneide;Detection of violation causes in reflexion models.;565-569;5;Bugs and Violations;
2015;Yuan Tian,David Lo;A comparative study on the effectiveness of part-of-speech tagging techniques on bug reports.;570-574;5;Bugs and Violations;
2015;Alejandro Infante,Alexandre Bergel;Efficiently identifying object production sites.;575-579;5;Static and Dynamic Analysis;
2015;Csaba Nagy,Loup Meurice,Anthony Cleve;Where was this SQL query executed? a static concept location approach.;580-584;5;Static and Dynamic Analysis;
2015;Marc-Andre Laverdiere,Bernhard J. Berger,Ettore Merlo;Taint analysis of manual service compositions using Cross-Application Call Graphs.;585-589;5;Static and Dynamic Analysis;
2015;James R. Cordy;TXL source transformation in practice.;590-591;2;Tutorials and Briefings;
2015;Jens Knodel,Matthias Naab,Eric Bouwers,Joost Visser;Software risk management in practice: Shed light on your software product.;592-594;3;Tutorials and Briefings;
2015;Mehdi Mirakhorli;Software architecture reconstruction: Why? What? How?;595;1;Tutorials and Briefings;
2015;Timm Felden;SKilLed communication for toolchains.;596;1;Doctoral Symposium;
2015;Martin Lorenz;The impact of column-orientation on the quality of class inheritance mapping specifications.;597;1;Doctoral Symposium;
2015;Yujuan Jiang;Improving the integration process of large software systems.;598;1;Doctoral Symposium;
2015;Ildiko Pete,Dharini Balasubramaniam;Handling the differential evolution of software artefacts: A framework for consistency management.;599-600;2;Doctoral Symposium;
2015;Douglas Martin;Towards a framework for analysis, transformation, and manipulation of Makefiles.;601-602;2;Doctoral Symposium;
2015;Rodrigo Morales;Towards a framework for automatic correction of anti-patterns.;603-604;2;Doctoral Symposium;
2015;Mostafa Erfani;Towards an ontology-based context-aware meta-model for the software domain.;605-606;2;Doctoral Symposium;
2015;Md Tajmilur Rahman;Investigating modern release engineering practices.;607-608;2;Doctoral Symposium;
2014;Philippe Grosjean;Using biology and ecology as inspiration for software maintenance? (Keynote abstract).;1;1;Keynotes;
2014;Jens Knodel,Matthias Naab;Mitigating the Risk of software change in practice: Retrospective on more than 50 architecture evaluations in industry (Keynote paper).;2-17;16;Keynotes;
2014;Chanchal Kumar Roy,Minhaz Fahim Zibran,Rainer Koschke;The vision of software clone management: Past, present, and future (Keynote paper).;18-33;16;Keynotes;
2014;Emily Hill,Manuel Roldan-Vega,Jerry Alan Fails,Greg Mallet;NL-based query refinement and contextualized code search results: A user study.;34-43;10;Code Search;
2014;Yuan Tian,David Lo,Julia L. Lawall;Automated construction of a software-specific word similarity database.;44-53;10;Code Search;
2014;Kostadin Damevski,David C. Shepherd,Lori L. Pollock;A case study of paired interleaving for evaluating code search techniques.;54-63;10;Code Search;
2014;Jens Dietrich,Kamil Jezek,Premek Brada;Broken promises: An empirical study into evolution problems in Java programs caused by library upgrades.;64-73;10;Software Evolution;
2014;Sun Ding,Hongyu Zhang,Hee Beng Kuan Tan;Detecting infeasible branches based on code patterns.;74-83;10;Software Evolution;
2014;Tiago Espinha,Andy Zaidman,Hans-Gerhard Gross;Web API growing pains: Stories from client developers and their code.;84-93;10;Software Evolution;
2014;Shuai Xie,Foutse Khomh,Ying Zou,Iman Keivanloo;An empirical study on the fault-proneness of clone migration in clone genealogies.;94-103;10;Software Clones;
2014;Giri Panamoottil Krishnan,Nikolaos Tsantalis;Unification and refactoring of clones.;104-113;10;Software Clones;
2014;Manishankar Mondal,Chanchal Kumar Roy,Kevin A. Schneider;Automatic ranking of clones for refactoring through mining association rules.;114-123;10;Software Clones;
2014;Michael Perscheid,Tim Felgentreff,Robert Hirschfeld;Follow the path: Debugging state anomalies along execution histories.;124-133;10;Fault Understanding;
2014;Xin Xia,Yang Feng,David Lo,Zhenyu Chen,Xinyu Wang;Towards more accurate multi-label software behavior learning.;134-143;10;Fault Understanding;
2014;Ripon Kumar Saha,Sarfraz Khurshid,Dewayne E. Perry;An empirical study of long lived bugs.;144-153;10;Fault Understanding;
2014;Vard Antinyan,Miroslaw Staron,Wilhelm Meding,Per Osterstrom,Erik Wikstrom,Johan Wranker,Anders Henriksson,Jorgen Hansson;Identifying risky areas of software code in Agile/Lean software development: An industrial experience report.;154-163;10;Where the Faults Lie;
2014;Annibale Panichella,Rocco Oliveto,Andrea De Lucia;Cross-project defect prediction models: L'Union fait la force.;164-173;10;Where the Faults Lie;
2014;Xin Xia,David Lo,Ming Wen,Emad Shihab,Bo Zhou;An empirical study of bug report field reassignment.;174-183;10;Where the Faults Lie;
2014;Martin Brandtner,Emanuel Giger,Harald C. Gall;Supporting continuous integration by mashing-up software quality information.;184-193;10;Software Quality Improvement;
2014;Mohammad Masudur Rahman 0001,Shamima Yeasmin,Chanchal Kumar Roy;Towards a context-aware IDE-based meta search engine for recommendation about programming errors and exceptions.;194-203;10;Software Quality Improvement;
2014;Laszlo Vidacs,Arpad Beszedes,David Tengeri,Istvan Siket,Tibor Gyimothy;Test suite reduction for fault detection and localization: A combined approach.;204-213;10;Software Quality Improvement;
2014;Gabriele Bavota,Rocco Oliveto,Andrea De Lucia,Andrian Marcus,Yann-Gael Gueheneuc,Giuliano Antoniol;In medio stat virtus: Extract class refactoring through nash equilibria.;214-223;10;Restructuring;
2014;Gustavo Santos,Marco Tulio de Oliveira Valente,Nicolas Anquetil;Remodularization analysis using semantic clustering.;224-233;10;Restructuring;
2014;Xu Li,Laurie J. Hendren;Mc2FOR: A tool for automatically translating MATLAB to FORTRAN 95.;234-243;10;Restructuring;
2014;Shuhei Kimura,Keisuke Hotta,Yoshiki Higo,Hiroshi Igaki,Shinji Kusumoto;Does return null matter?;244-253;10;Empirical Investigation;
2014;Paloma Oliveira,Marco Tulio de Oliveira Valente,Fernando Paim Lima;Extracting relative thresholds for source code metrics.;254-263;10;Empirical Investigation;
2014;Ebrahim Khalil Abbasi,Mathieu Acher,Patrick Heymans,Anthony Cleve;Reverse engineering web configurators.;264-273;10;Empirical Investigation;
2014;Luay Alawneh,Abdelwahab Hamou-Lhadj,Syed Shariyar Murtaza,Yan Liu;A contextual approach for effective recovery of inter-process communication patterns from HPC traces.;274-282;9;Patterns and Anti-patterns;
2014;Tosin Daniel Oyetoyan,Daniela Cruzes,Reidar Conradi;Transition and defect patterns of components in dependency cycles during software evolution.;283-292;10;Patterns and Anti-patterns;
2014;Zoltan Ujhelyi,Akos Horvath,Daniel Varro,Norbert Istvan Csiszar,Gabor Szoke,Laszlo Vidacs,Rudolf Ferenc;Anti-pattern detection with model queries: A comparison of approaches.;293-302;10;Patterns and Anti-patterns;
2014;Scott Grant,James R. Cordy;Examining the relationship between topic model similarity and software maintenance.;303-307;5;Maintenance and Co;
2014;Maelick Claes,Tom Mens,Philippe Grosjean;On the maintainability of CRAN packages.;308-312;5;Maintenance and Co;
2014;Vadim Zaytsev;Formal foundations for semi-parsing.;313-317;5;Maintenance and Co;
2014;Emily Hill,Bunyamin Sisman,Avinash C. Kak;On the use of positional proximity in IR-based feature location.;318-322;5;Maintenance and Co;
2014;Yuki Kashiwabara,Yuya Onizuka,Takashi Ishio,Yasuhiro Hayase,Tetsuo Yamamoto,Katsuro Inoue;Recommending verbs for rename method using association rule mining.;323-327;5;Maintenance and Co;
2014;Toshihiro Kamiya;An algorithm for keyword search on an execution path.;328-332;5;Maintenance and Co;
2014;Ralf Lammel,Martin Leinberger,Thomas Schmorleiz,Andrei Varanovich;Comparison of feature implementations across languages, technologies, and styles.;333-337;5;Maintenance and Co;
2014;Federico Tomassetti,Giuseppe Rizzo 0002,Marco Torchiano;Spotting automatically cross-language relations.;338-342;5;Maintenance and Co;
2014;Haidar Osman,Mircea Lungu,Oscar Nierstrasz;Mining frequent bug-fix code changes.;343-347;5;Change and Co-evolution;
2014;Shane McIntosh,Katie Legere,Ahmed E. Hassan;Orchestrating change: An artistic representation of software evolution.;348-352;5;Change and Co-evolution;
2014;Mathieu Goeminne,Alexandre Decan,Tom Mens;Co-evolving code-related and database-related changes in a data-intensive software system.;353-357;5;Change and Co-evolution;
2014;Manishankar Mondal,Chanchal Kumar Roy,Kevin A. Schneider;Improving the detection accuracy of evolutionary coupling by measuring change correspondence.;358-362;5;Change and Co-evolution;
2014;Ian J. Davis,Richard C. Holt,Ron Mraz;Fact extraction from bash in support of script migration.;363-366;4;Industry Track;
2014;Jeroen van den Bos;Lightweight runtime reverse engineering of binary file format variants.;367-370;4;Industry Track;
2014;Claus Klammer,Josef Pichler;Towards tool support for analyzing legacy systems in technical domains.;371-374;4;Industry Track;
2014;Manar H. Alalfi,James R. Cordy,Thomas Roy Dean;Analysis and clustering of model clones: An automotive industrial experience.;375-378;4;Industry Track;
2014;Xinhai Zhang,Magnus Persson,Mattias Nyberg,Behrooz Mokhtari,Anton Einarson,Henrik Linder,Jonas Westman,De-Jiu Chen,Martin Torngren;Experience on applying software architecture recovery to automotive embedded systems.;379-382;4;Industry Track;
2014;Jochen Quante,Mohammed Tarabain,Janet Siegmund;Towards recovering and exploiting domain knowledge from C code: A case study on automotive software.;383-386;4;Industry Track;
2014;Domenico Amalfitano,Anna Rita Fasolino,Valerio Maggio,Porfirio Tramontana,Giancarlo Di Mare,Ferdinando Ferrara,Stefano Scala;Migrating legacy spreadsheets-based systems to Web MVC architecture: An industrial case study.;387-390;4;Industry Track;
2014;Marco Autili,Paola Inverardi,Massimo Tivoli;CHOREOS: Large scale choreographies for the future internet.;391-394;4;Project Track;
2014;Benoit Baudry,Martin Monperrus,Cendrine Mony,Franck Chauvel,Franck Fleurey,Siobhan Clarke;DIVERSIFY: Ecology-inspired software evolution for diversity emergence.;395-398;4;Project Track;
2014;Gabriele Bavota,Alicja Ciemniewska,Ilknur Chulani,Antonio De Nigro,Massimiliano Di Penta,Davide Galletti,Roberto Galoppini,Thomas F. Gordon,Pawel Kedziora,Ilaria Lener,Francesco Torelli,Roberto Pratola,Juliusz Pukacki,Yacine Rebahi,Sergio Garcia Villalonga;The market for open source: An intelligent virtual open source marketplace.;399-402;4;Project Track;
2014;Tom Mens,Maelick Claes,Philippe Grosjean;ECOS: Ecological studies of open source software ecosystems.;403-406;4;Project Track;
2014;Tanja E. J. Vos,Paolo Tonella,Wishnu Prasetya,Peter M. Kruse,Alessandra Bagnato,Mark Harman,Onn Shehory;FITTEST: A new continuous and automated testing process for future Internet applications.;407-410;4;Project Track;
2014;Matthias Buchler,Karim Hossen,Petru Florin Mihancea,Marius Minea,Roland Groz,Catherine Oriat;Model inference and security testing in the spacios project.;411-414;4;Project Track;
2014;Tommaso Dal Sasso,Michele Lanza;In*bug: Visual analytics of bug repositories.;415-419;5;Demonstrations 1;
2014;Andre C. Hora,Anne Etien,Nicolas Anquetil,Stephane Ducasse,Marco Tulio de Oliveira Valente;APIEvolutionMiner: Keeping API evolution under control.;420-424;5;Demonstrations 1;
2014;Xi Ge,David C. Shepherd,Kostadin Damevski,Emerson R. Murphy-Hill;How the Sando search tool recommends queries.;425-428;4;Demonstrations 1;
2014;Coen De Roover,Reinout Stevens;Building development tools interactively using the EKEKO meta-programming library.;429-433;5;Demonstrations 1;
2014;Marcel Heing-Becker,Timo Kamph,Sibylle Schupp;Bit-error injection for software developers.;434-439;6;Demonstrations 1;
2014;Tibor Bakota,Peter Hegedus,Istvan Siket,Gergely Ladanyi,Rudolf Ferenc;Qualitygate SourceAudit: A tool for assessing the technical quality of software.;440-445;6;Demonstrations 1;
2014;Michael Perscheid,Robert Hirschfeld;Follow the path: Debugging tools for test-driven fault navigation.;446-449;4;Tool Demonstrations 2;
2014;Petru Florin Mihancea,Marius Minea;JMODEX: Model extraction for verifying security properties of web applications.;450-453;4;Tool Demonstrations 2;
2014;Mark Hills 0001,Paul Klint;PHP AiR: Analyzing PHP systems with Rascal.;454-457;4;Tool Demonstrations 2;
2014;Xu Li,Laurie J. Hendren;Mc2FOR demo: A tool for automatically translating MATLAB to FORTRAN 95.;458-463;6;Tool Demonstrations 2;
2014;Loup Meurice,Anthony Cleve;DAHLIA: A visual analyzer of database schema evolution.;464-468;5;Tool Demonstrations 2;
2014;Jan Jelschen;SENSEI: Software evolution service integration.;469-472;4;Doctoral Symposium;
2014;Mathieu Goeminne;Understanding the evolution of socio-technical aspects in open source ecosystems.;473-476;4;Doctoral Symposium;
2014;Rainer Koschke,Nils Gode,Yoshiki Higo;International workshop on software clones.;477;1;Workshop Descriptions;
2014;Anya Helene Bagge,Vadim Zaytsev;International workshop on open and original problems in software language engineering.;478;1;Workshop Descriptions;
2014;Lodewijk Bergmans,Steven Raemaekers,Tom Mens;International workshop on software quality and maintainability.;479;1;Workshop Descriptions;
