2016;Xuan Lu,Xuanzhe Liu,Huoran Li,Tao Xie,Qiaozhu Mei,Dan Hao,Gang Huang 0001,Feng Feng;PRADA: prioritizing android devices for apps by mining large-scale usage data.;3-13;11;Android;
2016;Lorenzo Villarroel,Gabriele Bavota,Barbara Russo,Rocco Oliveto,Massimiliano Di Penta;Release planning of mobile apps based on user reviews.;14-24;11;Android;
2016;Rocky Slavin,Xiaoying Wang,Mitra Bokaei Hosseini,James Hester,Ram Krishnan,Jaspreet Bhatia,Travis D. Breaux,Jianwei Niu;Toward a framework for detecting privacy policy violations in android application code.;25-36;12;Android;
2016;Konrad Jamrozik,Philipp von Styp-Rekowsky,Andreas Zeller;Mining sandboxes.;37-48;12;Android;
2016;Bihuan Chen,Yang Liu,Wei Le;Generating performance distributions via probabilistic symbolic execution.;49-60;12;Performance;
2016;Marija Selakovic,Michael Pradel;Performance issues and optimizations in JavaScript: an empirical study.;61-72;12;Performance;
2016;Guoxin Su,David S. Rosenblum,Giordano Tamburrelli;Reliability of Run-Time Quality-of-Service evaluation using parametric model checking.;73-84;12;Performance;
2016;Tian Huat Tan,Manman Chen,Jun Sun,Yang Liu,Etienne Andre,Yinxing Xue,Jin Song Dong;Optimizing selection of competing services with probabilistic hierarchical refinement.;85-95;11;Performance;
2016;Miryung Kim,Thomas Zimmermann 0001,Robert DeLine,Andrew Begel;The emerging role of data scientists on software development teams.;96-107;12;Empirical;
2016;Premkumar T. Devanbu,Thomas Zimmermann 0001,Christian Bird;Belief & evidence in empirical software engineering.;108-119;12;Empirical;
2016;Klaas-Jan Stol,Paul Ralph,Brian Fitzgerald;Grounded theory in software engineering research: a critical review and guidelines.;120-131;12;Empirical;
2016;Eric F. Rizzi,Sebastian G. Elbaum,Matthew B. Dwyer;On the techniques we create, the tools we build, and their misalignments: a study of KLEE.;132-143;12;Symbolic execution;
2016;Maria Christakis,Peter Muller 0001,Valentin Wustholz;Guiding dynamic symbolic execution toward unverified program executions.;144-155;12;Symbolic execution;
2016;Jinseong Jeon,Xiaokang Qiu,Jonathan Fetter-Degges,Jeffrey S. Foster,Armando Solar-Lezama;Synthesizing framework models for symbolic execution.;156-167;12;Symbolic execution;
2016;Monika Dhok,Murali Krishna Ramanathan,Nishant Sinha;Type-aware concolic testing of JavaScript programs.;168-179;12;Symbolic execution;
2016;Junjie Chen,Wenxiang Hu,Dan Hao,Yingfei Xiong,Hongyu Zhang,Lu Zhang,Bing Xie;An empirical comparison of compiler testing techniques.;180-190;11;Compilers and emerging trends;
2016;David Menendez,Santosh Nagarakatte;Termination-checking for LLVM peephole optimizations.;191-202;12;Compilers and emerging trends;
2016;Chengnian Sun,Vu Le,Zhendong Su;Finding and analyzing compiler warning defects.;203-213;11;Compilers and emerging trends;
2016;Qingwei Lin,Jian-Guang Lou,Hongyu Zhang,Dongmei Zhang;iDice: problem identification for emerging issues.;214-224;11;Compilers and emerging trends;
2016;Samir Hasan,Zachary King,Munawar Hafiz,Mohammed Sayagh,Bram Adams,Abram Hindle;Energy profiles of Java collections classes.;225-236;12;Energy and videos;
2016;Irene Manotas,Christian Bird,Rui Zhang,David C. Shepherd,Ciera Jaspan,Caitlin Sadowski,Lori L. Pollock,James A. Clause;An empirical study of practitioners' perspectives on green software engineering.;237-248;12;Energy and videos;
2016;Ding Li,Yingjun Lyu,Jiaping Gui,William G. J. Halfond;Automated energy optimization of HTTP requests for mobile applications.;249-260;12;Energy and videos;
2016;Luca Ponzanelli,Gabriele Bavota,Andrea Mocci,Massimiliano Di Penta,Rocco Oliveto,Mir Anamul Hasan,Barbara Russo,Sonia Haiduc,Michele Lanza;"Too long; didn't watch!: extracting relevant fragments from software development video tutorials.";261-272;12;Energy and videos;
2016;Igor Steinmacher,Tayana Uchoa Conte,Christoph Treude,Marco Aurelio Gerosa;Overcoming open source project entry barriers with a portal for newcomers.;273-284;12;Open source;
2016;Georgios Gousios,Margaret-Anne D. Storey,Alberto Bacchelli;Work practices and challenges in pull-based development: the contributor's perspective.;285-296;12;Open source;
2016;Song Wang,Taiyue Liu,Lin Tan;Automatically learning semantic features for defect prediction.;297-308;12;Defect prediction;
2016;Feng Zhang 0001,Quan Zheng,Ying Zou,Ahmed E. Hassan;Cross-project defect prediction using a connectivity-based unsupervised classifier.;309-320;12;Defect prediction;
2016;Chakkrit Tantithamthavorn,Shane McIntosh,Ahmed E. Hassan,Ken-ichi Matsumoto;Automated parameter optimization of classification techniques for defect prediction models.;321-332;12;Defect prediction;
2016;Bin Liang,Pan Bian,Yan Zhang,Wenchang Shi,Wei You,Yan Cai;AntMiner: mining more bugs by reducing noise interference.;333-344;12;Defect prediction;
2016;Aditya Desai,Sumit Gulwani,Vineet Hingorani,Nidhi Jain,Amey Karkare,Mark Marron,Sailesh R,Subhajit Roy;Program synthesis using natural language.;345-356;12;Synthesis;
2016;Mukund Raghothaman,Yi Wei,Youssef Hamadi;SWIM: synthesizing what i mean: code search and idiomatic snippet synthesis.;357-367;11;Synthesis;
2016;Adi Omari,Sharon Shoham,Eran Yahav;Cross-supervised synthesis of web-crawlers.;368-379;12;Synthesis;
2016;Juan Zhai,Jianjun Huang,Shiqing Ma,Xiangyun Zhang,Lin Tan,Jianhua Zhao,Feng Qin;Automatic model generation from documentation for Java API functions.;380-391;12;Synthesis;
2016;Christoph Treude,Martin P. Robillard;Augmenting API documentation with insights from stack overflow.;392-403;12;API;
2016;Xin Ye,Hui Shen,Xiao Ma,Razvan C. Bunescu,Chang Liu;From word embeddings to document similarities for improved information retrieval in software engineering.;404-415;12;API;
2016;Tam The Nguyen,Hung Viet Pham,Phong Minh Vu,Tung Thanh Nguyen;Learning API usages from bytecode: a statistical approach.;416-427;12;API;
2016;Baishakhi Ray,Vincent Hellendoorn,Saheel Godhane,Zhaopeng Tu,Alberto Bacchelli,Premkumar T. Devanbu;"On the ""naturalness"" of buggy code.";428-439;12;Code smells;
2016;Willian Nalepa Oizumi,Alessandro Garcia,Leonardo da Silva Sousa,Bruno Barbieri Pontes Cafeo,Yixue Zhao;Code anomalies flock together: exploring code anomaly agglomerations for locating design problems.;440-451;12;Code smells;
2016;Sebastian Muller,Thomas Fritz;Using (bio)metrics to predict code quality online.;452-463;12;Code smells;
2016;Shing-Chi Cheung,Wanjun Chen,Yepang Liu,Chang Xu;CUSTODES: automatic spreadsheet cell clustering and smell detection using strong and weak features.;464-475;12;Code smells;
2016;Martin P. Robillard,Nenad Medvidovic;"Disseminating architectural knowledge on open-source projects: a case study of the book ""architecture of open-source applications"".";476-487;12;Architecture;
2016;Lu Xiao,Yuanfang Cai,Rick Kazman,Ran Mo,Qiong Feng;Identifying and quantifying architectural debt.;488-498;11;Architecture;
2016;Ran Mo,Yuanfang Cai,Rick Kazman,Lu Xiao,Qiong Feng;Decoupling level: a new metric for architectural maintenance complexity.;499-510;12;Architecture;
2016;Rahul Gopinath,Mohammad Amin Alipour,Iftekhar Ahmed,Carlos Jensen,Alex Groce;On the limits of mutation reduction strategies.;511-522;12;Testing 1;
2016;Christopher Henard,Mike Papadakis,Mark Harman,Yue Jia,Yves Le Traon;Comparing white-box and black-box test prioritization.;523-534;12;Testing 1;
2016;Yafeng Lu,Yiling Lou,Shiyang Cheng,Lingming Zhang,Dan Hao,Yangfan Zhou,Lu Zhang;How does regression test prioritization perform in real-world software evolution?;535-546;12;Testing 1;
2016;Sebastiano Panichella,Annibale Panichella,Moritz Beller,Andy Zaidman,Harald C. Gall;The impact of test case summaries on bug fixing performance: an empirical investigation.;547-558;12;Testing 1;
2016;Nariman Mirzaei,Joshua Garcia,Hamid Bagheri,Alireza Sadeghi,Sam Malek;Reducing combinatorics in GUI testing of android applications.;559-570;12;Testing 2;
2016;Zhengrui Qin,Yutao Tang,Edmund Novak,Qun Li;MobiPlay: a remote execution based record-and-replay tool for mobile applications.;571-582;12;Testing 2;
2016;Tingting Yu,Xiao Qu,Myra B. Cohen;VDTest: an automated framework to support testing for virtual devices.;583-594;12;Testing 2;
2016;Reza Matinnejad,Shiva Nejati,Lionel C. Briand,Thomas Bruckmann;Automated test suite generation for time-continuous simulink models.;595-606;12;Testing 2;
2016;Xiao-Yuan Jing,Fumin Qi,Fei Wu,Baowen Xu;Missing data imputation based on low-rank recovery and semi-supervised regression for software effort estimation.;607-618;12;Effort estimation and search;
2016;Federica Sarro,Alessio Petrozziello,Mark Harman;Multi-objective software effort estimation.;619-630;12;Effort estimation and search;
2016;Shuai Wang,Shaukat Ali Khan,Tao Yue,Yan Li,Marius Liaaen;A practical guide to select quality indicators for assessing pareto-based search algorithms in search-based software engineering.;631-642;12;Effort estimation and search;
2016;Flavio M. Medeiros,Christian Kastner,Marcio de Medeiros Ribeiro,Rohit Gheyi,Sven Apel;A comparison of 10 sampling algorithms for configurable systems.;643-654;12;Product lines;
2016;Xavier Devroey,Gilles Perrouin,Mike Papadakis,Axel Legay,Pierre-Yves Schobbens,Patrick Heymans;Featured model-based mutation analysis.;655-666;12;Product lines;
2016;Reimar Schroter,Sebastian Krieter,Thomas Thum,Fabian Benduhn,Gunter Saake;Feature-model interfaces: the highway to compositional analyses of highly-configurable systems.;667-678;12;Product lines;
2016;Jean Melo,Claus Brabrand,Andrzej Wasowski;How does the degree of variability affect bug finding?;679-690;12;Product lines;
2016;Sergey Mechtaev,Jooyong Yi,Abhik Roychoudhury;Angelix: scalable multiline program patch synthesis via symbolic analysis.;691-701;11;Repair and model synthesis;
2016;Fan Long,Martin C. Rinard;An analysis of the search spaces for generate and validate patch generation systems.;702-713;12;Repair and model synthesis;
2016;Yu-Fang Chen,Chiao Hsieh,Ondrej Lengal,Tsung-Ju Lii,Ming-Hsien Tsai,Bow-Yaw Wang,Farn Wang;PAC learning-based verification and model synthesis.;714-724;11;Repair and model synthesis;
2016;Steven Arzt,Eric Bodden;StubDroid: automatic inference of precise data-flow summaries for the android framework.;725-735;11;Repair and model synthesis;
2016;Michael J. Coblenz,Joshua Sunshine,Jonathan Aldrich,Brad A. Myers,Samuel Weber,Forrest Shull;Exploring language support for immutability.;736-747;12;Languages;
2016;Diomidis Spinellis,Panos Louridas,Maria Kechagia;The evolution of C programming practices: a study of the Unix operating system 1973-2015.;748-759;12;Languages;
2016;Phillip Merlin Uesbeck,Andreas Stefik,Stefan Hanenberg,Jan Pedersen,Patrick Daleiden;An empirical study on the impact of C++ lambdas and programmer experience.;760-771;12;Languages;
2016;Nawrin Sultana,Justin Middleton,Jeffrey Overbey,Munawar Hafiz;Understanding and fixing multiple language interoperability issues: the C/Fortran case.;772-783;12;Languages;
2016;Muhammad Ali Gulzar,Matteo Interlandi,Seunghyun Yoo,Sai Deep Tetali,Tyson Condie,Todd D. Millstein,Miryung Kim;BigDebug: debugging primitives for interactive big data processing in spark.;784-795;12;Debugging;
2016;Guido Salvaneschi,Mira Mezini;Debugging for reactive programming.;796-807;12;Debugging;
2016;Xiaoyuan Xie,Zicong Liu,Shuo Song,Zhenyu Chen,Jifeng Xuan,Baowen Xu;Revisit of automatic debugging via human focus-tracking analysis.;808-819;12;Debugging;
2016;Weidong Cui,Marcus Peinado,Sang Kil Cha,Yanick Fratantonio,Vasileios P. Kemerlis;RETracer: triaging crashes by reverse execution from partial memory dumps.;820-831;12;Debugging;
2016;Jonas Eckhardt,Andreas Vogelsang,Daniel Mendez Fernandez;"Are ""non-functional"" requirements really non-functional?: an investigation of non-functional requirements in practice.";832-842;11;Requirements;
2016;Preethu Rose Anish,Balaji Balasubramaniam,Abhishek Sainani,Jane Cleland-Huang,Maya Daneva,Roel J. Wieringa,Smita Ghaisas;Probing for requirements knowledge to stimulate architectural thinking.;843-854;12;Requirements;
2016;Dalal Alrajeh,Axel van Lamsweerde,Jeffrey Kramer,Alessandra Russo,Sebastian Uchitel;Risk-driven revision of requirements models.;855-865;11;Requirements;
2016;Awais Rashid,Syed Asad Ali Naqvi,Rajiv Ramdhany,Matthew John Edwards,Ruzanna Chitchyan,M. Ali Babar;"Discovering ""unknown known"" security requirements.";866-876;11;Requirements;
2016;Nimrod Busany,Shahar Maoz;Behavioral log analysis with statistical guarantees.;877-887;11;Dynamic analysis;
2016;Marcello M. Bersani,Domenico Bianculli,Carlo Ghezzi,Srdan Krstic,Pierluigi San Pietro;Efficient large-scale trace checking using mapreduce.;888-898;11;Dynamic analysis;
2016;Magnus Madsen,Frank Tip,Esben Andreasen,Koushik Sen,Anders Moller;Feedback-directed instrumentation for deployed JavaScript applications.;899-910;12;Dynamic analysis;
2016;Tongping Liu,Charlie Curtsinger,Emery D. Berger;DoubleTake: fast and precise error detection via evidence-based dynamic analysis.;911-922;12;Dynamic analysis;
2016;Konstantin Rubinov,Lucia Rosculete,Tulika Mitra,Abhik Roychoudhury;Automated partitioning of android applications for trusted execution environments.;923-934;12;Security;
2016;Sarah Nadi,Stefan Kruger,Mira Mezini,Eric Bodden;Jumping through hoops: why do Java developers struggle with cryptography APIs?;935-946;12;Security;
2016;Joseph P. Near,Daniel B. Jackson;Finding security bugs in web applications using a catalog of access control patterns.;947-958;12;Security;
2016;Wei You,Bin Liang,Wenchang Shi,Shuyang Zhu,Peng Wang,Sikefu Xie,Xiangyun Zhang;Reference hijacking: patching, protecting and analyzing on unmodified and non-rooted android devices.;959-970;12;Security;
2016;Ronnie E. S. Santos,Fabio Q. B. da Silva,Cleyton V. C. de Magalhaes,Cleviton V. F. Monteiro;Building a theory of job rotation in software engineering from an instrumental case study.;971-981;11;Collaborative;
2016;Julia Rubin-Mosin,Martin Rinard;The challenges of staying together while moving fast: an exploratory study.;982-993;12;Collaborative;
2016;Bogdan Vasilescu,Kelly Blincoe,Qi Xuan,Casey Casalnuovo,Daniela E. Herlea,Premkumar T. Devanbu,Vladimir Filkov;The sky is not the limit: multitasking across GitHub projects.;994-1005;12;Collaborative;
2016;Peter C. Rigby,Yue Cai Zhu,Samuel M. Donadelli,Audris Mockus;Quantifying and mitigating turnover-induced knowledge loss: case studies of chrome and a project at avaya.;1006-1016;11;Collaborative;
2016;Lutz Prechelt,Holger Schmeisky,Franz Zieris;Quality experience: a grounded theory of successful agile projects without dedicated testers.;1017-1027;11;Software quality;
2016;Oleksii Kononenko,Olga Baysal,Michael W. Godfrey;Code review quality: how developers see it.;1028-1038;11;Software quality;
2016;Patanamon Thongtanunam,Shane McIntosh,Ahmed E. Hassan,Hajimu Iida;Revisiting code ownership and its relationship with software quality in the scope of modern code review.;1039-1050;12;Software quality;
2016;Hao Sun,Xiangyun Zhang,Yunhui Zheng,Qingkai Zeng;IntEQ: recognizing benign integer overflows via equivalence checking across multiple precisions.;1051-1062;12;Program analysis;
2016;Hui Liu,Qiurong Liu,Cristian-Alexandru Staicu,Michael Pradel,Yue Luo;Nomen est omen: exploring and exploiting similarities between argument and parameter names.;1063-1073;11;Program analysis;
2016;Cindy Rubio-Gonzalez,Cuong Nguyen 0001,Benjamin Mehne,Koushik Sen,James Demmel,William Kahan,Costin Iancu,Wim Lavrijsen,David H. Bailey,David Hough;Floating-point precision tuning using blame analysis.;1074-1085;12;Program analysis;
2016;Daniel Fava,Dan Shapiro,Joseph C. Osborn,Martin Schaf,Jim Whitehead;Crowdsourcing program preconditions via a classification game.;1086-1096;11;Program analysis;
2016;Jeff Huang 0001;Scalable thread sharing analysis.;1097-1108;12;Concurrency;
2016;Yan Cai,Lingwei Cao;Fixing deadlocks via lock pre-acquisitions.;1109-1120;12;Concurrency;
2016;Valerio Terragni,Shing-Chi Cheung;Coverage-driven test code generation for concurrent classes.;1121-1132;12;Concurrency;
2016;Michael D. Ernst,Alberto Lovato,Damiano Macedonio,Fausto Spoto,Javier Thaine;Locking discipline inference and checking.;1133-1144;12;Concurrency;
2016;Jongwook Kim,Don S. Batory,Danny Dig,Maider Azanza;Improving refactoring speed by 10X.;1145-1156;12;Maintenance;
2016;Hitesh Sajnani,Vaibhav Saini,Jeffrey Svajlenko,Chanchal Kumar Roy,Cristina V. Lopes;SourcererCC: scaling code clone detection to big-code.;1157-1168;12;Maintenance;
2016;Saba Alimadadi,Ali Mesbah 0001,Karthik Pattabiraman;Understanding asynchronous interactions in full-stack JavaScript.;1169-1180;12;Maintenance;
2016;Hristina Palikareva,Tomasz Kuchta,Cristian Cadar;Shadow of a doubt: testing for divergences between software versions.;1181-1192;12;Maintenance;
2016;Hamed Esfahani,Jonas Fietz,Qi Ke,Alexei Kolomiets,Erica Lan,Erik Mavrinac,Wolfram Schulte,Newton Sanches,Srikanth Kandula;CloudBuild: Microsoft's distributed and caching build service.;11-20;10;Software engineering in practice (SEIP):infrastructure support;
2016;Tony Savor,Mitchell Douglas,Michael Gentili,Laurie A. Williams,Kent Beck,Michael Stumm;Continuous deployment at Facebook and OANDA.;21-30;10;Software engineering in practice (SEIP):infrastructure support;
2016;Antonio Martini,Jan Bosch;An empirically developed method to aid decisions on architectural technical debt refactoring: AnaConDebt.;31-40;10;Software engineering in practice (SEIP):infrastructure support;
2016;Anurag Dwarakanath,N. C. Shrikanth,Kumar Abhinav,Alex Kass;Trustworthiness in enterprise crowdsourcing: a taxonomy & evidence from data.;41-50;10;Software engineering in practice (SEIP):infrastructure support;
2016;Paulo Salem;Practical programming, validation and verification with finite-state machines: a library and its industrial application.;51-60;10;Software engineering in practice (SEIP):static analysis;
2016;Joonyoung Park,Inho Lim,Sukyoung Ryu;Battles with false positives in static analysis of JavaScript web applications in the wild.;61-70;10;Software engineering in practice (SEIP):static analysis;
2016;Tse-Hsun Chen,Weiyi Shang,Ahmed E. Hassan,Mohamed N. Nasser,Parminder Flora;Detecting problems in the database access code of large scale systems: an industrial experience report.;71-80;10;Software engineering in practice (SEIP):static analysis;
2016;Brian Anderson,Lars Bergstrom,Manish Goregaokar,Josh Matthews,Keegan McAllister,Jack Moffitt,Simon Sapin;Engineering the servo web browser engine using Rust.;81-89;9;Software engineering in practice (SEIP):static analysis;
2016;Lorin Hochstein,Casey Rosenthal;Chaos engineering panel.;90-91;2;Software engineering in practice (SEIP):panel discussion;
2016;Titus Barik,Robert DeLine,Steven M. Drucker,Danyel Fisher;The bones of the system: a case study of logging and telemetry at Microsoft.;92-101;10;Software engineering in practice (SEIP):monitoring;
2016;Qingwei Lin,Hongyu Zhang,Jian-Guang Lou,Yu Zhang,Xuewei Chen;Log clustering based problem identification for online service systems.;102-111;10;Software engineering in practice (SEIP):monitoring;
2016;Yu Jiang,Han Liu,Hui Kong,Rui Wang,Mohammad Hosseini,Jiaguang Sun,Lui Sha;Use runtime verification to improve the quality of medical care practice.;112-121;10;Software engineering in practice (SEIP):monitoring;
2016;Rick Rabiser,Michael Vierhauser,Paul Grunbacher;Assessing the usefulness of a requirements monitoring tool: a study involving industrial software engineers.;122-131;10;Software engineering in practice (SEIP):monitoring;
2016;Thomas Reschenhofer,Manoj Bhat,Adrian Hernandez-Mendez,Florian Matthes;Lessons learned in aligning data and model evolution in collaborative information systems.;132-141;10;Software engineering in practice (SEIP):evolution;
2016;Shreya Kumar,Charles Wallace,Michael Young;Mentoring trajectories in an evolving agile workplace.;142-151;10;Software engineering in practice (SEIP):evolution;
2016;Shinobu Saito,Yukako Iimura,Hirokazu Tashiro,Aaron K. Massey,Annie I. Anton;Visualizing the effects of requirements evolution.;152-161;10;Software engineering in practice (SEIP):evolution;
2016;Wensheng Dou,Liang Xu,Shing-Chi Cheung,Chushu Gao,Jun Wei,Tao Huang;VEnron: a versioned spreadsheet corpus and related evolution analysis.;162-171;10;Software engineering in practice (SEIP):evolution;
2016;Paolo Salvaneschi;System testing of repository-style software: an experience report.;172-181;10;Software engineering in practice (SEIP):dynamic analysis;
2016;Shuai Wang,Shaukat Ali Khan,Tao Yue,Oyvind Bakkeli,Marius Liaaen;Enhancing test case prioritization in an industrial setting with resource awareness and multi-objective search.;182-191;10;Software engineering in practice (SEIP):dynamic analysis;
2016;Manuel Quintela-Pumares,Bruno Cabral,Daniel Fernandez Lanvin,Alberto Manuel Fernandez Alvarez;Integrating automatic backward error recovery in asynchronous rich clients.;192-201;10;Software engineering in practice (SEIP):dynamic analysis;
2016;Steven Versteeg,Miao Du,Jean-Guy Schneider,John C. Grundy,Jun Han,Menka Goyal;Opaque service virtualisation: a practical tool for emulating endpoint systems.;202-211;10;Software engineering in practice (SEIP):dynamic analysis;
2016;Junji Shimagaki,Yasutaka Kamei,Shane McIntosh,Ahmed E. Hassan,Naoyasu Ubayashi;A study of the quality-impacting practices of modern code review at Sony mobile.;212-221;10;Software engineering in practice (SEIP):development support;
2016;Mohammad Masudur Rahman,Chanchal Kumar Roy,Jason A. Collins;CoRReCT: code reviewer recommendation in GitHub based on cross-project and technology experience.;222-231;10;Software engineering in practice (SEIP):development support;
2016;Martin F. Krafft,Klaas-Jan Stol,Brian Fitzgerald;How do free/open source developers pick their tools?: a Delphi study of the Debian project.;232-241;10;Software engineering in practice (SEIP):development support;
2016;Franz Zieris,Lutz Prechelt;Observations on knowledge transfer of professional software developers during pair programming.;242-250;9;Software engineering in practice (SEIP):development support;
2016;Vladimir Ivanov,Manuel Mazzara,Witold Pedrycz,Alberto Sillitti,Giancarlo Succi;Assessing the process of an Eastern European software SME using systemic analysis, GQM, and reliability growth models: a case study.;251-259;9;Software engineering in practice (SEIP):process;
2016;Vinay Kulkarni;Model driven development of business applications: a practitioner's perspective.;260-269;10;Software engineering in practice (SEIP):process;
2016;Daniel Stahl,Jan Bosch;Industry application of continuous integration modeling: a multiple-case study.;270-279;10;Software engineering in practice (SEIP):process;
2016;Michael Washburn Jr.,Pavithra Sathiyanarayanan,Meiyappan Nagappan,Thomas Zimmermann 0001,Christian Bird;What went right and what went wrong: an analysis of 155 postmortems from game development.;280-289;10;Software engineering in practice (SEIP):process;
2016;Marcello Missiroli,Daniel Russo 0002,Paolo Ciancarini;Learning Agile software development in high school: an investigation.;293-302;10;Software engineering education and training (SEET):agile;
2016;Jan-Philipp Steghofer,Eric Knauss,Emil Alegroth,Imed Hammouda,Hakan Burden,Morgan Ericsson;Teaching Agile: addressing the conflict between project delivery and application of Agile methods.;303-312;10;Software engineering education and training (SEET):agile;
2016;Christoph Matthies,Thomas Kowark,Keven Richly,Matthias Uflacker,Hasso Plattner;How surveys, tutors, and software help to assess Scrum adoption in a classroom software engineering project.;313-322;10;Software engineering education and training (SEET):agile;
2016;Lukas Alperowitz,Dora Dzvonyar,Bernd Brugge;Metrics in Agile project courses.;323-326;4;Software engineering education and training (SEET):agile;
2016;Humberto Cervantes,Serge Haziyev,Olha Hrytsay,Rick Kazman;Smart decisions: an architectural design game.;327-335;9;Software engineering education and training (SEET):architecture and collaboration;
2016;Andrew Cain,Muhammad Ali Babar;Reflections on applying constructive alignment with formative feedback for teaching introductory programming and software architecture.;336-345;10;Software engineering education and training (SEET):architecture and collaboration;
2016;Christopher Theisen,Laurie A. Williams,Kevin Oliver,Emerson R. Murphy-Hill;Software security education at scale.;346-355;10;Software engineering education and training (SEET):architecture and collaboration;
2016;Matthias Galster,Samuil Angelov;What makes teaching software architecture difficult?;356-359;4;Software engineering education and training (SEET):architecture and collaboration;
2016;Collin McMillan,Amanda Rodda-Tyler;Collaborative software engineering education between college seniors and blind high school students.;360-363;4;Software engineering education and training (SEET):architecture and collaboration;
2016;Guoping Rong,He Zhang,Qi Shan,Dong Shao;Can software engineering students program defect-free?: an educational approach.;364-373;10;Software engineering education and training (SEET):verification and test;
2016;Omar S. Gomez,Sira Vegas,Natalia Juristo Juzgado;Impact of CS programs on the quality of test cases generation: an empirical study.;374-383;10;Software engineering education and training (SEET):verification and test;
2016;Stephan Krusche,Mjellma Berisha,Bernd Brugge;Teaching code review management using branch based workflows.;384-393;10;Software engineering education and training (SEET):verification and test;
2016;Suresh Kothari,Ahmed Tamrawi,Jeremias Sauceda,Jon Mathews;Let's verify Linux: accelerated learning of analytical reasoning through automation and collaboration.;394-403;10;Software engineering education and training (SEET):verification and test;
2016;Ana Maria Moreno,Maribel Sanchez-Segura,Fuensanta Medina-Dominguez,Lawrence Peters,Jonathan Araujo;Enriching traditional software engineering curricula with software project management knowledge.;404-411;8;Software engineering education and training (SEET):team projects;
2016;Marco Kuhrmann,Jurgen Munch;When teams go crazy: an environment to experience group dynamics in software project management courses.;412-421;10;Software engineering education and training (SEET):team projects;
2016;Joseph Feliciano,Margaret-Anne D. Storey,Alexey Zagalsky;Student experiences using GitHub in software engineering courses: a case study.;422-431;10;Software engineering education and training (SEET):team projects;
2016;Otto Seppala,Tapio Auvinen,Ville Karavirta,Arto Vihavainen,Petri Ihantola;What communication tools students use in software projects and how do different tools suit different parts of project work?;432-435;4;Software engineering education and training (SEET):team projects;
2016;Peng Zhang,Jules White,Douglas C. Schmidt;HoliCoW: automatically breaking team-based software projects to motivate student testing.;436-439;4;Software engineering education and training (SEET):team projects;
2016;Jouni Lappalainen,Nirnaya Tripathi,Jouni Simila;Teaching a global software development course: student experiences using onsite exercise simulation.;440-450;11;Software engineering education and training (SEET):software development;
2016;Claudia Susie C. Rodrigues,Claudia Werner,Luiz Landau;VisAr3D: an innovative 3D visualization of UML models.;451-460;10;Software engineering education and training (SEET):software development;
2016;Roxana Lisette Quintanilla Portugal,Priscila Engiel,Joanna Pivatelli,Julio Cesar Sampaio do Prado Leite;Facing the challenges of teaching requirements engineering.;461-470;10;Software engineering education and training (SEET):software development;
2016;Ville T. Heikkila,Maria Paasivaara,Casper Lassenius;Teaching university students Kanban with a collaborative board game.;471-480;10;Software engineering education and training (SEET):software development;
2016;Lannan Luo,Qiang Zeng;SolMiner: mining distinct solutions in programs.;481-490;10;Software engineering education and training (SEET):tools and toys;
2016;Sebastian Pape,Julian Flake,Andreas Beckmann,Jan Jurjens;STAGE: a software tool for automatic grading of testing exercises: case study paper.;491-500;10;Software engineering education and training (SEET):tools and toys;
2016;Sihan Li,Xusheng Xiao,Blake Bassett,Tao Xie,Nikolai Tillmann;Measuring code behavioral similarity for programming and software engineering education.;501-510;10;Software engineering education and training (SEET):tools and toys;
2016;Linda Laird,Ye Yang;Engaging software estimation education using LEGOs: a case study.;511-517;7;Software engineering education and training (SEET):tools and toys;
2016;Anthony Finkelstein;Software engineering and policy.;521-522;2;Software engineering in society (SEIS):keynotes;
2016;Erik A. Jagroep,Jan Martijn van der Werf,Sjaak Brinkkemper,Giuseppe Procaccianti,Patricia Lago,Leen Blom,Rob van Vliet;Software energy profiling: comparing releases of a software product.;523-532;10;Software engineering in society (SEIS):sustainable software design;
2016;Ruzanna Chitchyan,Christoph Becker,Stefanie Betz,Leticia Duboc,Birgit Penzenstadler,Norbert Seyff,Colin C. Venters;Sustainability design in requirements engineering: state of practice.;533-542;10;Software engineering in society (SEIS):sustainable software design;
2016;Bendra Ojameruaye,Rami Bahsoon,Leticia Duboc;Sustainability debt: a portfolio-based approach for evaluating sustainability requirements in architectures.;543-552;10;Software engineering in society (SEIS):sustainable software design;
2016;Maria Angela Ferrario,William Simm,Stephen Forshaw,Adrian Gradinar,Marcia Tavares Smith,Ian Smith;Values-first SE: research principles in practice.;553-562;10;Software engineering in society (SEIS):values in software engineering;
2016;Paolo Ciancarini,Daniel Russo 0002,Alberto Sillitti,Giancarlo Succi;A guided tour of the legal implications of software cloning.;563-572;10;Software engineering in society (SEIS):values in software engineering;
2016;James Holston,Valerie Issarny,Cristhian Parra;Engineering software assemblies for participatory democracy: the participatory budgeting use case.;573-582;10;Software engineering in society (SEIS):values in software engineering;
2016;Reza Matinnejad,Shiva Nejati,Lionel C. Briand,Thomas Bruckmann;SimCoTest: a test suite generation tool for simulink/stateflow controllers.;585-588;4;Demonstrations:verification and validation (1);
2016;Montgomery Carter,Shaobo He,Jonathan Whitaker,Zvonimir Rakamaric,Michael Emmi;SMACK software verification toolchain.;589-592;4;Demonstrations:verification and validation (1);
2016;Qi Luo,Denys Poshyvanyk,Aswathy Nair,Mark Grechanik;FOREPOST: a tool for detecting performance problems with feedback-driven learning software testing.;593-596;4;Demonstrations:verification and validation (1);
2016;Vaibhav Saini,Hitesh Sajnani,Jaewoo Kim,Cristina V. Lopes;SourcererCC and SourcererCC-I: tools to detect clones in batch mode and during software development.;597-600;4;Demonstrations:verification and validation (2);
2016;Tony Ohmann,Ryan Stanley,Ivan Beschastnikh,Yuriy Brun;Visually reasoning about system and resource behavior.;601-604;4;Demonstrations:verification and validation (2);
2016;Yung-Pin Cheng,Chiu-Yu Ku,Wei-Chen Pan,Chuan Yang,Ting-Shu Lin;Toward arbitrary mapping for debugging visualizations.;605-608;4;Demonstrations:verification and validation (2);
2016;Kevin Moran,Mario Linares Vasquez,Carlos Bernal-Cardenas,Denys Poshyvanyk;FUSION: a tool for facilitating and augmenting android bug reporting.;609-612;4;Demonstrations:verification and validation (2);
2016;Davood Mazinanian,Nikolaos Tsantalis,Raphael Stein,Zackary Valenta;JDeodorant: clone refactoring.;613-616;4;Demonstrations:analysis and refactoring;
2016;Djamel Eddine Khelladi,Reda Bendraou,Marie-Pierre Gervais;AD-ROOM: a tool for automatic detection of refactorings in object-oriented models.;617-620;4;Demonstrations:analysis and refactoring;
2016;Christian D. Newman,Tessandra Sage,Michael L. Collard,Hakam W. Alomari,Jonathan I. Maletic;srcSlice: a tool for efficient static forward slicing.;621-624;4;Demonstrations:analysis and refactoring;
2016;Shiva Krishna Imminni,Mir Anamul Hasan,Michael Duckett,Puneet Sachdeva,Sudipta Karmakar,Piyush Kumar,Sonia Haiduc;SPYSE: a semantic search engine for python packages and modules.;625-628;4;Demonstrations:trending technologies;
2016;Jens Meinicke,Thomas Thum,Reimar Schroter,Sebastian Krieter,Fabian Benduhn,Gunter Saake,Thomas Leich;FeatureIDE: taming the preprocessor wilderness.;629-632;4;Demonstrations:trending technologies;
2016;Dennis Priefer,Peter Kneisel,Gabriele Taentzer;JooMDD: a model-driven development environment for web content management system extensions.;633-636;4;Demonstrations:trending technologies;
2016;Thomas A. Ball,Jonathan Protzenko,Judy M. Bishop,Michal Moskal,Jonathan de Halleux,Michael Braun,Steve Hodges,Clare Riley;Microsoft touch develop and the BBC micro: bit.;637-640;4;Demonstrations:trending technologies;
2016;Andrea Di Sorbo,Sebastiano Panichella,Corrado Aaron Visaggio,Massimiliano Di Penta,Gerardo Canfora,Harald C. Gall;DECA: development emails content analyzer.;641-644;4;Demonstrations:program understanding;
2016;Luca Ponzanelli,Gabriele Bavota,Andrea Mocci,Massimiliano Di Penta,Rocco Oliveto,Barbara Russo,Sonia Haiduc,Michele Lanza;CodeTube: extracting relevant fragments from software development video tutorials.;645-648;4;Demonstrations:program understanding;
2016;Jaroslav M. Fowkes,Pankajan Chanthirasegaran,Razvan Ranca,Miltiadis Allamanis,Mirella Lapata,Charles A. Sutton;TASSAL: autofolding for source code summarization.;649-652;4;Demonstrations:program understanding;
2016;Ziang Ma,Haoyu Wang,Yao Guo,Xiangqun Chen;LibRadar: fast and accurate detection of third-party libraries in Android apps.;653-656;4;Demonstrations:program understanding;
2016;William Martin;Causal impact for app store analysis.;659-661;3;ACM student research competition;
2016;Justin Smith;Identifying successful strategies for resolving static analysis notifications.;662-664;3;ACM student research competition;
2016;Ayushi Rastogi;Do biases related to geographical location influence work-related decisions in GitHub?;665-667;3;ACM student research competition;
2016;Flavio M. Medeiros;Safely evolving preprocessor-based configurable systems.;668-670;3;ACM student research competition;
2016;Paige Rodeghero,Collin McMillan;Discovering important source code terms.;671-673;3;ACM student research competition;
2016;Melina Mongiovi;Scaling testing of refactoring engines.;674-676;3;ACM student research competition;
2016;Arun K. Rajagopalan;RDIT: race detection from incomplete traces.;677-679;3;ACM student research competition;
2016;Han Liu;Towards better program obfuscation: optimization via language models.;680-682;3;ACM student research competition;
2016;Ameer Armaly,Collin McMillan;An empirical study of blindness and program comprehension.;683-685;3;ACM student research competition;
2016;Alan Huang;Maximally stateless model checking for concurrent bugs under relaxed memory models.;686-688;3;ACM student research competition;
2016;Ting Su;FSMdroid: guided GUI testing of android apps.;689-691;3;ACM student research competition;
2016;Shanshan Li;Instantaneous performance bug detection in IDE.;692-694;3;ACM student research competition;
2016;Bowen Cai;Code parallelization through sequential code search.;695-697;3;ACM student research competition;
2016;Hadil Abukwaik,Mohammed Abujayyab,Shah Rukh Humayoun,H. Dieter Rombach;Extracting conceptual interoperability constraints from API documentation using machine learning.;701-703;3;Posters;
2016;Zadia Codabux,Byron J. Williams;Technical debt prioritization using predictive analytics.;704-706;3;Posters;
2016;Hui Yang,Xiaobing Sun,Bin Li,Jiajun Hu;Recommending developers with supplementary information for issue request resolution.;707-709;3;Posters;
2016;Nestor Ruben Barraza;A new homogeneous pure birth process based software reliability model.;710-712;3;Posters;
2016;Minhaz Fahim Zibran;On the effectiveness of labeled latent dirichlet allocation in automatic bug-report categorization.;713-715;3;Posters;
2016;Oscar Chaparro,Andrian Marcus;On the reduction of verbose queries in text retrieval based software maintenance.;716-718;3;Posters;
2016;Shahab Bayati;Security expert recommender in software engineering.;719-721;3;Posters;
2016;Abdullah Aldaeej,Omar Badreddin;Towards promoting design and UML modeling practices in the open source community.;722-724;3;Posters;
2016;Luigi Benedicenti,Franco Raffaele Cotugno,Paolo Ciancarini,Angelo Messina,Witold Pedrycz,Alberto Sillitti,Giancarlo Succi;Applying scrum to the army: a case study.;725-727;3;Posters;
2016;Guido Salvaneschi,Mira Mezini;Debugging reactive programming with reactive inspector.;728-730;3;Posters;
2016;Esteban Parra,Sonia Haiduc,Rebecca James;Making a difference: an overview of humanitarian free open source systems.;731-733;3;Posters;
2016;Zhenzhou Tian,Ting Liu,Qinghua Zheng,Feifei Tong,Ming Fan,Zijiang Yang;A new thread-aware birthmark for plagiarism detection of multithreaded programs.;734-736;3;Posters;
2016;Zeheng Li,LiGuo Huang;When to release in open source project?;737-739;3;Posters;
2016;Rahul Gopinath,Carlos Jensen,Alex Groce;Topsy-Turvy: a smarter and faster parallelization of mutation analysis.;740-743;4;Posters;
2016;Francesco Mercaldo,Corrado Aaron Visaggio,Gerardo Canfora,Aniello Cimitile;Mobile malware detection in the real world.;744-746;3;Posters;
2016;Patrick Rempel,Patrick Mader;Continuous assessment of software traceability.;747-748;2;Posters;
2016;Thanh Van Nguyen,Hoan Anh Nguyen,Tien N. Nguyen;Characterizing API elements in software documentation with vector representation.;749-751;3;Posters;
2016;Xin Zhang,Zhenyu Chen,Chunrong Fang,Zicong Liu;Guiding the crowds for Android testing.;752-753;2;Posters;
2016;Kai Mindermann,Jan-Peter Ostberg,Stefan Wagner 0001;Assessing iterative practical software engineering courses with play money.;754-755;2;Posters;
2016;Trong Duc Nguyen,Hoan Anh Nguyen,Tien N. Nguyen;Mapping API elements for code migration with vector representations.;756-758;3;Posters;
2016;Nitin M. Tiwari,Ganesha Upadhyaya,Hridesh Rajan;Candoia: a platform and ecosystem for mining software repositories tools.;759-764;6;Posters;
2016;Cristian Cadar,Alastair F. Donaldson;Analysing the program analyser.;765-768;4;Visions of 2025 and beyond (V2025);
2016;Mark Staples,Liming Zhu,John C. Grundy;Continuous validation for data analytics systems.;769-772;4;Visions of 2025 and beyond (V2025);
2016;Danny Dig,Ralph E. Johnson,Darko Marinov,Brian P. Bailey,Don S. Batory;COPE: vision for a change-oriented programming environment.;773-776;4;Visions of 2025 and beyond (V2025);
2016;Erika S. Mesh,David M. Tolar,J. Scott Hawker;Exploring process improvement decisions to support a rapidly evolving developer base.;777-780;4;Visions of 2025 and beyond (V2025);
2016;Ravi Chugh;Prodirect manipulation: bidirectional programming for the masses.;781-784;4;Visions of 2025 and beyond (V2025);
2016;Mithun P. Acharya,Chris Parnin,Nicholas A. Kraft,Aldo Dagnino,Xiao Qu;Code drones.;785-788;4;Visions of 2025 and beyond (V2025);
2016;Lionel C. Briand,Shiva Nejati,Mehrdad Sabetzadeh,Domenico Bianculli;Testing the untestable: model testing of complex software-intensive systems.;789-792;4;Visions of 2025 and beyond (V2025);
2016;Pamela Zave;Theories of everything.;793-796;4;Visions of 2025 and beyond (V2025);
2016;David Socha,Robin Adams,Kelly Franznick,Wolff-Michael Roth,Kevin J. Sullivan,Josh Tenenberg,Skip Walter;Wide-field ethnography: studying software engineering in 2025 and beyond.;797-802;6;Visions of 2025 and beyond (V2025);
2016;Lukas Linsbauer,Alexander Egyed,Roberto Erick Lopez-Herrejon;A variability aware configuration management and revision control platform.;803-806;4;Doctoral symposium;
2016;Duc Minh Le,Nenad Medvidovic;Architectural-based speculative analysis to predict bugs in a software system.;807-810;4;Doctoral symposium;
2016;Christopher Vendome,Denys Poshyvanyk;Assisting developers with license compliance.;811-814;4;Doctoral symposium;
2016;Simon Schwichtenberg,Gregor Engels;Automatized derivation of comprehensive specifications for black-box services.;815-818;4;Doctoral symposium;
2016;Li Li;Boosting static analysis of Android apps through code instrumentation.;819-822;4;Doctoral symposium;
2016;Iflaah Salman;Cognitive biases in software quality and testing.;823-826;4;Doctoral symposium;
2016;Diego Cedrim;Context-sensitive identification of refactoring opportunities.;827-830;4;Doctoral symposium;
2016;Kevin Moran,Denys Poshyvanyk;Fixing bug reporting for mobile and GUI-based applications.;831-834;4;Doctoral symposium;
2016;Rahul Mohanani;Implications of requirements engineering on software design: a cognitive insight.;835-838;4;Doctoral symposium;
2016;Fabian Rojas Blum;Mining software process lines.;839-842;4;Doctoral symposium;
2016;Jin Guo,Jane-Cleland Huang;Ontology learning and its application in software-intensive projects.;843-846;4;Doctoral symposium;
2016;Ali Sajedi Badashian;Realistic bug triaging.;847-850;4;Doctoral symposium;
2016;Katja Kevic;Recognizing relevant code elements during change task navigation.;851-854;4;Doctoral symposium;
2016;Stefan Fischer;Reducing the test effort of variability-rich systems by using feature interaction knowledge and variability-aware source code analysis.;855-858;4;Doctoral symposium;
2016;Christopher Theisen;Reusing stack traces: automated attack surface approximation.;859-862;4;Doctoral symposium;
2016;Leonardo da Silva Sousa;Spotting design problems with smell agglomerations.;863-866;4;Doctoral symposium;
2016;Chakkrit Tantithamthavorn;Towards a better understanding of the impact of experimental components on defect prediction modelling.;867-870;4;Doctoral symposium;
2016;Mona Rahimi;Trace link evolution across multiple software versions in safety-critical systems.;871-874;4;Doctoral symposium;
2016;Gabriella Castro Barbosa Costa;Using data provenance to improve software process enactment, monitoring and analysis.;875-878;4;Doctoral symposium;
2016;Roberto Oliveira;When more heads are better than one?: understanding and improving collaborative identification of code smells.;879-882;4;Doctoral symposium;
2016;Suresh Kothari,Ahmed Tamrawi,Jon Mathews;Rethinking verification: accuracy, efficiency and scalability through human-machine collaboration.;885-886;2;Technical briefings;
2016;Tim Menzies;How not to do it: anti-patterns for data science in software engineering.;887;1;Technical briefings;
2016;Robyn R. Lutz,Jack H. Lutz;Software engineering for molecular programming.;888-889;2;Technical briefings;
2016;Barry W. Boehm;Improving and balancing software qualities.;890-891;2;Technical briefings;
2016;Dalal Alrajeh,Alessandra Russo,Sebastian Uchitel,Jeffrey Kramer;Logic-based learning in software engineering.;892-893;2;Technical briefings;
2016;Xavier Franch,Guenther Ruhe;Software release planning.;894-895;2;Technical briefings;
2016;Xavier Franch,Angelo Susi;Risk assessment in open source systems.;896-897;2;Technical briefings;
2016;Sonia Haiduc,Venera Arnaoudova,Andrian Marcus,Giuliano Antoniol;The use of text retrieval and natural language processing in software engineering.;898-899;2;Technical briefings;
2016;Natalia Juristo Juzgado,Sira Vegas;Analyzing software engineering experiments: everything you always wanted to know but were afraid to ask.;900-901;2;Technical briefings;
2016;Latifa Guerrouj,Olga Baysal,David Lo,Foutse Khomh;Software analytics: challenges and opportunities.;902-903;2;Technical briefings;
2016;Tao Xie,Nikolai Tillmann,Pratap Lakshman;Advances in unit testing: theory and practice.;904-905;2;Technical briefings;
2016;Jurgen Cito,Harald C. Gall;Using docker containers to improve reproducibility in software engineering research.;906-907;2;Technical briefings;
2016;Antonio Filieri,Martina Maggio;Control theory for software engineering: technical briefing.;908-910;3;Technical briefings;
2015;Janet Siegmund,Norbert Siegmund,Sven Apel;Views on Internal and External Validity in Empirical Software Engineering.;9-19;11;Reflections and Studies on Methodologies and Practices I;
2015;Paul Ralph;Developing and Evaluating Software Engineering Process Theories.;20-31;12;Reflections and Studies on Methodologies and Practices I;
2015;Kyle Dewey,Lawton Nichols,Ben Hardekopf;Automated Data Structure Generation: Refuting Common Wisdom.;32-43;12;Reflections and Studies on Methodologies and Practices I;
2015;Rahulkrishna Yandrapally,Giriprasad Sridhara,Saurabh Sinha;Automated Modularization of GUI Test Cases.;44-54;11;Testing I;
2015;Zebao Gao,Yalan Liang,Myra B. Cohen,Atif M. Memon,Zhen Wang;Making System User Interactive Tests Repeatable: When and What Should We Control?;55-65;11;Testing I;
2015;Fabrizio Pastore,Leonardo Mariani;ZoomIn: Discovering Failures by Detecting Wrong Assertions.;66-76;11;Testing I;
2015;Damien Octeau,Daniel Luchaup,Matthew Dering,Somesh Jha,Patrick McDaniel;Composite Constant Propagation: Application to Android Inter-Component Communication Analysis.;77-88;12;Mobile Applications;
2015;Shengqian Yang,Dacong Yan,Haowei Wu,Yan Wang,Atanas Rountev;Static Control-Flow Analysis of User-Driven Callbacks in Android Applications.;89-99;11;Mobile Applications;
2015;Jiaping Gui,Stuart McIlroy,Meiyappan Nagappan,William G. J. Halfond;Truth in Advertising: The Hidden Cost of Mobile Ads for Software Developers.;100-110;11;Mobile Applications;
2015;Tianyi Zhang,Myoungkyu Song,Joseph Pinedo,Miryung Kim;Interactive Code Review for Systematic Changes.;111-122;12;Evolution and Maintenance;
2015;Mohsen Vakilian,Raluca Sauciuc,J. David Morgenthaler,Vahab S. Mirrokni;Automated Decomposition of Build Targets.;123-133;11;Evolution and Maintenance;
2015;Mike Barnett,Christian Bird,Joao Brunet,Shuvendu K. Lahiri;Helping Developers Help Themselves: Automatic Decomposition of Code Review Changesets.;134-144;11;Evolution and Maintenance;
2015;Denis Gopan,Evan Driscoll,Ducson Nguyen,Dimitri Naydich,Alexey Loginov,David Melski;Data-Delineation in Software Binaries and its Application to Buffer-Overrun Discovery.;145-155;11;Analysis I;
2015;Antonio Carzaniga,Andrea Mattavelli,Mauro Pezze;Measuring Software Redundancy.;156-166;11;Analysis I;
2015;Yao Pan,Jules White,Yu Sun 0002,Jeffrey G. Gray;Gray Computing: An Analysis of Computing with Background JavaScript Tasks.;167-177;11;Analysis I;
2015;Alexander von Rhein,Alexander Grebhahn,Sven Apel,Norbert Siegmund,Dirk Beyer 0001,Thorsten Berger;Presence-Condition Simplification in Highly Configurable Systems.;178-188;11;Highly Configurable and Adaptive Systems;
2015;Shoham Ben-David,Baruch Sterin,Joanne M. Atlee,Sandy Beidu;Symbolic Model Checking of Product-Line Requirements Using SAT-Based Methods.;189-199;11;Highly Configurable and Adaptive Systems;
2015;Antonio Filieri,Lars Grunske,Alberto Leva;Lightweight Adaptive Filtering for Efficient Learning and Updating of Probabilistic Models.;200-211;12;Highly Configurable and Adaptive Systems;
2015;Yun Young Lee,Darko Marinov,Ralph E. Johnson;Tempura: Temporal Dimension for IDEs.;212-222;11;Tools and Environments;
2015;YoungSeok Yoon,Brad A. Myers;Supporting Selective Undo in a Code Editor.;223-233;11;Tools and Environments;
2015;Mohsen Vakilian,Amarin Phaosawasdi,Michael D. Ernst,Ralph E. Johnson;Cascade: A Universal Programmer-Assisted Type Qualifier Inference Tool.;234-245;12;Tools and Environments;
2015;Valerio Terragni,Shing-Chi Cheung,Charles Zhang;RECONTEST: Effective Regression Testing of Concurrent Programs.;246-256;11;Regression Testing;
2015;Qiuping Yi,Zijiang Yang,Jian Liu,Chen Zhao,Chao Wang;A Synergistic Analysis Method for Explaining Failed Regression Tests.;257-267;11;Regression Testing;
2015;Ripon Kumar Saha,Lingming Zhang,Sarfraz Khurshid,Dewayne E. Perry;An Information Retrieval Approach for Regression Test Prioritization Based on Program Changes.;268-279;12;Regression Testing;
2015;Li Li 0029,Alexandre Bartel,Tegawende F. Bissyande,Jacques Klein,Yves Le Traon,Steven Arzt,Siegfried Rasthofer,Eric Bodden,Damien Octeau,Patrick McDaniel;IccTA: Detecting Inter-Component Privacy Leaks in Android Apps.;280-291;12;Security and Privacy;
2015;Koen Yskout,Riccardo Scandariato,Wouter Joosen;Do Security Patterns Really Help Designers?;292-302;11;Security and Privacy;
2015;Wei Yang,Xusheng Xiao,Benjamin Andow,Sihan Li,Tao Xie,William Enck;AppContext: Differentiating Malicious and Benign Mobile App Behaviors Using Context.;303-313;11;Security and Privacy;
2015;Michael Pradel,Parker Schuh,Koushik Sen;TypeDevil: Dynamic Type Inconsistency Analysis for JavaScript.;314-324;11;Analysis II;
2015;Frolin S. Ocariza Jr.,Karthik Pattabiraman,Ali Mesbah 0001;Detecting Inconsistencies in JavaScript MVC Applications.;325-335;11;Analysis II;
2015;Mattia Fazzini,Prateek Saxena,Alessandro Orso;AutoCSP: Automatically Retrofitting CSP to Web Applications.;336-346;11;Analysis II;
2015;Michael Waterman,James S. Noble,George Allan;How Much Up-Front? A Grounded theory of Agile Architecture.;347-357;11;Reflections and Studies on Methodologies and Practices II;
2015;Georgios Gousios,Andy Zaidman,Margaret-Anne D. Storey,Arie van Deursen;Work Practices and Challenges in Pull-Based Development: The Integrator's Perspective.;358-368;11;Reflections and Studies on Methodologies and Practices II;
2015;Edward K. Smith,Christian Bird,Thomas Zimmermann 0001;Build It Yourself! Homegrown Tools in a Large Software Company.;369-379;11;Reflections and Studies on Methodologies and Practices II;
2015;Jorg Liebig,Andreas Janker,Florian Garbe,Sven Apel,Christian Lengauer;Morpheus: Variability-Aware Refactoring in the Wild.;380-391;12;Refactoring;
2015;Na Meng,Lisa Hua,Miryung Kim,Kathryn S. McKinley;Does Automated Refactoring Obviate Systematic Editing?;392-402;11;Refactoring;
2015;Michele Tufano,Fabio Palomba,Gabriele Bavota,Rocco Oliveto,Massimiliano Di Penta,Andrea De Lucia,Denys Poshyvanyk;When and Why Your Code Starts to Smell Bad.;403-414;12;Refactoring;
2015;Jieming Zhu,Pinjia He,Qiang Fu,Hongyu Zhang,Michael R. Lyu,Dongmei Zhang;Learning to Log: Helping Developers Make Informed Logging Decisions.;415-425;11;Mining;
2015;Vitalii Avdiienko,Konstantin Kuznetsov,Alessandra Gorla,Andreas Zeller,Steven Arzt,Siegfried Rasthofer,Eric Bodden;Mining Apps for Abnormal Usage of Sensitive Data.;426-436;11;Mining;
2015;Pavel Avgustinov,Arthur I. Baars,Anders S. Henriksen,R. Greg Lavender,Galen Menzel,Oege de Moor,Max Schafer,Julian Tibble;Tracking Static Analysis Violations over Time to Capture Developer Characteristics.;437-447;11;Mining;
2015;Sergey Mechtaev,Jooyong Yi,Abhik Roychoudhury;DirectFix: Looking for Simple Program Repairs.;448-458;11;Patching and Fixing I;
2015;Qing Gao,Yingfei Xiong,Yaqing Mi,Lu Zhang,Weikun Yang,Zhaoping Zhou,Bing Xie,Hong Mei;Safe Memory-Leak Fixing for C Programs.;459-470;12;Patching and Fixing I;
2015;Shin Hwei Tan,Abhik Roychoudhury;relifix: Automated Repair of Software Regressions.;471-482;12;Patching and Fixing I;
2015;Kim Sebastian Herzig,Michaela Greiler,Jacek Czerwonka,Brendan Murphy;The Art of Testing Less without Sacrificing Quality.;483-493;11;Testing II;
2015;Stefan Winter,Oliver Schwahn,Roberto Natella,Neeraj Suri,Domenico Cotroneo;No PAIN, No Gain? The Utility of PArallel Fault INjections.;494-505;12;Testing II;
2015;Michael W. Whalen,Suzette Person,Neha Rungta,Matthew Staats,Daniela Grijincu;A Flexible and Non-intrusive Approach for Computing Complex Structural Coverage Metrics.;506-516;11;Testing II;
2015;Christopher Henard,Mike Papadakis,Mark Harman,Yves Le Traon;Combining Multi-Objective Search and Constraint Solving for Configuring Large Software Product Lines.;517-528;12;Search-Based;
2015;Daming Zou,Ran Wang,Yingfei Xiong,Lu Zhang,Zhendong Su,Hong Mei;A Genetic Algorithm for Detecting Significant Floating-Point Inaccuracies.;529-539;11;Search-Based;
2015;Yue Jia,Myra B. Cohen,Mark Harman,Justyna Petke;Learning Combinatorial Interaction Test Generation Strategies Using Hyperheuristic Search.;540-550;11;Search-Based;
2015;Thomas D. LaToza,Micky Chen,Luxi Jiang,Mengyao Zhao,Andre van der Hoek;Borrowing from the Crowd: A Study of Recombination in Software Design Competitions.;551-562;12;Collaboration and Coordination;
2015;Mitchell Joblin,Wolfgang Mauerer,Sven Apel,Janet Siegmund,Dirk Riehle;From Developer Networks to Verified Communities: A Fine-Grained Approach.;563-573;11;Collaboration and Coordination;
2015;Eirini Kalliamvakou,Daniela E. Herlea,Kelly Blincoe,Leif Singer,Daniel M. German;Open Source-Style Collaborative Development Practices in Commercial Projects Using GitHub.;574-585;12;Collaboration and Coordination;
2015;Cathrin Weiss,Cindy Rubio-Gonzalez,Ben Liblit;Database-Backed Program Analysis for Scalable Error Propagation.;586-597;12;Analysis Infrastructure;
2015;Caitlin Sadowski,Jeffrey van Gogh,Ciera Jaspan,Emma Soderberg,Collin Winter;Tricorder: Building a Program Analysis Ecosystem.;598-608;11;Analysis Infrastructure;
2015;Aleksandar Milicevic,Joseph P. Near,Eunsuk Kang,Daniel B. Jackson;Alloy*: A General-Purpose Higher-Order Relational Constraint Solver.;609-619;11;Analysis Infrastructure;
2015;Edmund Wong,Lei Zhang,Song Wang,Taiyue Liu,Lin Tan;DASE: Document-Assisted Symbolic Execution for Improving Automated Software Testing.;620-631;12;Symbolic Execution;
2015;Rui Qiu,Guowei Yang,Corina S. Pasareanu,Sarfraz Khurshid;Compositional Symbolic Execution with Memoized Replay.;632-642;11;Symbolic Execution;
2015;Yufeng Zhang,Zhenbang Chen,Ji Wang,Wei Dong,Zhiming Liu 0001;Regular Property Guided Dynamic Symbolic Execution.;643-653;11;Symbolic Execution;
2015;Ting Su,Zhoulai Fu,Geguang Pu,Jifeng He,Zhendong Su;Combining Symbolic Execution and Model Checking for Data Flow Testing.;654-665;12;Symbolic Execution;
2015;Iflaah Salman,Ayse Tosun Misirli,Natalia Juristo Juzgado;Are Students Representatives of Professionals in Software Engineering Experiments?;666-676;11;Organizational and Human Factors;
2015;Mathieu Lavallee,Pierre N. Robillard;Why Good Developers Write Bad Code: An Observational Case Study of the Impacts of Organizational Factors on Software Quality.;677-687;11;Organizational and Human Factors;
2015;Sebastian Muller,Thomas Fritz;Stuck and Frustrated or in Flow and Happy: Sensing Developers' Emotions and Progress.;688-699;12;Organizational and Human Factors;
2015;Paul Luo Li,Andy Ko,Jiamin Zhu;What Makes a Great Software Engineer?;700-710;11;Organizational and Human Factors;
2015;Luciano Baresi,Mohammad Mehdi Pourhashem Kallehbasti,Matteo Rossi;Efficient Scalable Verification of LTL Specifications.;711-721;11;Specification and Verification;
2015;Daniel Matichuk,Toby C. Murray,June Andronick,D. Ross Jeffery,Gerwin Klein,Mark Staples;Empirical Study Towards a Leading Indicator for Cost of Formal Software Verification.;722-732;11;Specification and Verification;
2015;German Regis,Renzo Degiovanni,Nicolas D'Ippolito,Nazareno Aguirre;Specifying Event-Based Systems with a Counting Fluent Temporal Logic.;733-743;11;Specification and Verification;
2015;Ivan Bocic,Tevfik Bultan;Coexecutability for Efficient Verification of Data Model Updates.;744-754;11;Specification and Verification;
2015;Casey Casalnuovo,Premkumar T. Devanbu,Abilio Oliveira,Vladimir Filkov,Baishakhi Ray;Assert Use in GitHub Projects.;755-766;12;Programming;
2015;Haitao Steve Zhu,Chaoren Lin,Yu David Liu;A Programming Model for Sustainable Software.;767-777;11;Programming;
2015;Sebastian Nanz,Carlo A. Furia;A Comparative Study of Programming Languages in Rosetta Code.;778-788;11;Programming;
2015;Baljinder Ghotra,Shane McIntosh,Ahmed E. Hassan;Revisiting the Impact of Classification Techniques on the Performance of Defect Prediction Models.;789-800;12;Prediction Models;
2015;Fayola Peters,Tim Menzies,Lucas Layman;LACE2: Better Privacy-Preserving Data Sharing for Cross Project Defect Prediction.;801-811;11;Prediction Models;
2015;Chakkrit Tantithamthavorn,Shane McIntosh,Ahmed E. Hassan,Akinori Ihara,Ken-ichi Matsumoto;The Impact of Mislabelling on the Performance and Interpretation of Defect Prediction Models.;812-823;12;Prediction Models;
2015;Xiang Yuan,Chenggang Wu,Zhenjiang Wang,Jianjun Li,Pen-Chung Yew,Jeff Huang 0001,Xiaobing Feng,Yanyan Lan,Yunji Chen,Yong Guan;ReCBuLC: Reproducing Concurrency Bugs Using Local Clocks.;824-834;11;Analysis III;
2015;Markus Kusano,Arijit Chattopadhyay,Chao Wang;Dynamic Generation of Likely Invariants for Multithreaded Programs.;835-846;12;Analysis III;
2015;Jeff Huang 0001,Qingzhou Luo,Grigore Rosu;GPredict: Generic Predictive Concurrency Analysis.;847-857;11;Analysis III;
2015;Hoan Anh Nguyen,Tien N. Nguyen;Graph-Based Statistical Language Model for Code.;858-868;11;Working with APIs;
2015;Gayane Petrosyan,Martin P. Robillard,Renato De Mori;Discovering Information Explaining API Types Using Text Classification.;869-879;11;Working with APIs;
2015;Laura Moreno,Gabriele Bavota,Massimiliano Di Penta,Rocco Oliveto,Andrian Marcus;How Can I Use This Method?;880-890;11;Working with APIs;
2015;Van-Thuan Pham,Wei Boon Ng,Konstantin Rubinov,Abhik Roychoudhury;Hercules: Reproducing Crashes in Real-World Application Binaries.;891-901;11;Patching and Fixing II;
2015;Adrian Nistor,Po-Chun Chang,Cosmin Radoi,Shan Lu;CARAMEL: Detecting and Fixing Performance Problems That Have Non-Intrusive Fixes.;902-912;11;Patching and Fixing II;
2015;Hao Zhong,Zhendong Su;An Empirical Study on Real Bug Fixes.;913-923;11;Patching and Fixing II;
2015;Zhongxing Yu,Chenggang Bai,Kai-Yuan Cai;Does the Failing Test Execute a Single or Multiple Faults? An Approach to Classifying Failing Tests.;924-935;12;Testing III;
2015;Mike Papadakis,Yue Jia,Mark Harman,Yves Le Traon;Trivial Compiler Equivalence: A Large Scale Empirical Study of a Simple, Fast and Effective Equivalent Mutant Detection Technique.;936-946;11;Testing III;
2015;Giovanni Denaro,Alessandro Margara,Mauro Pezze,Mattia Vivanti;Dynamic Data Flow Testing of Object Oriented Systems.;947-958;12;Testing III;
2015;Felienne Hermans,Emerson R. Murphy-Hill;Enron's Spreadsheets and Related Emails: A Dataset and Analysis.;7-16;10;Empirical I;
2015;Hucheng Zhou,Jian-Guang Lou,Hongyu Zhang,Haibo Lin,Haoxiang Lin,Tingting Qin;An Empirical Study on Quality Issues of Production Big Data Platform.;17-26;10;Empirical I;
2015;Jacek Czerwonka,Michaela Greiler,Jack Tilford;Code Reviews Do Not Find Bugs. How the Current Code Review Best Practice Slows Us Down.;27-28;2;Empirical I;
2015;Yongbae Park,Shin Hong,Moonzoo Kim,Dongju Lee,Junhee Cho;Systematic Testing of Reactive Software with Non-Deterministic Events: A Case Study on LG Electric Oven.;29-38;10;Testing;
2015;Kim Sebastian Herzig,Nachiappan Nagappan;Empirically Detecting False Test Alarms Using Association Rules.;39-48;10;Testing;
2015;Jeff Anderson,Saeed Salem,Hyunsook Do;Striving for Failure: An Industrial Case Study about Test Failure Prediction.;49-58;10;Testing;
2015;Maayan Goldstein,Itai Segall;Automatic and Continuous Software Architecture Validation.;59-68;10;Architecture I;
2015;Thibaud Lutellier,Devin Chollak,Joshua Garcia,Lin Tan,Derek Rayside,Nenad Medvidovic,Robert Kroeger;Comparing Software Architecture Recovery Techniques Using Accurate Dependencies.;69-78;10;Architecture I;
2015;Luciano Baresi,Laurent-Walter Goix,Sam Guinea,Valerio Panzica La Manna,Jacopo Aliprandi,Dario Archetti;SPF: A Middleware for Social Interaction in Mobile Proximity Environments.;79-88;10;Architecture I;
2015;Bora Caglayan,Burak Turhan,Ayse Bener,Mayy Habayeb,Andriy Miransky,Enzo Cialini;Merits of Organizational Metrics in Defect Prediction: An Industrial Replication.;89-98;10;Quality;
2015;Ming Tan,Lin Tan,Sashank Dara,Caleb Mayeux;Online Defect Prediction for Imbalanced Data.;99-108;10;Quality;
2015;Joel Cox,Eric Bouwers,Marko C. J. D. van Eekelen,Joost Visser;Measuring Dependency Freshness in Software Systems.;109-118;10;Quality;
2015;Michael Klas,Thomas Bauer,Andreas Dereani,Thomas Soderqvist,Philipp Helle;A Large-Scale Technology Evaluation Study: Effects of Model-based Analysis and Testing.;119-128;10;Model-Based;
2015;Mikael Lindvall,Dharmalingam Ganesan,Ragnar Ardal,Robert E. Wiegand;Metamorphic Model-Based Testing Applied on NASA DAT - An Experience Report.;129-138;10;Model-Based;
2015;Jean-Frederic Etienne,Manuel Maarek,Florent Anseaume,Veronique Delebarre;Improving Predictability, Efficiency and Trust of Model-Based Proof Activity.;139-148;10;Model-Based;
2015;David Maplesden,Karl von Randow,Ewan D. Tempero,John G. Hosking,John C. Grundy;Performance Analysis Using Subsuming Methods: An Industrial Case Study.;149-158;10;Performance and Logging;
2015;King Chun Foo,Zhen Ming Jiang,Bram Adams,Ahmed E. Hassan,Ying Zou,Parminder Flora;An Industrial Case Study on the Automated Detection of Performance Regressions in Heterogeneous Environments.;159-168;10;Performance and Logging;
2015;Antonio Pecchia,Marcello Cinque,Gabriella Carrozza,Domenico Cotroneo;Industry Practices and Event Logging: Assessment of a Critical Software Development Process.;169-178;10;Performance and Logging;
2015;Rick Kazman,Yuanfang Cai,Ran Mo,Qiong Feng,Lu Xiao,Serge Haziyev,Volodymyr Fedak,Andriy Shapochka;A Case Study in Locating the Architectural Roots of Technical Debt.;179-188;10;Architecture II and Security;
2015;Jan Schroeder,Daniela Holzner,Christian Berger 0001,Carl-Johan Hoel,Leo Laine,Anders Magnusson;Design and Evaluation of a Customizable Multi-Domain Reference Architecture on Top of Product Lines of Self-Driving Heavy Vehicles - An Industrial Case Study.;189-198;10;Architecture II and Security;
2015;Christopher Theisen,Kim Sebastian Herzig,Patrick Morrison,Brendan Murphy,Laurie A. Williams;Approximating Attack Surfaces with Stack Traces.;199-208;10;Architecture II and Security;
2015;Damien Doligez,Christele Faure,Therese Hardin,Manuel Maarek;Avoiding Security Pitfalls with Functional Programming: A Report on the Development of a Secure XML Validator.;209-218;10;Architecture II and Security;
2015;Megan Squire;"""Should We Move to Stack Overflow?"" Measuring the Utility of Social Media for Developer Support.";219-228;10;Empirical II;
2015;Vinay Augustine,Patrick Francis,Xiao Qu,David C. Shepherd,Will Snipes,Christoph Braunlich,Thomas Fritz;A Field Study on Fostering Structural Navigation with Prodet.;229-238;10;Empirical II;
2015;David C. Shepherd,Kostadin Damevski,Lori L. Pollock;How and When to Transfer Software Engineering Research via Extensions.;239-240;2;Empirical II;
2015;Katrina E. Falkner,Claudia Szabo,Rebecca Vivian,Nickolas J. G. Falkner;Evolution of Software Development Strategies.;243-252;10;Developing Students' SE Skills;
2015;Thomas V. Wilkins,John C. Georgas;Drawing Insight from Student Perceptions of Reflective Design Learning.;253-262;10;Developing Students' SE Skills;
2015;Farshid Anvari,Deborah Richards,Michael Hitchens,Muhammad Ali Babar;Effectiveness of Persona with Personality Traits on Conceptual Design.;263-272;10;Developing Students' SE Skills;
2015;Nancy R. Mead;Industry/University Collaboration in Software Engineering Education: Refreshing and Retuning Our Strategies.;273-275;3;Panel - Industry/University Collaboration;
2015;Claudia Szabo;Novice Code Understanding Strategies during a Software Maintenance Assignment.;276-284;9;SE Management and Processes, and Short Papers;
2015;Maria Paasivaara,Kelly Blincoe,Casper Lassenius,Daniela E. Herlea,Jyoti Sheoran,Francis Harrison,Prashant Chhabra,Aminah Yussuf,Veikko Isotalo;Learning Global Agile Software Engineering Using Same-Site and Cross-Site Teams.;285-294;10;SE Management and Processes, and Short Papers;
2015;Joseph Sant;Code Repurposing as an Assessment Tool.;295-298;4;SE Management and Processes, and Short Papers;
2015;Kristina Marasovic,Michael Lutz;Remote Development and Distance Delivery of Innovative Courses: Challenges and Opportunities.;299-302;4;SE Management and Processes, and Short Papers;
2015;Christian Koppe,Marko C. J. D. van Eekelen,Stijn Hoppenbrouwers;Improving Student Group Work with Collaboration Patterns: A Case Study.;303-306;4;SE Management and Processes, and Short Papers;
2015;Michel Wermelinger,Jon G. Hall,Lucia Rapanotti,Leonor Barroca,Magnus Ramage,Arosha K. Bandara;Teaching Software Systems Thinking at The Open University.;307-310;4;SE Management and Processes, and Short Papers;
2015;Jon G. Hall,Lucia Rapanotti;Masters-Level Software Engineering Education and the Enriched Student Context.;311-314;4;SE Management and Processes, and Short Papers;
2015;Mehdi Jazayeri;Combining Mastery Learning with Project-Based Learning in a First Programming Course: An Experience Report.;315-318;4;SE Management and Processes, and Short Papers;
2015;Neelam Soundarajan,Swaroop Joshi,Rajiv Ramnath;Collaborative and Cooperative-Learning in Software Engineering Courses.;319-322;4;SE Management and Processes, and Short Papers;
2015;Lucia Camilloni,Diego Vallespir,Mark A. Ardis;Using GSwE2009 for the Evaluation of a Master Degree in Software Engineering in the Universidad de la República.;323-332;10;Case Studies;
2015;Barry W. Boehm,Supannika Koolmanojwong Mobasser;System Thinking: Educating T-Shaped Software Engineers.;333-342;10;Case Studies;
2015;Elizabeth Suescun Monsalve,Julio Cesar Sampaio do Prado Leite,Vera Werneck;Transparently Teaching in the Context of Game-based Learning: the Case of SimulES-W.;343-352;10;Case Studies;
2015;Lawrence Peters,Ana M. Moreno;Educating Software Engineering Managers - Revisited What Software Project Managers Need to Know Today.;353-359;7;Specialised Domains in SE Education;
2015;Noriko Hanakawa;Contest Based Learning with Blending Software Engineering and Business Management: For Students' High Motivation and High Practice Ability.;360-369;10;Specialised Domains in SE Education;
2015;Jiwon Shin,Andrey Rusakov,Bertrand Meyer;Concurrent Software Engineering and Robotics Education.;370-379;10;Specialised Domains in SE Education;
2015;Rebecca Vivian,Hamid Tarmazdi,Katrina E. Falkner,Nickolas J. G. Falkner,Claudia Szabo;The Development of a Dashboard Tool for Visualising Online Teamwork Discussions.;380-388;9;Infrastructure Support in SE Education;
2015;Jaejoon Lee,Gerald Kotonya,Jonathan P. Whittle,Christopher Bull 0001;Software Design Studio: A Practical Example.;389-397;9;Infrastructure Support in SE Education;
2015;Judy M. Bishop,R. Nigel Horspool,Tao Xie,Nikolai Tillmann,Jonathan de Halleux;Code Hunt: Experience with Coding Contests at Scale.;398-407;10;Infrastructure Support in SE Education;
2015;Erica Janke,Philipp Brune,Stefan Wagner;Does Outside-In Teaching Improve the Learning of Object-Oriented Programming?;408-417;10;SE Teaching Methods and Technologies;
2015;Yvonne Sedelmaier,Dieter Landes;Active and Inductive Learning in Software Engineering Education.;418-427;10;SE Teaching Methods and Technologies;
2015;Lassi Haaranen,Petri Ihantola,Juha Sorva,Arto Vihavainen;In Search of the Emotional Design Effect in Programming.;428-434;7;SE Teaching Methods and Technologies;
2015;Andrew Simpson,Andrew P. Martin,Cas J. F. Cremers,Ivan Flechais,Ivan Martinovic,Kasper Bonne Rasmussen;Experiences in Developing and Delivering a Programme of Part-Time Education in Software and Systems Security.;435-444;10;Experiences and Experiments;
2015;Chandan Raj Rupakheti,Stephen V. Chenoweth;Teaching Software Architecture to Undergraduate Students: An Experience Report.;445-454;10;Experiences and Experiments;
2015;Paul V. Anderson,Sarah Heckman,Mladen A. Vouk,David Wright,Michael Carter,Janet E. Burge,Gerald C. Gannod;CS/SE Instructors Can Improve Student Writing without Reducing Class Time Devoted to Technical Content: Experimental Results.;455-464;10;Experiences and Experiments;
2015;Christoph Becker,Ruzanna Chitchyan,Leticia Duboc,Steve M. Easterbrook,Birgit Penzenstadler,Norbert Seyff,Colin C. Venters;Sustainability Design and Software: The Karlskrona Manifesto.;467-476;10;Panel: Software Systems and Sustainability - Principles and Commitments;
2015;Harun Baraki,Kurt Geihs,Christian Voigtmann,Axel Hoffmann,Romy Kniewel,Bjorn-Elmar Macek,Julia Zirfas;Interdisciplinary Design Patterns for Socially Aware Computing.;477-486;10;Values and Concerns in Society;
2015;Peter Newman,Maria Angela Ferrario,William Simm,Stephen Forshaw,Adrian Friday,Jonathan P. Whittle;The Role of Design Thinking and Physical Prototyping in Social Software Engineering.;487-496;10;Values and Concerns in Society;
2015;Balbir S. Barn,Ravinder Barn,Franco Raimondi;On the Role of Value Sensitive Concerns in Software Engineering Practice.;497-500;4;Values and Concerns in Society;
2015;Ruzanna Chitchyan,Walter Cazzola,Awais Rashid;Engineering Sustainability Through Language.;501-504;4;SE Techniques as Enablers of Sustainability;
2015;Javier Luis Canovas Izquierdo,Jordi Cabot;Enabling the Definition and Enforcement of Governance Rules in Open Source Systems.;505-514;10;SE Techniques as Enablers of Sustainability;
2015;Animesh Pathak,Valerie Issarny,James Holston;AppCivist - A Service-Oriented Software Platform for Socially Sustainable Activism.;515-518;4;SE Techniques as Enablers of Sustainability;
2015;Kelly Lyons,Christie Oh;SOA4DM: Applying an SOA Paradigm to Coordination in Humanitarian Disaster Response.;519-522;4;SE Techniques as Enablers of Sustainability;
2015;Awais Rashid,Karenza Moore,Corinne May-Chahal,Ruzanna Chitchyan;Managing Emergent Ethical Concerns for Software Engineering in Society.;523-526;4;SE Impact on Users;
2015;Peter Sawyer,Alistair G. Sutcliffe,Paul Rayson,Chris Bull;Dementia and Social Sustainability: Challenges for Software Engineering.;527-530;4;SE Impact on Users;
2015;Marcus Jagemar,Gordana Dodig-Crnkovic;Cognitively Sustainable ICT with Ubiquitous Mobile Services - Challenges and Opportunities.;531-540;10;SE Impact on Users;
2015;Premkumar T. Devanbu;New Initiative: The Naturalness of Software.;543-546;4;New Dimensions;
2015;Anthony Elliott,Brian Peiris,Chris Parnin;Virtual Reality in Software Engineering: Affordances, Applications, and Challenges.;547-550;4;New Dimensions;
2015;Rui Abreu,M. Hakan Erdogmus,Alexandre Perez;CodeAware: Sensor-Based Fine-Grained Monitoring and Management of Software Artifacts.;551-554;4;New Dimensions;
2015;Roberto Minelli,Andrea Mocci,Michele Lanza;Free Hugs - Praising Developers for Their Actions.;555-558;4;New Dimensions;
2015;Moritz Beller,Georgios Gousios,Andy Zaidman;How (Much) Do Developers Test?;559-562;4;New Dimensions;
2015;Thomas D. LaToza,Andre van der Hoek;A Vision of Crowd Development.;563-566;4;Human and Crowd;
2015;Maria Gomez,Matias Martinez,Martin Monperrus,Romain Rouvoy;When App Stores Listen to the Crowd to Fight Bugs in the Wild.;567-570;4;Human and Crowd;
2015;Shihong Huang,Pedro Miranda;Incorporating Human Intention into Self-Adaptive Systems.;571-574;4;Human and Crowd;
2015;Francisco Gomes de Oliveira Neto,Richard Torkar,Patricia D. L. Machado;An Initiative to Improve Reproducibility and Empirical Evaluation of Software Testing Techniques.;575-578;4;Human and Crowd;
2015;Hridesh Rajan,Tien N. Nguyen,Gary T. Leavens,Robert Dyer 0001;Inferring Behavioral Specifications from Large-scale Repositories by Leveraging Collective Intelligence.;579-582;4;Human and Crowd;
2015;Antonio Vetro,Saahil Ognawala,Daniel Mendez Fernandez,Stefan Wagner 0001;Fast Feedback Cycles in Empirical Software Engineering Research.;583-586;4;Human and Crowd;
2015;Ewen Denney,Ganesh J. Pai,Ibrahim Habli;Dynamic Safety Cases for Through-Life Safety Assurance.;587-590;4;New Formalisms;
2015;Nafi Diallo,Wided Ghardallou,Ali Mili;Correctness and Relative Correctness.;591-594;4;New Formalisms;
2015;Hui Song,Amal Elgammal,Vivek Nallur,Franck Chauvel,Franck Fleurey,Siobhan Clarke;On Architectural Diversity of Dynamic Adaptive Systems.;595-598;4;New Formalisms;
2015;David Clark,Robert Feldt,Simon M. Poulding,Shin Yoo;Information Transformation: An Underpinning Theory for Software Engineering.;599-602;4;New Formalisms;
2015;Omar Benomar,Houari A. Sahraoui,Pierre Poulin;A Unified Framework for the Comprehension of Software's Time.;603-606;4;Novel Programming;
2015;Rohan Padhye,Pankaj Dhoolia,Senthil Mani,Vibha Sinha;Smart Programming Playgrounds.;607-610;4;Novel Programming;
2015;Hridesh Rajan;Capsule-Oriented Programming.;611-614;4;Novel Programming;
2015;Owolabi Legunsen,Darko Marinov,Grigore Rosu;Evolution-Aware Monitoring-Oriented Programming.;615-618;4;Novel Programming;
2015;K. R. Jayaram;Towards Explicitly Elastic Programming Frameworks.;619-622;4;Novel Programming;
2015;Adel Noureddine,Ajitha Rajan;Optimising Energy Consumption of Design Patterns.;623-626;4;Novel Programming;
2015;Khanh Hoa Dam,Bastin Tony Roy Savarimuthu,Daniel Avery,Aditya K. Ghose;Mining Software Repositories for Social Norms.;627-630;4;Commits and Repositories;
2015;Titus Barik,Kevin Lubick,Emerson R. Murphy-Hill;Commit Bubbles.;631-634;4;Commits and Repositories;
2015;Carol V. Alexandru,Harald C. Gall;Rapid Multi-Purpose, Multi-Commit Code Analysis.;635-638;4;Commits and Repositories;
2015;Latifa Guerrouj,David Bourque,Peter C. Rigby;Leveraging Informal Documentation to Summarize Classes and Methods in Context.;639-642;4;Commits and Repositories;
2015;Tim McCarthy,Philipp Rummer,Martin Schaf;Bixie: Finding and Understanding Inconsistent Code.;645-648;4;Assistance;
2015;Christoph Treude,Mathieu Sicard,Marc Klocke,Martin P. Robillard;TaskNav: Task-Based Navigation of Software Documentation.;649-652;4;Assistance;
2015;Yuriy Tymchuk,Andrea Mocci,Michele Lanza;ViDI: The Visual Design Inspector.;653-656;4;Assistance;
2015;Scott Barnett,Rajesh Vasa,John C. Grundy;Bootstrapping Mobile App Development.;657-660;4;Assistance;
2015;Huascar Sanchez,Jim Whitehead;Source Code Curation on StackOverflow: The Vesperin System.;661-664;4;Assistance;
2015;Stefan Fischer 0006,Lukas Linsbauer,Roberto Erick Lopez-Herrejon,Alexander Egyed;The ECCO Tool: Extraction and Composition for Clone-and-Own.;665-668;4;Assistance;
2015;Fabio Palomba,Michele Tufano,Gabriele Bavota,Rocco Oliveto,Andrian Marcus,Denys Poshyvanyk,Andrea De Lucia;Extract Package Refactoring in ARIES.;669-672;4;Assistance;
2015;Lingfeng Bao,Jing Li,Zhenchang Xing,Xinyu Wang,Bo Zhou;scvRipper: Video Scraping Tool for Modeling Developers' Behavior Using Interaction Data.;673-676;4;Assistance;
2015;Iman I. Yusuf,Ian E. Thomas,Maria Spichkova,Steve G. Androulakis,Grischa R. Meyer,Daniel W. Drumm,George Opletal,Salvy P. Russo,Ashley M. Buckle,Heinz W. Schmidt;Chiminey: Reliable Computing and Data Management Platform in the Cloud.;677-680;4;Assistance;
2015;Yu Pei 0001,Carlo A. Furia,Martin Nordio,Bertrand Meyer;Automated Program Repair in an Integrated Development Environment.;681-684;4;Authoring and Synthesis;
2015;Dustin Wuest,Norbert Seyff,Martin Glinz;FLEXISKETCH TEAM: Collaborative Sketching and Notation Creation on the Fly.;685-688;4;Authoring and Synthesis;
2015;Tihomir Gvero,Viktor Kuncak;Interactive Synthesis Using Free-Form Queries.;689-692;4;Authoring and Synthesis;
2015;Hung Viet Nguyen,Christian Kastner,Tien N. Nguyen;Varis: IDE Support for Embedded Client Code in PHP Web Applications.;693-696;4;Authoring and Synthesis;
2015;Michalis Famelis,Naama Ben-David,Alessio Di Sandro,Rick Salay,Marsha Chechik;MU-MMINT: An IDE for Model Uncertainty.;697-700;4;Authoring and Synthesis;
2015;Sumit Gulwani,Mikael Mayer,Filip Niksic,Ruzica Piskac;StriSynth: Synthesis for Live Programming.;701-704;4;Authoring and Synthesis;
2015;Christine Franks,Zhaopeng Tu,Premkumar T. Devanbu,Vincent Hellendoorn;CACHECA: A Cache Language Model Based Code Suggestion Tool.;705-708;4;Authoring and Synthesis;
2015;Mario Linares Vasquez,Luis Fernando Cortes-Coy,Jairo Aponte,Denys Poshyvanyk;ChangeScribe: A Tool for Automatically Generating Commit Messages.;709-712;4;Authoring and Synthesis;
2015;Milos Gligoric,Lamyaa Eloussi,Darko Marinov;Ekstazi: Lightweight Test Selection.;713-716;4;Test and Analysis;
2015;Haruto Tanno,Xiaojing Zhang,Takashi Hoshino,Koushik Sen;TesMa and CATG: Automated Test Generation Tools for Models of Enterprise Applications.;717-720;4;Test and Analysis;
2015;Feifei Chen,John C. Grundy,Jean-Guy Schneider,Yun Yang,Qiang He;StressCloud: A Tool for Analysing Performance and Energy Consumption of Cloud Applications.;721-724;4;Test and Analysis;
2015;Alireza Sadeghi,Hamid Bagheri,Sam Malek;Analysis of Android Inter-App Security Vulnerabilities Using COVERT.;725-728;4;Test and Analysis;
2015;Christos Tsigkanos,Liliana Pasquale,Carlo Ghezzi,Bashar Nuseibeh;Ariadne: Topology Aware Adaptive Security for Cyber-Physical Systems.;729-732;4;Test and Analysis;
2015;Benjamin Holland,Tom Deering,Suresh Kothari,Jon Mathews,Nikhil Ranade;Security Toolbox for Detecting Novel and Sophisticated Android Malware.;733-736;4;Test and Analysis;
2015;Daniel Schwartz-Narbonne,Chanseok Oh,Martin Schaf,Thomas Wies;VERMEER: A Tool for Tracing and Explaining Faulty C Programs.;737-740;4;Test and Analysis;
2015;Rein Raudjarv,Allan Raundahl Gregersen;JRebel.Android: Runtime Class- and Resource Reloading for Android.;741-744;4;Test and Analysis;
2015;Rahul Dixit,Christof Lutteroth,Gerald Weber;FormTester: Effective Integration of Model-Based and Manually Specified Test Cases.;745-748;4;Test and Analysis;
2015;Caroline Lemieux;Mining Temporal Properties of Data Invariants.;751-753;3;ACM Student Research Competition;
2015;Ronie Salgado;Profiling Kernels Behavior to Improve CPU / GPU Interactions.;754-756;3;ACM Student Research Competition;
2015;Pascal Roos;Fast and Precise Statistical Code Completion.;757-759;3;ACM Student Research Competition;
2015;Gennaro Imparato;A Combined Technique of GUI Ripping and Input Perturbation Testing for Android Apps.;760-762;3;ACM Student Research Competition;
2015;Mario Linares Vasquez;Enabling Testing of Android Apps.;763-765;3;ACM Student Research Competition;
2015;Geoffrey Hecht;An Approach to Detect Android Antipatterns.;766-768;3;ACM Student Research Competition;
2015;Fabio Palomba;Textual Analysis for Code Smell Detection.;769-771;3;ACM Student Research Competition;
2015;Christopher Vendome;A Large Scale Study of License Usage on GitHub.;772-774;3;ACM Student Research Competition;
2015;Paola R. G. Accioly;Understanding Conflicts Arising from Collaborative Development.;775-777;3;ACM Student Research Competition;
2015;Martin White;Deep Representations for Software Engineering.;781-783;3;ACM Student Research Competition;
2015;Javier Escobar-Avila;Automatic Categorization of Software Libraries Using Bytecode.;784-786;3;ACM Student Research Competition;
2015;Abhishek Bichhawat;Post-Dominator Analysis for Precisely Handling Implicit Flows.;787-789;3;ACM Student Research Competition;
2015;Benoit Cornu;Casper: Using Ghosts to Debug Null Deferences with Dynamic Causality Traces.;790-791;2;ACM Student Research Competition;
2015;Jafar M. Al-Kofahi,Lisong Guo,Hung Viet Nguyen,Hoan Anh Nguyen,Tien N. Nguyen;Poster: Static Detection of Configuration-Dependent Bugs in Configurable Software.;795-796;2;Posters;
2015;Alessio Gambi,Rostyslav Zabolotnyi,Schahram Dustdar;Poster: Improving Cloud-Based Continuous Integration Environments.;797-798;2;Posters;
2015;Ryo Suzuki;Poster: Interactive and Collaborative Source Code Annotation.;799-800;2;Posters;
2015;Martin Konopka,Pavol Navrat,Maria Bielikova;Poster: Discovering Code Dependencies by Harnessing Developer's Activity.;801-802;2;Posters;
2015;Francesca Arcelli Fontana,Vincenzo Ferme,Marco Zanoni;Poster: Filtering Code Smells Detection Results.;803-804;2;Posters;
2015;Huai Liu,Pak-Lok Poon,Tsong Yueh Chen;Poster: Enhancing Partition Testing through Output Variation.;805-806;2;Posters;
2015;Jingwen Zhou,Zhenbang Chen,Ji Wang;Poster: Segmentation Based Online Performance Problem Diagnosis.;807-808;2;Posters;
2015;Xianjin Fu,Zhenbang Chen,Hengbiao Yu,Chun Huang,Wei Dong,Ji Wang;Poster: Symbolic Execution of MPI Programs.;809-810;2;Posters;
2015;Marija Selakovic,Michael Pradel;Poster: Automatically Fixing Real-World JavaScript Performance Bugs.;811-812;2;Posters;
2015;Laurent Christophe,Coen De Roover,Wolfgang De Meuter;Poster: Dynamic Analysis Using JavaScript Proxies.;813-814;2;Posters;
2015;Andrea Borg,Chris Porter,Mark Micallef;Poster: Is Carmen Better than George? Testing the Exploratory Tester Using HCI Techniques.;815-816;2;Posters;
2015;Xavier Devroey,Gilles Perrouin,Pierre-Yves Schobbens,Patrick Heymans;Poster: VIBeS, Transition System Mutation Made Easy.;817-818;2;Posters;
2015;Sebastian Weigelt,Walter F. Tichy;Poster: ProNat: An Agent-Based System Design for Programming in Spoken Natural Language.;819-820;2;Posters;
2015;Quentin Stievenart,Jens Nicolay,Wolfgang De Meuter,Coen De Roover;Poster: Static Analysis of Concurrent Higher-Order Programs.;821-822;2;Posters;
2015;Takuya Fukamachi,Naoyasu Ubayashi,Shintaro Hosoai,Yasutaka Kamei;Poster: Conquering Uncertainty in Java Programming.;823-824;2;Posters;
2015;Tianshi Wang,Aadithya V. Karthik,Bichen Wu,Jaijeet Roychowdhury;Poster: MAPP: The Berkeley Model and Algorithm Prototyping Platform.;825-826;2;Posters;
2015;Soumyadip Bandyopadhyay,Dipankar Sarkar,Chittaranjan A. Mandal;Poster: An Efficient Equivalence Checking Method for Petri Net Based Models of Programs.;827-828;2;Posters;
2015;Luca Gherardi,Nico Hochgeschwender;Poster: Model-based Run-time Variability Resolution for Robotic Applications.;829-830;2;Posters;
2015;Laure Philips,Wolfgang De Meuter,Coen De Roover;Poster: Tierless Programming in JavaScript.;831-832;2;Posters;
2015;Harry Raymond Joseph;Poster: Software Development Risk Management: Using Machine Learning for Generating Risk Prompts.;833-834;2;Posters;
2015;Sara Sartoli,Akbar Siami Namin;Poster: Reasoning Based on Imperfect Context Data in Adaptive Security.;835-836;2;Posters;
2015;Richard Gil;Automated Planning for Self-Adaptive Systems.;839-842;4;Student Presentations;
2015;Laura Inozemtseva;Understanding the Software Fault Introduction Process.;843-846;4;Student Presentations;
2015;Mohammad Mehdi Pourhashem Kallehbasti;Scalable Formal Verification of UML Models.;847-850;4;Student Presentations;
2015;Jie Zhang;Scalability Studies on Selective Mutation Testing.;851-854;4;Student Presentations;
2015;Franz Zieris;Qualitative Analysis of Knowledge Transfer in Pair Programming.;855-858;4;Student Presentations;
2015;Stefanie Beyer;DIETs: Recommender Systems for Mobile API Developers.;859-862;4;Student Presentations;
2015;Verena Honsel;Statistical Learning and Software Mining for Agent Based Simulation of Software Evolution.;863-866;4;Student Posters;
2015;Jamal El Hachem;Towards Model Driven Architecture and Analysis of System of Systems Access Control.;867-870;4;Student Posters;
2015;Andrea Caracciolo;A Unified Approach to Automatic Testing of Architectural Constraints.;871-874;4;Student Posters;
2015;Nicolas Dintzner;Safe Evolution Patterns for Software Product Lines.;875-878;4;Student Posters;
2015;Joao Felipe Silva Ouriques;Strategies for Prioritizing Test Cases Generated Through Model-Based Testing Approaches.;879-882;4;Student Posters;
2015;Alexander van Den Berghe;Towards a Practical Security Analysis Methodology.;883-886;4;Student Posters;
2015;Sebastian Muller;Measuring Software Developers' Perceived Difficulty with Biometric Sensors.;887-890;4;Student Posters;
2015;Vitalii Avdiienko;Mining Patterns of Sensitive Data Usage.;891-894;4;Student Posters;
2015;Wesley Klewerton Guez Assuncao;Search-Based Migration of Model Variants to Software Product Line Architectures.;895-898;4;Student Posters;
2015;Everton Cavalcante;On the Architecture-Driven Development of Software-Intensive Systems-of-Systems.;899-902;4;Student Posters;
2015;Paul W. McBurney;Automatic Documentation Generation via Source Code Summarization.;903-906;4;Student Posters;
2015;Reinout Stevens;A Declarative Foundation for Comprehensive History Querying.;907-910;4;Student Posters;
2015;Davy de Medeiros Baia;An Integrated Multi-Agent-Based Simulation Approach to Support Software Project Management.;911-914;4;Student Posters;
2015;C. Albert Thompson;Towards Generation of Software Development Tasks.;915-918;4;Student Posters;
2015;Ayushi Rastogi;Contributor's Performance, Participation Intentions, Its Influencers and Project Performance.;919-922;4;Student Posters;
2015;Erika S. Mesh;Supporting Scientific SE Process Improvement.;923-926;4;Student Posters;
2015;Adnan Shahzada;A Comprehensive Framework for the Development of Dynamic Smart Spaces.;927-930;4;Student Posters;
2015;Heila van der Merwe;Verification of Android Applications.;931-934;4;Student Posters;
2015;Patrick Morrison;A Security Practices Evaluation Framework.;935-938;4;Student Posters;
2015;Giuseppe Procaccianti,Patricia Lago,Antonio Vetro,Daniel Mendez Fernandez,Roel Wieringa;The Green Lab: Experimentation in Software Energy Efficiency.;941-942;2;Technical Briefings;
2015;Xavier Franch;Software Requirements Patterns - A State of the Art and the Practice.;943-944;2;Technical Briefings;
2015;Tore Dyba,Torgeir Dingsoyr;Agile Project Management: From Self-Managing Teams to Large-Scale Development.;945-946;2;Technical Briefings;
2015;Pauline Anthonysamy,Awais Rashid;Software Engineering for Privacy in-the-Large.;947-948;2;Technical Briefings;
2015;Venera Arnaoudova,Sonia Haiduc,Andrian Marcus,Giuliano Antoniol;The Use of Text Retrieval and Natural Language Processing in Software Engineering.;949-950;2;Technical Briefings;
2015;Jonathan I. Maletic,Michael L. Collard;Exploration, Analysis, and Manipulation of Source Code Using srcML.;951-952;2;Technical Briefings;
2015;Guido Salvaneschi,Alessandro Margara,Giordano Tamburrelli;Reactive Programming: A Walkthrough.;953-954;2;Technical Briefings;
2015;Zhen Ming Jack Jiang;Load Testing Large-Scale Software Systems.;955-956;2;Technical Briefings;
2015;Meiyappan Nagappan,Mehdi Mirakhorli;Big(ger) Data in Software Engineering.;957-958;2;Technical Briefings;
2015;Tim Menzies,Leandro L. Minku,Fayola Peters;"The Art and Science of Analyzing Software Data; Quantitative Methods.";959-960;2;Technical Briefings;
2015;Rajesh Subramanyan,Leonardo Mariani,Dan Hao;10th International Workshop on Automation of Software Test (AST 2015).;963-964;2;Workshop Summaries;
2015;Luciano Baresi,Tim Menzies,Andreas Metzger,Thomas Zimmermann 0001;1st International Workshop on Big Data Software Engineering (BIGDSE 2015).;965-966;2;Workshop Summaries;
2015;Xavier Franch,Nazim H. Madhavji,Carlos Henrique C. Duarte;3rd International Workshop on Conducting Empirical Studies in Industry (CESI 2015).;967-968;2;Workshop Summaries;
2015;Andrew Begel,Rafael Prikladnicki,Yvonne Dittrich,Cleidson Ronald Botelho de Souza,Anita Sarma,Sandeep Athavale;8th International Workshop on Cooperative and Human Aspects of Software Engineering (CHASE 2015).;969-970;2;Workshop Summaries;
2015;Mark Grechanik,Javier Alonso,Allen P. Nikora;1st International Workshop on Complex faUlts and Failures in LargE Software Systems (COUFLESS 2015).;971-972;2;Workshop Summaries;
2015;Kelly Blincoe,Daniela E. Herlea,Giuseppe Valetto,James D. Herbsleb;2nd International Workshop on Context for Software Development (CSD 2015).;973-974;2;Workshop Summaries;
2015;Gordon Fraser,Thomas D. LaToza,Leonardo Mariani;2nd International Workshop on Crowd Sourcing in Software Engineering (CSI-SE 2015).;975-976;2;Workshop Summaries;
2015;Stefania Gnesi,Nico Plat;3rd FME Workshop on Formal Methods in Software Engineering (FormaliSE 2015).;977-978;2;Workshop Summaries;
2015;Judy M. Bishop,Kendra M. L. Cooper,Walt Scacchi,Jim Whitehead;4th International Workshop on Games and Software Engineering (GAS 2015).;979-980;2;Workshop Summaries;
2015;Maurizio Morisio,Patricia Lago,Niklaus Meyer,Hausi A. Muller,Giuseppe Scanniello;4th International Workshop on Green and Sustainable Software (GREENS 2015).;981-982;2;Workshop Summaries;
2015;Paul Ralph,Gregor Engels,Ivar Jacobson,Michael Goedicke;4th SEMAT Workshop on General Theory of Software Engineering (GTSE 2015).;983-984;2;Workshop Summaries;
2015;Jeffrey G. Gray,Marsha Chechik,Vinay Kulkarni,Richard F. Paige;7th International Workshop on Modeling in Software Engineering (MiSE 2015).;985-986;2;Workshop Summaries;
2015;Muhammad Ali Babar,Hye-young Paik,Malolan Chetlur,Michael Bauer,Amir Molzam Sharifloo;7th International Workshop on Principles of Engineering Service-Oriented and Cloud Systems (PESOS 2015).;987-988;2;Workshop Summaries;
2015;Julia Rubin-Mosin,Goetz Botterweck,Andreas Pleuss,David M. Weiss;5th International Workshop on Product LinE Approaches in Software Engineering PLE for a Sustainable Society (PLEASE 2015).;989-990;2;Workshop Summaries;
2015;Burak Turhan,Ayse Bener,Rachel Harrison,Andriy Miransky,Cetin Mericli,Leandro L. Minku;4th International Workshop on Realizing AI Synergies in Software Engineering (RAISE 2015).;991-992;2;Workshop Summaries;
2015;Matthias Tichy,Jan Bosch,Michael Goedicke,Brian Fitzgerald;2nd International Workshop on Rapid Continuous Software Engineering (RCoSE 2015).;993-994;2;Workshop Summaries;
2015;Bram Adams,Stephany Bellomo,Christian Bird,Foutse Khomh,Kim Moir;3rd International Workshop on Release Engineering (RELENG 2015).;995-996;2;Workshop Summaries;
2015;Elizabeth Bjarnason,Mirko Morandini,Markus Borg,Michael Unterkalmsteiner,Michael Felderer,Matthew Staats;2nd International Workshop on Requirements Engineering and Testing (RET 2015).;997-998;2;Workshop Summaries;
2015;Ipek Ozkaya,Robert L. Nord,Heiko Koziolek,Paris Avgeriou;Second International Workshop on Software Architecture and Metrics (SAM 2015).;999-1000;2;Workshop Summaries;
2015;Gregory R. Gay,Giuliano Antoniol;8th International Workshop on Search-Based Software Testing (SBST 2015).;1001-1002;2;Workshop Summaries;
2015;Jeffrey Carver,Neil Chue Hong,Paolo Ciancarini;SE4HPCS'15: The 2015 International Workshop on Software Engineering for High Performance Computing in Science.;1003-1004;2;Workshop Summaries;
2015;Felienne Hermans,Richard F. Paige,Peter Sestoft;2nd International Workshop on Software Engineering Methods in Spreadsheets (SEMS 2015).;1005-1006;2;Workshop Summaries;
2015;Judy M. Bishop,Rakesh Shukla,Forrest Shull,Sagar Sen;2nd International Workshop on Software Engineering Research and Industrial Practice (SER&IP 2015).;1007-1008;2;Workshop Summaries;
2015;Tomas Bures,Danny Weyns,Mark Klein,Rodolfo E. Haber;1st International Workshop on Software Engineering for Smart Cyber-Physical Systems (SEsCPS 2015).;1009-1010;2;Workshop Summaries;
2015;Flavio Oquendo,Paris Avgeriou,Carlos Enrique Cuesta Quintero,Khalil Drira,Elisa Yumi Nakagawa,Jose Carlos Maldonado,Andrea Zisman;3rd International Workshop on Software Engineering for Systems-of-Systems (SESoS 2015).;1011-1012;2;Workshop Summaries;
2015;Paolo Falcarin,Brecht Wyseur;1st International Workshop on Software Protection (SPRO 2015).;1013-1014;2;Workshop Summaries;
2015;Ilaria Matteucci,Paolo Mori,Marinella Petrocchi;1st International Workshop on TEchnical and LEgal aspects of data pRIvacy and Security (TELERISE 2015).;1015-1016;2;Workshop Summaries;
2015;Matthias Galster,Mehdi Mirakhorli;5th International Workshop on the Twin Peaks of Requirements and Architecture (TwinPeaks 2015).;1017-1018;2;Workshop Summaries;
2015;Gursimran S. Walia,Jeffrey Carver,Gary L. Bradshaw;Workshop on Applications of Human Error Research to Improve Software Engineering (WAHESE 2015).;1019-1020;2;Workshop Summaries;
2015;Steve Counsell,Corrado Aaron Visaggio,Roberto Tonelli,Ewan D. Tempero;6th International Workshop on Emerging Trends in Software Metrics (WETSoM 2015).;1021-1022;2;Workshop Summaries;
2014;Emerson R. Murphy-Hill,Thomas Zimmermann 0001,Nachiappan Nagappan;Cowboys, ankle sprains, and keepers of quality: how is video game development different from software development?;1-11;11;Perspectives on Software Engineering;
2014;Andrew Begel,Thomas Zimmermann 0001;Analyze this! 145 questions for data scientists in software engineering.;12-13;2;Perspectives on Software Engineering;
2014;Paul Ralph,Paul Kelly;The dimensions of software engineering success.;24-35;12;Perspectives on Software Engineering;
2014;Ravi Khadka,Belfrit V. Batlajery,Amir Saeidi,Slinger Jansen,Jurriaan Hage;How do professionals perceive legacy systems and software modernization?;36-47;12;Perspectives on Software Engineering;
2014;Tingting Yu,Witawas Srisa-an,Gregg Rothermel;SimRT: an automated framework to support regression testing for data races.;48-59;12;Testing 1;
2014;Peng Huang,Xiao Ma,Dongcai Shen,Yuanyuan Zhou;Performance regression testing target prioritization via performance risk analysis.;60-71;12;Testing 1;
2014;Rahul Gopinath,Carlos Jensen,Alex Groce;Code coverage for suite evaluation by developers.;72-82;11;Testing 1;
2014;Mika Mantyla,Kai Petersen,Timo O. A. Lehtinen,Casper Lassenius;Time pressure: a controlled experiment of test case development and requirements review.;83-94;12;Testing 1;
2014;Shahar Maoz,Jan Oliver Ringert,Bernhard Rumpe;Verifying component and connector models against crosscutting structural views.;95-105;11;Modeling;
2014;Hamid Bagheri,Chong Tang 0001,Kevin J. Sullivan;TradeMaker: automated dynamic analysis of synthesized tradespaces.;106-116;11;Modeling;
2014;Rick Salay,Michalis Famelis,Julia Rubin-Mosin,Alessio Di Sandro,Marsha Chechik;Lifting model transformations to product lines.;117-128;12;Modeling;
2014;Renzo Degiovanni,Dalal Alrajeh,Nazareno Aguirre,Sebastian Uchitel;Automated goal operationalisation based on interpolation and SAT solving.;129-139;11;Modeling;
2014;Sarah Nadi,Thorsten Berger,Christian Kastner,Krzysztof Czarnecki;Mining configuration constraints: static analyses and empirical results.;140-151;12;Configuration, Variability, and Clones;
2014;Sai Zhang,Michael D. Ernst;Which configuration option should I change?;152-163;12;Configuration, Variability, and Clones;
2014;Yun Lin,Zhenchang Xing,Yinxing Xue,Yang Liu 0003,Xin Peng,Jun Sun,Wenyun Zhao;Detecting differences across multiple instances of code clones.;164-174;11;Configuration, Variability, and Clones;
2014;Kai Chen 0012,Peng Liu,Yingjun Zhang;Achieving accuracy and scalability simultaneously in detecting application clones on Android markets.;175-186;12;Configuration, Variability, and Clones;
2014;Klaas-Jan Stol,Brian Fitzgerald;Two's company, three's a crowd: a case study of crowdsourcing software development.;187-198;12;Social Aspects of Software Engineering;
2014;Patrick Wagstrom,Subhajit Datta;Does latitude hurt while longitude kills? geographical and temporal separation in a large scale software development project.;199-210;12;Social Aspects of Software Engineering;
2014;Leif Singer,Fernando Marques Figueira Filho,Margaret-Anne D. Storey;Software engineering at the speed of light: how developers stay current using twitter.;211-221;11;Social Aspects of Software Engineering;
2014;Qi Xuan,Vladimir Filkov;Building it together: synchronous development in OSS.;222-233;12;Social Aspects of Software Engineering;
2014;Martin Monperrus;"A critical review of ""automatic patch generation learned from human-written patches"": essay on the problem statement and the evaluation of automatic software repair.";234-242;9;Repair;
2014;Divya Gopinath,Sarfraz Khurshid,Diptikalyan Saha,Satish Chandra;Data-guided repair of selection statements.;243-253;11;Repair;
2014;Yuhua Qi,Xiaoguang Mao,Yan Lei,Ziying Dai,Chengsong Wang;The strength of random search on automated program repair.;254-265;12;Repair;
2014;Shalini Kaleeswaran,Varun Tulsian,Aditya Kanade,Alessandro Orso;MintHint: automated synthesis of repair hints.;266-276;11;Repair;
2014;Carlo Ghezzi,Mauro Pezze,Michele Sama,Giordano Tamburrelli;Mining behavior models from user-intensive web applications.;277-287;11;Formal Analysis;
2014;Steven Arzt,Eric Bodden;Reviser: efficiently updating IDE-/IFDS-based data-flow analyses in response to incremental program changes.;288-298;11;Formal Analysis;
2014;Antonio Filieri,Henry Hoffmann,Martina Maggio;Automated design of self-adaptive software with control-theoretical formal guarantees.;299-310;12;Formal Analysis;
2014;Guoxin Su,David S. Rosenblum;Perturbation analysis of stochastic systems with empirical distribution parameters.;311-321;11;Formal Analysis;
2014;Caius Brindescu,Mihai Codoban,Sergii Shmarkatiuk,Danny Dig;How do centralized and distributed version control systems impact software changes?;322-333;12;Configuration Management;
2014;Kivanc Muslu,Christian Bird,Nachiappan Nagappan,Jacek Czerwonka;Transition from centralized to decentralized version control systems: a case study on reasons, barriers, and outcomes.;334-344;11;Configuration Management;
2014;Georgios Gousios,Martin Pinzger,Arie van Deursen;An exploratory study of the pull-based software development model.;345-355;11;Configuration Management;
2014;Jason Tsay,Laura Dabbish,James D. Herbsleb;Influence of social and technical factors for evaluating contribution in GitHub.;356-366;11;Configuration Management;
2014;Saba Alimadadi,Sheldon Sequeira,Ali Mesbah 0001,Karthik Pattabiraman;Understanding JavaScript event-based interactions.;367-377;11;Software Understanding;
2014;Janet Siegmund,Christian Kastner,Sven Apel,Chris Parnin,Anja Bethmann,Thomas Leich,Gunter Saake,Andre Brechmann;Understanding understanding source code with functional magnetic resonance imaging.;378-389;12;Software Understanding;
2014;Paige Rodeghero,Collin McMillan,Paul W. McBurney,Nigel Bosch,Sidney K. D'Mello;Improving automated source code summarization via an eye-tracking study of programmers.;390-401;12;Software Understanding;
2014;Thomas Fritz,Andrew Begel,Sebastian Muller,Serap Yigit-Elliott,Manuela Zuger;Using psycho-physiological measures to assess task difficulty in software development.;402-413;12;Software Understanding;
2014;Xiao-Yuan Jing,Shi Ying,Zhi-Wu Zhang,Shanshan Wu,Jin Liu;Dictionary learning based software defect prediction.;414-423;10;Prediction;
2014;Foyzur Rahman,Sameer Khatri,Earl T. Barr,Premkumar T. Devanbu;Comparing static bug finders and statistical prediction.;424-434;11;Prediction;
2014;Laura Inozemtseva,Reid Holmes;Coverage is not strongly correlated with test suite effectiveness.;435-445;11;Prediction;
2014;Leandro L. Minku,Xin Yao;How to make best use of cross-company data in software effort estimation?;446-456;11;Prediction;
2014;Yanyan Jiang 0001,Tianxiao Gu,Chang Xu,Xiaoxing Ma,Jian Lu;CARE: cache guided deterministic replay for concurrent Java programs.;457-467;11;Concurrency;
2014;Ivan Beschastnikh,Yuriy Brun,Michael D. Ernst,Arvind Krishnamurthy;Inferring models of concurrent systems from logs of their behavior with CSight.;468-479;12;Concurrency;
2014;Peng Liu 0010,Charles Zhang;Unleashing concurrency for irregular data structures.;480-490;11;Concurrency;
2014;Yan Cai,Shangru Wu,Wing Kwong Chan;ConLock: a constraint-based approach to dynamic checking on deadlocks in multithreaded programs.;491-502;12;Concurrency;
2014;Irene Lizeth Manotas Gutierrez,Lori L. Pollock,James A. Clause;SEEDS: a software engineer's energy-optimization decision support framework.;503-514;12;Apps and Energy;
2014;Nima Nikzad,Octav Chipara,William G. Griswold;APE: an annotation language and middleware for energy-efficient mobile application development.;515-526;12;Apps and Energy;
2014;Ding Li,Angelica Huyen Tran,William G. J. Halfond;Making web applications more energy efficient for OLED smartphones.;527-538;12;Apps and Energy;
2014;Patrice Godefroid;Micro execution.;539-549;11;Testing 2;
2014;Jonathan Bell,Gail E. Kaiser;Unit test virtualization with VMVM.;550-561;12;Testing 2;
2014;Paolo Tonella,Roberto Tiella,Duy Cu Nguyen;Interpolated n-grams for model based testing.;562-572;11;Testing 2;
2014;Kelly Androutsopoulos,David Clark,Haitao Dan,Robert M. Hierons,Mark Harman;An analysis of the relationship between conditional entropy and failed error propagation in software testing.;573-583;11;Testing 2;
2014;Nelio Cacho,Thiago Cesar,Thomas Filipe,Eliezio Soares,Arthur Cassio,Rafael Souza,Israel Garcia,Eiji Adachi Barbosa,Alessandro Garcia;Trading robustness for maintainability: an empirical study of evolving c# programs.;584-595;12;Code Contracts, Invariants, and Robustness;
2014;Todd W. Schiller,Kellen Donohue,Forrest Coward,Michael D. Ernst;Case studies and tools for contract specifications.;596-607;12;Code Contracts, Invariants, and Robustness;
2014;ThanhVu H. Nguyen,Deepak Kapur,Westley Weimer,Stephanie Forrest;Using dynamic analysis to generate disjunctive invariants.;608-619;12;Code Contracts, Invariants, and Robustness;
2014;Ivan Bocic,Tevfik Bultan;Inductive verification of data model invariants for web applications.;620-631;12;Code Contracts, Invariants, and Robustness;
2014;Stefan Endrikat,Stefan Hanenberg,Romain Robbes,Andreas Stefik;How do API documentation and static typing affect API usability?;632-642;11;Search and APIs;
2014;Siddharth Subramanian,Laura Inozemtseva,Reid Holmes;Live API documentation.;643-652;10;Search and APIs;
2014;Joel Galenson,Philip Reames,Rastislav Bodik,Bjorn Hartmann,Koushik Sen;CodeHint: dynamic and interactive synthesis of code snippets.;653-663;11;Search and APIs;
2014;Iman Keivanloo,Juergen Rilling,Ying Zou;Spotting working code examples.;664-675;12;Search and APIs;
2014;Bihuan Chen,Xin Peng,Yijun Yu,Bashar Nuseibeh,Wenyun Zhao;Self-adaptation through incremental generative model transformations at runtime.;676-687;12;Adaptive Systems;
2014;Nicolas D'Ippolito,Victor A. Braberman,Jeffrey Kramer,Jeffrey N. Magee,Daniel Sykes,Sebastian Uchitel;Hope for the best, prepare for the worst: multi-tier control for adaptive systems.;688-699;12;Adaptive Systems;
2014;Cristian Klein,Martina Maggio,Karl-Erik Arzen,Francisco Hernandez-Rodriguez;Brownout: building more robust cloud applications.;700-711;12;Adaptive Systems;
2014;Pierre A. Akiki,Arosha K. Bandara,Yijun Yu;Integrating adaptive user interface capabilities in enterprise applications.;712-723;12;Adaptive Systems;
2014;Hyunmin Seo,Caitlin Sadowski,Sebastian G. Elbaum,Edward Aftandilian,Robert W. Bowdidge;Programmers' build errors: a case study (at google).;724-734;11;Build and Package Management;
2014;Shaun Phillips,Thomas Zimmermann 0001,Christian Bird;Understanding and improving software build teams.;735-744;10;Build and Package Management;
2014;Alexey Ignatiev,Mikolas Janota,Joao P. Marques Silva;Towards efficient optimization in package management systems.;745-755;11;Build and Package Management;
2014;Jerome Vouillon,Mehdi Dogguy,Roberto Di Cosmo;Easing software component repository evolution.;756-766;11;Build and Package Management;
2014;Ning Chen,Jialiu Lin,Steven C. H. Hoi,Xiaokui Xiao,Boshen Zhang;AR-miner: mining informative reviews for developers from mobile app marketplace.;767-778;12;Mining;
2014;Robert Dyer 0001,Hridesh Rajan,Hoan Anh Nguyen,Tien N. Nguyen;Mining billions of AST nodes to study actual and potential usage of Java language features.;779-790;12;Mining;
2014;Hung Viet Nguyen,Hoan Anh Nguyen,Hoan Anh Nguyen,Tien N. Nguyen;Mining interprocedural, data-oriented usage patterns in JavaScript web applications.;791-802;12;Mining;
2014;Stas Negara,Mihai Codoban,Danny Dig,Ralph E. Johnson;Mining fine-grained code changes to detect unknown change patterns.;803-813;11;Mining;
2014;Sangho Lee,Changhee Jung,Santosh Pande;Detecting memory leaks through introspective dynamic behavior modelling using machine learning.;814-824;11;Automated Bug Detection and Repair;
2014;Changhee Jung,Sangho Lee,Easwaran Raman,Santosh Pande;Automated memory leak detection for production use.;825-836;12;Automated Bug Detection and Repair;
2014;Frolin S. Ocariza Jr.,Karthik Pattabiraman,Ali Mesbah 0001;Vejovis: suggesting fixes for JavaScript faults.;837-847;11;Automated Bug Detection and Repair;
2014;Wensheng Dou,Shing-Chi Cheung,Jun Wei;Is spreadsheet ambiguity harmful? detecting and repairing spreadsheet smells due to ambiguous computation.;848-858;11;Automated Bug Detection and Repair;
2014;Swapneel Sheth,Gail E. Kaiser,Walid Maalej;Us and them: a study of privacy requirements across north america, asia, and europe.;859-870;12;Requirements;
2014;Keerthi Thomas,Arosha K. Bandara,Blaine A. Price,Bashar Nuseibeh;Distilling privacy requirements for mobile applications.;871-882;12;Requirements;
2014;Emmanuel Letier,David Stefan,Earl T. Barr;Uncertainty, risk, and information value in software requirements and architecture.;883-894;12;Requirements;
2014;Rahul Mohanani,Paul Ralph,Ben Shreeve;Requirements fixation.;895-906;12;Requirements;
2014;Hung Viet Nguyen,Christian Kastner,Tien N. Nguyen;Exploring variability-aware execution for testing plugin-based web applications.;907-918;12;Testing and Conformance Verification;
2014;Xiangjuan Yao,Mark Harman,Yue Jia;A study of equivalent and stubborn mutation operators using human analysis of equivalence.;919-930;12;Testing and Conformance Verification;
2014;Antonio Carzaniga,Alberto Goffi,Alessandra Gorla,Andrea Mattavelli,Mauro Pezze;Cross-checking oracles from intrinsic software redundancy.;931-942;12;Testing and Conformance Verification;
2014;Patrick Rempel,Patrick Mader,Tobias Kuschke,Jane Cleland-Huang;Mind the gap: assessing the conformance of software traceability to relevant guidelines.;943-954;12;Testing and Conformance Verification;
2014;Dina Zayan,Michal Antkiewicz,Krzysztof Czarnecki;Effects of using examples on structural model comprehension: a controlled experiment.;955-966;12;Modeling and Interfaces;
2014;Lu Xiao,Yuanfang Cai,Rick Kazman;Design rule spaces: a new form of architecture insight.;967-977;11;Modeling and Interfaces;
2014;Hisashi Miyashita,Hideki Tai,Shunichi Amano;Controlled modeling environment using flexibly-formatted spreadsheets.;978-988;11;Modeling and Interfaces;
2014;Marcio de Medeiros Ribeiro,Paulo Borba,Christian Kastner;Feature maintenance with emergent interfaces.;989-1000;12;Modeling and Interfaces;
2014;Tse-Hsun Chen,Weiyi Shang,Zhen Ming Jiang,Ahmed E. Hassan,Mohamed N. Nasser,Parminder Flora;Detecting performance anti-patterns for applications developed using object-relational mapping.;1001-1012;12;Apps and Verification;
2014;Yepang Liu,Chang Xu,Shing-Chi Cheung;Characterizing and detecting performance bugs for smartphone applications.;1013-1024;12;Apps and Verification;
2014;Alessandra Gorla,Ilaria Tavecchia,Florian Gross,Andreas Zeller;Checking app behavior against app descriptions.;1025-1035;11;Apps and Verification;
2014;Jianjun Huang,Xiangyun Zhang,Lin Tan,Peng Wang,Bin Liang;AsDroid: detecting stealthy behaviors in Android applications by user interface and program behavior contradiction.;1036-1046;11;Apps and Verification;
2014;Wei Le,Shannon D. Pattison;Patch verification via multiversion interprocedural control flow graphs.;1047-1058;12;Symbolic Execution;
2014;Guowei Yang,Sarfraz Khurshid,Suzette Person,Neha Rungta;Property differencing for incremental checking.;1059-1070;12;Symbolic Execution;
2014;Fei He,Bow-Yaw Wang,Liangze Yin,Lei Zhu;Symbolic assume-guarantee reasoning through BDD learning.;1071-1082;12;Symbolic Execution;
2014;Thanassis Avgerinos,Alexandre Rebert,Sang Kil Cha,David Brumley;Enhancing symbolic execution with veritesting.;1083-1094;12;Symbolic Execution;
2014;Xi Ge,Emerson R. Murphy-Hill;Manual refactoring changes with automated refactoring validation.;1095-1105;11;Refactoring and Reverse Engineering;
2014;Mohsen Vakilian,Ralph E. Johnson;Alternate refactoring paths reveal usability problems.;1106-1116;11;Refactoring and Reverse Engineering;
2014;Semih Okur,David L. Hartveld,Danny Dig,Arie van Deursen;A study and toolkit for asynchronous programming in c#.;1117-1127;11;Refactoring and Reverse Engineering;
2014;Dohyeong Kim,William N. Sumner,Xiangyun Zhang,Dongyan Xu,Hira Agrawal;Reuse-oriented reverse engineering of functional components from x86 binaries.;1128-1139;12;Refactoring and Reverse Engineering;
2013;Paola Inverardi,Massimo Tivoli;Automatic synthesis of modular connectors via composition of protocol mediation patterns.;3-12;10;Composition;
2013;Fabienne Boyer,Olivier Gruber,Damien Pous;Robust reconfigurations of component assemblies.;13-22;10;Composition;
2013;Yun Young Lee,Nicholas Y. Chen,Ralph E. Johnson;Drag-and-drop refactoring: intuitive and efficient program transformation.;23-32;10;Composition;
2013;Carlo Ghezzi,Leandro Sales Pinto,Paola Spoletini,Giordano Tamburrelli;Managing non-functional uncertainty via model-driven adaptivity.;33-42;10;Adaptation;
2013;Naeem Esfahani,Sam Malek,Kaveh Razavi;GuideArch: guiding the exploration of architectural solution space under uncertainty.;43-52;10;Adaptation;
2013;Christoph Dorn,Richard N. Taylor;Coupling software architecture and human architecture for collaboration-aware system adaptation.;53-62;10;Adaptation;
2013;Daniel Sykes,Domenico Corapi,Jeffrey N. Magee,Jeffrey Kramer,Alessandra Russo,Katsumi Inoue;Learning revised models for planning in adaptive systems.;63-71;9;Adaptation;
2013;Lorenzo Gomez,Iulian Neamtiu,Tanzirul Azim,Todd D. Millstein;RERAN: timing- and touch-sensitive record and replay for Android.;72-81;10;Apps;
2013;Amruta Gokhale,Vinod Ganapathy,Yogesh Padmanaban;Inferring likely mappings between APIs.;82-91;10;Apps;
2013;Shuai Hao,Ding Li,William G. J. Halfond,Ramesh Govindan;Estimating mobile application energy consumption using program analysis.;92-101;10;Apps;
2013;Michael W. Whalen,Gregory R. Gay,Dongjiang You,Mats Per Erik Heimdahl,Matthew Staats;Observable modified Condition/Decision coverage.;102-111;10;Testing;
2013;Raphael Pham,Leif Singer,Olga Liskin,Fernando Marques Figueira Filho,Kurt Schneider;Creating a shared understanding of testing culture on a social coding site.;112-121;10;Testing;
2013;Ella Bounimova,Patrice Godefroid,David A. Molnar;Billions and billions of constraints: whitebox fuzz testing in production.;122-131;10;Testing;
2013;Pranav Garg 0001,Franjo Ivancic,Gogul Balakrishnan,Naoto Maeda,Aarti Gupta;Feedback-directed unit test generation for C/C++ using concolic execution.;132-141;10;Test-Case Generation;
2013;Domenico Cotroneo,Roberto Pietrantuono,Stefano Russo;A learning-based method for combining testing techniques.;142-151;10;Test-Case Generation;
2013;Amanda Swearngin,Myra B. Cohen,Bonnie E. John,Rachel K. E. Bellamy;Human performance regression testing.;152-161;10;Test-Case Generation;
2013;Suresh Thummalapenta,K. Vasanta Lakshmi,Saurabh Sinha,Nishant Sinha,Satish Chandra;Guided test generation for web applications.;162-171;10;Test-Case Generation;
2013;Mohammad Mahdi Hassan,Jamie Andrews;Comparing multi-point stride coverage and dataflow coverage.;172-181;10;Test-Case Selection;
2013;Dale Blue,Itai Segall,Rachel Tzoref-Brill,Aviad Zlotnick;Interaction-based test-suite minimization.;182-191;10;Test-Case Selection;
2013;Lingming Zhang,Dan Hao,Lu Zhang,Gregg Rothermel,Hong Mei;Bridging the gap between the total and additional test-case prioritization strategies.;192-201;10;Test-Case Selection;
2013;Cong Tian,Zhenhua Duan;Detecting spurious counterexamples efficiently in abstract model checking.;202-211;10;Formal Analysis;
2013;Wei Le;Segmented symbolic analysis.;212-221;10;Formal Analysis;
2013;John Hatcliff,Robby,Patrice Chalin,Jason Belt;Explicating symbolic execution (xSymExe): an evidence-based verification framework.;222-231;10;Formal Analysis;
2013;Tim Nelson,Salman Saghafi,Daniel J. Dougherty,Kathi Fisler,Shriram Krishnamurthi;Aluminum: principled scenario exploration through minimality.;232-241;10;Formal Specification;
2013;Shahar Maoz,Yaniv Sa'ar;Counter play-out: executing unrealizable scenario-based specifications.;242-251;10;Formal Specification;
2013;Ivan Beschastnikh,Yuriy Brun,Jenny Abrahamson,Michael D. Ernst,Arvind Krishnamurthy;Unifying FSM-inference algorithms through declarative specification.;252-261;10;Formal Specification;
2013;Nadia Polikarpova,Carlo A. Furia,Yu Pei 0001,Yi Wei,Bertrand Meyer;What good are strong specifications?;262-271;10;Formal Specification;
2013;William N. Sumner,Xiangyun Zhang;Comparative causality: explaining the differences between executions.;272-281;10;Analysis;
2013;Michael Pradel,Thomas R. Gross;Automatic testing of sequential and concurrent substitutability.;282-291;10;Analysis;
2013;Felienne Hermans,Ben Sedee,Martin Pinzger,Arie van Deursen;Data clone detection and visualization in spreadsheets.;292-301;10;Analysis;
2013;Marcel Bohme,Bruno C. d. S. Oliveira,Abhik Roychoudhury;Partition-based regression verification.;302-311;10;Code Analysis;
2013;Sai Zhang,Michael D. Ernst;Automated diagnosis of software configuration errors.;312-321;10;Code Analysis;
2013;Daniel Marino,Christian Hammer 0001,Julian Dolby,Mandana Vaziri,Frank Tip,Jan Vitek;Detecting deadlock in programs with data-centric synchronization.;322-331;10;Code Analysis;
2013;Emerson R. Murphy-Hill,Thomas Zimmermann 0001,Christian Bird,Nachiappan Nagappan;The design of bug fixes.;332-341;10;Debugging;
2013;Gerald Bortis,Andre van der Hoek;PorchLight: a tag-based approach to bug triaging.;342-351;10;Debugging;
2013;Yit Phang Khoo,Jeffrey S. Foster,Michael W. Hicks;Expositor: scriptable time-travel debugging with first-class traces.;352-361;10;Debugging;
2013;Jonathan Bell,Nikhil Sarda,Gail E. Kaiser;Chronicler: lightweight recording to reproduce field failures.;362-371;10;Debugging;
2013;Chris Lewis 0002,Zhongpeng Lin,Caitlin Sadowski,Xiaoyan Zhu,Rong Ou,Jim Whitehead;Does bug prediction support human developers? findings from a google case study.;372-381;10;Bug Prediction;
2013;Jaechang Nam,Sinno Jialin Pan,Sunghun Kim;Transfer defect learning.;382-391;10;Bug Prediction;
2013;Kim Sebastian Herzig,Sascha Just,Andreas Zeller;It's not a bug, it's a feature: how misclassification impacts bug prediction.;392-401;10;Bug Prediction;
2013;Weiyi Shang,Zhen Ming Jiang,Hadi Hemmati,Bram Adams,Ahmed E. Hassan,T. Patrick Martin;Assisting developers of big data analytics applications when deploying on hadoop clouds.;402-411;10;Big Data;
2013;Jerome Vouillon,Roberto Di Cosmo;Broken sets in software repository evolution.;412-421;10;Big Data;
2013;Robert Dyer 0001,Hoan Anh Nguyen,Hridesh Rajan,Tien N. Nguyen;Boa: a language and infrastructure for analyzing ultra-large-scale software repositories.;422-431;10;Big Data;
2013;Foyzur Rahman,Premkumar T. Devanbu;How, and why, process metrics are better.;432-441;10;Process;
2013;Daniela E. Herlea,Remko Helms,Irwin Kwan,Sabrina Marczak,Benjamin Koelewijn;The role of domain knowledge and cross-functional communication in socio-technical coordination.;442-451;10;Process;
2013;Daryl Posnett,Raissa M. D'Souza,Premkumar T. Devanbu,Vladimir Filkov;Dual ecological measures of focus in software development.;452-461;10;Process;
2013;Filomena Ferrucci,Mark Harman,Jian Ren,Federica Sarro;Not going to take this anymore: multi-objective overtime planning for software engineering projects.;462-471;10;Process;
2013;Maxime Cordy,Pierre-Yves Schobbens,Patrick Heymans,Axel Legay;Beyond boolean product-line model checking: dealing with feature attributes and multi-features.;472-481;10;Product Lines;
2013;Sven Apel,Alexander von Rhein,Philipp Wendler,Armin Grosslinger,Dirk Beyer 0001;Strategies for product-line verification: case studies and experiments.;482-491;10;Product Lines;
2013;Abdel Salam Sayyad,Tim Menzies,Hany H. Ammar;On the value of user preferences in search-based software engineering: a case study in software product lines.;492-501;10;Product Lines;
2013;Na Meng,Miryung Kim,Kathryn S. McKinley;LASE: locating and applying systematic edits by learning from examples.;502-511;10;Search-Based SE;
2013;Soren Frey,Florian Fittkau,Wilhelm Hasselbring;Search-based genetic optimization for deployment and reconfiguration of software in the cloud.;512-521;10;Search-Based SE;
2013;Annibale Panichella,Bogdan Dit,Rocco Oliveto,Massimiliano Di Penta,Denys Poshyvanyk,Andrea De Lucia;How to effectively use topic models for software engineering tasks? an approach based on genetic algorithms.;522-531;10;Search-Based SE;
2013;Thomas Bartenstein,Yu David Liu;Green streams for data-intensive software.;532-541;10;Performance;
2013;Tian Huat Tan,Etienne Andre,Jun Sun,Yang Liu 0003,Jin Song Dong,Manman Chen;Dynamic synthesis of local time requirement for service composition.;542-551;10;Performance;
2013;Alexander Wert,Jens Happe,Lucia Kapova Happe;Supporting swift reaction: automatically uncovering performance problems by systematic experiments.;552-561;10;Performance;
2013;Adrian Nistor,Linhai Song,Darko Marinov,Shan Lu;Toddler: detecting performance problems via similar memory-access patterns.;562-571;10;Performance;
2013;Nan Niu,Anas Mahmoud,Zhangji Chen,Gary Bradshaw;Departures from optimality: understanding human analyst's information foraging in assisted requirements tracing.;572-581;10;Requirements Engineering;
2013;Laura V. Galvis Carreno,Kristina Winbladh;Analysis of user comments: an approach for software requirements evolution.;582-591;10;Requirements Engineering;
2013;Emmanuel Letier,William Heaven;Requirements modelling by synthesis of deontic input-output automata.;592-601;10;Requirements Engineering;
2013;Esteban Pavese,Victor A. Braberman,Sebastian Uchitel;Automated reliability estimation over partial systematic explorations.;602-611;10;Reliability;
2013;Petr Hosek,Cristian Cadar;Safe software updates via multi-version execution.;612-621;10;Reliability;
2013;Antonio Filieri,Corina S. Pasareanu,Willem Visser;Reliability analysis in symbolic pathfinder.;622-631;10;Reliability;
2013;Inah Omoronyia,Luca Cavallaro,Mazeiar Salehie,Liliana Pasquale,Bashar Nuseibeh;Engineering adaptive privacy: on the role of privacy awareness requirements.;632-641;10;Security and Privacy;
2013;Lwin Khin Shar,Hee Beng Kuan Tan,Lionel C. Briand;Mining SQL injection and cross site scripting vulnerabilities using hybrid program analysis.;642-651;10;Security and Privacy;
2013;Yunhui Zheng,Xiangyun Zhang;Path sensitive static analysis of web applications for remote code execution vulnerability detection.;652-661;10;Security and Privacy;
2013;Mohamed Almorsy,John C. Grundy,Amani S. Ibrahim;Automated software architecture security risk analysis using formalized signatures.;662-671;10;Security and Privacy;
2013;Brittany Johnson,Yoonki Song,Emerson R. Murphy-Hill,Robert W. Bowdidge;Why don't software developers use static analysis tools to find bugs?;672-681;10;Analysis Studies;
2013;Aiko Fallas Yamashita,Leon Moonen;Exploring the impact of inter-smell relations on software maintainability: an empirical study.;682-691;10;Analysis Studies;
2013;Gabriele Bavota,Bogdan Dit,Rocco Oliveto,Massimiliano Di Penta,Denys Poshyvanyk,Andrea De Lucia;An empirical study on the developers' perception of software coupling.;692-701;10;Analysis Studies;
2013;Shauvik Roy Choudhary,Mukul R. Prasad,Alessandro Orso;X-PERT: accurate identification of cross-browser issues in web applications.;702-711;10;Empirical Studies;
2013;Alberto Bacchelli,Christian Bird;Expectations, outcomes, and challenges of modern code review.;712-721;10;Empirical Studies;
2013;Marian Petre;UML in practice.;722-731;10;Empirical Studies;
2013;Bakhtiar Khan Kasi,Anita Sarma;Cassandra: proactive conflict minimization through optimized task scheduling.;732-741;10;Empirical Studies;
2013;Alex Potanin,Monique Damitio,James S. Noble;Are your incoming aliases really necessary? counting the cost of object ownership.;742-751;10;Programming Support;
2013;Asger Feldthaus,Max Schafer,Manu Sridharan,Julian Dolby,Frank Tip;Efficient construction of approximate call graphs for JavaScript IDE services.;752-761;10;Programming Support;
2013;Jinshui Wang,Xin Peng,Zhenchang Xing,Wenyun Zhao;Improving feature location practice with multi-faceted interactive exploration.;762-771;10;Programming Support;
2013;Hoang D. T. Nguyen,Dawei Qi,Abhik Roychoudhury,Satish Chandra;SemFix: program repair via semantic analysis.;772-781;10;Program Repair;
2013;Antonio Carzaniga,Alessandra Gorla,Andrea Mattavelli,Nicolo Perino,Mauro Pezze;Automatic recovery from runtime failures.;782-791;10;Program Repair;
2013;Zack Coker,Munawar Hafiz;Program transformations to fix C integers.;792-801;10;Program Repair;
2013;Dongsun Kim,Jaechang Nam,Jaewoo Song,Sunghun Kim;Automatic patch generation learned from human-written patches.;802-811;10;Program Repair;
2013;Nicholas Sawadsky,Gail C. Murphy,Rahul Jiresal;Reverb: recommending code-related web pages.;812-821;10;Tools;
2013;Andreas Scharf,Till Amma;Dynamic injection of sketching features into GEF based diagram editors.;822-831;10;Tools;
2013;Peter C. Rigby,Martin P. Robillard;Discovering essential code elements in informal documentation.;832-841;10;Tools;
2013;Sonia Haiduc,Gabriele Bavota,Andrian Marcus,Rocco Oliveto,Andrea De Lucia,Tim Menzies;Automatic query reformulations for text retrieval in software engineering.;842-851;10;Tools;
2013;Pamela Samuelson;Are software patents bad? (keynote).;855;1;Keynotes;
2013;Tony DeRose;The connection between movie making and software development (keynote).;856;1;Keynotes;
2013;Linda M. Northrop;Does scale really matter? ultra-large-scale systems seven years after the study (keynote).;857;1;Keynotes;
2013;Steven Fraser,Judy M. Bishop,Barry W. Boehm,Pradeep Kathail,Philippe Kruchten,Ipek Ozkaya,Alexandra Szynkarski;Technical debt: past, present, and future (panel).;861-862;2;Technical Debt:Past, Present, and Future;
2013;Brian Fitzgerald,Klaas-Jan Stol,Ryan O'Sullivan,Donal O'Brien;Scaling agile methods to regulated environments: an industry case study.;863-872;10;Agile and Distributed Practices;
2013;Alan W. Brown,Scott Ambler,Walker Royce;Agility at scale: economic governance, measured improvement, and disciplined delivery.;873-881;9;Agile and Distributed Practices;
2013;Ekrem Kocaguneli,Thomas Zimmermann 0001,Christian Bird,Nachiappan Nagappan,Tim Menzies;Distributed development considered harmful?;882-890;9;Agile and Distributed Practices;
2013;Robert W. Schwanke,Lu Xiao,Yuanfang Cai;Measuring architecture quality by structure plus history analysis.;891-900;10;Software Architecture;
2013;Joshua Garcia,Ivo Krka,Chris Mattmann,Nenad Medvidovic;Obtaining ground-truth software architectures.;901-910;10;Software Architecture;
2013;Ganesh Samarthyam,Girish Suryanarayana,Tushar Sharma,Shrinath Gupta;MIDAS: a design quality assessment method for industrial software.;911-920;10;Software Architecture;
2013;Eric Bouwers,Arie van Deursen,Joost Visser;Evaluating usefulness of software metrics: an industrial experience report.;921-930;10;Metrics and Evaluation;
2013;Vipin Balachandran;Reducing human effort and improving quality in peer code reviews using automatic static analysis and reviewer recommendation.;931-940;10;Metrics and Evaluation;
2013;Aldo Dagnino;Estimating software-intensive projects in the absence of historical data.;941-950;10;Metrics and Evaluation;
2013;Dongmei Zhang,Tao Xie;Pathways to technology transfer and adoption: achievements and challenges (mini-tutorial).;951-952;2;Mini-Tutorial;
2013;Dennis Pagano,Bernd Brugge;User involvement in software evolution practice: a case study.;953-962;10;Case Studies;
2013;Sihan Li,Hucheng Zhou,Haoxiang Lin,Tian Xiao,Haibo Lin,Wei Lin,Tao Xie;A characteristic study on failures of production distributed data-parallel programs.;963-972;10;Case Studies;
2013;Rafael Prikladnicki,Erran Carmel;Is time-zone proximity an advantage for software development? the case of the brazilian IT industry.;973-981;9;Case Studies;
2013;Stephany Bellomo,Robert L. Nord,Ipek Ozkaya;A study of enabling factors for rapid fielding: combined practices to balance speed and stability.;982-991;10;Case Studies;
2013;Indradeep Ghosh,Nastaran Shafiei,Guodong Li,Wei-Fan Chiang;JST: an automatic test generation tool for industrial Java applications with strings.;992-1001;10;Testing;
2013;Suresh Thummalapenta,Pranavadatta Devaki,Saurabh Sinha,Satish Chandra,Sivagami Gnanasundaram,Deepa D. Nagaraj,Sampathkumar Sathishkumar;Efficient and change-resilient test automation: an industrial case study.;1002-1011;10;Testing;
2013;Haroon Malik,Hadi Hemmati,Ahmed E. Hassan;Automatic detection of performance deviations in the load testing of large scale systems.;1012-1021;10;Testing;
2013;Henning Femmer,Dharmalingam Ganesan,Mikael Lindvall,David McComas;Detecting inconsistencies in wrappers: a case study.;1022-1031;10;Bug Detection;
2013;Marcelo Serrano Zanetti,Ingo Scholtes,Claudio Juan Tessone,Frank Schweitzer;Categorizing bugs with social networks: a case study on four open source software communities.;1032-1041;10;Bug Detection;
2013;Hongyu Zhang,Liang Gong,Steven Versteeg;Predicting bug-fixing time: an empirical study of commercial software projects.;1042-1051;10;Bug Detection;
2013;Simone C. dos Santos,Felipe Santana Furtado Soares;Authentic assessment in software engineering education based on PBL principles: a case study in the telecom market.;1055-1062;8;Problem-Based and Studio Learning;
2013;Christopher N. Bull,Jonathan P. Whittle,Leon Cruickshank;Studios in software engineering education: towards an evaluable model.;1063-1072;10;Problem-Based and Studio Learning;
2013;Dastyni Loksa,Nicolas Mangano,Thomas D. LaToza,Andre van der Hoek;Enabling a classroom design studio with a collaborative sketch design tool.;1073-1082;10;Problem-Based and Studio Learning;
2013;Amir Zeid;A framework to evaluate software engineering student contests: evaluation and integration with academic programs.;1083-1089;7;Problem-Based and Studio Learning;
2013;David S. Janzen,John Clements,Michael Hilton;An evaluation of interactive test-driven labs with WebIDE in CS0.;1090-1098;9;Teaching Introductory Software Engineering;
2013;Vicente Lustosa Neto,Roberta Coelho,Larissa Leite,Dalton S. Guerrero,Andrea P. Mendonca;POPT: a problem-oriented programming and testing approach for novice students.;1099-1108;10;Teaching Introductory Software Engineering;
2013;Vaclav Rajlich;Teaching developer skills in the first software engineering course.;1109-1116;8;Teaching Introductory Software Engineering;
2013;Nikolai Tillmann,Jonathan de Halleux,Tao Xie,Sumit Gulwani,Judy M. Bishop;Teaching and learning programming and software engineering via interactive gaming.;1117-1126;10;Teaching Introductory Software Engineering;
2013;Mark A. Ardis,David Budgen,Gregory W. Hislop,Jeff Offutt,Mark J. Sebern,Willem Visser;Town hall discussion of SE 2004 revisions (panel).;1127;1;Panel:Town Hall Discussion of SE 2004 Revisions;
2013;Maria Paasivaara,Casper Lassenius,Daniela E. Herlea,Petteri Raty,Adrian Schroter;Teaching students global software engineering skills using distributed scrum.;1128-1137;10;Advanced Software Engineering Education;
2013;Marco Kuhrmann,Daniel Mendez Fernandez,Jurgen Munch;Teaching software process modeling.;1138-1147;10;Advanced Software Engineering Education;
2013;Chris Pilgrim;Industry involvement in ICT curriculum: a comparative survey.;1148-1153;6;Advanced Software Engineering Education;
2013;Andrew Meneely,Samuel Lucidi;Vulnerability of the day: concrete demonstrations for software engineering undergraduates.;1154-1157;4;Advanced Software Engineering Education;
2013;John B. Goodenough,Charles B. Weinstock,Ari Z. Klein;Eliminative induction: a basis for arguing system confidence.;1161-1164;4;Dependability Perspectives;
2013;Paul Givens,Aleksandar Chakarov,Sriram Sankaranarayanan,Tom Yeh;Exploring the internal state of user interfaces by combining computer vision techniques with grammatical inference.;1165-1168;4;Dependability Perspectives;
2013;Francois Gauthier,Ettore Merlo;Semantic smells and errors in access control models: a case study in PHP.;1169-1172;4;Dependability Perspectives;
2013;Sai Zhang;Practical semantic test simplification.;1173-1176;4;Dependability Perspectives;
2013;Roykrong Sukkerd,Ivan Beschastnikh,Jochen Wuttke,Sai Zhang,Yuriy Brun;Understanding regression failures through test-passing and test-failing code changes.;1177-1180;4;Dependability Perspectives;
2013;Yun Young Lee,Sam Harwell,Sarfraz Khurshid,Darko Marinov;Temporal code completion and navigation.;1181-1184;4;Supporting Tomorrow's Developer;
2013;Olga Baysal,Reid Holmes,Michael W. Godfrey;Situational awareness: personalizing issue tracking systems.;1185-1188;4;Supporting Tomorrow's Developer;
2013;Tuan Anh Nguyen,Christoph Csallner,Nikolai Tillmann;GROPG: a graphical on-phone debugger.;1189-1192;4;Supporting Tomorrow's Developer;
2013;Sarah Rastkar,Gail C. Murphy;Why did this code change?;1193-1196;4;Supporting Tomorrow's Developer;
2013;Nicolas Bettenburg,Andrew Begel;Deciphering the story of software development through frequent pattern mining.;1197-1200;4;Supporting Tomorrow's Developer;
2013;Stephan Salinger,Franz Zieris,Lutz Prechelt;Liberating pair programming research from the oppressive Driver/Observer regime.;1201-1204;4;Collaborative Development;
2013;Ke Mao,Ye Yang,Mingshu Li,Mark Harman;Pricing crowdsourcing-based software development tasks.;1205-1208;4;Collaborative Development;
2013;Raphael Pham,Leif Singer,Kurt Schneider;Building test suites in social coding sites by leveraging drive-by commits.;1209-1212;4;Collaborative Development;
2013;Michael Smit,Bradley Simmons,Mark Shtern,Marin Litoiu;Supporting application development with structured queries in the cloud.;1213-1216;4;Collaborative Development;
2013;Benedikt Hauptmann,Maximilian Junker,Sebastian Eder,Lars Heinemann,Rudolf Vaas,Peter Braun;Hunting for smells in natural language tests.;1217-1220;4;Collaborative Development;
2013;Hamid Bagheri,Kevin J. Sullivan;Bottom-up model-driven development.;1221-1224;4;Alternative Modeling;
2013;Lerina Aversano,Gerardo Canfora,Giuseppe De Ruvo,Maria Tortorella;An approach for restructuring text content.;1225-1228;4;Alternative Modeling;
2013;Emilie Balland,Charles Consel,Bernard N'Kaoua,Helene Sauzeon;A case for human-driven software development.;1229-1232;4;Alternative Modeling;
2013;Julia Rubin-Mosin,Marsha Chechik;A framework for managing cloned product variants.;1233-1236;4;Alternative Modeling;
2013;David Socha,Josh D. Tenenberg;Sketching software in the wild.;1237-1240;4;Alternative Modeling;
2013;Adrian Kuhn;On extracting unit tests from interactive live programming sessions.;1241-1244;4;Posters;
2013;Christopher Henard,Mike Papadakis,Gilles Perrouin,Jacques Klein,Yves Le Traon;Towards automated testing and fixing of re-engineered feature models.;1245-1248;4;Posters;
2013;Dalal Alrajeh,Alessandra Russo,James Lockerbie,Neil A. M. Maiden,Alistair Mavin,Mark Novak;Computational alignment of goals and scenarios for complex systems.;1249-1252;4;Posters;
2013;Damien A. Tamburri,Patricia Lago,Johannes C. van Vliet;Service networks for development communities.;1253-1256;4;Posters;
2013;Mark Staples,Rafal Kolanski,Gerwin Klein,Corey Lewis,June Andronick,Toby C. Murray,D. Ross Jeffery,Leonard J. Bass;Formal specifications better than function points for code sizing.;1257-1260;4;Posters;
2013;Matthew Stephan,Manar H. Alalfi,Andrew Stevenson,James R. Cordy;Using mutation analysis for a model-clone detector comparison framework.;1261-1264;4;Posters;
2013;Md. Saidur Rahman 0002,Amir Aryani,Chanchal Kumar Roy,Fabrizio Perin;On the relationships between domain-based coupling and code clones: an exploratory study.;1265-1268;4;Posters;
2013;Raul A. Santelices,Yiji Zhang,Siyuan Jiang,Haipeng Cai,Ying-Jie Zhang;Quantitative program slicing: separating statements by relevance.;1269-1272;4;Posters;
2013;Kacper Bak,Dina Zayan,Krzysztof Czarnecki,Michal Antkiewicz,Zinovy Diskin,Andrzej Wasowski,Derek Rayside;Example-driven modeling: model = abstractions + examples.;1273-1276;4;Posters;
2013;Will Snipes,Vinay Augustine,Anil R. Nair,Emerson R. Murphy-Hill;Towards recognizing and rewarding efficient developer work patterns.;1277-1280;4;Posters;
2013;Xiao Liu,Yun Yang,Dahai Cao,Dong Yuan;Selecting checkpoints along the time line: a novel temporal checkpoint selection strategy for monitoring a batch of parallel business processes.;1281-1284;4;Posters;
2013;Lyle Franklin,Alex Gyori,Jan Lahoda,Danny Dig;LAMBDAFICATOR: from imperative to functional programming through automated refactoring.;1287-1290;4;Formal Demonstrations 1;
2013;Jim Buckley,Sean Mooney,Jacek Rosik,Nour Hussein;JITTAC: a just-in-time tool for architectural consistency.;1291-1294;4;Formal Demonstrations 1;
2013;Luca Ponzanelli,Alberto Bacchelli,Michele Lanza;Seahawk: stack overflow in the IDE.;1295-1298;4;Formal Demonstrations 1;
2013;Hung Viet Nguyen,Hoan Anh Nguyen,Tung Thanh Nguyen,Tien N. Nguyen;DRC: a detection tool for dangling references in PHP-based web applications.;1299-1302;4;Formal Demonstrations 1;
2013;Leandro Sales Pinto,Saurabh Sinha,Alessandro Orso;TestEvol: a tool for analyzing test-suite evolution.;1303-1306;4;Formal Demonstrations 1;
2013;Sonia Haiduc,Giuseppe De Rosa,Gabriele Bavota,Rocco Oliveto,Andrea De Lucia,Andrian Marcus;Query quality prediction and reformulation for source code search: the refoqus tool.;1307-1310;4;Formal Demonstrations 1;
2013;Zhenchang Xing,Yinxing Xue,Stanislaw Jarzabek;A large scale Linux-kernel based benchmark for feature location research.;1311-1314;4;Formal Demonstrations 1;
2013;Seonah Lee,Sungwon Kang,Matthew Staats;NavClus: a graphical recommender for assisting code exploration.;1315-1318;4;Formal Demonstrations 1;
2013;John Jacobellis,Na Meng,Miryung Kim;LASE: an example-based program transformation tool for locating and applying systematic edits.;1319-1322;4;Formal Demonstrations 2;
2013;Remo Lemma,Michele Lanza,Fernando Olivero;CEL: modeling everywhere.;1323-1326;4;Formal Demonstrations 2;
2013;Eric Knauss,Daniela E. Herlea;V: ISSUE: LIZER: exploring requirements clarification in online communication over time.;1327-1330;4;Formal Demonstrations 2;
2013;Gerardo Canfora,Massimiliano Di Penta,Stefano Giannantonio,Rocco Oliveto,Sebastiano Panichella;YODA: young and newcomer developer assistant.;1331-1334;4;Formal Demonstrations 2;
2013;Fabrizio Pastore,Leonardo Mariani,Alberto Goffi;RADAR: a tool for debugging regression problems in C/C++ software.;1335-1338;4;Formal Demonstrations 2;
2013;Yiyang Hao,Ge Li,Lili Mou,Lu Zhang,Zhi Jin;MCT: a tool for commenting programs by multimedia comments.;1339-1342;4;Formal Demonstrations 2;
2013;Guowei Yang,Sarfraz Khurshid,Corina S. Pasareanu;Memoise: a tool for memoized symbolic execution.;1343-1346;4;Formal Demonstrations 2;
2013;Victor A. Braberman,Nicolas D'Ippolito,Nir Piterman,Daniel Sykes,Sebastian Uchitel;Controller synthesis: from modelling to enactment.;1347-1350;4;Formal Demonstrations 2;
2013;Sarah Nadi;A study of variability spaces in open source software.;1353-1356;4;Short Papers;
2013;John Slankas;Implementing database access control policy from unconstrained natural language text.;1357-1360;4;Short Papers;
2013;Leif Jonsson;Increasing anomaly handling efficiency in large organizations using applied machine learning.;1361-1364;4;Short Papers;
2013;Daniele Romano;Analyzing the change-proneness of service-oriented systems from an industrial perspective.;1365-1368;4;Short Papers;
2013;Victor Guana;Supporting maintenance tasks on transformational code generation environments.;1369-1372;4;Short Papers;
2013;Meiru Che;An approach to documenting and evolving architectural design decisions.;1373-1376;4;Short Papers;
2013;Tingting Yu;An observable and controllable testing framework for modern systems.;1377-1380;4;Short Papers;
2013;Javier Gonzalez Sanchez;Toward a software product line for affective-driven self-adaptive systems.;1381-1384;4;Short Papers;
2013;Latifa Guerrouj;Normalizing source code vocabulary to support program comprehension and software quality.;1385-1388;4;Short Papers;
2013;Kivanc Muslu;Integrating systematic exploration, analysis, and maintenance in software development.;1389-1392;4;Short Papers;
2013;Martin Brandtner;Fostering software quality assessment.;1393-1396;4;Posters;
2013;Nicolo Perino;A framework for self-healing software systems.;1397-1400;4;Posters;
2013;Paul Rimba;Building high assurance secure applications using security patterns for capability-based platforms.;1401-1404;4;Posters;
2013;Naveen Kulkarni;Systematically selecting a software module during opportunistic reuse.;1405-1406;2;Posters;
2013;Olga Baysal;Informing development decisions: from data to information.;1407-1410;4;Posters;
2013;Zhongpeng Lin;Understanding and simulating software evolution.;1411-1414;4;Posters;
2013;Nuno Ramos Carvalho;An ontology toolkit for problem domain concept location in program comprehension.;1415-1418;4;Posters;
2013;Jason S. King;Measuring the forensic-ability of audit logs for nonrepudiation.;1419-1422;4;Posters;
2013;Huascar Sanchez;SNIPR: complementing code search with code retargeting capabilities.;1423-1426;4;Posters;
2013;Oscar Callau;Supporting incremental programming with ghosts.;1429-1431;3;Program Analysis;
2013;Brittany Johnson;Novice understanding of program analysis tool notifications.;1432-1434;3;Program Analysis;
2013;Luca Ardito;Energy aware self-adaptation in mobile systems.;1435-1437;3;Program Analysis;
2013;Sai Zhang;ConfDiagnoser: an automated configuration error diagnosis tool for Java software.;1438-1440;3;Debugging;
2013;Wei Jin;Reproducing and debugging field failures in house.;1441-1443;3;Debugging;
2013;Sangmin Park;Fault comprehension for concurrent programs.;1444-1446;3;Debugging;
2013;Adler Diniz de Souza;A proposal for the improvement of project's cost predictability using EVM and historical data of cost.;1447-1449;3;Process and Maintenance;
2013;Ehsan Kouroshfar;Studying the effect of co-change dispersion on software quality.;1450-1452;3;Process and Maintenance;
2013;Juliana Saraiva;A roadmap for software maintainability measurement.;1453-1455;3;Process and Maintenance;
2013;Zachary J. Oster;Reasoning with qualitative preferences to develop optimal component-based systems.;1456-1458;3;Models and Requirements;
2013;Federico Ciccozzi;From models to code and back: correct-by-construction code from UML and ALF.;1459-1461;3;Models and Requirements;
2013;Romina Torres;Mitigating the obsolescence of specification models of service-based systems.;1462-1464;3;Models and Requirements;
2013;Nupul Kukreja;Decision theoretic requirements prioritization: a two-step approach for sliding towards value realization.;1465-1467;3;Models and Requirements;
2013;Braden Simpson;Changeset based developer communication to detect software failures.;1468-1470;3;Developers and Users;
2013;Jordan Ell;Identifying failure inducing developer pairs within developer networks.;1471-1473;3;Developers and Users;
2013;Hammad Khalid;On identifying user complaints of iOS apps.;1474-1476;3;Developers and Users;
2013;Atif M. Memon,Myra B. Cohen;Automated testing of GUI applications: models, tools, and controlling flakiness.;1479-1480;2;Tutorial Summaries;
2013;Jin Song Dong,Jun Sun,Yang Liu 0003;Build your own model checker in one month.;1481-1483;3;Tutorial Summaries;
2013;Tim Menzies,Ekrem Kocaguneli,Fayola Peters,Burak Turhan,Leandro L. Minku;Data science for software engineering.;1484-1486;3;Tutorial Summaries;
2013;Dongmei Zhang,Tao Xie;Software analytics: achievements and challenges.;1487;1;Tutorial Summaries;
2013;K. Rustan M. Leino;Developing verified programs with dafny.;1488-1490;3;Tutorial Summaries;
2013;Eric Bouwers,Arie van Deursen,Joost Visser;Software metrics: pitfalls and best practices.;1491-1492;2;Tutorial Summaries;
2013;Peter C. Mehlitz,Neha Rungta,Willem Visser;A hands-on Java PathFinder tutorial.;1493-1495;3;Tutorial Summaries;
2013;Patrick Heymans,Axel Legay,Maxime Cordy;Efficient quality assurance of variability-intensive systems.;1496-1498;3;Tutorial Summaries;
2013;Xavier Franch;Software requirement patterns.;1499-1501;3;Tutorial Summaries;
2013;Ewen Denney,Ganesh Pai,Ibrahim Habli,Tim P. Kelly,John C. Knight;1st international workshop on assurance cases for software-intensive systems (ASSURE 2013).;1505-1506;2;Workshop Summaries;
2013;Hong Zhu,Henry Muccini,Zhenyu Chen;8th international workshop on automation of software test (AST 2013).;1507-1508;2;Workshop Summaries;
2013;Xavier Franch,Nazim H. Madhavji,Bill Curtis,Larry Votta;1st international workshop on conducting empirical studies in industry (CESI 2013).;1509-1510;2;Workshop Summaries;
2013;Rafael Prikladnicki,Rashina Hoda,Marcelo Cataldo,Helen C. Sharp,Yvonne Dittrich,Cleidson Ronald Botelho de Souza;6th international workshop on cooperative and human aspects of software engineering (CHASE 2013).;1511-1512;2;Workshop Summaries;
2013;Mark Harman,Richard F. Paige,James R. Williams;1st international workshop on combining modelling and search-based software engineering (CMSBSE 2013).;1513-1514;2;Workshop Summaries;
2013;Stuart R. Faulk,Michal Young,Rafael Prikladnicki,David M. Weiss,Lian Yu;3rd international workshop on collaborative teaching of globally distributed software development (CTGDSD 2013).;1515-1516;2;Workshop Summaries;
2013;Christian Bird,Tim Menzies,Thomas Zimmermann 0001;1st international workshop on data analysis patterns in software engineering (DAPSE 2013).;1517-1518;2;Workshop Summaries;
2013;Stefania Gnesi,Nico Plat;1st FME workshop on formal methods in software engineering (FormaliSE 2013).;1519-1520;2;Workshop Summaries;
2013;Kendra M. L. Cooper,Walt Scacchi,Alf Inge Wang;3rd international workshop on games and software engineering: engineering computer games to enable positive, progressive change (GAS 2013).;1521-1522;2;Workshop Summaries;
2013;Patricia Lago,Niklaus Meyer,Maurizio Morisio,Hausi A. Muller,Giuseppe Scanniello;2nd international workshop on green and sustainable software (GREENS 2013).;1523-1524;2;Workshop Summaries;
2013;Pontus Johnson,Ivar Jacobson,Michael Goedicke,Mira Kajko-Mattsson;2nd SEMAT workshop on a general theory of software engineering (GTSE 2013).;1525-1526;2;Workshop Summaries;
2013;Rainer Koschke,Elmar Jurgens,Juergen Rilling;7th international workshop on software clones (IWSC 2013).;1527-1528;2;Workshop Summaries;
2013;Brian Burg,Adrian Kuhn,Chris Parnin;1st international workshop on live programming (LIVE 2013).;1529-1530;2;Workshop Summaries;
2013;Joanne M. Atlee,Robert Baillargeon,Marsha Chechik,Robert B. France,Jeffrey G. Gray,Richard F. Paige,Bernhard Rumpe;5th international workshop on modeling in software engineering (MiSE 2013).;1531-1532;2;Workshop Summaries;
2013;Grace A. Lewis,Jeffrey G. Gray,Henry Muccini,Nachiappan Nagappan,David S. Rosenblum,Emad Shihab;1st international workshop on the engineering of mobile-enabled systems (MOBS 2013).;1533-1534;2;Workshop Summaries;
2013;Philippe Kruchten,Robert L. Nord,Ipek Ozkaya;4th international workshop on managing technical debt (MTD 2013).;1535-1536;2;Workshop Summaries;
2013;Lori L. Pollock,David M. Binkley,Dawn Lawrie,Emily Hill,Rocco Oliveto,Gabriele Bavota,Alberto Bacchelli;1st international workshop on natural language analysis in software engineering (NaturaLiSE 2013).;1537-1538;2;Workshop Summaries;
2013;Domenico Bianculli,Patricia Lago,Grace A. Lewis,Hye-young Paik;5th international workshop on principles of engineering service-oriented systems (PESOS 2013).;1539-1540;2;Workshop Summaries;
2013;Julia Rubin-Mosin,Goetz Botterweck,Andreas Pleuss,David M. Weiss;4th international workshop on product LinE approaches in software engineering (PLEASE 2013).;1541-1542;2;Workshop Summaries;
2013;Rachel Harrison,Sol J. Greenspan,Tim Menzies,Marjan Mernik,Pedro Rangel Henriques,Daniela Carneiro da Cruz,Daniel Rodriguez;2nd international workshop on realizing artificial intelligence synergies in software engineering (RAISE 2013).;1543-1544;2;Workshop Summaries;
2013;Bram Adams,Christian Bird,Foutse Khomh,Kim Moir;1st international workshop on release engineering (RELENG 2013).;1545-1546;2;Workshop Summaries;
2013;Jeffrey Carver,Tom Epperly,Lorin Hochstein,Valerie Maxville,Dietmar Pfahl,Jonathan Sillito;5th international workshop on software engineering for computational science and engineering (SE-CSE 2013).;1547-1548;2;Workshop Summaries;
2013;Craig E. Kuziemsky,John C. Knight;5th international workshop on software engineering in health care (SEHC 2013).;1549-1550;2;Workshop Summaries;
2013;Christine Julien,Klaus Wehrle;4th international workshop on software engineering for sensor network applications (SESENA 2013).;1551-1552;2;Workshop Summaries;
2013;Ian Gorton,Yan Liu,Heiko Koziolek,Anne Martens,Mazeiar Salehie;2nd international workshop on software engineering challenges for the smart grid (SE4SG 2013).;1553-1554;2;Workshop Summaries;
2013;Michael Barnett 0001,Martin Nordio,Judy M. Bishop,Karin Koogan Breitman,Diego Garbervetsky;3rd international workshop on developing tools as plug-ins (TOPI 2013).;1555;1;Workshop Summaries;
2013;Paris Avgeriou,Janet E. Burge,Jane Cleland-Huang,Xavier Franch,Matthias Galster,Mehdi Mirakhorli,Roshanak Roshandel;2nd international workshop on the twin peaks of requirements and architecture (TwinPeaks 2013).;1556-1557;2;Workshop Summaries;
2013;Andrew Begel,Caitlin Sadowski;2nd international workshop on user evaluations for software engineering researchers (USER 2013).;1558-1559;2;Workshop Summaries;
2013;Steve Counsell,Michele Marchesi,Ewan D. Tempero,Corrado Aaron Visaggio;4th international workshop on emerging trends in software metrics (WETSoM 2013).;1560-1561;2;Workshop Summaries;
2012;Claire Le Goues,Michael Dewey-Vogt,Stephanie Forrest,Westley Weimer;A systematic study of automated program repair: Fixing 55 out of 105 bugs for $8 each.;3-13;11;Technical Research;Fault Handling
2012;Jian Zhou,Hongyu Zhang,David Lo;Where should the bugs be fixed? More accurate information retrieval-based bug localization based on bug reports.;14-24;11;Technical Research;Fault Handling
2012;Jifeng Xuan,He Jiang,Zhilei Ren,Weiqin Zou;Developer prioritization in bug repositories.;25-35;11;Technical Research;Fault Handling
2012;Francisco Servant,James A. Jones;WhoseFault: Automatic developer-to-fault assignment through fault localization.;36-46;11;Technical Research;Fault Handling
2012;Barthelemy Dagenais,Martin P. Robillard;Recovering traceability links between an API and its learning resources.;47-57;11;Code Generation and Recovery;
2012;Yingfei Xiong,Arnaud Hubaux,Steven She,Krzysztof Czarnecki;Generating range fixes for software configuration.;58-68;11;Code Generation and Recovery;
2012;Hoan Anh Nguyen,Tung Thanh Nguyen,Hoan Anh Nguyen,Ahmed Tamrawi,Hung Viet Nguyen,Jafar M. Al-Kofahi,Tien N. Nguyen;Graph-based pattern-oriented, context-sensitive source code completion.;69-79;11;Code Generation and Recovery;
2012;Fan Long,Vijay Ganesh,Michael Carbin,Stelios Sidiroglou-Douskos,Martin C. Rinard;Automatic input rectification.;80-90;11;Code Generation and Recovery;
2012;Narayan Ramasubbu,Rajesh Krishna Balan;Overcoming the challenges in cost estimation for distributed software projects.;91-101;11;Empirical Studies of Development;
2012;Ding Yuan,Soyeon Park,Yuanyuan Zhou;Characterizing logging practices in open-source software.;102-112;11;Empirical Studies of Development;
2012;Mathieu Lavallee,Pierre N. Robillard;The impacts of software process improvement on developers: A systematic review.;113-122;10;Empirical Studies of Development;
2012;Victor Pankratius,Felix Schmidt,Gilda Garreton;Combining functional and imperative programming for multicore software: An empirical study evaluating Scala and Java.;123-133;11;Empirical Studies of Development;
2012;Dacong Yan,Guoqing (Harry) Xu,Atanas Rountev;Uncovering performance problems in Java applications with reference propagation profiling.;134-144;11;Performance Analysis;
2012;Shi Han,Yingnong Dang,Song Ge,Dongmei Zhang,Tao Xie;Performance debugging in the large via mining millions of stack traces.;145-155;11;Performance Analysis;
2012;Mark Grechanik,Chen Fu,Qing Xie;Automatically finding performance problems with feedback-directed learning software testing.;156-166;11;Performance Analysis;
2012;Norbert Siegmund,Sergiy S. Kolesnikov,Christian Kastner,Sven Apel,Don S. Batory,Marko Rosenmuller,Gunter Saake;Predicting performance via automated feature-interaction detection.;167-177;11;Performance Analysis;
2012;Gordon Fraser,Andrea Arcuri;Sound empirical evidence in software testing.;178-188;11;Defect Prediction;
2012;Fayola Peters,Tim Menzies;Privacy and utility for defect prediction: Experiments with MORPH.;189-199;11;Defect Prediction;
2012;Hideaki Hata,Osamu Mizuno,Tohru Kikuno;Bug prediction based on fine-grained module histories.;200-210;11;Defect Prediction;
2012;Xi Ge,Quinton L. DuBose,Emerson R. Murphy-Hill;Reconciling manual and automatic refactoring.;211-221;11;Refactoring;
2012;Stephen R. Foster,William G. Griswold,Sorin Lerner;WitchDoctor: IDE support for real-time auto-completion of refactorings.;222-232;11;Refactoring;
2012;Mohsen Vakilian,Nicholas Y. Chen,Stas Negara,Balaji Ambresh Rajkumar,Brian P. Bailey,Ralph E. Johnson;Use, disuse, and misuse of automated refactorings.;233-243;11;Refactoring;
2012;Michaela Greiler,Arie van Deursen,Margaret-Anne D. Storey;Test confessions: A study of testing practices for plug-in systems.;244-254;11;Human Aspects of Development;
2012;Tobias Roehm,Rebecca Tiarks,Rainer Koschke,Walid Maalej;How do professional developers comprehend software?;255-265;11;Human Aspects of Development;
2012;Ekwa Duala-Ekoko,Martin P. Robillard;Asking and answering questions about unfamiliar APIs: An exploratory study.;266-276;11;Human Aspects of Development;
2012;Hesam Samimi,Max Schafer,Shay Artzi,Todd D. Millstein,Frank Tip,Laurie J. Hendren;Automated repair of HTML generation errors in PHP applications using string constraint solving.;277-287;11;Bug Detection;
2012;Michael Pradel,Thomas R. Gross;Leveraging test generation and specification mining for automated bug detection without false positives.;288-298;11;Bug Detection;
2012;Peng Liu,Charles Zhang;Axis: Automatically fixing atomicity violations through solving control constraints.;299-309;11;Bug Detection;
2012;Jingyue Li,Michael D. Ernst;CBCD: Cloned buggy code detector.;310-320;11;Bug Detection;
2012;Sagi Ifrah,David H. Lorenz;Crosscutting revision control system.;321-330;10;Multiversion Software;
2012;Katsuro Inoue,Yusuke Sasaki,Pei Xia,Yuki Manabe;Where does this code come from and where does it go? - Integrated code history tracker for open source systems.;331-341;11;Multiversion Software;
2012;Mario Luis Guimaraes,Antonio Rito Silva;Improving early detection of software merge conflicts.;342-352;11;Multiversion Software;
2012;Sichen Meng,Xiaoying Wang,Lu Zhang,Hong Mei;A history-based matching approach to identification of framework evolution.;353-363;11;Multiversion Software;
2012;Collin McMillan,Mark Grechanik,Denys Poshyvanyk;Detecting similar software applications.;364-374;11;Similarity and Classiﬁcation;
2012;Alberto Bacchelli,Tommaso Dal Sasso,Marco D'Ambros,Michele Lanza;Content classification of development emails.;375-385;11;Similarity and Classiﬁcation;
2012;Yuan Tian,Julia L. Lawall,David Lo;Identifying Linux bug fixing patches.;386-396;11;Similarity and Classiﬁcation;
2012;Lucia,David Lo,Lingxiao Jiang,Aditya Budi;Active refinement of clone anomaly reports.;397-407;11;Similarity and Classiﬁcation;
2012;Ali Mesbah,Shabnam Mirshokraie;Automated analysis of CSS rules to support style maintenance.;408-418;11;Analysis for Evolution;
2012;Pamela Bhattacharya,Marios Iliofotou,Iulian Neamtiu,Michalis Faloutsos;Graph-based analysis and prediction for software evolution.;419-429;11;Analysis for Evolution;
2012;Malcom Gethers,Bogdan Dit,Huzefa H. Kagdi,Denys Poshyvanyk;Integrated impact analysis for managing software changes.;430-440;11;Analysis for Evolution;
2012;Felienne Hermans,Martin Pinzger,Arie van Deursen;Detecting and visualizing inter-worksheet smells in spreadsheets.;441-451;11;Analysis for Evolution;
2012;Mariano Ceccato,Alessandro Marchetto,Leonardo Mariani,Duy Cu Nguyen,Paolo Tonella;An empirical study about the effectiveness of debugging when random test cases are used.;452-462;11;Debugging;
2012;Ross Gore,Paul F. Reynolds Jr.;Reducing confounding bias in predicate-level statistical debugging metrics.;463-473;11;Debugging;
2012;Wei Jin,Alessandro Orso;BugRedux: Reproducing field failures for in-house debugging.;474-484;11;Debugging;
2012;Jorge Ressia,Alexandre Bergel,Oscar Nierstrasz;Object-centric debugging.;485-495;11;Debugging;
2012;Laura Plonka,Helen C. Sharp,Janet van der Linden;Disengagement in pair programming: Does it matter?;496-506;11;Human Aspects of Process;
2012;John Downs,Beryl Plimmer,John G. Hosking;Ambient awareness of build status in collocated software teams.;507-517;11;Human Aspects of Process;
2012;Minghui Zhou,Audris Mockus;What make long term contributors: Willingness and opportunity in OSS community.;518-528;11;Human Aspects of Process;
2012;Otavio Augusto Lazzarini Lemos,Fabiano Cutigi Ferrari,Fabio Fagundes Silveira,Alessandro Garcia;Development of auxiliary functions: Should you be agile? An empirical assessment of pair programming and test-first programming.;529-539;11;Human Aspects of Process;
2012;Yijun Yu,Yu Lin,Zhenjiang Hu,Soichiro Hidaka,Hiroyuki Kato,Lionel Montrieux;Maintaining invariant traceability through bidirectional transformations.;540-550;11;Models;
2012;Robert Reicherdt,Sabine Glesner;Slicing MATLAB Simulink models.;551-561;11;Models;
2012;Alireza Razavi,Kostas Kontogiannis;Partial evaluation of model transformations.;562-572;11;Models;
2012;Michalis Famelis,Rick Salay,Marsha Chechik;Partial models: Towards modeling and reasoning with uncertainty.;573-583;11;Models;
2012;Yunhui Zheng,Xiangyun Zhang;Static detection of resource contention problems in server-side scripts.;584-594;11;Concurrency and Exceptions;
2012;Pingyu Zhang,Sebastian G. Elbaum;Amplifying tests to validate exception handling code.;595-605;11;Concurrency and Exceptions;
2012;Yan Cai,Wing Kwong Chan;MagicFuzzer: Scalable deadlock detection for large-scale applications.;606-616;11;Concurrency and Exceptions;
2012;Koen Yskout,Riccardo Scandariato,Wouter Joosen;Does organizing security patterns focus architectural choices?;617-627;11;Software Architecture;
2012;Yongjie Zheng,Richard N. Taylor;Enhancing architecture-implementation conformance with change management and support for behavioral mapping.;628-638;11;Software Architecture;
2012;Mehdi Mirakhorli,Yonghee Shin,Jane Cleland-Huang,Murat Cinar;A tactic-centric approach for automating traceability of quality concerns.;639-649;11;Software Architecture;
2012;Ahmed Tamrawi,Hoan Anh Nguyen,Hung Viet Nguyen,Tien N. Nguyen;Build code analysis with symbolic evaluation.;650-660;11;Formal Veriﬁcation;
2012;Dharini Balasubramaniam,Christopher Jefferson,Lars Kotthoff,Ian Miguel,Peter Nightingale;An automated approach to generating efficient constraint solvers.;661-671;11;Formal Veriﬁcation;
2012;Maxime Cordy,Andreas Classen,Gilles Perrouin,Pierre-Yves Schobbens,Patrick Heymans,Axel Legay;Simulation-based abstractions for software product-line model checking.;672-682;11;Formal Veriﬁcation;
2012;ThanhVu H. Nguyen,Deepak Kapur,Westley Weimer,Stephanie Forrest;Using dynamic analysis to discover polynomial and array invariants.;683-693;11;Invariant Generation;
2012;Myoungkyu Song,Eli Tilevich;Metadata invariants: Checking and inferring metadata coding conventions.;694-704;11;Invariant Generation;
2012;Dalal Alrajeh,Jeffrey Kramer,Axel van Lamsweerde,Alessandra Russo,Sebastian Uchitel;Generating obstacle conditions for requirements completeness.;705-715;11;Invariant Generation;
2012;Paul Marinescu,Cristian Cadar;make test-zesti: A symbolic execution solution for improving regression testing.;716-726;11;Regression Testing;
2012;Adrian Nistor,Qingzhou Luo,Michael Pradel,Thomas R. Gross,Darko Marinov;Ballerina: Automatic generation and clustering of efficient random unit tests for multithreaded code.;727-737;11;Regression Testing;
2012;Dan Hao,Lu Zhang,Xingxia Wu,Hong Mei,Gregg Rothermel;On-demand test suite reduction.;738-748;11;Regression Testing;
2012;Anders Moller,Mathias Schwarz;Automated detection of client-state manipulation vulnerabilities.;749-759;11;Software Vulnerability;
2012;William Dietz,Peng Li,John Regehr,Vikram S. Adve;Understanding integer overflow in C/C++.;760-770;11;Software Vulnerability;
2012;Muhammad Shahzad,Muhammad Zubair Shafiq,Xiang-Yang Alex Liu;A large scale exploratory analysis of software vulnerability life cycles.;771-781;11;Software Vulnerability;
2012;Raymond P. L. Buse,Westley Weimer;Synthesizing API usage examples.;782-792;11;API Learning;
2012;Stefan Henss,Martin Monperrus,Mira Mezini;Semi-automatically extracting FAQs to improve accessibility of software development knowledge.;793-803;11;API Learning;
2012;Mohammad Gias Uddin,Barthelemy Dagenais,Martin P. Robillard;Temporal analysis of API usage concepts.;804-814;11;API Learning;
2012;Rahul Pandita,Xusheng Xiao,Hao Zhong,Tao Xie,Stephen Oney,Amit M. Paradkar;Inferring method specifications from natural language API descriptions.;815-825;11;API Learning;
2012;Cheng Zhang,Juyuan Yang,Yi Zhang,Jing Fan,Xin Zhang,Jianjun Zhao,Peizhao Ou;Automatic parameter recommendation for practical API usage.;826-836;11;Code Recommenders;
2012;Abram Hindle,Earl T. Barr,Zhendong Su,Mark Gabel,Premkumar T. Devanbu;On the naturalness of software.;837-847;11;Code Recommenders;
2012;Collin McMillan,Negar Hariri,Denys Poshyvanyk,Jane Cleland-Huang,Bamshad Mobasher;Recommending source code for use in rapid software prototypes.;848-858;11;Code Recommenders;
2012;Cyrus Omar,YoungSeok Yoon,Thomas D. LaToza,Brad A. Myers;Active code completion.;859-869;11;Code Recommenders;
2012;Matthew Staats,Gregory R. Gay,Mats Per Erik Heimdahl;Automated oracle creation support, or: How I learned to stop worrying about fault propagation and love mutation testing.;870-880;11;Test Automation;
2012;Suresh Thummalapenta,Saurabh Sinha,Nimit Singhania,Satish Chandra;Automating test automation.;881-891;11;Test Automation;
2012;Jinguo Zhou,Xiao Xiao,Charles Zhang;Stride: Search-based deterministic replay in polynomial time via bounded linkage.;892-902;11;Test Automation;
2012;Charles Song,Adam A. Porter,Jeffrey S. Foster;iTree: Efficiently discovering high-coverage configurations using interaction trees.;903-913;11;Test Automation;
2012;Sandeep Kumar,Siau-Cheng Khoo,Abhik Roychoudhury,David Lo;Inferring class level specifications for distributed systems.;914-924;11;Validation of Speciﬁcation;
2012;Michael Pradel,Ciera Jaspan,Jonathan Aldrich,Thomas R. Gross;Statically checking API protocol conformance with mined multi-object specifications.;925-935;11;Validation of Speciﬁcation;
2012;Carlo Ghezzi,Andrea Mocci;Behavioral validation of JFSL specifications through model synthesis.;936-946;11;Validation of Speciﬁcation;
2012;Muath Alkhalaf,Tevfik Bultan,Jose L. Gallegos;Verifying client-side input validation functions using string analysis.;947-957;11;Validation of Speciﬁcation;
2012;Saskia Sassen;Digital formations of the powerful and the powerless (Keynote).;961;1;Keynotes;
2012;Frank-Dieter Clesle;Supporting sustainability with software - An industrial perspective (Keynote).;962;1;Keynotes;
2012;Jeffrey Kramer;Whither software architecture? (Keynote).;963;1;Keynotes;
2012;Clovis Chapman;Towards a federated cloud ecosystem (Invited industrial talk).;967;1;Software Engineering in Practice;Services and Analytics
2012;Domenico Bianculli,Carlo Ghezzi,Cesare Pautasso,Patrick Senti;Specification patterns from research to industry: A case study in service-based applications.;968-976;9;Software Engineering in Practice;Services and Analytics
2012;Tarmo Ploom,Stefan Scheit,Axel Glaser;Methodology for migration of long running process instances in a global large scale BPM environment in Credit Suisse's SOA landscape.;977-986;10;Software Engineering in Practice;Services and Analytics
2012;Raymond P. L. Buse,Thomas Zimmermann;Information needs for software development analytics.;987-996;10;Software Engineering in Practice;Services and Analytics
2012;Dongmei Zhang,Tao Xie;Software analytics in practice: Mini tutorial.;997;1;Mini-Tutorial: Software Analytics;
2012;Keith Braithwaite;Software as an engineering material: How the affordances of programming have changed and what to do about it (Invited industrial talk).;998;1;Invited Industrial Experts;
2012;Eberhard Wolff;Software architecture - What does it mean in industry? (Invited industrial talk).;999;1;Invited Industrial Experts;
2012;Tom Sprenger;How software engineering can benefit from traditional industries - A practical experience report (Invited industrial talk).;1000;1;Invited Industrial Experts;
2012;Wolfram Schulte;Ten years of automated code analysis at Microsoft (Invited industrial talk).;1001;1;Formal Methods;
2012;June Andronick,D. Ross Jeffery,Gerwin Klein,Rafal Kolanski,Mark Staples,He Zhang,Liming Zhu;Large-scale formal verification in practice: A process perspective.;1002-1011;10;Formal Methods;
2012;Futoshi Iwama,Taiga Nakamura,Hironori Takeuchi;Constructing parser for industrial software specifications containing formal and natural language description.;1012-1021;10;Formal Methods;
2012;Marie-Aude Esteve,Joost-Pieter Katoen,Viet Yen Nguyen,Bart Postma,Yuri Yushtein;Formal correctness, safety, dependability, and performance analysis of a satellite.;1022-1031;10;Formal Methods;
2012;Tim Menzies,Thomas Zimmermann;Goldfish bowl panel: Software development analytics.;1032-1033;2;Goldﬁsh Bowl Panel: Software Development Analytics;
2012;Jonathan Bnayahu,Maayan Goldstein,Mordechai Nisenson,Yahalomit Simionovici;Making sense of healthcare benefits.;1034-1043;10;Re-engineering;
2012;Renato Lima Novais,Camila Nunes,Caio A. N. Lima,Elder Cirilo,Francisco Dantas de Medeiros Neto,Alessandro Garcia,Manoel Gomes de Mendonca Neto;On the proactive and interactive visualization for feature evolution comprehension: An industrial investigation.;1044-1053;10;Re-engineering;
2012;Boya Sun,Gang Shu,Andy Podgurski,Brian P. Robinson;Extending static analysis by mining project-specific rules.;1054-1063;10;Re-engineering;
2012;Robert DeLine,Andrew Bragdon,Kael Rowan,Jens Jacobsen,Steven P. Reiss;Debugger Canvas: Industrial experience with the code bubbles paradigm.;1064-1073;10;Debugging;
2012;Thomas Zimmermann,Nachiappan Nagappan,Philip J. Guo,Brendan Murphy;Characterizing and predicting which bugs get reopened.;1074-1083;10;Debugging;
2012;Yingnong Dang,Rongxin Wu,Hongyu Zhang,Dongmei Zhang,Peter Nobel;ReBucket: A method for clustering duplicate crash reports based on call stack similarity.;1084-1093;10;Debugging;
2012;Alberto Sillitti,Giancarlo Succi,Jelena Vlasenko;Understanding the impact of Pair Programming on developers attention: A case study on a large industrial experimentation.;1094-1101;8;Case Studies;
2012;Sebastian Eder,Maximilian Junker,Elmar Jurgens,Benedikt Hauptmann,Rudolf Vaas,Karl-Heinz Prommer;How much does unused code matter for maintenance?;1102-1111;10;Case Studies;
2012;Emilia Mendes;Using knowledge elicitation to improve Web effort estimation: Lessons from six industrial case studies.;1112-1121;10;Case Studies;
2012;John Penix;Large-scale test automation in the cloud (Invited industrial talk).;1122;1;Testing;
2012;Nicolas Devos,Christophe Ponsard,Jean-Christophe Deprez,Renaud Bauvin,Benedicte Moriau,Guy Anckaerts;Efficient reuse of domain-specific test knowledge: An industrial case in the smart card domain.;1123-1132;10;Testing;
2012;Stefan Wagner,Klaus Lochmann,Lars Heinemann,Michael Klas,Adam Trendowicz,Reinhold Plosch,Andreas Seidi,Andreas Goeb,Jonathan Streit;The Quamoco product quality modelling and assessment approach.;1133-1142;10;Testing;
2012;Yunho Kim,Moonzoo Kim,Young Joo Kim,Yoonkyu Jang;Industrial application of concolic testing approach: A case study on libexif by using CREST-BV and KLEE.;1143-1152;10;Testing;
2012;Gabriele Bavota,Andrea De Lucia,Fausto Fasano,Rocco Oliveto,Carlo Zottoli;Teaching software engineering and software project management: An integrated and practical approach.;1155-1164;10;Software Engineering Education;The Role of Software Projects in Software Engineering Education
2012;Terhi Kilamo,Imed Hammouda,Mohamed Amine Chatti;Teaching collaborative software development: A case study.;1165-1174;10;Software Engineering Education;The Role of Software Projects in Software Engineering Education
2012;Jorn Guy Sus,William Billingsley;Using continuous integration of code and content to teach software engineering with limited resources.;1175-1184;10;Software Engineering Education;The Role of Software Projects in Software Engineering Education
2012;Tony Cowling;Stages in teaching software testing.;1185-1194;10;Aspects of Teaching Software Engineering;
2012;Christopher Fuhrman,Roger Champagne,Alain April;Integrating tools and frameworks in undergraduate software engineering curriculum.;1195-1204;10;Aspects of Teaching Software Engineering;
2012;David Budgen,Sarah Drummond,Pearl Brereton,Nikki Holland;What scope is there for adopting evidence-informed teaching in SE?;1205-1214;10;Aspects of Teaching Software Engineering;
2012;Ganesh Samarthyam,Girish Suryanarayana,Arbind Kumar Gupta,Raghu Nambiar;FOCUS: An adaptation of a SWEBOK-based curriculum for industry requirements.;1215-1224;10;Software Engineering Education in Industry;
2012;Ivica Crnkovic,Ivana Bosnic,Mario Zagar;Ten tips to succeed in Global Software Engineering education.;1225-1234;10;Teaching Distributed Software Engineering;
2012;Igor Cavrak,Marin Orlic,Ivica Crnkovic;Collaboration patterns in distributed software development projects.;1235-1244;10;Teaching Distributed Software Engineering;
2012;Guoping Rong,He Zhang,Mingjuan Xie,Dong Shao;Improving PSP education by pairing: An empirical study.;1245-1254;10;Teaching Distributed Software Engineering;
2012;Massimiliano Di Penta,Giuliano Antoniol,Daniel M. German,Yann-Gael Gueheneuc,Bram Adams;Five days of empirical software engineering: The PASED experience.;1255-1258;4;Teaching Distributed Software Engineering;
2012;Tobias Roehm,Walid Maalej;Automatically detecting developer activities and problems in software development work.;1261-1264;4;New Ideas and Emerging Results;NIER in Support of Software Engineers
2012;Susan M. Mitchell,Carolyn B. Seaman;Software process improvement through the identification and removal of project-level knowledge flow obstacles.;1265-1268;4;New Ideas and Emerging Results;NIER in Support of Software Engineers
2012;Colin Atkinson,Ralph Gerbig,Bastian Kennel;Symbiotic general-purpose and domain-specific languages.;1269-1272;4;New Ideas and Emerging Results;NIER in Support of Software Engineers
2012;Sonia Haiduc,Gabriele Bavota,Rocco Oliveto,Andrian Marcus,Andrea De Lucia;Evaluating the specificity of text retrieval queries to support software engineering tasks.;1273-1276;4;New Ideas and Emerging Results;NIER in Support of Software Engineers
2012;Christoph Dorn,Richard N. Taylor;Co-adapting human collaborations and software architectures.;1277-1280;4;New Ideas and Emerging Results;NIER in Support of Software Engineers
2012;Hyrum K. Wright,Dewayne E. Perry;Release engineering practices and pitfalls.;1281-1284;4;New Ideas and Emerging Results;NIER in Support of Software Engineers
2012;James M. Corrigan;Augmented intelligence - The new AI - Unleashing human capabilities in knowledge work.;1285-1288;4;New Ideas and Emerging Results;NIER in Support of Software Engineers
2012;Niko Schwarz,Mircea Lungu,Romain Robbes;On how often code is cloned across repositories.;1289-1292;4;NIER for Mining Product and Process Data;
2012;Lwin Khin Shar,Hee Beng Kuan Tan;Mining input sanitization patterns for predicting SQL injection and cross site scripting vulnerabilities.;1293-1296;4;NIER for Mining Product and Process Data;
2012;Tung Thanh Nguyen,Tien N. Nguyen,Evelyn Duesterwald,Tim Klinger,Peter Santhanam;Inferring developer expertise through defect analysis.;1297-1300;4;NIER for Mining Product and Process Data;
2012;Abram Hindle;Green mining: Investigating power consumption across versions.;1301-1304;4;NIER for Mining Product and Process Data;
2012;Yang Feng,Zhenyu Chen;Multi-label software behavior learning.;1305-1308;4;NIER for Mining Product and Process Data;
2012;Alexander Chatzigeorgiou,George Melas;Trends in object-oriented software evolution: Investigating network properties.;1309-1312;4;NIER for Mining Product and Process Data;
2012;Benjamin Rogers,James Gung,Yechen Qiao,Janet E. Burge;Exploring techniques for rationale extraction from existing documents.;1313-1316;4;NIER for Mining Product and Process Data;
2012;Emerson R. Murphy-Hill;Continuous social screencasting to facilitate software tool discovery.;1317-1320;4;NIER for Veriﬁcation and Evolution;
2012;Phil Greenwood,Awais Rashid,James Walkerdine;UDesignIt: Towards social media for community-driven design.;1321-1324;4;NIER for Veriﬁcation and Evolution;
2012;Leif Singer,Kurt Schneider;Influencing the adoption of software engineering methods using social software.;1325-1328;4;NIER for Veriﬁcation and Evolution;
2012;Jane Cleland-Huang,Yonghee Shin,Ed Keenan,Adam Czauderna,Greg Leach,Evan Moritz,Malcom Gethers,Denys Poshyvanyk,Jane Huffman Hayes,Wenbin Li;Toward actionable, broadly accessible contests in Software Engineering.;1329-1332;4;NIER for Veriﬁcation and Evolution;
2012;Adrian Kuhn,Mirko Stocker;CodeTimeline: Storytelling with versioning data.;1333-1336;4;NIER for Veriﬁcation and Evolution;
2012;Songzheng Song,Jianye Hao,Yang Liu 0003,Jun Sun,Ho-fung Leung,Jin Song Dong;Analyzing multi-agent systems with probabilistic model checking approach.;1337-1340;4;NIER for Veriﬁcation and Evolution;
2012;Kevin Boos,Chien-Liang Fok,Christine Julien,Miryung Kim;BRACE: An assertion framework for debugging cyber-physical systems.;1341-1344;4;NIER for Veriﬁcation and Evolution;
2012;Nadia Alshahwan,Mark Harman;Augmenting test suites effectiveness by increasing output diversity.;1345-1348;4;NIER for Veriﬁcation and Evolution;
2012;Kivanc Muslu,Yuriy Brun,Reid Holmes,Michael D. Ernst,David Notkin;Improving IDE recommendations by considering global implications of existing recommendations.;1349-1352;4;NIER for Veriﬁcation and Evolution;
2012;Gilles Perrouin,Brice Morin,Franck Chauvel,Franck Fleurey,Jacques Klein,Yves Le Traon,Olivier Barais,Jean-Marc Jezequel;Towards flexible evolution of Dynamically Adaptive Systems.;1353-1356;4;NIER for Veriﬁcation and Evolution;
2012;Fabio Casati,Florian Daniel,Guenadi Dantchev,Joakim Eriksson,Niclas Finne,Stamatis Karnouskos,Patricio Moreno Montera,Luca Mottola,Felix Jonathan Oppermann,Gian Pietro Picco,Antonio Quartulli,Kay Romer,Patrik Spiess,Stefano Tranquillini,Thiemo Voigt;Towards business processes orchestrating the physical enterprise with wireless sensor networks.;1357-1360;4;NIER for Veriﬁcation and Evolution;
2012;Robyn R. Lutz,Jack H. Lutz,James I. Lathrop,Titus Klinge,Eric Henderson,Divita Mathur,Dalia Abo Sheasha;Engineering and verifying requirements for programmable self-assembling nanomachines.;1361-1364;4;NIER for Veriﬁcation and Evolution;
2012;Anja Guzzi,Andrew Begel;Facilitating communication between engineers with CARES.;1367-1370;4;Formal Research Demonstrations;Formal Demos 1
2012;Itai Segall,Rachel Tzoref-Brill;Interactive refinement of combinatorial test plans.;1371-1374;4;Formal Research Demonstrations;Formal Demos 1
2012;Ed Keenan,Adam Czauderna,Greg Leach,Jane Cleland-Huang,Yonghee Shin,Evan Moritz,Malcom Gethers,Denys Poshyvanyk,Jonathan I. Maletic,Jane Huffman Hayes,Alexander Dekhtyar,Daria Manukian,Shervin Hossein,Derek Hearn;TraceLab: An experimental workbench for equipping researchers to innovate, synthesize, and comparatively evaluate traceability solutions.;1375-1378;4;Formal Research Demonstrations;Formal Demos 1
2012;Charles T. Cook,Heather K. Harton,Hampton Smith,Murali Sitaraman;Specification engineering and modular verification using a web-integrated verifying compiler.;1379-1382;4;Formal Research Demonstrations;Formal Demos 1
2012;Leandro Sales Pinto,Gianpaolo Cugola,Carlo Ghezzi;Writing dynamic service orchestrations with DSOL.;1383-1386;4;Formal Research Demonstrations;Formal Demos 1
2012;Leonardo Mariani,Fabrizio Pastore;MASH: A tool for end-user plug-in composition.;1387-1390;4;Formal Research Demonstrations;Formal Demos 1
2012;Hung Viet Nguyen,Hoan Anh Nguyen,Tung Thanh Nguyen,Tien N. Nguyen;BabelRef: Detection and renaming tool for cross-language program entities in dynamic web applications.;1391-1394;4;Formal Research Demonstrations;Formal Demos 1
2012;Jacome Cunha,Joao Paulo Fernandes,Jorge Mendes,Joao Saraiva;MDSheet: A framework for model-driven spreadsheet engineering.;1395-1398;4;Formal Research Demonstrations;Formal Demos 1
2012;Christoph Treude,Patrick Gorman,Lars Grammel,Margaret-Anne D. Storey;WorkItemExplorer: Visualizing software development tasks using an interactive exploration environment.;1399-1402;4;Formal Demos 2;
2012;Carlo Ghezzi,Andrea Mocci,Mario Sangiorgio;Runtime monitoring of component changes with Spy@Runtime.;1403-1406;4;Formal Demos 2;
2012;Hoan Anh Nguyen,Hoan Anh Nguyen,Tung Thanh Nguyen,Tien N. Nguyen;GraPacc: A graph-based pattern-oriented, context-sensitive code completion tool.;1407-1410;4;Formal Demos 2;
2012;Steven P. Reiss,Jared N. Bott,Joseph J. LaViola Jr.;Code Bubbles: A practical working-set programming environment.;1411-1414;4;Formal Demos 2;
2012;Davide Di Ruscio,Patrizio Pelliccione,Alfonso Pierantonio;EVOSS: A tool for managing the evolution of free and open source software systems.;1415-1418;4;Formal Demos 2;
2012;Gabriele Bavota,Andrea De Lucia,Andrian Marcus,Rocco Oliveto,Fabio Palomba;Supporting extract class refactoring in Eclipse: The ARIES project.;1419-1422;4;Formal Demos 2;
2012;Florian Gross,Gordon Fraser,Andreas Zeller;EXSYST: Search-based GUI testing.;1423-1426;4;Formal Demos 2;
2012;Dongyun Jin,Patrick O'Neil Meredith,Choonghwan Lee,Grigore Rosu;JavaMOP: Efficient parametric runtime monitoring framework.;1427-1430;4;Formal Demos 2;
2012;Konstantin Rubinov,Jochen Wuttke;Augmenting test suites automatically.;1433-1434;2;Posters and Informal Demonstrations;Posters
2012;Rina Nagano,Hiroki Nakamura,Yasutaka Kamei,Bram Adams,Kenji Hisazumi,Naoyasu Ubayashi,Akira Fukuda;Using the GPGPU for scaling up Mining Software Repositories.;1435-1436;2;Posters and Informal Demonstrations;Posters
2012;Dennis Pagano,Miguel A. Juan,Alessandra Bagnato,Tobias Roehm,Bernd Brugge,Walid Maalej;FastFix: Monitoring control for remote software maintenance.;1437-1438;2;Posters and Informal Demonstrations;Posters
2012;Alessio Gambi,Giovanni Toffetti Carughi;Modeling Cloud performance with Kriging.;1439-1440;2;Posters and Informal Demonstrations;Posters
2012;Maurizio Leotta,Filippo Ricca,Marina Ribaudo,Gianna Reggio,Egidio Astesiano,Tullio Vernazza;SOA adoption in the Italian industry.;1441-1442;2;Posters and Informal Demonstrations;Posters
2012;Jacome Cunha,Joao Paulo Fernandes,Jorge Mendes,Joao Saraiva;A bidirectional model-driven spreadsheet environment.;1443-1444;2;Posters and Informal Demonstrations;Posters
2012;Antonio Carzaniga,Alessandra Gorla,Andrea Mattavelli,Nicolo Perino;A self-healing technique for Java applications.;1445-1446;2;Posters and Informal Demonstrations;Posters
2012;Christopher Forbes,Iman Keivanloo,Juergen Rilling;When open source turns cold on innovation - The challenges of navigating licensing complexities in new research domains.;1447-1448;2;Posters and Informal Demonstrations;Posters
2012;Markus Voelter,Vaclav Pech;Language modularity with the MPS language workbench.;1449-1450;2;Informal Demonstrations;
2012;Sheng Huang,Yiqi Lu,Yanghua Xiao,Wei Wang;Mining application repository to recommend XML configuration snippets.;1451-1452;2;Informal Demonstrations;
2012;Maxime Ouellet,Ettore Merlo,Neset Sozen,Martin Gagnon;Locating features in dynamically configured avionics software.;1453-1454;2;Informal Demonstrations;
2012;Myoungkyu Song,Eli Tilevich;Detecting metadata bugs on the fly.;1455-1456;2;Informal Demonstrations;
2012;Jan-Peter Kramer,Joachim Kurz,Thorsten Karrer,Jan O. Borchers;Blaze.;1457-1458;2;Informal Demonstrations;
2012;Tristan Wehrmaker,Stefan Gartner,Kurt Schneider;ConTexter feedback system.;1459-1460;2;Informal Demonstrations;
2012;Yongjie Zheng,Richard N. Taylor;xMapper: An architecture-implementation mapping tool.;1461-1462;2;Informal Demonstrations;
2012;Pericles Alves,Diogo Santana,Eduardo Magno Lages Figueiredo;ConcernReCS: Finding code smells in software aspectization.;1463-1464;2;Informal Demonstrations;
2012;Saulius Astromskis,Andrea Janes,Alireza Rezaei Mahdiraji;Egidio: A non-invasive approach for synthesizing organizational models.;1465-1466;2;Informal Demonstrations;
2012;Bruno Antunes,Joel Cordeiro,Paulo Gomes;SDiC: Context-based retrieval in Eclipse.;1467-1468;2;Informal Demonstrations;
2012;Xiangyun Zhang,Mengxiang Lin,Kai Yu;An integrated bug processing framework.;1469-1470;2;Informal Demonstrations;
2012;Robert B. France,James M. Bieman,Sai Pradeep Mandalaparty,Betty H. C. Cheng,Adam C. Jensen;Repository for Model Driven Development (ReMoDD).;1471-1472;2;Informal Demonstrations;
2012;Damien A. Tamburri;Going global with agile service networks.;1475-1478;4;Doctoral Symposium;Posters 1-12
2012;Gabriele Bavota;Using structural and semantic information to support software refactoring.;1479-1482;4;Doctoral Symposium;Posters 1-12
2012;Sedigheh Khoshnevis;An approach to variability management in service-oriented product lines.;1483-1486;4;Doctoral Symposium;Posters 1-12
2012;Erol-Valeriu Chioasca;Using machine learning to enhance automated requirements model transformation.;1487-1490;4;Doctoral Symposium;Posters 1-12
2012;Andrea Avancini;Security testing of web applications: A research plan.;1491-1494;4;Doctoral Symposium;Posters 1-12
2012;Christopher Bailey;Application of Self-Adaptive techniques to federated authorization models.;1495-1498;4;Doctoral Symposium;Posters 1-12
2012;Tezcan Dilshener;Improving information retrieval-based concept location using contextual relationships.;1499-1502;4;Doctoral Symposium;Posters 1-12
2012;Monde Kalumbilo;Effective specification of decision rights and accountabilities for better performing software engineering projects.;1503-1506;4;Doctoral Symposium;Posters 1-12
2012;Thelma Elita Colanzi;Search based design of software product lines architectures.;1507-1510;4;Doctoral Symposium;Posters 1-12
2012;Wanzhi Wen;Software fault localization based on program slicing spectrum.;1511-1514;4;Doctoral Symposium;Posters 1-12
2012;Salma Imtiaz;Architectural task allocation in distributed environment: A traceability perspective.;1515-1518;4;Doctoral Symposium;Posters 1-12
2012;Wided Ghardallou;Using invariant relations in the termination analysis of while loops.;1519-1522;4;Doctoral Symposium;Posters 1-12
2012;Marcel Bohme;Software regression as change of input partitioning.;1523-1526;4;Presentations 1-4;
2012;Dennis Westermann;A generic methodology to derive domain-specific performance feedback for developers.;1527-1530;4;Presentations 1-4;
2012;Alfredo Motta;Towards the verification of multi-diagram UML models.;1531-1534;4;Presentations 1-4;
2012;Anja Guzzi;Documenting and sharing knowledge about code.;1535-1538;4;Presentations 1-4;
2012;Kelly Blincoe;Timely and efficient facilitation of coordination of software developers' activities.;1539-1542;4;Presentations 5-6;
2012;Benjamin Rodes;Stack layout transformation: Towards diversity for securing binary programs.;1543-1546;4;Presentations 5-6;
2012;Nicolas D'Ippolito;Synthesis of event-based controllers: A software engineering challenge.;1547-1550;4;Posters 13-25;
2012;Malte Ressin;Empirically researching development of international software.;1551-1554;4;Posters 13-25;
2012;Fathiyeh Faghih;Model translations among big-step modeling languages.;1555-1558;4;Posters 13-25;
2012;Pedro Monteiro;HARPPIE: Hyper algorithmic recipe for productive parallelism intensive endeavors.;1559-1562;4;Posters 13-25;
2012;Fehmi Jaafar;On the analysis of evolution of software artefacts and programs.;1563-1566;4;Posters 13-25;
2012;Swapneel Sheth;Societal Computing.;1567-1570;4;Posters 13-25;
2012;Kathryn T. Stolee;Finding suitable programs: Semantic search with incomplete and lightweight specifications.;1571-1574;4;Posters 13-25;
2012;Panayiotis Steele;Certification-based development of critical systems.;1575-1578;4;Posters 13-25;
2012;Tanja Mayerhofer;Testing and debugging UML models based on fUML.;1579-1582;4;Posters 13-25;
2012;Weiyi Shang;Bridging the divide between software developers and operators using logs.;1583-1586;4;Posters 13-25;
2012;Marcelo Serrano Zanetti;The co-evolution of socio-technical structures in sustainable software development: Lessons from the open source software communities.;1587-1590;4;Posters 13-25;
2012;Alexander Elyasov;Log-based testing.;1591-1594;4;Posters 13-25;
2012;Volker Schuchardt;Moving mobile applications between mobile devices seamlessly.;1595-1598;4;Posters 13-25;
2012;Kelly Blincoe;Timely detection of Coordination Requirements to support collaboration among software developers.;1601-1603;3;ACM Student Research Competition;
2012;Kai Yu;Improving failure-inducing changes identification using coverage analysis.;1604-1606;3;ACM Student Research Competition;
2012;Brittany Johnson;A study on improving static analysis tools: Why are we not using them?;1607-1609;3;ACM Student Research Competition;
2012;Nupul Kukreja;Winbook: A social networking based framework for collaborative requirements elicitation and WinWin negotiations.;1610-1612;3;ACM Student Research Competition;
2012;Antonio Vetro;Using automatic static analysis to identify technical debt.;1613-1615;3;ACM Student Research Competition;
2012;Jorge Mendes;Coupled evolution of model-driven spreadsheets.;1616-1618;3;ACM Student Research Competition;
2012;Cheng Thao;Managing evolution of software product line.;1619-1621;3;ACM Student Research Competition;
2012;Andreas Demuth;Enabling dynamic metamodels through constraint-driven modeling.;1622-1624;3;ACM Student Research Competition;
2012;Soudip Roy Chowdhury;Assisting end-user development in browser-based mashup tools.;1625-1627;3;ACM Student Research Competition;
2012;Niko Schwarz;Hot clones: Combining search-driven development, clone management, and code provenance.;1628-1629;2;ACM Student Research Competition;
2012;Zhongxian Gu;Capturing and exploiting fine-grained IDE interactions.;1630-1631;2;ACM Student Research Competition;
2012;Pablo Estefo;Restructuring unit tests with TestSurgeon.;1632-1634;3;ACM Student Research Competition;
2012;Vitor Estevao Silva Souza;A requirements-based approach for the design of adaptive systems.;1635-1637;3;ACM Student Research Competition;
2012;Matteo Camilli;Petri nets state space analysis in the cloud.;1638-1640;3;ACM Student Research Competition;
2012;Simon Butler;Mining Java class identifier naming conventions.;1641-1643;3;ACM Student Research Competition;
2012;Iman Keivanloo;Online sharing and integration of results from mining software repositories.;1644-1646;3;ACM Student Research Competition;
2012;Mira Kajko-Mattsson,Michael Striewe,Michael Goedicke,Ivar Jacobson,Ian Spence,Shihong Huang,Paul McMahon,Bruce MacIsaac,Brian Elvesater,Arne J. Berre,Ed Seymour;Refounding software engineering: The Semat initiative (Invited presentation).;1649-1650;2;Invited Summaries;
2012;Alessandro Orso,Ralf H. Reussner;Summary of the ICSE 2012 workshops.;1651-1653;3;Invited Summaries;
2012;Andreas Leitner,Oscar Nierstrasz;Summary of the ICSE 2012 tutorials and technical briefings.;1654-1657;4;Invited Summaries;
2011;Andrea Arcuri,Lionel C. Briand;A practical guide for using statistical tests to assess randomized algorithms in software engineering.;1-10;10;Testing the waters I;
2011;Lin Tan,Yuanyuan Zhou,Yoann Padioleau;aComment: mining annotations from comments and code to detect interrupt related concurrency bugs.;11-20;10;Testing the waters I;
2011;James A. Clause,Alessandro Orso;Camouflage: automated anonymization of field data.;21-30;10;Testing the waters I;
2011;Joseph P. Near,Aleksandar Milicevic,Eunsuk Kang,Daniel B. Jackson;A lightweight code analysis and its role in evaluation of a dependability case.;31-40;10;Surfing the dependability wave;
2011;Toshiya Fujii,Tadashi Dohi,Takaji Fujiwara;Towards quantitative software reliability assessment in incremental development processes.;41-50;10;Surfing the dependability wave;
2011;Stefan Winter,Constantin Sarbu,Neeraj Suri,Brendan Murphy;The impact of fault models on software robustness evaluations.;51-60;10;Surfing the dependability wave;
2011;Fredrik Kjolstad,Danny Dig,Gabriel Acevedo,Marc Snir;Transformation for class immutability.;61-70;10;Refactoring your Lei I;
2011;Max Schafer,Manu Sridharan,Julian Dolby,Frank Tip;Refactoring Java programs for flexible locking.;71-80;10;Refactoring your Lei I;
2011;Kathryn T. Stolee,Sebastian G. Elbaum;Refactoring pipe-like mashups for end-user programmers.;81-90;10;Refactoring your Lei I;
2011;Sandeep Kumar,Siau-Cheng Khoo,Abhik Roychoudhury,David Lo;Mining message sequence graphs.;91-100;10;Comprehending the drift I;
2011;Giriprasad Sridhara,Lori L. Pollock,K. Vijay-Shanker;Automatically detecting and describing high level actions within methods.;101-110;10;Comprehending the drift I;
2011;Collin McMillan,Mark Grechanik,Denys Poshyvanyk,Qing Xie,Chen Fu;Portfolio: finding relevant functions and their usage.;111-120;10;Comprehending the drift I;
2011;Satish Chandra,Emina Torlak,Shaon Barman,Rastislav Bodik;Angelic debugging.;121-130;10;Debugging the surf;
2011;Ariel Rabkin,Randy H. Katz;Static extraction of program configuration options.;131-140;10;Debugging the surf;
2011;Shane McIntosh,Bram Adams,Thanh H. D. Nguyen,Yasutaka Kamei,Ahmed E. Hassan;An empirical study of build maintenance effort.;141-150;10;Debugging the surf;
2011;Miryung Kim,Dongxiang Cai,Sunghun Kim;An empirical investigation into the role of API-level refactorings during software evolution.;151-160;10;Empirical luau I;
2011;Marcelo Cataldo,James D. Herbsleb;Factors leading to integration failures in global feature-oriented development: an empirical analysis.;161-170;10;Empirical luau I;
2011;Pamela Bhattacharya,Iulian Neamtiu;Assessing programming language impact on development and maintenance: a study on c and c++.;171-180;10;Empirical luau I;
2011;Horatiu Dumitru,Marek Gibiec,Negar Hariri,Jane Cleland-Huang,Bamshad Mobasher,Carlos Castro-Herrera,Mehdi Mirakhorli;On-demand feature recommendations derived from mining public product descriptions.;181-190;10;Far-out surfware engineering;
2011;Yi Wei,Carlo A. Furia,Nikolay Kazmin,Bertrand Meyer;Inferring better contracts.;191-200;10;Far-out surfware engineering;
2011;Jungju Oh,Christopher J. Hughes,Guru Venkataramani,Milos Prvulovic;LIME: a framework for debugging load imbalance in multi-threaded execution.;201-210;10;Riding the design wave I;
2011;Nicolas D'Ippolito,Victor A. Braberman,Nir Piterman,Sebastian Uchitel;Synthesis of live behaviour models for fallible domains.;211-220;10;Riding the design wave I;
2011;Chao Wang,Mahmoud Said,Aarti Gupta;Coverage guided systematic concurrency testing.;221-230;10;Riding the design wave I;
2011;Fausto Spoto,Michael D. Ernst;Inference of field initialization.;231-240;10;Program surfing I;
2011;Eric Bodden,Andreas Sewe,Jan Sinschek,Hela Oueslati,Mira Mezini;Taming reflection: Aiding static analysis in the presence of reflection and custom class loaders.;241-250;10;Program surfing I;
2011;Fang Yu,Muath Alkhalaf,Tevfik Bultan;Patching vulnerabilities with sanitization synthesis.;251-260;10;Program surfing I;
2011;Narayan Ramasubbu,Marcelo Cataldo,Rajesh Krishna Balan,James D. Herbsleb;Configuring global software teams: a multi-company analysis of project productivity, quality, and profits.;261-270;10;Developer waves;
2011;Minghui Zhou,Audris Mockus;Does the initial environment impact the future of developers.;271-280;10;Developer waves;
2011;Andrew Meneely,Laurie A. Williams;Socio-technical developer networks: should we trust our measurements?;281-290;10;Developer waves;
2011;Kelly Androutsopoulos,David M. Binkley,David Clark,Nicolas E. Gold,Mark Harman,Kevin Lano,Zheng Li;Model projection: simplifying models in response to restricting the environment.;291-300;10;Outrigger models and clones;
2011;Heejung Kim,Yungbum Jung,Sunghun Kim,Kwangkeun Yi;MeCC: memory comparison-based clone detector.;301-310;10;Outrigger models and clones;
2011;Nils Gode,Rainer Koschke;Frequency and risks of changes to clones.;311-320;10;Outrigger models and clones;
2011;Andreas Classen,Patrick Heymans,Pierre-Yves Schobbens,Axel Legay;Symbolic model checking of software product lines.;321-330;10;Surfer model checking;
2011;Lucas Cordeiro,Bernd M. Fischer;Verifying multi-threaded software using smt-based context-bounded model checking.;331-340;10;Surfer model checking;
2011;Antonio Filieri,Carlo Ghezzi,Giordano Tamburrelli;Run-time efficient probabilistic model checking.;341-350;10;Surfer model checking;
2011;David Kawrykow,Martin P. Robillard;Non-essential changes in version histories.;351-360;10;Comprehending the drift II;
2011;Tung Thanh Nguyen,Hung Viet Nguyen,Hoan Anh Nguyen,Tien N. Nguyen;Aspect recommendation for evolving software.;361-370;10;Comprehending the drift II;
2011;Reid Holmes,David Notkin;Identifying program, test, and environmental changes that affect behaviour.;371-380;10;Comprehending the drift II;
2011;Guido de Caso,Victor A. Braberman,Diego Garbervetsky,Sebastian Uchitel;Program abstractions for behaviour validation.;381-390;10;Testing the waters II;
2011;Matthew Staats,Michael W. Whalen,Mats Per Erik Heimdahl;Programs, tests, and oracles: the foundations of testing revisited.;391-400;10;Testing the waters II;
2011;Tianwei Sheng,Neil Vachharajani,Stephane Eranian,Robert Hundt,Wenguang Chen,Weimin Zheng;RACEZ: a lightweight and non-invasive race detection tool for production applications.;401-410;10;Testing the waters II;
2011;Sunny Wong,Yuanfang Cai,Miryung Kim,Michael Dalton;Detecting software modularity violations.;411-420;10;Riding the design wave II;
2011;Sven Apel,Dirk Beyer;Feature cohesion in software product lines: an exploratory study.;421-430;10;Riding the design wave II;
2011;Damien Cassou,Emilie Balland,Charles Consel,Julia L. Lawall;Leveraging software architectures to guide and verify the development of sense/compute/control applications.;431-440;10;Riding the design wave II;
2011;Friedrich Steimann,Fabian Urs Stolz;Refactoring to role objects.;441-450;10;Refactoring your lei II;
2011;Felienne Hermans,Martin Pinzger,Arie van Deursen;Supporting professional spreadsheet users by generating leveled dataflow diagrams.;451-460;10;Refactoring your lei II;
2011;Steven She,Rafael Lotufo,Thorsten Berger,Andrzej Wasowski,Krzysztof Czarnecki;Reverse engineering feature models.;461-470;10;Refactoring your lei II;
2011;John Hutchinson,Jonathan P. Whittle,Mark Rouncefield,Steinar Kristoffersen;Empirical assessment of MDE in industry.;471-480;10;Empirical luau II;
2011;Sunghun Kim,Hongyu Zhang,Rongxin Wu,Liang Gong;Dealing with noise in defect prediction.;481-490;10;Empirical luau II;
2011;Foyzur Rahman,Premkumar T. Devanbu;Ownership, experience and defects: a fine-grained study of authorship.;491-500;10;Empirical luau II;
2011;Domenico Bianculli,Dimitra Giannakopoulou,Corina S. Pasareanu;Interface decomposition for service compositions.;501-510;10;Program surfing II;
2011;Aleksandar Milicevic,Derek Rayside,Kuat Yessenov,Daniel B. Jackson;Unifying execution of imperative and declarative code.;511-520;10;Program surfing II;
2011;Michael Bayne,Richard Cook,Michael D. Ernst;Always-available static and dynamic feedback.;521-530;10;Program surfing II;
2011;Massila Kamalrudin,John G. Hosking,John C. Grundy;Improving requirements quality using essential use case interaction patterns.;531-540;10;Comprehending the drift III;
2011;Peter C. Rigby,Margaret-Anne D. Storey;Understanding broadcast based peer review on open source software projects.;541-550;10;Comprehending the drift III;
2011;Richard Wettel,Michele Lanza,Romain Robbes;Software systems as cities: a controlled experiment.;551-560;10;Comprehending the drift III;
2011;Ali Mesbah,Mukul R. Prasad;Automated cross-browser compatibility testing.;561-570;10;Web surfing;
2011;Shay Artzi,Julian Dolby,Simon Holm Jensen,Anders Moller,Frank Tip;A framework for automated testing of javascript web applications.;571-580;10;Web surfing;
2011;William N. Sumner,Tao Bao,Xiangyun Zhang,Sunil Prabhakar;Coalescing executions for fast uncertainty analysis.;581-590;10;Web surfing;
2011;Choonghwan Lee,Feng Chen,Grigore Rosu;Mining parametric specifications.;591-600;10;Testing the waters III;
2011;Cedric Jeanneret,Martin Glinz,Benoit Baudry;Estimating footprints of model operations.;601-610;10;Testing the waters III;
2011;Xusheng Xiao,Tao Xie,Nikolai Tillmann,Jonathan de Halleux;Precise identification of problems for structural test generation.;611-620;10;Testing the waters III;
2011;Kumiyo Nakakoji;Interactivity, continuity, sketching, and experience: (keynote abstract).;621;1;Keynotes;
2011;Bill Dresselhaus;Exciting new trends in design thinking.;622;1;Keynotes;
2011;Lucas Layman,Victor R. Basili,Marvin V. Zelkowitz,Karen L. Fisher;A case study of measuring process risk for early insights into software safety.;623-632;10;Empirical software engineering;
2011;John Hutchinson,Mark Rouncefield,Jonathan P. Whittle;Model-driven engineering practices in industry.;633-642;10;Empirical software engineering;
2011;Bradley R. Schmerl,David Garlan,Vishal Dwivedi,Michael W. Bigrigg,Kathleen M. Carley;SORASCS: a case study in soa-based platform design for socio-cultural analysis.;643-652;10;Empirical software engineering;
2011;Liam O'Brien,James Gibson,Jon Gray;A method for selecting SOA pilot projects including a pilot metrics framework.;653-662;10;Industry software architecture;
2011;Rick Kazman,Leonard J. Bass,James Ivers,Gabriel A. Moreno;Architecture evaluation without an architecture: experience with the smart grid.;663-670;8;Industry software architecture;
2011;Jeroen van den Bos,Tijs van der Storm;Bringing domain-specific languages to digital forensics.;671-680;10;Industry software architecture;
2011;Werner Michael Dietl,Stephanie Dietzel,Michael D. Ernst,Kivanc Muslu,Todd W. Schiller;Building and using pluggable type-checkers.;681-690;10;Software engineering at large;
2011;Rachel K. E. Bellamy,Bonnie E. John,Sandra Kogan;Deploying CogTool: integrating quantitative usability assessment into real-world software development.;691-700;10;Software engineering at large;
2011;Daniel Port,Allen P. Nikora,Jairus Hihn,LiGuo Huang;Experiences with text mining large collections of unstructured systems development artifacts at jpl.;701-710;10;Software engineering at large;
2011;Bill Curtis,Jay Sappidi,Jitendra Subramanyam;An evaluation of the internal quality of business applications: does size matter?;711-715;5;Software metrics;
2011;Paul Luo Li,Ryan Kivett,Zhiyuan Zhan,Sung-eok Jeon,Nachiappan Nagappan,Brendan Murphy,Andy Ko;Characterizing the differences between pre- and post- release versions of software.;716-725;10;Software metrics;
2011;Jonathan Streit,Markus Pizka;Why software quality improvement fails: (and how to succeed nevertheless).;726-735;10;Software metrics;
2011;Yoram Adler,Noam Behar,Orna Raz,Onn Shehory,Nadav Steindler,Shmuel Ur,Aviad Zlotnick;Code coverage analysis in practice for large systems.;736-745;10;Software testing and analysis;
2011;Mithun Acharya,Brian P. Robinson;Practical change impact analysis based on static program slicing for industrial software systems.;746-755;10;Software testing and analysis;
2011;Yoon-chan Jhi,Xinran Wang,Xiaoqi Jia,Sencun Zhu,Peng Liu,Dinghao Wu;Value-based program characterization and its application to software plagiarism detection.;756-765;10;Software testing and analysis;
2011;Hans Christian Benestad,Jo Erskine Hannay;A comparison of model-based and judgment-based release planning in incremental software projects.;766-775;10;Tools and environments;
2011;Heiko Koziolek,Bastian Schlich,Carlos G. Bilich,Roland Weiss,Steffen Becker,Klaus Krogmann,Mircea Trifu,Raffaela Mirandola,Anne Martens;An industrial case study on quality impact prediction for evolving service-oriented software.;776-785;10;Tools and environments;
2011;Wladimir Araujo,Lionel C. Briand,Yvan Labiche;Enabling the runtime assertion checking of concurrent contracts for the Java modeling language.;786-795;10;Tools and environments;
2011;Pierre F. Tiako;Perspectives of delegation in team-based distributed software development over the GENI infrastructure.;796-799;4;Collaboration;
2011;Irwin Kwan,Daniela E. Herlea;The hidden experts in software-engineering communication.;800-803;4;Collaboration;
2011;Christoph Treude,Ohad Barzilay,Margaret-Anne D. Storey;How do programmers ask and answer questions on the web?.;804-807;4;Collaboration;
2011;Rachel K. E. Bellamy,Michael Desmond,Jacquelyn Martino,Paul Matchen,Harold Ossher,John T. Richards,Calvin Swart;Sketching tools for ideation.;808-811;4;Tools;
2011;John Hardy,Christopher Bull 0001,Gerald Kotonya,Jonathan P. Whittle;Digitally annexing desk space for software development.;812-815;4;Tools;
2011;Nan Niu,Anas Mahmoud,Gary Bradshaw;Information foraging as a foundation for code navigation.;816-819;4;Tools;
2011;Rocco Oliveto,Malcom Gethers,Gabriele Bavota,Denys Poshyvanyk,Andrea De Lucia;Identifying method friendships to remove the feature envy bad smell.;820-823;4;Tools & languages;
2011;Nicolas Lopez,Andre van der Hoek;The code orb: supporting contextualized coding via at-a-glance views.;824-827;4;Tools & languages;
2011;Jonathan Aldrich,Ronald Garcia,Mark Hahnenberg,Manuel Mohr,Karl Naden,Darpan Saini,Sven Stork,Joshua Sunshine,Eric Tanter,Roger Wolff;Permission-based programming languages.;828-831;4;Tools & languages;
2011;Alberto Sillitti,Giancarlo Succi,Jelena Vlasenko;Toward a better understanding of tool usage.;832-835;4;Process;
2011;Borislava I. Simidchieva,Leon J. Osterweil;Characterizing process variation.;836-839;4;Process;
2011;Nicolas Mangano,Harold Ossher,Ian Simmonds,Matthew Callery,Michael Desmond,Sophia Krasikov;Blending freeform and managed information in tables.;840-843;4;Process;
2011;Kenneth M. Anderson,Aaron Schram;Design and implementation of a data analytics infrastructure in support of crisis informatics research.;844-847;4;Process;
2011;Yang Li,Nitesh Narayan,Jonas Helming,Maximilian Koegel;A domain specific requirements model for scientific computing.;848-851;4;Requirements;
2011;Felix Bott,Stephan Diehl,Rainer Lutz;CREWW: collaborative requirements engineering with wii-remotes.;852-855;4;Requirements;
2011;Rafael V. Borges,Artur S. d'Avila Garcez,Luis da Cunha Lamb,Bashar Nuseibeh;Learning to adapt requirements specifications of evolving systems.;856-859;4;Requirements;
2011;David Cuddeback,Alexander Dekhtyar,Jane Huffman Hayes,Jeff Holden,Wei-Keat Kong;Towards overcoming human analyst fallibility in the requirements tracing process.;860-863;4;Requirements;
2011;Alexander Nohrer,Alexander Reder,Alexander Egyed;Positive effects of utilizing relationships between inconsistencies for more effective inconsistency resolution.;864-867;4;Verification 1;
2011;Grigore Rosu,Andrei Stefanescu;Matching logic: a new program verification approach.;868-871;4;Verification 1;
2011;Cornel Barna,Marin Litoiu,Hamoun Ghanbari;Model-based performance testing.;872-875;4;Testing;
2011;Baiqiang Chen,Jian Zhang;Tuple density: a new metric for combinatorial test suites.;876-879;4;Testing;
2011;Colin Atkinson,Oliver Hummel,Werner Janjic;Search-enhanced testing.;880-883;4;Testing;
2011;Ahmed Tamrawi,Tung Thanh Nguyen,Jafar M. Al-Kofahi,Tien N. Nguyen;Fuzzy set-based automatic bug triaging.;884-887;4;Testing & debugging;
2011;Mary Lou Soffa,Kristen R. Walcott,Jason Mars;Exploiting hardware advances for software testing and debugging.;888-891;4;Testing & debugging;
2011;Matthew Staats,Michael W. Whalen,Mats Per Erik Heimdahl;Better testing through oracle selection.;892-895;4;Testing & debugging;
2011;Xiao Xiao,Jinguo Zhou,Charles Zhang;Tracking data structures for postmortem analysis.;896-899;4;Program analysis 1;
2011;Xin Peng,Zhenchang Xing,Xi Tan,Yijun Yu,Wenyun Zhao;Iterative context-aware feature location.;900-903;4;Program analysis 1;
2011;Romain Robbes,Mircea Lungu;A study of ripple effects in software ecosystems.;904-907;4;Program analysis 1;
2011;Mehdi Mirakhorli,Jane Cleland-Huang;Tracing architectural concerns in high assurance systems.;908-911;4;Design traceability;
2011;Xiaofan Chen,John G. Hosking,John C. Grundy;A combination approach for enhancing automated traceability.;912-915;4;Design traceability;
2011;Dan Tofan,Matthias Galster,Paris Avgeriou;Capturing tacit architectural knowledge using the repertory grid technique.;916-919;4;Design traceability;
2011;Stanislaw Jarzabek,Ha Duy Trung;Flexible generators for software reuse and evolution.;920-923;4;Modeling (or not);
2011;Fahad R. Golra,Fabien Dagnat;The lazy initialization multilayered modeling framework.;924-927;4;Modeling (or not);
2011;Henrik Baerbak Christensen,Klaus Marius Hansen;Towards architectural information in implementation.;928-931;4;Modeling (or not);
2011;Tung Thanh Nguyen,Tien N. Nguyen,Tu Minh Phuong;Topic-based defect prediction.;932-935;4;Empirical SE;
2011;Victor Pankratius;Automated usability evaluation of parallel programming constructs.;936-939;4;Empirical SE;
2011;Kenneth Hullett,Nachiappan Nagappan,Eric Schuh,John Hopson;Data analytics for game development.;940-943;4;Empirical SE;
2011;Dionysis Athanasopoulos,Apostolos Zarras,Panos Vassiliadis,Valerie Issarny;Mining service abstractions.;944-947;4;Program analysis 2;
2011;Heidar Pirzadeh,Abdelwahab Hamou-Lhadj;A software behaviour analysis framework based on the human perception systems.;948-951;4;Program analysis 2;
2011;Muhammad Zubair Malik;Dynamic shape analysis of program heap using graph spectra.;952-955;4;Program analysis 2;
2011;Sheng Liu,Jian Zhang;Program analysis: from qualitative analysis to quantitative analysis.;956-959;4;Program analysis 2;
2011;Syed Shariyar Murtaza,Nazim H. Madhavji,Mechelle Gittens,Zude Li;Diagnosing new faults using mutants and prior faults.;960-963;4;Verification 2;
2011;Yan Wu,Harvey P. Siy,Robin Gandhi;Empirical results on the study of software vulnerabilities.;964-967;4;Verification 2;
2011;Abram Hindle,Michael W. Godfrey,Richard C. Holt;Multifractal aspects of software development.;968-971;4;Different angles;
2011;James B. Williams,Jens H. Weber-Jahnke;The American law institute's principles on software contracts and their ramifications for software engineering research.;972-975;4;Different angles;
2011;Nadine Amsel,Zaid Ibrahim,Amir Malik,Bill Tomlinson;Toward sustainable software engineering.;976-979;4;Different angles;
2011;Yu Sun 0002,Jeffrey G. Gray,Jules White;MT-Scribe: an end-user approach to automate software model evolution.;980-982;3;DemoSurf: software analysis and model evolution;
2011;Pierre Geneves,Nabil Layaida;Inconsistent path detection for XML IDEs.;983-985;3;DemoSurf: software analysis and model evolution;
2011;Jan Jurjens;Automated security hardening for evolving UML models.;986-988;3;DemoSurf: software analysis and model evolution;
2011;Mario Pukall,Alexander Grebhahn,Reimar Schroter,Christian Kastner,Walter Cazzola,Sebastian Gotz;JavAdaptor: unrestricted dynamic software updates for Java.;989-991;3;DemoSun: dynamic software updates and analysis;
2011;Xi Ge,Kunal Taneja,Tao Xie,Nikolai Tillmann;DyTa: dynamic symbolic execution guided with static verification results.;992-994;3;DemoSun: dynamic software updates and analysis;
2011;Reid Holmes,David Notkin;Identifying opaque behavioural changes.;995-997;3;DemoSun: dynamic software updates and analysis;
2011;Nick Matthijssen,Andy Zaidman;FireDetective: understanding ajax client/server interactions.;998-1000;3;DemoSun: dynamic software updates and analysis;
2011;Zhongxian Gu,Earl T. Barr,Zhendong Su;BQL: capturing and reusing debugging knowledge.;1001-1003;3;DemoSky: software testing and quality assessment;
2011;Xusheng Xiao,Tao Xie,Nikolai Tillmann,Jonathan de Halleux;Covana: precise identification of problems in pex.;1004-1006;3;DemoSky: software testing and quality assessment;
2011;Florian Deissenboeck,Lars Heinemann,Markus Herrmannsdorfer,Klaus Lochmann,Stefan Wagner;The quamoco tool chain for quality modeling and assessment.;1007-1009;3;DemoSky: software testing and quality assessment;
2011;Brett Daniel,Danny Dig,Tihomir Gvero,Vilas Jagannath,Johnston Jiaa,Damion Mitchell,Jurand Nogiec,Shin Hwei Tan,Darko Marinov;ReAssert: a tool for repairing broken unit tests.;1010-1012;3;DemoSky: software testing and quality assessment;
2011;Leonardo Mariani,Mauro Pezze,Oliviero Riganelli,Mauro Santoro;AutoBlackTest: a tool for automatic black-box testing.;1013-1015;3;DemoSky: software testing and quality assessment;
2011;Elad Fein,Natalia Razinkov,Shlomit Shachor,Pietro Mazzoleni,SweeFen Goh,Richard Goodwin,Manisha Bhandar,Shyh-Kwei Chen,Juhnyoung Lee,Vibha Sinha,Senthil Mani,Debdoot Mukherjee,Biplav Srivastava,Pankaj Dhoolia;Using MATCON to generate CASE tools that guide deployment of pre-packaged applications.;1016-1018;3;DemoSand: computer supported cooperative work and software engineering;
2011;Noah Jorgenson,Matthew L. Hale,Rose F. Gamble;SEREBRO: facilitating student project team collaboration.;1019-1021;3;DemoSand: computer supported cooperative work and software engineering;
2011;Soo Ling Lim,Daniela E. Herlea,Anthony Finkelstein;StakeSource2.0: using social networks of stakeholders to identify and prioritise requirements.;1022-1024;3;DemoSand: computer supported cooperative work and software engineering;
2011;Alberto Bacchelli,Michele Lanza,Marco D'Ambros;Miler: a toolset for exploring email data.;1025-1027;3;DemoSand: computer supported cooperative work and software engineering;
2011;Nicolas Mangano,Mitch Dempsey,Nicolas Lopez,Andre van der Hoek;A demonstration of a distributed software design sketching tool.;1028-1030;3;DemoSand: computer supported cooperative work and software engineering;
2011;Michael Stengel,Mathias Frisch,Sven Apel,Janet Feigenspan,Christian Kastner,Raimund Dachselt;View infinity: a zoomable interface for feature-oriented software development.;1031-1033;3;DemoShore: software development and maintenance;
2011;Malcom Gethers,Trevor Savage,Massimiliano Di Penta,Rocco Oliveto,Denys Poshyvanyk,Andrea De Lucia;CodeTopics: which topic am I coding now?;1034-1036;3;DemoShore: software development and maintenance;
2011;Marios Fokaefs,Nikolaos Tsantalis,Eleni Stroulia,Alexander Chatzigeorgiou;JDeodorant: identification and application of extract class refactorings.;1037-1039;3;DemoShore: software development and maintenance;
2011;Andrew McVeigh,Jeffrey Kramer,Jeffrey N. Magee;Evolve: tool support for architecture evolution.;1040-1042;3;DemoShore: software development and maintenance;
2011;Collin McMillan,Mark Grechanik,Denys Poshyvanyk,Qing Xie,Chen Fu;Portfolio: a search engine for finding functions and their usages.;1043-1045;3;DemoShore: software development and maintenance;
2011;He Zhang,D. Ross Jeffery,Dan Houston,LiGuo Huang,Liming Zhu;Impact of process simulation on software practice: an initial report.;1046-1056;11;Impact project focus area;
2011;Barry W. Boehm,Ricardo Valerdi;Impact of software resource estimation research on practice: a preliminary report on achievements, synergies, and challenges.;1057-1065;9;Impact project focus area;
2011;Cristian Cadar,Patrice Godefroid,Sarfraz Khurshid,Corina S. Pasareanu,Koushik Sen,Nikolai Tillmann,Willem Visser;Symbolic execution for software testing in practice: preliminary assessment.;1066-1071;6;Impact project focus area;
2011;Gail C. Murphy,Andreas Zeller;ICSE 2011 technical briefings.;1072-1073;2;Technical briefings;
2011;Alberto Bacchelli;Exploring, exposing, and exploiting emails to include human factors in software engineering.;1074-1077;4;Mature phase extended abstracts;
2011;Ning Chen;GATE: game-based testing environment.;1078-1081;4;Mature phase extended abstracts;
2011;Francisco Dantas de Medeiros Neto;Reuse vs. maintainability: revealing the impact of composition code properties.;1082-1085;4;Mature phase extended abstracts;
2011;Sandeep Kumar;Specification mining in concurrent and distributed systems.;1086-1089;4;Mature phase extended abstracts;
2011;Isela Macia Bertran;Detecting architecturally-relevant code smells in evolving software systems.;1090-1093;4;Mature phase extended abstracts;
2011;Josip Maras;Pragmatic reuse in web application development.;1094-1097;4;Mature phase extended abstracts;
2011;Alexander Reder;Inconsistency management framework for model-based development.;1098-1101;4;Mature phase extended abstracts;
2011;Caitlin Sadowski;Mental models and parallel program maintenance.;1102-1105;4;Mature phase extended abstracts;
2011;Emad Shihab;Pragmatic prioritization of software quality assurance efforts.;1106-1109;4;Mature phase extended abstracts;
2011;Zhihong Xu;Directed test suite augmentation.;1110-1113;4;Mature phase extended abstracts;
2011;Yinxing Xue;Reengineering legacy software products into software product line based on automatic variability analysis.;1114-1117;4;Mature phase extended abstracts;
2011;Yongjie Zheng;1.x-Way architecture-implementation mapping.;1118-1121;4;Mature phase extended abstracts;
2011;Pamela Bhattacharya;Using software evolution history to facilitate development and maintenance.;1122-1123;2;Early phase extended abstracts;
2011;Collin McMillan;Searching, selecting, and synthesizing source code.;1124-1125;2;Early phase extended abstracts;
2011;Mehdi Mirakhorli;Tracing architecturally significant requirements: a decision-centric approach.;1126-1127;2;Early phase extended abstracts;
2011;Ana Petricic;Predictable dynamic deployment of components in embedded systems.;1128-1129;2;Early phase extended abstracts;
2011;Leandro Sales Pinto;A declarative approach to enable flexible and dynamic service compositions.;1130-1131;2;Early phase extended abstracts;
2011;Dina Salah;A framework for the integration of user centered design and agile software development processes.;1132-1133;2;Early phase extended abstracts;
2011;Bhuricha Deen Sethanandha;Improving open source software patch contribution process: methods and tools.;1134-1135;2;Early phase extended abstracts;
2011;Ben Smith;Systematizing security test case planning using functional requirements phrases.;1136-1137;2;Early phase extended abstracts;
2011;Stephen W. Thomas;Mining software repositories using topic models.;1138-1139;2;Early phase extended abstracts;
2011;Vanessa Pena Araya;Test blueprint: an effective visual support for test coverage.;1140-1142;3;ACM student research competition;
2011;Hamid Bagheri;A formal approach to software synthesis for architectural platforms.;1143-1145;3;ACM student research competition;
2011;Shauvik Roy Choudhary;Detecting cross-browser issues in web applications.;1146-1148;3;ACM student research competition;
2011;Julius Davies;Measuring subversions: security and legal risk in reused software artifacts.;1149-1151;3;ACM student research competition;
2011;Julie S. Fant;Building domain specific software architectures from software architectural design patterns.;1152-1154;3;ACM student research competition;
2011;Robert Goeritzer;Using impact analysis in industry.;1155-1157;3;ACM student research competition;
2011;Billy Kidwell;A decision support system for the classification of software coding faults: a research abstract.;1158-1160;3;ACM student research competition;
2011;Sandeep Kumar;Specification mining in concurrent and distributed systems.;1161-1163;3;ACM student research competition;
2011;Da Young Lee;A case study on refactoring in Haskell programs.;1164-1166;3;ACM student research competition;
2011;Shane McIntosh;Build system maintenance.;1167-1169;3;ACM student research competition;
2011;Collin McMillan;Finding relevant functions in millions of lines of code.;1170-1172;3;ACM student research competition;
2011;Hakim Sultanov;Requirements tracing: discovering related documents through artificial pheromones and term proximity.;1173-1175;3;ACM student research competition;
2011;Yu Sun 0002;An end-user demonstration approach to support aspect-oriented modeling.;1176-1178;3;ACM student research competition;
2011;Xusheng Xiao;Problem identification for structural test generation: first step towards cooperative developer testing.;1179-1181;3;ACM student research competition;
2011;Sai Zhang;Palus: a hybrid automated test generation tool for java.;1182-1184;3;ACM student research competition;
2011;Shao Jie Zhang;Scalable automatic linearizability checking.;1185-1187;3;ACM student research competition;
2011;Marcelo Cataldo,Cleidson Ronald Botelho de Souza,Yvonne Dittrich,Rashina Hoda,Helen C. Sharp;Workshop on cooperative and human aspects of software engineering: (CHASE 2011).;1188-1189;2;Workshop summaries;
2011;Victor Pankratius,Michael Philippsen;Fourth international workshop on multicore software engineering: (IWMSE 2011).;1190-1191;2;Workshop summaries;
2011;Harold Ossher,Andre van der Hoek,Margaret-Anne D. Storey,John C. Grundy,Rachel K. E. Bellamy,Marian Petre;Workshop on flexible modeling tools: (FlexiTools 2011).;1192-1193;2;Workshop summaries;
2011;Jim Whitehead,Chris Lewis 0002;Workshop on games and software engineering: (GAS 2011).;1194-1195;2;Workshop summaries;
2011;Chris Mattmann,Nenad Medvidovic,T. S. Mohan,T. Owen O'Malley;Workshop on software engineering for cloud computing: (SECLOUD 2011).;1196-1197;2;Workshop summaries;
2011;Kurt Geihs,Luca Mottola,Gian Pietro Picco,Kay Romer;Second international workshop on software engineering for sensor network applications: (SESENA 2011).;1198-1199;2;Workshop summaries;
2011;Seok-Won Lee,Mattia Monga,Jan Jurjens;Seventh international workshop on software engineering for secure systems: (SESS 2011).;1200-1201;2;Workshop summaries;
2011;Danny Dig,Don S. Batory;Fourth workshop on refactoring tools: (WRT 2011).;1202-1203;2;Workshop summaries;
2011;Julia Rubin-Mosin,Goetz Botterweck,Andreas Pleuss,David M. Weiss;Second international workshop on product line approaches in software engineering: (PLEASE 2011).;1204-1205;2;Workshop summaries;
2011;Eleni Stroulia,Kevin J. Sullivan;Third international workshop on software engineering in healthcare: (SEHC 2011).;1206-1207;2;Workshop summaries;
2011;Stuart R. Faulk,Michal Young,David M. Weiss,Lian Yu;Collaborative teaching of globally distributed software development: community building workshop (CTGDSD 2011).;1208-1209;2;Workshop summaries;
2011;James R. Cordy,Katsuro Inoue,Stanislaw Jarzabek,Rainer Koschke;Fifth international workshop on software clones: (IWSC 2011).;1210-1211;2;Workshop summaries;
2011;Ipek Ozkaya,Philippe Kruchten,Robert L. Nord,Nanette Brown;Second international workshop on managing technical debt: (MTD 2011).;1212-1213;2;Workshop summaries;
2011;Denys Poshyvanyk,Massimiliano Di Penta,Huzefa H. Kagdi;Sixth international workshop on traceability in emerging forms of software engineering: (TEFSE 2011).;1214-1215;2;Workshop summaries;
2011;Howard Foster,Antonia Bertolino,J. Jenny Li;Sixth international workshop on automation of software test: (AST 2011).;1216-1217;2;Workshop summaries;
2011;Manuel Carro,Dimka Karastoyanova,Grace A. Lewis,Anna Liu;Third international workshop on principles of engineering service-oriented systems: (PESOS 2011).;1218-1219;2;Workshop summaries;
2011;Paris Avgeriou,Patricia Lago,Philippe Kruchten;Workshop on SHAring and Reusing architectural Knowledge: (SHARK 2011).;1220-1221;2;Workshop summaries;
2011;Christoph Treude,Margaret-Anne D. Storey,Arie van Deursen,Andrew Begel,Sue Black;Second international workshop on web 2.0 for software engineering: (Web2SE 2011).;1222-1223;2;Workshop summaries;
2011;Giulio Concas,Massimiliano Di Penta,Ewan D. Tempero,Hongyu Zhang;Workshop on emerging trends in software metrics: (WETSoM 2011).;1224-1225;2;Workshop summaries;
2011;Jeffrey Carver,Roscoe Bartlett,Ian Gorton,Lorin Hochstein,Diane Kelly,Judith Segal;Fourth international workshop on software engineering for computational science and engineering: (SE-CSE2011).;1226-1227;2;Workshop summaries;
2011;Sushil Krishna Bajracharya,Adrian Kuhn,Yunwen Ye;Third international workshop on search-driven development: users, infrastructure, tools, and evaluation (SUITE 2011).;1228-1229;2;Workshop summaries;
2011;Judy M. Bishop,David Notkin,Karin Koogan Breitman;First workshop on developing tools as plug-ins: (TOPI 2011).;1230-1231;2;Workshop summaries;
2011;Matteo Rossi,Michal Young;SCORE 2011: the second student contest on software engineering.;1232-1233;2;SCORE student contest;
2010;Clem Sunter;South Africa and the world beyond 2010: the latest scenarios.;1;1;Keynote papers;
2010;Fred B. Schneider;Beyond hacking: an SOS!;2;1;Keynote papers;
2010;David King;Planning for climate change in the 21st century.;3;1;Keynote papers;
2010;Eric Bodden;Efficient hybrid typestate analysis by determining continuation-equivalent states.;5-14;10;Dynamic analysis;
2010;Mark Gabel,Zhendong Su;Online inference and enforcement of temporal properties.;15-24;10;Dynamic analysis;
2010;Sasa Misailovic,Stelios Sidiroglou-Douskos,Henry Hoffmann,Martin C. Rinard;Quality of service profiling.;25-34;10;Performance and reliability;
2010;Zibin Zheng,Michael R. Lyu;Collaborative reliability prediction of service-oriented systems.;35-44;10;Performance and reliability;
2010;Chengnian Sun,David Lo,Xiaoying Wang,Jing Jiang,Siau-Cheng Khoo;A discriminative model approach for accurate duplicate bug report retrieval.;45-54;10;Faults 1;
2010;Zhongxian Gu,Earl T. Barr,David J. Hamilton,Zhendong Su;Has the bug really been fixed?;55-64;10;Faults 1;
2010;Fabiano Cutigi Ferrari,Rachel Burrows,Otavio Augusto Lazzarini Lemos,Alessandro Garcia,Eduardo Magno Lages Figueiredo,Nelio Cacho,Frederico Lopes,Nathalia Temudo,Liana Silva,Sergio Soares,Awais Rashid,Paulo Cesar Masiero,Thais Vasconcelos Batista,Jose Carlos Maldonado;An exploratory study of fault-proneness in evolving aspect-oriented programs.;65-74;10;Faults 1;
2010;Naoyasu Ubayashi,Jun Nomura,Tetsuo Tamai;Archface: a contract place where architectural design and code meet together.;75-84;10;Software architecture;
2010;Davide Di Ruscio,Ivano Malavolta,Henry Muccini,Patrizio Pelliccione,Alfonso Pierantonio;Developing next generation ADLs through MDE techniques.;85-94;10;Software architecture;
2010;Hazeline U. Asuncion,Arthur U. Asuncion,Richard N. Taylor;Software traceability with topic modeling.;95-104;10;Software architecture;
2010;Jorg Liebig,Sven Apel,Christian Lengauer,Christian Kastner,Michael Schulze;An analysis of the variability in forty preprocessor-based software product lines.;105-114;10;Software archaeology;
2010;Tony Gorschek,Ewan D. Tempero,Lefteris Angelis;A large-scale empirical study of practitioners' use of object-oriented concepts.;115-124;10;Software archaeology;
2010;Andrew Begel,Yit Phang Khoo,Thomas Zimmermann;Codebook: discovering and exploiting relationships in software repositories.;125-134;10;Software archaeology;
2010;Daniel Le Metayer,Manuel Maarek,Valerie Viet Triem Tong,Eduardo Mazza,Marie-Laure Potet,Nicolas Craipeau,Stephane Frenot,Ronan Hardouin;Liability in software engineering: overview of the LISE approach and illustration on a case study.;135-144;10;Legal issues;
2010;Massimiliano Di Penta,Daniel M. German,Yann-Gael Gueheneuc,Giuliano Antoniol;An exploratory study of the evolution of software licensing.;145-154;10;Legal issues;
2010;Jane Cleland-Huang,Adam Czauderna,Marek Gibiec,John Emenecker;A machine learning approach for tracing regulatory codes to product specific requirements.;155-164;10;Legal issues;
2010;Michael Wursch,Giacomo Ghezzi,Gerald Reif,Harald C. Gall;Supporting developers with natural language queries.;165-174;10;Supporting programmers 1;
2010;Thomas Fritz,Gail C. Murphy;Using information fragments to answer the questions developers ask.;175-184;10;Supporting programmers 1;
2010;Thomas D. LaToza,Brad A. Myers;Developers ask reachability questions.;185-194;10;Supporting programmers 1;
2010;Hao Zhong,Suresh Thummalapenta,Tao Xie,Lu Zhang,Qing Wang;Mining API mapping for language migration.;195-204;10;Program transformation and synthesis;
2010;Marius Nita,David Notkin;Using twinning to adapt programs to alternative APIs.;205-214;10;Program transformation and synthesis;
2010;Susmit Jha,Sumit Gulwani,Sanjit A. Seshia,Ashish Tiwari;Oracle-guided component-based program synthesis.;215-224;10;Program transformation and synthesis;
2010;Milos Gligoric,Tihomir Gvero,Vilas Jagannath,Sarfraz Khurshid,Viktor Kuncak,Darko Marinov;Test generation through programming in UDITA.;225-234;10;Testing 1;
2010;Zhifeng Lai,Shing-Chi Cheung,Wing Kwong Chan;Detecting atomic-set serializability violations in multithreaded programs through active randomized testing.;235-244;10;Testing 1;
2010;Sangmin Park,Richard W. Vuduc,Mary Jean Harrold;Falcon: fault localization in concurrent programs.;245-254;10;Faults 2;
2010;Piramanayagam Arumuga Nainar,Ben Liblit;Adaptive bug isolation.;255-264;10;Faults 2;
2010;Shay Artzi,Julian Dolby,Frank Tip,Marco Pistoia;Practical fault localization for dynamic web applications.;265-274;10;Faults 2;
2010;Barthelemy Dagenais,Harold Ossher,Rachel K. E. Bellamy,Martin P. Robillard,Jacqueline de Vries;Moving into a new software project landscape.;275-284;10;Human factors 1;
2010;Rashina Hoda,James S. Noble,Stuart Marshall;Organizing self-organizing teams.;285-294;10;Human factors 1;
2010;Soo Ling Lim,Daniele Quercia,Anthony Finkelstein;StakeNet: using social networks to analyse the stakeholders of large-scale software projects.;295-304;10;Human factors 1;
2010;Bram Adams,Zhen Ming Jiang,Ahmed E. Hassan;Identifying crosscutting concerns using historical code changes.;305-314;10;Mining software repositories;
2010;Tung Thanh Nguyen,Hoan Anh Nguyen,Nam H. Pham,Jafar M. Al-Kofahi,Tien N. Nguyen;Recurring bug fixes in object-oriented programs.;315-324;10;Mining software repositories;
2010;Wei Wu,Yann-Gael Gueheneuc,Giuliano Antoniol,Miryung Kim;AURA: a hybrid approach to identify framework evolution.;325-334;10;Mining software repositories;
2010;Andreas Classen,Patrick Heymans,Pierre-Yves Schobbens,Axel Legay,Jean-Francois Raskin;Model checking lots of systems: efficient verification of temporal properties in software product lines.;335-344;10;Verification;
2010;Qiusong Yang,Mingshu Li;A cut-off approach for bounded verification of parameterized systems.;345-354;10;Verification;
2010;Aditya V. Nori,Sriram K. Rajamani;An empirical study of optimizations in YOGI.;355-364;10;Verification;
2010;Christoph Treude,Margaret-Anne D. Storey;Awareness 2.0: staying aware of projects, developers and tasks using dashboards and feeds.;365-374;10;Human factors 2;
2010;Alberto Bacchelli,Michele Lanza,Romain Robbes;Linking e-mails and source code artifacts.;375-384;10;Human factors 2;
2010;Thomas Fritz,Jingwen Ou,Gail C. Murphy,Emerson R. Murphy-Hill;A degree-of-knowledge model to capture source code familiarity.;385-394;10;Human factors 2;
2010;Brian Demsky,Patrick Lam;Views: object-inspired concurrency control.;395-404;10;Parallelism & concurrency;
2010;Christoph A. Schaefer,Victor Pankratius,Walter F. Tichy;Engineering parallel applications with tunable architectures.;405-414;10;Parallelism & concurrency;
2010;Jacob Burnim,Koushik Sen;DETERMIN: inferring likely deterministic specifications of multithreaded programs.;415-424;10;Parallelism & concurrency;
2010;Friedrich Steimann,Andreas Thies;From behaviour preservation to behaviour modification: constraint-based mutant generation.;425-434;10;Testing 2;
2010;Lu Zhang,Shan-Shan Hou,Jun-Jue Hu,Tao Xie,Hong Mei;Is operator-based mutant selection superior to random mutant selection?;435-444;10;Testing 2;
2010;Elnatan Reisner,Charles Song,Kin-Keung Ma,Jeffrey S. Foster,Adam A. Porter;Using symbolic evaluation to understand behavior in configurable software systems.;445-454;10;Testing 2;
2010;Andrew Bragdon,Steven P. Reiss,Robert C. Zeleznik,Suman Karumuri,William Cheung,Joshua Kaplan,Christopher Coleman,Ferdi Adeputra,Joseph J. LaViola Jr.;Code bubbles: rethinking the user interface paradigm of integrated development environments.;455-464;10;Supporting programmers 2;
2010;Reid Holmes,Robert J. Walker;Customized awareness: recommending relevant external change events.;465-474;10;Supporting programmers 2;
2010;Mark Grechanik,Chen Fu,Qing Xie,Collin McMillan,Denys Poshyvanyk,Chad M. Cumby;A search engine for finding highly relevant applications.;475-484;10;Supporting programmers 2;
2010;Swarup Kumar Sahoo,John R. Criswell,Vikram S. Adve;An empirical study of reported bugs in server software with implications for automated bug diagnosis.;485-494;10;Faults 3;
2010;Philip J. Guo,Thomas Zimmermann,Nachiappan Nagappan,Brendan Murphy;Characterizing and predicting which bugs get fixed: an empirical study of Microsoft Windows.;495-504;10;Faults 3;
2010;Sarah Rastkar,Gail C. Murphy,Gabriel Murray;Summarizing software artifacts: a case study of bug reports.;505-514;10;Faults 3;
2010;James A. Clause,Alessandro Orso;LEAKPOINT: pinpointing the causes of memory leaks.;515-524;10;Program analysis;
2010;William N. Sumner,Yunhui Zheng,Dasarath Weeratunge,Xiangyun Zhang;Precise calling context encoding.;525-534;10;Program analysis;
2010;Emina Torlak,Satish Chandra;Effective interprocedural resource leak detection.;535-544;10;Program analysis;
2010;Wilson Padua;Measuring complexity, effectiveness and efficiency in software course projects.;545-554;10;Software engineering in education: Evaluating software engineering courses;
2010;Martin Nordio,Roman Mitin,Bertrand Meyer;Advanced hands-on training for distributed and outsourced software engineering.;555-558;4;Software engineering in education: Evaluating software engineering courses;
2010;Orit Hazzan,Yael Dubinsky;A HOT --- Human, Organizational and Technological --- framework for a software engineering course.;559-566;8;Software engineering in education: Evaluating software engineering courses;
2010;Amna Humayun,Wafa Basit,Ghulam A. Farrukh,Fakhar Lodhi,Rabea Aden;An empirical analysis of team review approaches for teaching quality software development.;567-575;9;Software engineering in education: Team orientation;
2010;Norsaremah Salleh,Emilia Mendes,John C. Grundy,Giles St. J. Burch;An empirical study of the effects of conscientiousness in pair programming using the five-factor personality model.;577-586;10;Software engineering in education: Team orientation;
2010;Mehdi Jazayeri;Panel on master's degree programs in software engineering.;587;1;Software engineering in education: panel: master's programs in software engineering;
2010;Barbara A. Kitchenham,Pearl Brereton,David Budgen;The educational value of mapping studies of software engineering literature.;589-598;10;Software engineering in education: Effect of context in software engineering education;
2010;Jens Fendler,Heike Winschiers-Theophilus;Towards contextualised software engineering education: an African perspective.;599-607;9;Software engineering in education: Effect of context in software engineering education;
2010;Nikolaus Huber,Steffen Becker,Christoph Rathfelder,Jochen Schweflinghaus,Ralf H. Reussner;Performance modeling in industry: a case study on storage virtualization.;1-10;10;Software engineering in practice: Quality of service;
2010;Maayan Goldstein,Onn Shehory,Rachel Tzoref-Brill,Shmuel Ur;Improving throughput via slowdowns.;11-20;10;Software engineering in practice: Quality of service;
2010;Frances Paulisch,Peter Zimmerer;A role-based qualification and certification program for software architects: an experience report from Siemens.;21-27;7;Software engineering in practice: Certification, assessment & governance;
2010;Frank Salger,Gregor Engels,Alexander Hofmann;Assessments in global software development: a tailorable framework for industrial projects.;29-38;10;Software engineering in practice: Certification, assessment & governance;
2010;Yi Wang,Min Zhang 0002;Penalty policies in professional software development practice: a multi-method field study.;39-47;9;Software engineering in practice: Certification, assessment & governance;
2010;Thomas Aschauer,Gerd Dauenhauer,Wolfgang Pree;A modeling language's evolution driven by tight interaction between academia and industry.;49-58;10;Software engineering in practice: Model-driven development;
2010;Andreas Kornstadt,Eugen Reiswich;Staying afloat in an expanding sea of choices: emerging best practices for eclipse rich client platform development.;59-67;9;Software engineering in practice: Model-driven development;
2010;Mickael Clavreul,Olivier Barais,Jean-Marc Jezequel;Integrating legacy systems with MDE.;69-78;10;Software engineering in practice: Model-driven development;
2010;Elmar Jurgens,Florian Deissenboeck,Martin Feilkas,Benjamin Hummel,Bernhard Schatz,Stefan Wagner,Christoph Domann,Jonathan Streit;Can clone detection support quality assessments of requirements specifications?;79-88;10;Software engineering in practice: Quality assurance I: Static and dynamic analysis;
2010;Yongzheng Wu,Roland H. C. Yap,Rajiv Ramnath;Comprehending module dependencies and sharing.;89-98;10;Software engineering in practice: Quality assurance I: Static and dynamic analysis;
2010;Mangala Gowri Nanda,Monika Gupta,Saurabh Sinha,Satish Chandra,David Schmidt,Pradeep Balachandran;Making defect-finding tools work for you.;99-108;10;Software engineering in practice: Quality assurance I: Static and dynamic analysis;
2010;Angelo Chiappini,Alessandro Cimatti,Luca Macchi,Oscar Rebollo,Marco Roveri,Angelo Susi,Stefano Tonetta,Berardino Vittorini;Formalization and validation of a subset of the European Train Control System.;109-118;10;Software engineering in practice: Quality assurance II: Defect modeling, prediction & testing;
2010;Michael Klas,Frank Elberzhager,Jurgen Munch,Klaus Hartjes,Olaf von Graevemeyer;Transparent combination of expert and measurement data for defect prediction: an industrial case study.;119-128;10;Software engineering in practice: Quality assurance II: Defect modeling, prediction & testing;
2010;Alex Groce,Klaus Havelund,Margaret H. Smith;From scripts to specifications: the evolution of a flight software testing effort.;129-138;10;Software engineering in practice: Quality assurance II: Defect modeling, prediction & testing;
2010;K. Eric Harper,Jiang Zheng,Shakeel Mahate;Experiences in initiating concurrency software research efforts.;139-148;10;Software engineering in practice: Innovation drivers & cost models;
2010;S. Jeromy Carriere,Rick Kazman,Ipek Ozkaya;A cost-benefit framework for making architectural decisions in a business context.;149-157;9;Software engineering in practice: Innovation drivers & cost models;
2010;Naeem Esfahani,Sam Malek;Social computing networks: a new paradigm for engineering self-adaptive pervasive software systems.;159-162;4;New ideas and emerging results;
2010;Michele Ceccarelli,Luigi Cerulo,Gerardo Canfora,Massimiliano Di Penta;An eclectic approach for change impact analysis.;163-166;4;New ideas and emerging results;
2010;Yuepu Guo,Carolyn B. Seaman,Nico Zazworka,Forrest Shull;Domain-specific tailoring of code smells: an empirical study.;167-170;4;New ideas and emerging results;
2010;Ivonne Erfurth,Wilhelm Rossak;CUTA4UML: bridging the gap between informal and formal requirements for dynamic system aspects.;171-174;4;New ideas and emerging results;
2010;N. V. Narendra Kumar,Harshit J. Shah,Rudrapatna K. Shyamasundar;Can we certify systems for freedom from malware.;175-178;4;New ideas and emerging results;
2010;Ivo Krka,Yuriy Brun,Daniel Popescu,Joshua Garcia,Nenad Medvidovic;Using dynamic execution traces and program invariants to enhance behavioral model inference.;179-182;4;New ideas and emerging results;
2010;Juergen Musil,Angelika Schweda,Dietmar Winkler,Stefan Biffl;Synthesized essence: what game jams teach about prototyping of new software products.;183-186;4;New ideas and emerging results;
2010;Gul Calikli,Ayse Bener,Berna Arslan;An analysis of the effects of company culture, education and experience on confirmation bias levels of software developers and testers.;187-190;4;New ideas and emerging results;
2010;Macneil Shonle,Timothy T. Yuen;Compose & conquer: modularity for end-users.;191-194;4;New ideas and emerging results;
2010;Neha Rungta,Eric Mercer;Slicing and dicing bugs in concurrent programs.;195-198;4;New ideas and emerging results;
2010;Nelly Bencomo,Jonathan P. Whittle,Peter Sawyer,Anthony Finkelstein,Emmanuel Letier;Requirements reflection: requirements as runtime entities.;199-202;4;New ideas and emerging results;
2010;Arie van Deursen,Ali Mesbah,Bas Cornelissen,Andy Zaidman,Martin Pinzger,Anja Guzzi;Adinda: a knowledgeable, browser-based IDE.;203-206;4;New ideas and emerging results;
2010;Robert DeLine,Kael Rowan;Code canvas: zooming towards better development environments.;207-210;4;New ideas and emerging results;
2010;Frank Salger,Gregor Engels;Knowledge transfer in global software development: leveraging acceptance test case specifications.;211-214;4;New ideas and emerging results;
2010;Ishtiaque Hussain,Christoph Csallner;Dynamic symbolic data structure repair.;215-218;4;New ideas and emerging results;
2010;Zhe Chen,Gilles Motet;Towards better support for the evolution of safety requirements via the model monitoring approach.;219-222;4;New ideas and emerging results;
2010;Sonia Haiduc,Jairo Aponte,Andrian Marcus;Supporting program comprehension with source code summarization.;223-226;4;New ideas and emerging results;
2010;Nam H. Pham,Tung Thanh Nguyen,Hoan Anh Nguyen,Xinying Wang,Hoan Anh Nguyen,Tien N. Nguyen;Detecting recurring and similar software vulnerabilities.;227-230;4;New ideas and emerging results;
2010;Christoph Treude,Margaret-Anne D. Storey;Bridging lightweight and heavyweight task organization: the role of tags in adopting new task categories.;231-234;4;New ideas and emerging results;
2010;Lile Hattori,Michele Lanza;Syde: a tool for collaborative software development.;235-238;4;Formal research demos: Collaborative software development;
2010;Soo Ling Lim,Daniele Quercia,Anthony Finkelstein;StakeSource: harnessing the power of crowdsourcing and social networks in stakeholder analysis.;239-242;4;Formal research demos: Collaborative software development;
2010;Jae Young Bang,Daniel Popescu,George Edwards,Nenad Medvidovic,Naveen N. Kulkarni,Girish Maskeri Rama,Srinivas Padmanabhuni;CoDesign: a highly extensible collaborative software modeling framework.;243-246;4;Formal research demos: Collaborative software development;
2010;Florian Deissenboeck,Lars Heinemann,Benjamin Hummel,Elmar Jurgens;Flexible architecture conformance assessment with ConQAT.;247-250;4;Formal research demos: Software maintenance;
2010;Steven P. Reiss;Visualizing the Java heap.;251-254;4;Formal research demos: Software maintenance;
2010;Trevor Savage,Meghan Revelle,Denys Poshyvanyk;FLAT3: feature location and textual tracing tool.;255-258;4;Formal research demos: Software maintenance;
2010;Mark Grechanik,Chen Fu,Qing Xie,Collin McMillan,Denys Poshyvanyk,Chad M. Cumby;Exemplar: EXEcutable exaMPLes ARchive.;259-262;4;Formal research demos: Software components and reuse;
2010;Alex Loh,Miryung Kim;LSdiff: a program differencing tool to identify systematic structural differences.;263-266;4;Formal research demos: Software components and reuse;
2010;Stefan Henkler,Jan Meyer,Wilhelm Schafer,Markus von Detten,Ulrich Nickel;Legacy component integration by the Fujaba real-time tool suite.;267-270;4;Formal research demos: Software components and reuse;
2010;Cheng Zhang,Dacong Yan,Jianjun Zhao,Yuting Chen,Shengqian Yang;BPGen: an automated breakpoint generator for debugging.;271-274;4;Formal research demos: Testing;
2010;Chris Lewis 0002,Jim Whitehead;Runtime repair of software faults using event-driven monitoring.;275-280;6;Formal research demos: Testing;
2010;Luciano Baresi,Matteo Miraz;TestFul: automatic unit-test generation for Java classes.;281-284;4;Formal research demos: Testing;
2010;Norbert Seyff,Florian Graf,Neil A. M. Maiden;End-user requirements blogging with iRequire.;285-288;4;Formal research demos: Software development environments;
2010;Mircea Lungu,Michele Lanza;The small project observatory: a tool for reverse engineering software ecosystems.;289-292;4;Formal research demos: Software development environments;
2010;Andrew Bragdon,Steven P. Reiss,Robert C. Zeleznik,Suman Karumuri,William Cheung,Joshua Kaplan,Christopher Coleman,Ferdi Adeputra,Joseph J. LaViola Jr.;A research demonstration of code bubbles.;293-296;4;Formal research demos: Software development environments;
2010;Esteban Robles Luna,Juan Burella,Julian Grigera,Gustavo Rossi;A flexible tool suite for change-aware test-driven development of web applications.;297-298;2;Informal research demos;
2010;Markus von Detten,Matthias Meyer,Dietrich Travkin;Reverse engineering with the reclipse tool suite.;299-300;2;Informal research demos;
2010;Domenico Bianculli,Walter Binder,Mauro Luigi Drago;SOABench: performance evaluation of service-oriented middleware made easy.;301-302;2;Informal research demos;
2010;Hui Song,Gang Huang 0001,Franck Chauvel,Yanchun Sun,Hong Mei;SM@RT: representing run-time system data as MOF-compliant models.;303-304;2;Informal research demos;
2010;Pierre Geneves,Nabil Layaida;Eliminating dead-code from XQuery programs.;305-306;2;Informal research demos;
2010;Maximilian Koegel,Jonas Helming;EMFStore: a model repository for EMF models.;307-308;2;Informal research demos;
2010;James H. Hill;CUTS: a system execution modeling tool for realizing continuous system integration testing.;309-310;2;Informal research demos;
2010;Miguel Angel Garcia de Dios,Carolina Dania,Michael Schlapfer,David A. Basin,Manuel Clavel,Marina Egea;SSG: a model-based development environment for smart, security-aware GUIs.;311-312;2;Informal research demos;
2010;Jonas Helming,Maximilian Koegel;Managing iterations with UNICASE.;313-314;2;Informal research demos;
2010;Yoonki Song,Xiaoying Wang,Tao Xie,Lu Zhang,Hong Mei;JDF: detecting duplicate bug reports in Jazz.;315-316;2;Informal research demos;
2010;Lamia Labed Jilani,Olfa Mraihi,Asma Louhichi,Wided Ghardallou,Ali Mili;Using invariant functions and invariant relations to compute loop functions.;317-318;2;Informal research demos;
2010;Tuan-Anh Doan,David Lo,Shahar Maoz,Siau-Cheng Khoo;LM: a miner for scenario-based specifications.;319-320;2;Informal research demos;
2010;Antonio Carzaniga,Alessandra Gorla,Nicolo Perino,Mauro Pezze;RAW: runtime automatic workarounds.;321-322;2;Informal research demos;
2010;Derrick G. Kourie,Bruce W. Watson;Software engineering in South Africa.;323-324;2;Software engineering in South Africa;
2010;Christopher Staite;Portable secure identity management for software engineering.;325-326;2;Doctoral symposium: Early phase;
2010;Nicholas R. May;Dynamic service quality and resource negotiation for high-availability service-oriented systems.;327-328;2;Doctoral symposium: Early phase;
2010;Chris Lewis 0002;Zenet: generating and enforcing real-time temporal invariants.;329-330;2;Doctoral symposium: Early phase;
2010;Andrea Magalhaes Magdaleno;Balancing collaboration and discipline in software development processes.;331-332;2;Doctoral symposium: Early phase;
2010;Fabiana Gomes Marinho;A proposal for consistency checking in dynamic software product line models using OCL.;333-334;2;Doctoral symposium: Early phase;
2010;Guido de Caso;Behavioural validation of software engineering artefacts.;335-336;2;Doctoral symposium: Early phase;
2010;Omar Bahy Badreddin;Umple: a model-oriented programming language.;337-338;2;Doctoral symposium: Early phase;
2010;Indika Meedeniya;An incremental methodology for quantitative software architecture evaluation with probabilistic models.;339-340;2;Doctoral symposium: Early phase;
2010;Xiaorui Zhang;Synthesize software product line.;341-342;2;Doctoral symposium: Early phase;
2010;W. L. Ntshinga;Choreography of intelligent e-services.;343-344;2;Doctoral symposium: Early phase;
2010;Christian Pichler;A framework for handling variants of software models.;345-346;2;Doctoral symposium: Early phase;
2010;Bruno Wassermann;Improving wide-area distributed system availability.;347-348;2;Doctoral symposium: Early phase;
2010;Adailton Magalhaes Lima;Risk assessment on distributed software projects.;349-350;2;Doctoral symposium: Early phase;
2010;Claudia Susie C. Rodrigues;VisAr3D: an approach to software architecture teaching based on virtual and augmented reality.;351-352;2;Doctoral symposium: Early phase;
2010;Antonio Oliveira Filho;Change impact analysis from business rules.;353-354;2;Doctoral symposium: Early phase;
2010;John Brondum;Software architecture for systems of software intensive systems (S3): the concepts and detection of inter-system relationships.;355-356;2;Doctoral symposium: Early phase;
2010;K. S. May Chan;Formal methods for web services: a taxonomic approach.;357-360;4;Doctoral symposium: Mature phase;
2010;Ana Erika Camargo Cruz;Exploratory study of a UML metric for fault prediction.;361-364;4;Doctoral symposium: Mature phase;
2010;Pourya Shaker;Feature-oriented requirements modelling.;365-368;4;Doctoral symposium: Mature phase;
2010;Anders Mattsson;Automatic enforcement of architectural design rules.;369-372;4;Doctoral symposium: Mature phase;
2010;Lucas Cordeiro;SMT-based bounded model checking for multi-threaded software in embedded systems.;373-376;4;Doctoral symposium: Mature phase;
2010;Lile Hattori;Enhancing collaboration of multi-developer projects with synchronous changes.;377-380;4;Doctoral symposium: Mature phase;
2010;Giacomo Ghezzi;SOFAS: software analysis services.;381-384;4;Doctoral symposium: Mature phase;
2010;Gerald Bortis;Informal software design knowledge reuse.;385-388;4;Doctoral symposium: Mature phase;
2010;Christoph Treude;The role of emergent knowledge structures in collaborative software development.;389-392;4;Doctoral symposium: Mature phase;
2010;Kim Sebastian Herzig;Capturing the long-term impact of changes.;393-396;4;Doctoral symposium: Mature phase;
2010;Adrian Schroter;Failure preventing recommendations.;397-400;4;Doctoral symposium: Mature phase;
2010;Daniel Popescu;Impact analysis for event-based components and systems.;401-404;4;Doctoral symposium: Mature phase;
2010;Kleinner Farias;Empirical evaluation of effort on composing design models.;405-408;4;Doctoral symposium: Mature phase;
2010;Meiyappan Nagappan;Analysis of execution log files.;409-412;4;Doctoral symposium: Mature phase;
2010;Marcus Roy;Towards end-user enabled web service consumption for Mashups.;413-416;4;Doctoral symposium: Mature phase;
2010;Feifei Ma;Constraint solving techniques for software testing and analysis.;417-420;4;Doctoral symposium: Mature phase;
2010;Haroon Malik;A methodology to support load test analysis.;421-424;4;Doctoral symposium: Mature phase;
2010;Hausi A. Muller,Andreas Zeller;Emerging Faculty Symposium 2010.;425;1;Emerging faculty symposium;
2010;Sushil Krishna Bajracharya,Adrian Kuhn,Yunwen Ye;SUITE 2010: 2nd International Workshop on Search-Driven Development - Users, Infrastructure, Tools & Evaluation.;427-428;2;Workshop introductions;
2010;Grace A. Lewis,Andreas Metzger,Marco Pistore,Dennis B. Smith,Andrea Zisman;2010 ICSE 2nd International Workshop on Principles of Engineering Service-Oriented Systems (PESOS 2010).;429-430;2;Workshop introductions;
2010;Victor Pankratius,Michael Philippsen;New Horizons in Multicore Software Engineering.;431-432;2;Workshop introductions;
2010;Seok-Won Lee,Mattia Monga,Jan Jurjens;The 6th International Workshop on Software Engineering for Secure Systems (SESS'10).;433-434;2;Workshop introductions;
2010;Yvonne Dittrich,Cleidson Ronald Botelho de Souza,Mikko Korpela,Helen C. Sharp,Janice A. Singer,Heike Winshiers-Theophilus;Cooperative and Human Aspects of Software Engineering (CHASE 2010).;435-436;2;Workshop introductions;
2010;Patricia Lago,Paris Avgeriou,Philippe Kruchten;Fifth International Workshop on Sharing and Reusing Architectural Knowledge (SHARK 2010).;437-438;2;Workshop introductions;
2010;Julia Rubin-Mosin,Goetz Botterweck,Mira Mezini,Itay Maman,Andreas Pleuss;First International Workshop on Product Line Approaches in Software Engineering (PLEASE 2010).;439-440;2;Workshop introductions;
2010;Harold Ossher,Andre van der Hoek,Margaret-Anne D. Storey,John C. Grundy,Rachel K. E;Bellamy: Flexible Modeling Tools (FlexiTools2010).;441-442;2;Workshop introductions;
2010;Kurt Geihs,Stefan Gruner,Kay Romer;SESENA 2010: Workshop on Software Engineering for Sensor Network Applications.;443-444;2;Workshop introductions;
2010;Christof J. Budnik,Wing Kwong Chan,Gregory M. Kapfhammer;Bridging the Gap Between the Theory and Practice of Software Test Automation.;445-446;2;Workshop introductions;
2010;Betty H. C. Cheng,Rogerio de Lemos,David Garlan,Holger Giese,Marin Litoiu,Jeffrey N. Magee,Hausi A. Muller,Mauro Pezze,Richard N. Taylor;Fifth Workshop on Software Engineering for Adaptive and Self-Managing Systems (SEAMS 2010).;447-448;2;Workshop introductions;
2010;Steve M. Easterbrook,Kim Mens,Steffen Zschaler;Second International Workshop on Software Research and Climate Change.;449-450;2;Workshop introductions;
2010;Carlo Ghezzi,Lars Grunske,Raffaela Mirandola;First International Workshop on Quantitative Stochastic Models in the Verification and Design of Software Systems (QUOVADIS 2010).;451-452;2;Workshop introductions;
2010;Lori A. Clarke,Jens H. Weber-Jahnke;2nd International Workshop on Software Engineering in Health Care (SEHC 2010).;453-454;2;Workshop introductions;
2010;Reid Holmes,Martin P. Robillard,Robert J. Walker,Thomas Zimmermann;RSSE 2010: Second International Workshop on Recommendation Systems for Software Engineering.;455-456;2;Workshop introductions;
2010;Christoph Treude,Margaret-Anne D. Storey,Kate Ehrlich,Arie van Deursen;Web2SE: First Workshop on Web 2.0 for Software Engineering.;457-458;2;Workshop introductions;
2010;Gerardo Canfora,Giulio Concas,Michele Marchesi,Ewan D. Tempero,Hongyu Zhang;Workshop on Emerging Trends in Software Metrics (WETSoM 2010).;459-460;2;Workshop introductions;
2010;Charles D. Knutson,Jonathan L. Krein,Lutz Prechelt,Natalia Juristo Juzgado;1st International Workshop on Replication in Empirical Software Engineering Research (RESER).;461-462;2;Workshop introductions;
2010;Yael Dubinsky,Philippe Kruchten,Anthony Finkelstein,Leonard J. Bass,Sunita Chulani,Rafael Prikladnicki;Software Development Governance (SDG) Workshop.;463-464;2;Workshop introductions;
2010;Katsuro Inoue,Stanislaw Jarzabek,James R. Cordy,Rainer Koschke;Fourth International Workshop on Software Clones (IWSC).;465-466;2;Workshop introductions;
2010;Jon G. Hall,Lucia Rapanotti,Liping Zhao,James Naish;2010 ICSE International Workshop on Advances and Applications of Problem Orientation (WAAPO-2010).;467-468;2;Workshop introductions;
2010;Alistair G. Sutcliffe,Sarah Thew;"Analysing ""people"" problems in requirements engineering.";469-470;2;Tutorials;
2010;Nenad Medvidovic,Richard N. Taylor;Software architecture: foundations, theory, and practice.;471-472;2;Tutorials;
2010;Bernhard Rumpe,Martin Schindler,Steven Volkel,Ingo Weisemoller;Generative software development.;473-474;2;Tutorials;
2010;Stefan Tai,Jens Nimis,Alexander Lenk,Markus Klems;Cloud service engineering.;475-476;2;Tutorials;
2010;Mohan Sridharan,Akbar Siami Namin;Bayesian methods for data analysis in software engineering.;477-478;2;Tutorials;
2010;M. Hakan Erdogmus;Cost effectiveness analysis in software engineering.;479-480;2;Tutorials;
2010;Orit Hazzan,Yael Dubinsky;Coaching agile software projects: tutorial proposal - ICSE 2010.;481-482;2;Tutorials;
2010;Nikolai Tillmann,Jonathan de Halleux,Tao Xie;Parameterized unit testing: theory and practice.;483-484;2;Tutorials;
2010;Daniel L. Moody;"The ""physics"" of notations: a scientific approach to designing visual notations in software engineering.";485-486;2;Tutorials;
2010;Victor Pankratius,Walter F. Tichy,Peter Hinsbeeck;Multicore software engineering: the next challenge in software engineering.;487;1;Tutorials;
2010;Donald G. Firesmith;Engineering safety- and security-related requirements for software-intensive systems: tutorial summary.;489-490;2;Tutorials;
2010;Helen C. Sharp,Cleidson Ronald Botelho de Souza,Yvonne Dittrich;Using ethnographic methods in software engineering research.;491-492;2;Tutorials;
2010;Roel Wieringa;Design science methodology: principles and practice.;493-494;2;Tutorials;
2010;Myra B. Cohen,Shmuel Ur;Combinatorial test design in practice.;495-496;2;Tutorials;
2010;Philippe Kruchten;Software architecture and agile software development: a clash of two cultures?;497-498;2;Tutorials;
2010;Florian Deissenboeck,Benjamin Hummel,Elmar Jurgens;Code clone detection in practice.;499-500;2;Tutorials;
2010;Barry W. Boehm,Jo Ann Lane;New processes for new horizons: the incremental commitment model.;501-502;2;Tutorials;
2010;Ahmed E. Hassan,Tao Xie;Mining software engineering data.;503-504;2;Tutorials;
2010;Guido de Caso;Behavioural validation of software engineering artefacts.;505-506;2;Student research competition;
2010;Tayfun Elmas;QED: a proof system based on reduction and abstraction for the static verification of concurrent software.;507-508;2;Student research competition;
2010;Lode Hoste;Software engineering abstractions for the multi-touch revolution.;509-510;2;Student research competition;
2010;Adrian Schroter;Predicting build outcome with developer interaction in Jazz.;511-512;2;Student research competition;
2010;Florian S. Gysin;Improved social trustability of code search results.;513-514;2;Student research competition;
2010;Max Goldman;Test-driven roles for pair programming.;515-516;2;Student research competition;
2010;Ivano Malavolta;Providing support for creating next generation software architecture languages.;517-518;2;Student research competition;
2010;Zvonimir Rakamaric;STORM: static unit checking of concurrent programs.;519-520;2;Student research competition;
2010;Gustavo L. Soares;Making program refactoring safer.;521-522;2;Student research competition;
2010;Thomas Fritz;Staying aware of relevant feeds in context.;523-524;2;Student research competition;
2010;Andrew Bragdon;Developing and evaluating the code bubbles metaphor.;525-526;2;Student research competition;
2010;Sarah Rastkar;Summarizing software concerns.;527-528;2;Student research competition;
2010;Marco D'Ambros;Commit 2.0: enriching commit comments with visualization.;529-530;2;Student research competition;
2010;Daniel Popescu;Helios: impact analysis for event-based components and systems.;531-532;2;Student research competition;
2009;Timo Wolf,Adrian Schroter,Daniela E. Herlea,Thanh H. D. Nguyen;Predicting build failures using social network analysis on developer communication.;1-11;11;Research Papers;Collaborative Development
2009;Christoph Treude,Margaret-Anne D. Storey;How tagging helps bridge the gap between social and technical aspects in software development.;12-22;11;Research Papers;Collaborative Development
2009;Anita Sarma,Larry Maccherone,Patrick Wagstrom,James D. Herbsleb;Tesseract: Interactive visual exploration of socio-technical relationships in software development.;23-33;11;Research Papers;Collaborative Development
2009;Trishul M. Chilimbi,Ben Liblit,Krishna K. Mehra,Aditya V. Nori,Kapil Vaswani;HOLMES: Effective statistical debugging via efficient path profiling.;34-44;11;Debugging;
2009;Xinming Wang,Shing-Chi Cheung,Wing Kwong Chan,Zhenyu Zhang;Taming coincidental correctness: Coverage refinement with context patterns to improve fault localization.;45-55;11;Debugging;
2009;Raul A. Santelices,James A. Jones,Yanbing Yu,Mary Jean Harrold;Lightweight fault-localization using multiple coverage types.;56-66;11;Debugging;
2009;Audris Mockus;Succession: Measuring transfer of code and developer productivity.;67-77;11;Software Quality and Metrics;
2009;Ahmed E. Hassan;Predicting faults using the complexity of code changes.;78-88;11;Software Quality and Metrics;
2009;Irina Diana Coman,Alberto Sillitti,Giancarlo Succi;A case-study on using an Automated In-process Software Engineering Measurement and Analysis system in an industrial environment.;89-99;11;Software Quality and Metrics;
2009;Radu Calinescu,Marta Z. Kwiatkowska;Using quantitative analysis to implement autonomic IT systems.;100-110;11;Dynamic Adaptation;
2009;Ilenia Epifani,Carlo Ghezzi,Raffaela Mirandola,Giordano Tamburrelli;Model evolution by run-time parameter adaptation.;111-121;11;Dynamic Adaptation;
2009;Brice Morin,Olivier Barais,Gregory Nain,Jean-Marc Jezequel;Taming Dynamically Adaptive Systems using models and aspects.;122-132;11;Dynamic Adaptation;
2009;Mangala Gowri Nanda,Saurabh Sinha;Accurate Interprocedural Null-Dereference Analysis for Java.;133-143;11;Program Analysis I;
2009;Raymond P. L. Buse,Westley Weimer;The road not taken: Estimating path execution frequency statically.;144-154;11;Program Analysis I;
2009;Sudheendra Hangal,Monica S. Lam;Automatic dimension inference and checking for object-oriented programs.;155-165;11;Program Analysis I;
2009;Herve Chang,Leonardo Mariani,Mauro Pezze;In-field healing of integration problems with COTS components.;166-176;11;Components;
2009;Emmanuel Geay,Marco Pistoia,Takaaki Tateishi,Barbara G. Ryder,Julian Dolby;Modular string-sensitive permission analysis with demand-driven precision.;177-187;11;Components;
2009;Daniel M. German,Ahmed E. Hassan;License integration patterns: Addressing license mismatches in component-based development.;188-198;11;Components;
2009;Adam Kiezun,Philip J. Guo,Karthick Jayaraman,Michael D. Ernst;Automatic creation of SQL Injection and cross-site scripting attacks.;199-209;11;Web Applications;
2009;Ali Mesbah,Arie van Deursen;Invariant-based automatic testing of AJAX user interfaces.;210-220;11;Web Applications;
2009;Sven Apel,Christian Kastner,Christian Lengauer;FEATUREHOUSE: Language-independent, automated software composition.;221-231;11;Development Tools;
2009;Emily Hill,Lori L. Pollock,K. Vijay-Shanker;Automatically capturing source code context of NL-queries for software maintenance and reuse.;232-242;11;Development Tools;
2009;Steven P. Reiss;Semantics-based code search.;243-253;11;Development Tools;
2009;Thomas Thum,Don S. Batory,Christian Kastner;Reasoning about edits to feature models.;254-264;11;Modeling;
2009;Dalal Alrajeh,Jeffrey Kramer,Alessandra Russo,Sebastian Uchitel;Learning operational requirements from goal models.;265-275;11;Modeling;
2009;Nam H. Pham,Hoan Anh Nguyen,Tung Thanh Nguyen,Jafar M. Al-Kofahi,Tien N. Nguyen;Complete and accurate clone detection in graph-based models.;276-286;11;Modeling;
2009;Emerson R. Murphy-Hill,Chris Parnin,Andrew P. Black;How we refactor, and how we know it.;287-297;11;Maintenance;
2009;Jorge Aranda,Gina Danielle Venolia;The secret life of bugs: Going past the errors and omissions in software repositories.;298-308;11;Maintenance;
2009;Miryung Kim,David Notkin;Discovering and representing systematic code changes.;309-319;11;Maintenance;
2009;Uri Dekel,James D. Herbsleb;Improving API documentation usability with knowledge pushing.;320-330;11;Program Comprehension;
2009;Yoann Padioleau,Lin Tan,Yuanyuan Zhou;Listening to programmers - Taxonomies and characteristics of comments in operating system code.;331-341;11;Program Comprehension;
2009;Derek Rayside,Zev Benjamin,Rishabh Singh,Joseph P. Near,Aleksandar Milicevic,Daniel B. Jackson;Equality and hashing for (almost) free: Generating implementations from abstraction functions.;342-352;11;Code Generation and Transformation;
2009;Xiaoying Wang,Lu Zhang,Tao Xie,Hong Mei,Jiasu Sun;Locating need-to-translate constant strings for software internationalization.;353-363;11;Code Generation and Transformation;
2009;Westley Weimer,ThanhVu H. Nguyen,Claire Le Goues,Stephanie Forrest;Automatically finding patches using genetic programming.;364-374;11;Code Generation and Transformation;
2009;Charles Zhang;FlexSync: An aspect-oriented approach to Java synchronization.;375-385;11;Concurrency;
2009;Mayur Naik,Chang-Seo Park,Koushik Sen,David Gay;Effective static deadlock detection.;386-396;11;Concurrency;
2009;Danny Dig,John Marrero,Michael D. Ernst;Refactoring sequential Java code for concurrency via concurrent libraries.;397-407;11;Concurrency;
2009;Mark Grechanik,Qing Xie,Chen Fu;Maintaining and evolving GUI-directed test scripts.;408-418;11;Testing I;
2009;Hwa-You Hsu,Alessandro Orso;MINTS: A general framework and tool for supporting test-suite minimization.;419-429;11;Testing I;
2009;Carlo Ghezzi,Andrea Mocci,Mattia Monga;Synthesizing intensional behavior models by graph transformation.;430-440;11;Model Synthesis;
2009;Christophe Damas,Bernard Lambeau,Francois Roucoux,Axel van Lamsweerde;Analyzing critical process models through behavior model synthesis.;441-451;11;Model Synthesis;
2009;Guido de Caso,Victor A. Braberman,Diego Garbervetsky,Sebastian Uchitel;Validation of contracts using enabledness preserving finite state abstractions.;452-462;11;Model Synthesis;
2009;Jacob Burnim,Sudeep Juvekar,Koushik Sen;WISE: Automated test generation for worst-case complexity.;463-473;11;Testing II;
2009;Vijay Ganesh,Timothy R. Leek,Martin C. Rinard;Taint-based directed whitebox fuzzing.;474-484;11;Testing II;
2009;Elmar Jurgens,Florian Deissenboeck,Benjamin Hummel,Stefan Wagner;Do code clones matter?;485-495;11;Program Analysis II;
2009;Suresh Thummalapenta,Tao Xie;Mining exception-handling rules as sequence association rules.;496-506;11;Program Analysis II;
2009;Jan Wloka,Barbara G. Ryder,Frank Tip,Xiaoxia Ren;Safe-commit analysis to facilitate team software development.;507-517;11;Program Analysis II;
2009;Christian Bird,Nachiappan Nagappan,Premkumar T. Devanbu,Harald C. Gall,Brendan Murphy;Does distributed development affect software quality? An empirical case study of Windows Vista.;518-528;11;Development Paradigms and Software Process;
2009;Narayan Ramasubbu,Rajesh Krishna Balan;The impact of process choice in high maturity environments: An empirical analysis.;529-539;11;Development Paradigms and Software Process;
2009;Tim Menzies,Steve Williams,Barry W. Boehm,Jairus Hihn;How to avoid drastic software process change (using stochastic stability).;540-550;11;Development Paradigms and Software Process;
2009;Shah Rukh Humayoun,Yael Dubinsky,Tiziana Catarci;UEMan: A tool to manage user evaluation in development environments.;551-554;4;Formal Research Demonstrations;Software Development Assistance
2009;Xiaoying Wang,Lu Zhang,Tao Xie,Hong Mei,Jiasu Sun;TranStrL: An automatic need-to-translate string locator for software internationalization.;555-558;4;Formal Research Demonstrations;Software Development Assistance
2009;Ying Zhang,Gang Huang 0001,Nuyun Zhang,Hong Mei;SmartTutor: Creating IDE-based interactive tutorials via editable replay.;559-562;4;Formal Research Demonstrations;Software Development Assistance
2009;Leonardo Mariani,Fabrizio Pastore,Mauro Pezze;A toolset for automated failure analysis.;563-566;4;Testing and Fault Localization;
2009;Jan Wloka,Barbara G. Ryder,Frank Tip;JUnitMX - A change-aware unit testing tool.;567-570;4;Testing and Fault Localization;
2009;Sandro Boccuzzo,Harald C. Gall;CocoViz with ambient audio software exploration.;571-574;4;Program Comprehension;
2009;Christoph Treude,Margaret-Anne D. Storey;ConcernLines: A timeline view of co-occurring concerns.;575-578;4;Program Comprehension;
2009;Georgios Gousios,Diomidis Spinellis;Alitheia Core: An extensible software quality monitoring platform.;579-582;4;Program Comprehension;
2009;Dan Hao,Lingming Zhang,Lu Zhang,Jiasu Sun,Hong Mei;VIDA: Visual interactive debugging.;583-586;4;Concurrency and Debugging;
2009;Eric Knauss,Daniel Lubke,Sebastian Meyer;Feedback-driven requirements engineering: The Heuristic Requirements Assistant.;587-590;4;From Requirements to Architecture;
2009;David Garlan,Bradley R. Schmerl;Ævol: A tool for defining and planning architecture evolution.;591-594;4;From Requirements to Architecture;
2009;Gerardo Canfora,Luigi Cerulo,Massimiliano Di Penta;Ldiff: An enhanced line differencing tool.;595-598;4;Differences and Similarities;
2009;Barthelemy Dagenais,Martin P. Robillard;SemDiff: Analysis and recommendation support for API evolution.;599-602;4;Differences and Similarities;
2009;Elmar Jurgens,Florian Deissenboeck,Benjamin Hummel;CloneDetective - A workbench for clone detection research.;603-606;4;Differences and Similarities;
2009;Severine Sentilles,Anders Pettersson,Dag Nystrom,Thomas Nolte,Paul Pettersson,Ivica Crnkovic;Save-IDE - A tool for design, analysis and implementation of component-based embedded systems.;607-610;4;Components and Features;
2009;Christian Kastner,Thomas Thum,Gunter Saake,Janet Feigenspan,Thomas Leich,Fabian Wielgorz,Sven Apel;FeatureIDE: A tool framework for feature-oriented software development.;611-614;4;Components and Features;
2009;Stefan Henkler,Joel Greenyer,Martin Hirsch,Wilhelm Schafer,Kahtan Alhawash,Tobias Eckardt,Christian Heinzemann,Renate Loffler,Andreas Seibel,Holger Giese;Synthesis of timed behavior from scenarios in the Fujaba Real-Time Tool Suite.;615-618;4;Components and Features;
2009;Quan Z. Sheng,Sam Pohlenz,Jian Yu,Hoi S. Wong,Anne Hee Hiong Ngu,Zakaria Maamar;ContextServ: A platform for rapid and flexible development of context-aware Web services.;619-622;4;Web Services;
2009;Domenico Bianculli,Walter Binder,Mauro Luigi Drago,Carlo Ghezzi;ReMan: A pro-active reputation management infrastructure for composite Web services.;623-626;4;Web Services;
2009;Javier Camara,Jose Antonio Martin,Gwen Salaun,Javier Cubo,Meriem Ouederni,Carlos Canal Velasco,Ernesto Pimentel;ITACA: An integrated toolbox for the automatic composition and adaptation of Web services.;627-630;4;Web Services;
2009;Pamela Zave;Software Engineering for the Next Internet.;1-11;11;Keynote Papers;
2009;Steve McConnell;10 most powerful ideas in software engineering.;12;1;Keynote Papers;
2009;Steven Fraser,Barry W. Boehm,M. Hakan Erdogmus,Magne Jorgensen,Stan Rifkin,Mike Ross;The role of judgment in software estimation.;13-17;5;Panel;
2009;Thomas Bochot,Pierre Virelizier,Helene Waeselynck,Virginie Wiels;Model checking flight control systems: The Airbus experience.;18-27;10;Software Engineering in Practice;Complex Systems
2009;Ji Eun Kim,Oliver Rogalla,Simon Kramer 0003,Arne Hamann;Extracting, specifying and predicting software system properties in component based real-time embedded software development.;28-38;11;Software Engineering in Practice;Complex Systems
2009;Eric Cheung,Thomas M. Smith;Experience with modularity in an advanced teleconferencing service deployment.;39-49;11;Software Engineering in Practice;Complex Systems
2009;Paul Adamczyk,Arturo Zambrano,Federico Balaguer;Refactoring big balls of mud.;50-60;11;Refactoring and Tools;
2009;R. E. Kurt Stirewalt,Spencer Rugaber,Hwa-You Hsu,David Zook;Experience report: Using tools and domain expertise to remediate architectural violations in the LogicBlox software base.;61-70;10;Refactoring and Tools;
2009;Paolo Salvaneschi;Functional abstractions for testing repository-style information systems.;71-80;10;Refactoring and Tools;
2009;Caryna Pinheiro,Frank Maurer,Jonathan Sillito;Improving quality, one process change at a time.;81-90;10;Agile and Process;
2009;Mikio Ikoma,Masayuki Ooshima,Takahiro Tanida,Michiko Oba,Sanshiro Sakai;Using a validation model to measure the agility of software development in a large software development organization.;91-100;10;Agile and Process;
2009;Sreeranga P. Rajan,Oksana Tkachuk,Mukul R. Prasad,Indradeep Ghosh,Nitin Goel,Tadahiro Uehara;WEAVE: WEb Applications Validation Environment.;101-111;11;Agile and Process;
2009;Antti Jaaskelainen,Mika Katara,Antti Kervinen,Mika Maunumaa,Tuula Paakkonen,Tommi Takala,Heikki Virtanen;Automatic GUI test generation for smartphone applications - an evaluation.;112-122;11;Testing (Telecom);
2009;Evelyn Moritz;Case study: How analysis of customer found defects can be used by system test to improve quality.;123-129;7;Testing (Telecom);
2009;Ayse Morali,Emmanuele Zambon,Siv Hilde Houmb,Karin Sallhammar,Sandro Etalle;Extended eTVRA vs. security checklist: Experiences in a value-web.;130-140;11;Testing (Telecom);
2009;Andrew L. King,Sam Procter,Daniel Andresen,John Hatcliff,Steve Warren,William Spees,Raoul Praful Jetley,Paul L. Jones,Sandy Weininger;An open test bed for medical device integration and coordination.;141-151;11;Testing (Medical);
2009;Fergal McCaffery,John Burton,Ita Richardson;Improving software Risk Management in a Medical Device Company.;152-162;11;Testing (Medical);
2009;Massimo Pascale,Marcello Roselli,Umberto Rugani,Cesare Bartolini,Antonia Bertolino,Francesca Lonetti,Eda Marchetti,Andrea Polini;Automated testing of healthcare document transformations in the PICASSO interoperability platform.;163-171;9;Testing (Medical);
2009;Tilman Holschuh,Markus Pauser,Kim Sebastian Herzig,Thomas Zimmermann,Rahul Premraj,Andreas Zeller;Predicting defects in SAP Java code: An experience report.;172-181;10;Predicting Defects and SEIP-Keynote on Video Game Industry;
2009;Andrew Brownsword;Reflecting on development processes in the video game industry.;182;1;Predicting Defects and SEIP-Keynote on Video Game Industry;
2009;David Kawrykow,Martin P. Robillard;Detecting inefficient API usage.;183-186;4;New Ideas and Emerging Results;
2009;Slinger Jansen,Anthony Finkelstein,Sjaak Brinkkemper;A sense of community: A research agenda for software ecosystems.;187-190;4;New Ideas and Emerging Results;
2009;Vladimir Blagojevic,Wim Codenie,Jessie Dedecker,Nicolas Gonzalez-Deleito,Jeroen Deleu,Nick Boucart;Murphy: A Web 2.0 approach for proactive risk management in hardware/software co-design.;191-194;4;New Ideas and Emerging Results;
2009;Oliver Arafat,Dirk Riehle;The comment density of open source software code.;195-198;4;New Ideas and Emerging Results;
2009;Christos Kloukinas;Better abstractions for reusable components & architectures.;199-202;4;New Ideas and Emerging Results;
2009;Yoram Adler,Eitan Farchi,Moshe Klausner,Dan Pelleg,Orna Raz,Moran Shochat,Shmuel Ur,Aviad Zlotnick;Automated substring hole analysis.;203-206;4;New Ideas and Emerging Results;
2009;Jordi Cabot,Steve M. Easterbrook,Jennifer Horkoff,Lysanne Lessard,Sotirios Liaskos,Jose-Norberto Mazon;Integrating sustainability in decision-making processes: A modelling strategy.;207-210;4;New Ideas and Emerging Results;
2009;Stephen Kell;Configuration and adaptation of binary software components.;211-214;4;New Ideas and Emerging Results;
2009;Stanislaw Jarzabek,Hongyu Zhang,Youpeng Lee,Yinxing Xue,Naveed Shaikh;Increasing usability of preprocessing for feature management in product lines with queries.;215-218;4;New Ideas and Emerging Results;
2009;Wujie Zheng,Michael R. Lyu,Tao Xie;Test selection for result inspection via mining predicate rules.;219-222;4;New Ideas and Emerging Results;
2009;Lile Hattori,Michele Lanza;An environment for synchronous software development.;223-226;4;New Ideas and Emerging Results;
2009;Andreas Classen,Patrick Heymans,Thein Than Tun,Bashar Nuseibeh;Towards safer composition.;227-230;4;New Ideas and Emerging Results;
2009;Iris Groher,Alexander Egyed;Selective backtracking of model changes.;231-234;4;New Ideas and Emerging Results;
2009;Soichiro Hidaka,Zhenjiang Hu,Hiroyuki Kato,Keisuke Nakano;A compositional approach to bidirectional model transformation.;235-238;4;New Ideas and Emerging Results;
2009;Deepak Dhungana,Iris Groher;Genetics as a role model for software variability management.;239-242;4;New Ideas and Emerging Results;
2009;David Lievens,Tim Walsh,Dominik Dahlem,William Harrison;Promoting evolution by abstracting over implementation structure.;243-246;4;New Ideas and Emerging Results;
2009;Thomas Zimmermann,Rahul Premraj,Jonathan Sillito,Silvia Breu;Improving bug tracking systems.;247-250;4;New Ideas and Emerging Results;
2009;Alberto Siena,Anna Perini,Angelo Susi,John Mylopoulos;Towards a framework for law-compliant software requirements.;251-254;4;New Ideas and Emerging Results;
2009;Joao Brunet,Dalton Serey Guerrero,Jorge Cesar Abrantes de Figueiredo;Design tests: An approach to programmatically check your code against design rules.;255-258;4;New Ideas and Emerging Results;
2009;Andrew Sutherland,Gina Danielle Venolia;Can peer code reviews be exploited for later information needs?;259-262;4;New Ideas and Emerging Results;
2009;Andrew Begel,Robert DeLine;Codebook: Social networking over code.;263-266;4;New Ideas and Emerging Results;
2009;Nigamanth Sridhar,Jason O. Hallstrom;A specification idiom for reactive systems.;267-270;4;New Ideas and Emerging Results;
2009;Brian Dougherty,Jules White,Jaiganesh Balasubramanian,Chris Thompson,Douglas C. Schmidt;Deployment automation with BLITZ.;271-274;4;New Ideas and Emerging Results;
2009;Sam Malek,Roshanak Roshandel,David Kilgore,Ibrahim Elhag;Improving the reliability of mobile software systems through continuous analysis and proactive reconfiguration.;275-278;4;New Ideas and Emerging Results;
2009;Ana Milanova,Yin Liu;Static ownership inference for reasoning against concurrency errors.;279-282;4;New Ideas and Emerging Results;
2009;Denys Poshyvanyk,Mark Grechanik;Creating and evolving software by searching, selecting and synthesizing relevant source code.;283-286;4;New Ideas and Emerging Results;
2009;James A. Miller,Remo Ferrari,Nazim H. Madhavji;How do system architectures affect software requirements?;287-290;4;New Ideas and Emerging Results;
2009;En Ye,Lev A. Neiman,Hiep Q. Dinh,Chang Liu;SecondWATCH: A workspace awareness tool based on a 3-D virtual world.;291-294;4;New Ideas and Emerging Results;
2009;Abram Hindle,Michael W. Godfrey,Richard C. Holt;Mining recurrent activities: Fourier analysis of change events.;295-298;4;New Ideas and Emerging Results;
2009;Cleidson Ronald Botelho de Souza,David Leonardo M. Bentolila;Automatic evaluation of API usability using complexity metrics and visualizations.;299-302;4;New Ideas and Emerging Results;
2009;R. E. Kurt Stirewalt,Laura K. Dillon,Eileen Kraemer;The inference validity problem in legal discovery.;303-306;4;New Ideas and Emerging Results;
2009;Marius Nita,David Notkin;White-box approaches for improved testing and analysis of configurable software systems.;307-310;4;New Ideas and Emerging Results;
2009;Kunal Taneja,Tao Xie,Nikolai Tillmann,Jonathan de Halleux,Wolfram Schulte;Guided path exploration for regression test generation.;311-314;4;New Ideas and Emerging Results;
2009;Ivo Krka,George Edwards,Yuriy Brun,Nenad Medvidovic;From system specifications to component behavioral models.;315-318;4;New Ideas and Emerging Results;
2009;Frank Otto,Victor Pankratius,Walter F. Tichy;High-level multicore programming with XJava.;319-322;4;New Ideas and Emerging Results;
2009;Luciano Baresi,Elisabetta Di Nitto,Sam Guinea,Schahram Dustdar;Multi-dimensional service compositions.;323-326;4;New Ideas and Emerging Results;
2009;Michel Wermelinger,Yijun Yu,Markus Strohmaier;Using formal concept analysis to construct and visualise hierarchies of socio-technical relations.;327-330;4;New Ideas and Emerging Results;
2009;Antonio Carzaniga,Giovanni Denaro,Mauro Pezze,Jacky Estublier,Alexander L. Wolf;Toward deeply adaptive societies of digital systems.;331-334;4;New Ideas and Emerging Results;
2009;Luigi Troiano,Gerardo Canfora;The marketplace of user interface real estate.;335-338;4;New Ideas and Emerging Results;
2009;Ritu Arora,Purushotham Bangalore;A framework for raising the level of abstraction of explicit parallelization.;339-342;4;Doctoral Symposium;
2009;Thomas Aschauer;Towards a multi-level modeling language for testbed automation systems.;343-346;4;Doctoral Symposium;
2009;Basil Becker;Towards safety guarantees for service-oriented systems.;347-350;4;Doctoral Symposium;
2009;Leslie Bradley,Kevin McDaid;Using Bayesian statistical methods to determine the level of error in large spreadsheets.;351-354;4;Doctoral Symposium;
2009;Petra Broschy;Improving conflict resolution in model versioning systems.;355-358;4;Doctoral Symposium;
2009;Mathias Frisch,Raimund Dachselt;Towards a framework for supporting software modeling activities through novel interaction and visualization techniques.;359-362;4;Doctoral Symposium;
2009;Elspeth Golden;Early-stage software design for usability.;363-366;4;Doctoral Symposium;
2009;Arnaud Hubaux,Patrick Heymans;On the evaluation and improvement of feature-based configuration techniques in software product lines.;367-370;4;Doctoral Symposium;
2009;Lijun Mei;A context-aware orchestrating and choreographic test framework for service-oriented applications.;371-374;4;Doctoral Symposium;
2009;Xiao Qu;Configuration aware prioritization techniques in regression testing.;375-378;4;Doctoral Symposium;
2009;Raul A. Santelices,Mary Jean Harrold;Automated scalable test-suite augmentation for evolving software.;379-382;4;Doctoral Symposium;
2009;Carlos Eduardo da Silva,Rogerio de Lemos;Towards the use of dynamic workflows for coordinating self-adaptation of software systems.;383-386;4;Doctoral Symposium;
2009;Basem Suleiman,Vladimir Tosic,D. Ross Jeffery,Yan Liu;Models and algorithms for business value-driven adaptation of business processes and software infrastructure.;387-390;4;Doctoral Symposium;
2009;Richard Wettel;Visual exploration of large-scale evolving software.;391-394;4;Doctoral Symposium;
2009;Andreas Windisch;Search-based testing of complex simulink models containing stateflow diagrams.;395-398;4;Doctoral Symposium;
2009;Danny Dig,John Marrero,Michael D. Ernst;Concurrencer: A tool for retrofitting concurrency into sequential java applications via concurrent libraries.;399-400;2;Informal Research Demonstrations;
2009;Michael Barnett,Manuel Fahndrich,Peli de Halleux,Francesco Logozzo,Nikolai Tillmann;Exploiting the synergy between automated-test-generation and programming-by-contract.;401-402;2;Informal Research Demonstrations;
2009;Thomas A. Ball,Sebastian Burckhardt,Jonathan de Halleux,Madanlal Musuvathi,Shaz Qadeer;Deconstructing concurrency heisenbugs.;403-404;2;Informal Research Demonstrations;
2009;Larry Maccherone,Anita Sarma,Patrick Wagstrom,James D. Herbsleb;Tesseract: Interactive environment for exploration of project relationships.;405-406;2;Informal Research Demonstrations;
2009;Steven P. Reiss;DYVISE: Performance analysis of production systems research demonstration.;407-408;2;Informal Research Demonstrations;
2009;Watcharin Leungwattanakit,Cyrille Valentin Artho,Masami Hagiya,Yoshinori Tanabe,Mitsuharu Yamamoto;Verifying networked programs using a model checker extension.;409-410;2;Informal Research Demonstrations;
2009;Mauro Pezze,Jochen Wuttke;LuMiNous - model-driven assertion generation for runtime failure detection.;411-412;2;Informal Research Demonstrations;
2009;Avi Yaeli,Alex Kofman,Yael Dubinsky;Software development governor: Automating governance in software development environments.;413-414;2;Informal Research Demonstrations;
2009;Holger Schackmann,Martin Jansen,Christoph Lischkowitz,Horst Lichter;QMetric - a metric tool suite for the evaluation of software process data.;415-416;2;Informal Research Demonstrations;
2009;Gautam Shroff,Puneet Agarwal,Premkumar T. Devanbu;InstantApps: A WYSIWYG model driven interpreter for web applications.;417-418;2;Informal Research Demonstrations;
2009;Ankit Goel,Bikram Sengupta,Abhik Roychoudhury;Footprinter: Round-trip engineering via scenario and state based models.;419-420;2;Informal Research Demonstrations;
2009;Giovanni Denaro,Alessandra Gorla,Mauro Pezze;DaTeC: Contextual data flow testing of java classes.;421-422;2;Informal Research Demonstrations;
2009;Harold Ossher,Rachel K. E. Bellamy,David Amid,Ateret Anaby-Tavor,Matthew Callery,Michael Desmond,Jacqueline de Vries,Amit Fisher,Thomas Frauenhofer,Sophia Krasikov,Ian Simmonds,Calvin Swart;Business insight toolkit: Flexible pre-requirements modeling.;423-424;2;Informal Research Demonstrations;
2009;Patrick Mader,Orlena Gotel,Ilka Philippow;Semi-automated traceability maintenance: An architectural overview of traceMaintainer.;425-426;2;Informal Research Demonstrations;
2009;Youssef Hanna,Hridesh Rajan;Slede: Framework for automatic verification of sensor network security protocol implementations.;427-428;2;Informal Research Demonstrations;
2009;Markus Dahlweid,Michal Moskal,Thomas Santen,Stephan Tobies,Wolfram Schulte;VCC: Contract-based modular verification of concurrent C.;429-430;2;Informal Research Demonstrations;
2009;Gunter Mussbacher,Daniel Amyot;Goal and scenario modeling, analysis, and transformation with jUCMNav.;431-432;2;Informal Research Demonstrations;
2009;Andrew L. King,Sam Procter,Daniel Andresen,John Hatcliff,Steve Warren,William Spees,Raoul Praful Jetley,Paul L. Jones,Sandy Weininger;Demonstration of a medical device integration and coordination framework.;433-434;2;Informal Research Demonstrations;
2009;Shang-Wen Cheng,David Garlan,Bradley R. Schmerl;RAIDE for engineering architecture-based self-adaptive systems.;435-436;2;Informal Research Demonstrations;
2009;Tung Thanh Nguyen,Hoan Anh Nguyen,Nam H. Pham,Jafar M. Al-Kofahi,Tien N. Nguyen;ClemanX: Incremental clone detection tool for evolving software.;437-438;2;Informal Research Demonstrations;
2009;Ryuji Shimada,Yasuhiro Hayase,Makoto Ichii,Makoto Matsushita,Katsuro Inoue;A-SCORE: Automatic software component recommendation using coding context.;439-440;2;Informal Research Demonstrations;
2009;Glauco de Figueiredo Carneiro,Manoel Gomes de Mendonca Neto,Rodrigo Chaves Magnavita;An experimental platform to characterize software comprehension activities supported by visualization.;441-442;2;Informal Research Demonstrations;
2009;Joao M. Fernandes,Ricardo Jorge Machado,Luis da Cunha Lamb,Flavio Rech Wagner;Model-based Methodologies for Pervasive and Embedded Software.;443-444;2;Workshops;
2009;Sushil Krishna Bajracharya,Adrian Kuhn,Yunwen Ye;SUITE 2009: First international workshop on search-driven development - users, infrastructure, tools and evaluation.;445-446;2;Workshops;
2009;Patricia Lago,Paris Avgeriou,Philippe Kruchten;Fourth international workshop on sharing and reusing architectural knowledge (SHARK 2009).;447-448;2;Workshops;
2009;Barry W. Boehm,Sunita Chulani,June M. Verner,Bernard Wong;Seventh workshop on Software Quality.;449-450;2;Workshops;
2009;Cleidson Ronald Botelho de Souza,Helen C. Sharp,Yvonne Dittrich,Janice A. Singer;Cooperative and human aspects of software engineering (CHASE 2009).;451-452;2;Workshops;
2009;Robert Baillargeon,Bernhard Rumpe,Steven Volkel,Robert B. France,Geri Georg,Steffen Zschaler;Modeling in Software Engineering (MiSE 09).;453-454;2;Workshops;
2009;Yael Dubinsky,Philippe Kruchten;2nd workshop on software development governance (SDG).;455-456;2;Workshops;
2009;Jurgen Ebert,Udo Kelter,Tarja Systa;Workshop on comparison and versioning of software models (CVSM 2009).;457-458;2;Workshops;
2009;Dimitris Dranidis,Stephen P. Masticola,Paul A. Strooper;Expanding, theory, and practice: Report on the 4th International Workshop on the Automation of Software Test.;459-460;2;Workshops;
2009;Elisabetta Di Nitto,Schahram Dustdar;Principles of engineering service oriented systems.;461-462;2;Workshops;
2009;Betty H. C. Cheng,Rogerio de Lemos,David Garlan,Holger Giese,Marin Litoiu,Jeffrey N. Magee,Hausi A. Muller,Richard N. Taylor;SEAMS 2009: Software engineering for adaptive and self-managing systems.;463-464;2;Workshops;
2009;Leon J. Osterweil,Barbara Paech;Workshop on software Engineering in Health Care (SEHC).;465;1;Workshops;
2009;Ruzanna Chitchyan,Monica Pinto,Safoora Shakil Khan;Early Aspects at ICSE 2009: Workshop on aspect-oriented requirements engineering and architecture design.;466-467;2;Workshops;
2009;Andrea Capiluppi,Gregorio Robles;Second international workshop on emerging trends in Free/Libre/Open Source Software research and development - FLOSS09.;468-469;2;Workshops;
2009;Adam A. Porter,Victor Pankratius,Lawrence G. Votta;International workshop on multicore software engineering (IWMSE 2009).;470-471;2;Workshops;
2009;Giuliano Antoniol,Rocco Oliveto,Denys Poshyvanyk;5th international workshop on Traceability in Emerging Forms of Software Engineering (TEFSE 2009).;472-473;2;Workshops;
2009;Brian Berenbach,Leonard J. Bass;Leadership and management in software architecture.;474-475;2;Workshops;
2009;Marcelo Cataldo,Steve M. Easterbrook,Daniela E. Herlea,James D. Herbsleb,Premkumar T. Devanbu,Audris Mockus;2nd international workshop on socio-technical congruence (STC 2009).;476-477;2;Workshops;
2009;Bart De Win,Seok-Won Lee,Mattia Monga;The 5th international workshop on software engineering for secure systems (SESS'09).;478-479;2;Workshops;
2009;Ademar Aguiar,Uri Dekel,Paulo Merson;Wikis4SE'2009: Wikis for Software Engineering.;480-481;2;Workshops;
2009;Kamal Bhattacharya,Martin Bichler,Stefan Tai;ICSE Cloud 09: First international workshop on software engineering challenges for Cloud Computing.;482-483;2;Workshops;
2009;Jeffrey Carver;SE-CSE 2009: The second international workshop on software engineering for Computational Science and Engineering.;484-485;2;Workshops;
2009;Leonard J. Bass,Grace A. Lewis,Dennis B. Smith,Brad A. Myers;SEEUP 2009: Workshop on software engineering foundations for end-user programming.;486;1;Workshops;
2009;Mehdi Jazayeri,Dino Mandrioli;SCORE: The first student Contest in Software Engineering.;487-488;2;Score;
2008;Christopher Scaffidi,Brad A. Myers,Mary M. Shaw;Topes: reusable abstractions for validating data.;1-10;10;Software tools;
2008;Steven P. Reiss;Tracking source locations.;11-20;10;Software tools;
2008;Brian de Alwis,Gail C. Murphy;Answering conceptual queries with Ferret.;21-30;10;Software tools;
2008;Lars Grunske;Specification patterns for probabilistic quality properties.;31-40;10;Specification I;
2008;German E. Sibay,Sebastian Uchitel,Victor A. Braberman;Existential live sequence charts revisited.;41-50;10;Specification I;
2008;Mark Gabel,Zhendong Su;Symbolic mining of temporal specifications.;51-60;10;Specification I;
2008;Heng Lu,Wing Kwong Chan,T. H. Tse;Testing pervasive software in the presence of context inconsistency resolution services.;61-70;10;Testing I;
2008;Ilinca Ciupa,Andreas Leitner,Manuel Oriol,Bertrand Meyer;ARTOO: adaptive random testing for object-oriented software.;71-80;10;Testing I;
2008;Cemal Yilmaz,Amit M. Paradkar,Clay Williams;Time will tell: fault localization using time spectra.;81-90;10;Testing I;
2008;Kevin J. Hoffman,Patrick Th. Eugster;Towards reusable components with aspects: an empirical study on modularity and obliviousness.;91-100;10;Components & reuse;
2008;Sylvain Sicard,Fabienne Boyer,Noel De Palma;Using components for architecture-based management: the self-repair case.;101-110;10;Components & reuse;
2008;Leslie Cheung,Roshanak Roshandel,Nenad Medvidovic,Leana Golubchik;Early prediction of software component reliability.;111-120;10;Components & reuse;
2008;Jonathan P. Whittle,Duminda Wijesekera,Mark Hartong;Executable misuse cases for modeling security concerns.;121-130;10;Specification II;
2008;Sriram Sankaranarayanan,Franjo Ivancic,Aarti Gupta;Mining library specifications using inductive logic programming.;131-140;10;Specification II;
2008;Jinjun Chen,Yun Yang;Temporal dependency based checkpoint selection for dynamic verification of fixed-time constraints in grid workflow systems.;141-150;10;Specification II;
2008;Guoqing (Harry) Xu,Atanas Rountev;Precise memory leak detection for java software using container profiling.;151-160;10;Testing II;
2008;Ajitha Rajan,Michael W. Whalen,Mats Per Erik Heimdahl;The effect of program and model structure on mc/dc test adequacy coverage.;161-170;10;Testing II;
2008;Gary Wassermann,Zhendong Su;Static detection of cross-site scripting vulnerabilities.;171-180;10;Testing II;
2008;Raimund Moser,Witold Pedrycz,Giancarlo Succi;A comparative analysis of the efficiency of change metrics and static code attributes for defect prediction.;181-190;10;Empirical software engineering;
2008;Jonathan Lung,Jorge Aranda,Steve M. Easterbrook,Gregory V. Wilson;On the difficulty of replicating human subjects studies in software engineering.;191-200;10;Empirical software engineering;
2008;Yanbing Yu,James A. Jones,Mary Jean Harrold;An empirical study of the effects of test-suite reduction on fault localization.;201-210;10;Empirical software engineering;
2008;Domagoj Babic,Alan J. Hu;Calysto: scalable and precise extended static checking.;211-220;10;Program analysis;
2008;Feng Chen,Traian-Florin Serbanuta,Grigore Rosu;jPredictor: a predictive runtime analysis tool for java.;221-230;10;Program analysis;
2008;Christian Hammer,Julian Dolby,Mandana Vaziri,Frank Tip;Dynamic detection of atomic-set-serializability violations.;231-240;10;Program analysis;
2008;Cleidson Ronald Botelho de Souza,David F. Redmiles;An empirical study of software developers' management of dependencies and changes.;241-250;10;Empirical software process;
2008;Margaret-Anne D. Storey,Jody Ryall,R. Ian Bull,Del Myers,Janice A. Singer;TODO or to bug: exploring how task annotations play a role in the work practices of software developers.;251-260;10;Empirical software process;
2008;Eduardo Magno Lages Figueiredo,Nelio Cacho,Claudio Sant'Anna,Mario Monteiro,Uira Kulesza,Alessandro Garcia,Sergio Soares,Fabiano Cutigi Ferrari,Safoora Shakil Khan,Fernando Castor Filho,Francisco Dantas de Medeiros Neto;Evolving software product lines with aspects: an empirical study on design stability.;261-270;10;Empirical software process;
2008;Chunqing Chen,Jin Song Dong,Jun Sun;A verification system for timed interval calculus.;271-280;10;Formal analysis;
2008;Christoph Csallner,Nikolai Tillmann,Yannis Smaragdakis;DySy: dynamic symbolic execution for invariant inference.;281-290;10;Formal analysis;
2008;Steven Lauterburg,Ahmed Sobeih,Darko Marinov,Mahesh Viswanathan;Incremental state-space exploration for programs with dynamically allocated data.;291-300;10;Formal analysis;
2008;Andy Ko,Brad A. Myers;Debugging reinvented: asking and answering why and why not questions about program behavior.;301-310;10;Program comprehension;
2008;Christian Kastner,Sven Apel,Martin Kuhlemann;Granularity in software product lines.;311-320;10;Program comprehension;
2008;Mark Gabel,Lingxiao Jiang,Zhendong Su;Scalable detection of semantic clones.;321-330;10;Program comprehension;
2008;Gursimran S. Walia,Jeffrey Carver,Nachiappan Nagappan;The effect of the number of inspectors on the defect estimates produced by capture-recapture models.;331-340;10;Empirical testing & analysis;
2008;Joseph R. Ruthruff,John Penix,J. David Morgenthaler,Sebastian G. Elbaum,Gregg Rothermel;Predicting accurate and actionable static analysis warnings: an experimental approach.;341-350;10;Empirical testing & analysis;
2008;Akbar Siami Namin,Jamie Andrews,Duncan J. Murdoch;Sufficient mutation operators for measuring test effectiveness.;351-360;10;Empirical testing & analysis;
2008;Filippo Ricca,Massimiliano Di Penta,Marco Torchiano,Paolo Tonella,Mariano Ceccato,Corrado Aaron Visaggio;Are fit tables really talking?: a series of experiments to understand whether fit tables are useful during evolution tasks.;361-370;10;Software process;
2008;Lijun Mei,Wing Kwong Chan,T. H. Tse;Data flow testing of service-oriented workflow applications.;371-380;10;Software process;
2008;Diomidis Spinellis;A tale of four kernels.;381-390;10;Software process;
2008;Michael Eichberg,Sven Kloppenburg,Karl Klose,Mira Mezini;Defining and continuous checking of structural program dependencies.;391-400;10;Architecture;
2008;Thomas Goldschmidt,Ralf H. Reussner,Jochen Winzen;A case study evaluation of maintainability and performance of persistency techniques.;401-410;10;Architecture;
2008;Sunny Wong,Yuanfang Cai,Yuanyuan Song,Kevin J. Sullivan;Automatic modularity conformance checking.;411-420;10;Architecture;
2008;Emerson R. Murphy-Hill,Andrew P. Black;Breaking the barriers to successful refactoring: observations and tools for extract method.;421-430;10;Refactoring;
2008;Hannes Kegel,Friedrich Steimann;Systematically refactoring inheritance to delegation in java.;431-440;10;Refactoring;
2008;Danny Dig,Stas Negara,Vibhu Mohindra,Ralph E. Johnson;ReBA: refactoring-aware binary adaptation of evolving libraries.;441-450;10;Refactoring;
2008;Andy Maule,Wolfgang Emmerich,David S. Rosenblum;Impact analysis of database schema changes.;451-460;10;Evolution;
2008;Xiaoying Wang,Lu Zhang,Tao Xie,John Anvik,Jiasu Sun;An approach to detecting duplicate bug reports using natural language and execution information.;461-470;10;Evolution;
2008;Thorsten Schafer,Jan Jonas,Mira Mezini;Mining framework usage changes from instantiation code.;471-480;10;Frameworks;
2008;Barthelemy Dagenais,Martin P. Robillard;Recommending adaptive changes for framework evolution.;481-490;10;Frameworks;
2008;Yanyan Wang,Antonio Carzaniga,Alexander L. Wolf;Four enhancements to automateddistributed system experimentation methods.;491-500;10;Frameworks;
2008;Davide Lorenzoli,Leonardo Mariani,Mauro Pezze;Automatic generation of software behavioral models.;501-510;10;Models;
2008;Xavier Blanc,Isabelle Mounier,Alix Mougenot,Tom Mens;Detecting model inconsistency through operation-based model construction.;511-520;10;Models;
2008;Nachiappan Nagappan,Brendan Murphy,Victor R. Basili;The influence of organizational structure on software quality: an empirical case study.;521-530;10;Software engineering economics;
2008;Thomas Zimmermann,Nachiappan Nagappan;Predicting defects using network analysis on dependency graphs.;531-540;10;Software engineering economics;
2008;Peter C. Rigby,Daniel M. German,Margaret-Anne D. Storey;Open source software peer review practices: a case study of the apache server.;541-550;10;Software engineering economics;
2008;Fergal McCaffery,Minna Pikkarainen,Ita Richardson;Ahaa --agile, hybrid assessment method for automotive, safety critical smes.;551-560;10;Process & models;
2008;Oliver Niggemann,Joachim Stroop;Models for model's sake: why explicit system models are also an end to themselves.;561-570;10;Process & models;
2008;Serena Fritsch,Aline Senart,Douglas C. Schmidt,Siobhan Clarke;Time-bounded adaptation for automotive system software.;571-580;10;Process & models;
2008;Ulrich Freund;Mulit-level system integration based on AUTOSAR.;581-582;2;Architecture & design;
2008;Stefan Bienk;Asam odx: syntax as semantics.;583-592;10;Architecture & design;
2008;Tim Reichert,Edmund Klaus,Wolfgang Schoch,Ansgar Meroth,Dominikus Herzberg;A language for advanced protocol analysis in automotive networks.;593-602;10;Quality assurance;
2008;Florian Deissenboeck,Benjamin Hummel,Elmar Jurgens,Bernhard Schatz,Stefan Wagner,Jean-Francois Girard,Stefan Teuchert;Clone detection in automotive model-based development.;603-612;10;Quality assurance;
2008;Maurice H. ter Beek,Stefania Gnesi,Nora Koch,Franco Mazzanti;Formal verification of an automotive scenario in service-oriented computing.;613-622;10;Quality assurance;
2008;Bin Chen,George S. Avrunin,Elizabeth A. Henneman,Lori A. Clarke,Leon J. Osterweil,Philip L. Henneman;Analyzing medical processes.;623-632;10;Requirements engineering;
2008;Barbara Paech,Thomas Wetter;Rational quality requirements for medical software.;633-638;6;Requirements engineering;
2008;Jorg Dorr,Daniel Kerkow,Dennis Landmann,Christian Graf,Christian Denger,Anne Hoffmann;Supporting requirements engineering for medical products: early consideration of user-perceived quality.;639-648;10;Requirements engineering;
2008;Gerald Bortis;Experiences with Mirth: an open source health care integration engine.;649-652;4;Architecture;
2008;Danny Ammon,Dirk Hoffmann,Tobias Jakob,Ekkehard Finkeissen;Developing an architecture of a knowledge-based electronic patient record.;653-660;8;Architecture;
2008;Holger Scherl,Stefan Hoppe,Markus Kowarschik,Joachim Hornegger;Design and implementation of the software architecture for a 3-D reconstruction system in medical imaging.;661-668;8;Architecture;
2008;Marlon E. R. Vieira,Xiping Song,Gilberto Matos,Stephan Storck,Rajanikanth Tanikella,William M. Hasling;Applying model-based testing to healthcare products: preliminary experiences.;669-672;4;Quality;
2008;Liang Xiao 0002,Paul H. Lewis,Alexander Gibb;Developing a security protocol for a distributed decision support system in a healthcare environment.;673-682;10;Quality;
2008;Jan Jurjens,Jorg Schreck,Peter Bartmann;Model-based security analysis for mobile communications.;683-692;10;Modeling & Architecture;
2008;Barry Long,Jurgen Dingel,T. C. Nicholas Graham;Experience applying the SPIN model checker to an industrial telecommunications system.;693-702;10;Modeling & Architecture;
2008;Andreas Scholz,Christian Buckl,Alfons Kemper,Alois Knoll,Jorg Heuer,Martin Winter;WS-AMUSE - web service architecture for multimedia services.;703-712;10;Modeling & Architecture;
2008;Audris Mockus,David M. Weiss;Interval quality: relating customer-perceived quality to process quality.;723-732;10;Quality;
2008;Clauirton de Siebra,Paulo H. R. Costa,Andre Luis M. Santos,Fabio Q. B. da Silva;Improving the handsets network test process via DMAIC concepts.;733-740;8;Quality;
2008;Bartosz Michalik,Jerzy R. Nawrocki,Miroslaw Ochodek;3-step knowledge transition: a case study on architecture evaluation.;741-748;8;Extending the frontiers in SE education;
2008;Jordi Cabot,Francisco Duran,Nathalie Moreno Vergara,Antonio Vallecillo Moreno,Jose Raul Romero;From programming to modeling: our experience with a distributed software engineering course.;749-758;10;Extending the frontiers in SE education;
2008;Scott D. Fleming,Eileen Kraemer,R. E. Kurt Stirewalt,Shaohua Xie,Laura K. Dillon;A study of student strategies for the corrective maintenance of concurrent software.;759-768;10;Extending the frontiers in SE education;
2008;Kai Stapel,Daniel Lubke,Eric Knauss;Best practices in extreme programming course design.;769-776;8;SE education practices;
2008;Gerald C. Gannod,Janet E. Burge,Michael T. Helmick;Using the inverted classroom to teach software engineering.;777-786;10;SE education practices;
2008;Michele Lanza,Amy L. Murphy,Romain Robbes,Mircea Lungu,Paolo Bonzini;A teamwork-based approach to programming fundamentals with scheme, smalltalk & java.;787-790;4;SE education practices;
2008;Birgit R. Krogstie;Power through brokering: open source community participation in software engineering student projects.;791-800;10;Inter- and intradisciplinary SE foundations;
2008;Christoph Denzler,Dominik Gruntz;Design patterns: between programming and software design.;801-804;4;Inter- and intradisciplinary SE foundations;
2008;Uwe Dumslaff;Change management: from knowledge about innovative SE to capabilities for industrial SE projects.;805-806;2;Innovatin in SE education;
2008;Carsten Amelunxen,Felix Klar,Alexander Konigs,Tobias Rotschke,Andy Schurr;Metamodel-based tool integration with moflon.;807-810;4;Model-driven development and model analysis I;
2008;Nelly Bencomo,Paul Grace,Carlos A. Flores-Cortes,Danny Hughes,Gordon S. Blair;Genie: supporting the model driven development of reflective, component-based adaptive systems.;811-814;4;Model-driven development and model analysis I;
2008;Mehrdad Sabetzadeh,Shiva Nejati,Steve M. Easterbrook,Marsha Chechik;Global consistency checking of distributed models with TReMer+.;815-818;4;Model-driven development and model analysis I;
2008;John C. Grundy,John G. Hosking,Jun Huh,Karen Na-Liu Li;Marama: an eclipse meta-toolset for generating multi-view environments.;819-822;4;Model-driven development & model analysis II;
2008;Tobias Reinhard,Silvio Meier,Reinhard Stoiber,Christina Cramer,Martin Glinz;Tool support for the navigation in graphical models.;823-826;4;Model-driven development & model analysis II;
2008;Panuchart Bunyakiati,Anthony Finkelstein,James Skene,Clovis Chapman;Using JULE to generate a compliance test suite for the UML standard.;827-830;4;Model-driven development & model analysis II;
2008;Sven Wenzel,Udo Kelter;Analyzing model evolution.;831-834;4;Traceability;
2008;Janet E. Burge,David C. Brown;SEURAT: integrated rationale management.;835-838;4;Traceability;
2008;Andrea De Lucia,Rocco Oliveto,Genoveffa Tortora;Adams re-trace: traceability link recovery via latent semantic indexing.;839-842;4;Traceability;
2008;Ekwa Duala-Ekoko,Martin P. Robillard;Clonetracker: tool support for code clone management.;843-846;4;Code management;
2008;Romain Robbes,Michele Lanza;SpyWare: a change-aware development toolset.;847-850;4;Code management;
2008;Peng Li,Eric Wohlstadter;Dynamic round-trip GUI maintenance.;851-854;4;Code management;
2008;Bassem Elkarablieh,Sarfraz Khurshid;Juzi: a tool for repairing complex data structures.;855-858;4;Verification & validation;
2008;Muhammad Zubair Malik,Aman Pervaiz,Engin Uzuncaova,Sarfraz Khurshid;Deryaft: a tool for generating representation invariants of structurally complex data.;859-862;4;Verification & validation;
2008;Tihomir Gvero,Milos Gligoric,Steven Lauterburg,Marcelo d'Amorim,Darko Marinov,Sarfraz Khurshid;State extensions for java pathfinder.;863-866;4;Verification & validation;
2008;Christopher Scaffidi,Brad A. Myers,Mary M. Shaw;Tool support for data validation by end-user programmers.;867-870;4;Validation;
2008;Jin Guo,King Chun Foo,Liliane Barbour,Ying Zou;A business process explorer: recovering and visualizing e-commerce business processes.;871-874;4;Validation;
2008;Sebastian Hohn,Jan Jurjens;Rubacon: automated support for model-based compliance engineering.;875-878;4;Validation;
2007;Matthew B. Dwyer,Sebastian G. Elbaum,Suzette Person,Rahul Purandare;Parallel Randomized State-Space Search.;3-12;10;Research Papers;Program Analysis I
2007;Fadi A. Zaraket,Adnan Aziz,Sarfraz Khurshid;Sequential Circuits for Relational Analysis.;13-22;10;Research Papers;Program Analysis I
2007;Patrice Chalin;A Sound Assertion Semantics for the Dependable Systems Evolution Verifying Compiler.;23-33;11;Research Papers;Program Analysis I
2007;Sebastian Uchitel,Greg Brunet,Marsha Chechik;Behaviour Model Synthesis from Properties and Scenarios.;34-43;10;Models;
2007;Salvador Trujillo,Don S. Batory,Oscar Diaz;Feature Oriented Model Driven Development: A Case Study for Portlets.;44-53;10;Models;
2007;Shiva Nejati,Mehrdad Sabetzadeh,Marsha Chechik,Steve M. Easterbrook,Pamela Zave;Matching and Merging of Statecharts Specifications.;54-64;11;Models;
2007;Guoqing (Harry) Xu,Atanas Rountev;Regression Test Selection for AspectJ Software.;65-74;10;Testing I;
2007;Carlos Pacheco,Shuvendu K. Lahiri,Michael D. Ernst,Thomas A. Ball;Feedback-Directed Random Test Generation.;75-84;10;Testing I;
2007;Leonardo Mariani,Sofia Papagiannakis,Mauro Pezze;Compatibility and Regression Testing of COTS-Component-Based Software.;85-95;11;Testing I;
2007;Lingxiao Jiang,Ghassan Misherghi,Zhendong Su,Stephane Glondu;DECKARD: Scalable and Accurate Tree-Based Detection of Code Clones.;96-105;10;Clone Detection and Removal;
2007;Simone Livieri,Yoshiki Higo,Makoto Matsushita,Katsuro Inoue;Very-Large Scale Code Clone Analysis and Visualization of Open Source Programs Using Distributed CCFinder: D-CCFinder.;106-115;10;Clone Detection and Removal;
2007;Damith C. Rajapakse,Stanislaw Jarzabek;Using Server Pages to Unify Clones in Web Applications: A Trade-Off Analysis.;116-126;11;Clone Detection and Removal;
2007;Prasanth Anbalagan,Tao Xie;Automated Inference of Pointcuts in Aspect-Oriented Refactoring.;127-136;10;Aspect Oriented Software Engineering;
2007;Mikhail Chalabine,Christoph W. Kessler;A Formal Framework for Automated Round-Trip Software Engineering in Static Aspect Weaving and Transformations.;137-146;10;Aspect Oriented Software Engineering;
2007;Sergei Kojarski,David H. Lorenz;Identifying Feature Interactions in Multi-Language Aspect-Oriented Frameworks.;147-157;11;Aspect Oriented Software Engineering;
2007;Ekwa Duala-Ekoko,Martin P. Robillard;Tracking Code Clones in Evolving Software.;158-167;10;Maintenance;
2007;T. H. Ng,Shing-Chi Cheung,Wing Kwong Chan,Y. T. Yu;Do Maintainers Utilize Deployed Design Patterns Effectively?.;168-177;10;Maintenance;
2007;Chris Tucker,David Shuffelton,Ranjit Jhala,Sorin Lerner;OPIUM: Optimal Package Install/Uninstall Manager.;178-188;11;Maintenance;
2007;Scott A. Hendrickson,Andre van der Hoek;Modeling Product Line Architectures through Change Sets and Relationships.;189-198;10;Software Architecture;
2007;Luciano Baresi,Carlo Ghezzi,Luca Mottola;On Accurate Automatic Verification of Publish-Subscribe Architectures.;199-208;10;Software Architecture;
2007;Matthieu Leclercq,Ali Erdem Ozcan,Vivien Quema,Jean-Bernard Stefani;Supporting Heterogeneous Architecture Descriptions in an Extensible Toolset.;209-219;11;Software Architecture;
2007;Matthew B. Dwyer,Alex Kinneer,Sebastian G. Elbaum;Adaptive Online Program Analysis.;220-229;10;Program Analysis II;
2007;Chen Fu,Barbara G. Ryder;Exception-Chain Analysis: Revealing Exception Handling Architecture in Java Server Applications.;230-239;10;Program Analysis II;
2007;Murali Krishna Ramanathan,Ananth Grama,Suresh Jagannathan;Path-Sensitive Inference of Function Precedence Protocols.;240-250;11;Program Analysis II;
2007;Robin Abraham,Martin Erwig;GoalDebug: A Spreadsheet Debugger for End Users.;251-260;10;Debugging and Fault Correction;
2007;James A. Clause,Alessandro Orso;A Technique for Enabling and Supporting Debugging of Field Failures.;261-270;10;Debugging and Fault Correction;
2007;Haibo Chen,Jie Yu,Rong Chen,Binyu Zang,Pen-Chung Yew;POLUS: A POwerful Live Updating System.;271-281;11;Debugging and Fault Correction;
2007;John C. Grundy,John G. Hosking;Supporting Generic Sketching-Based Input of Diagrams in a Domain-Specific Visual Language Meta-Tool.;282-291;10;Design I;
2007;Alexander Egyed;Fixing Inconsistencies in UML Design Models.;292-301;10;Design I;
2007;Brian J. Ellis,Jeffrey Stylos,Brad A. Myers;The Factory Pattern in API Design: A Usability Evaluation.;302-312;11;Design I;
2007;Lorenz Froihofer,Gerhard Glos,Johannes Osrael,Karl M. Goschka;Overview and Evaluation of Constraint Validation Approaches in Java.;313-322;10;Program Analysis III;
2007;Yin Liu,Ana Milanova;Ownership and Immutability Inference for UML-Based Object Access Control.;323-332;10;Program Analysis III;
2007;Miryung Kim,David Notkin,Daniel B. Grossman;Automatic Inference of Structural Changes for Matching across Program Versions.;333-343;11;Program Analysis III;
2007;Andy Ko,Robert DeLine,Gina Danielle Venolia;Information Needs in Collocated Software Development Teams.;344-353;10;Human Aspects in Software Development;
2007;Jan Chong,Tom Hurlbutt;The Social Dynamics of Pair Programming.;354-363;10;Human Aspects in Software Development;
2007;Chris Jensen,Walt Scacchi;Role Migration and Advancement Processes in OSSD Projects: A Comparative Case Study.;364-374;11;Human Aspects in Software Development;
2007;Filippo Ricca,Massimiliano Di Penta,Marco Torchiano,Paolo Tonella,Mariano Ceccato;The Role of Experience and Ability in Comprehension Tasks Supported by UML Stereotypes.;375-384;10;Design II;
2007;Gary T. Leavens,Peter Muller;Information Hiding and Visibility in Interface Specifications.;385-395;11;Design II;
2007;Xun Yuan,Atif M. Memon;Using GUI Run-Time State as Feedback to Generate Test Cases.;396-405;10;Testing II;
2007;Zhimin Wang,Sebastian G. Elbaum,David S. Rosenblum;Automated Generation of Context-Aware Tests.;406-415;10;Testing II;
2007;Rupak Majumdar,Koushik Sen;Hybrid Concolic Testing.;416-426;11;Testing II;
2007;Danny Dig,Kashif Manzoor,Ralph E. Johnson,Tien N. Nguyen;Refactoring-Aware Configuration Management for Object-Oriented Programs.;427-436;10;Refactoring and Reuse;
2007;Adam Kiezun,Michael D. Ernst,Frank Tip,Robert M. Fuhrer;Refactoring for Parameterizing Java Classes.;437-446;10;Refactoring and Reuse;
2007;Reid Holmes,Robert J. Walker;Supporting the Investigation and Planning of Pragmatic Reuse Tasks.;447-457;11;Refactoring and Reuse;
2007;Vinod Ganapathy,Dave King 0002,Trent Jaeger,Somesh Jha;Mining Security-Sensitive Operations in Legacy Code Using Concept Analysis.;458-467;10;Security;
2007;Halvard Skogsrud,Boualem Benatallah,Fabio Casati,Farouk Toumani;Managing Impacts of Security Protocol Changes in Service-Oriented Applications.;468-477;10;Security;
2007;Marco Pistoia,Stephen J. Fink,Robert J. Flynn,Eran Yahav;When Role Models Have Flaws: Static Validation of Enterprise Security Policies.;478-488;11;Security;
2007;Sunghun Kim,Thomas Zimmermann,Jim Whitehead,Andreas Zeller;Predicting Faults from Cached History.;489-498;10;Software Defects;
2007;Per Runeson,Magnus Alexandersson,Oskar Nyholm;Detection of Duplicate Defect Reports Using Natural Language Processing.;499-510;12;Software Defects;
2007;Andrea Capiluppi,Juan Fernandez-Ramil,J. Higman,Helen C. Sharp,Neil Smith;An Empirical Study of the Evolution of an Agile-Developed Software System.;511-518;8;Experience Reports;Agile Methods and Software Design
2007;T. C. Nicholas Graham,Rick Kazman,Chris Walmsley;Agility and Experimentation: Practical Techniques for Resolving Architectural Tradeoffs.;519-528;10;Experience Reports;Agile Methods and Software Design
2007;Jeffrey Stylos,Steven Clarke;Usability Implications of Requiring Parameters in Objects' Constructors.;529-539;11;Experience Reports;Agile Methods and Software Design
2007;Yan Jin,Antony Tang,Jun Han,Yan Liu;Performance Evaluation and Prediction for Legacy Information Systems.;540-549;10;Performance and Metrics;
2007;Jeffrey Carver,Richard P. Kendall,Susan E. Squires,Douglass E. Post;Software Development Environments for Scientific and Engineering Software: A Series of Case Studies.;550-559;10;Performance and Metrics;
2007;Lars-Ola Damm,Lars Lundberg;Company-Wide Implementation of Metrics for Early Software Fault Detection.;560-570;11;Performance and Metrics;
2007;Mika Karaila,Tarja Systa;Applying Template Meta-Programming Techniques for a Domain-Specific Visual Language--An Industrial Experience Report.;571-580;10;Modeling;
2007;Bastian Best,Jan Jurjens,Bashar Nuseibeh;Model-Based Security Engineering of Distributed Information Systems Using UMLsec.;581-590;10;Modeling;
2007;Sam Malek,Chiyoung Seo,Sharmila Ravula,Brad Petrus,Nenad Medvidovic;Reconceptualizing a Family of Heterogeneous Embedded Systems via Explicit Architectural Support.;591-601;11;Modeling;
2007;David Martin,John Rooksby,Mark Rouncefield,Ian Sommerville;'Good' Organisational Reasons for 'Bad' Software Testing: An Ethnographic Study of Testing in a Small Software Company.;602-611;10;Testing;
2007;Stefan Berner,Roland Weber,Rudolf K. Keller;Enhancing Software Testing by Judicious Use of Code Coverage Information.;612-620;9;Testing;
2007;Alex Groce,Gerard J. Holzmann,Rajeev Joshi;Randomized Differential Testing as a Prelude to Formal Verification.;621-631;11;Testing;
2007;Neil A. M. Maiden,Cornelius Ncube,Suzanne Robertson;Can Requirements Be Creative? Experiences with an Enhanced Air Space Management System.;632-641;10;Software Development Processes;
2007;Analia Irigoyen Ferreiro Ferreira,Gleison Santos,Roberta Cerqueira,Mariano Montoni,Ahilton Barreto,Andrea Oliveira Soares Barreto,Ana Regina Rocha;Applying ISO 9001: 2000, MPS.BR and CMMI to Achieve Software Process Maturity: BL Informatica's Pathway.;642-651;10;Software Development Processes;
2007;Mira Kajko-Mattsson;Maturity Status within Front-End Support Organisations.;652-663;12;Software Development Processes;
2007;Jayakanth Srinivasan,Kristina Lundqvist;A Constructivist Approach to Teaching Software Processes.;664-672;9;Education Papers;Pedagogy
2007;Miroslaw Staron;Using Experiments in Software Engineering as an Auxiliary Tool for Teaching--A Qualitative Evaluation from the Perspective of Students' Learning Process.;673-676;4;Education Papers;Pedagogy
2007;Laurie A. Williams,Lucas Layman,Kelli M. Slaten,Sarah B. Berenson,Carolyn B. Seaman;On the Impact of a Collaborative Pedagogy on African American Millennial Students in Software Engineering.;677-687;11;Education Papers;Pedagogy
2007;Sebastian G. Elbaum,Suzette Person,Jonathan Dokulil,Matthew Jorde;Bug Hunt: Making Early Software Testing Lessons Engaging and Affordable.;688-697;10;Curricula and Course Design I;
2007;Louwarnoud van der Duim,Jesper Andersson,Marco Sinnema;Good Practices for Educational Software Engineering Projects.;698-707;10;Curricula and Course Design I;
2007;Shinichi Honiden,Yasuyuki Tahara,Nobukazu Yoshioka,Kenji Taguchi,Hironori Washizaki;Top SE: Educating Superarchitects Who Can Apply Software Engineering Tools to Practical Development in Japan.;708-718;11;Curricula and Course Design I;
2007;David Janzen,Hossein Saiedian;A Leveled Examination of Test-Driven Development Acceptance.;719-722;4;Evaluation;
2007;Imran A. Zualkernan;Using Soloman-Felder Learning Style Index to Evaluate Pedagogical Resources for Introductory Programming Classes.;723-726;4;Evaluation;
2007;Shaohua Xie,Eileen Kraemer,R. E. Kurt Stirewalt;Design and Evaluation of a Diagrammatic Notation to Aid in the Understanding of Concurrency Concepts.;727-731;5;Evaluation;
2007;Bradley S. Rubin,Bhabani S. Misra;Creating a Computer Security Curriculum in a Software Engineering Program.;732-735;4;Curricula and Course Design II;
2007;Stephanie Ludi;Introducing Accessibility Requirements through External Stakeholder Utilization in an Undergraduate Requirements Engineering Course.;736-743;8;Curricula and Course Design II;
2007;Christopher G. Jones;Bringing the Systems Analysis and Design Course into 21^st Century: A Case Study in Implementing Modern Software Engineering Principles.;744-747;4;Curricula and Course Design II;
2007;Burak Turhan,Ayse Bener;A Template for Real World Team Projects for Highly Populated Software Engineering Classes.;748-753;6;Curricula and Course Design II;
2007;David Coppit,Robert R. Painter,Meghan Revelle;Spotlight: A Prototype Tool for Software Plans.;754-757;4;Formal Rsearch Demonstrations;Software Evolution
2007;Marius Marin,Leon Moonen,Arie van Deursen;SoQueT: Query-Based Documentation of Crosscutting Concerns.;758-761;4;Formal Rsearch Demonstrations;Software Evolution
2007;Eytan Adar,Miryung Kim;SoftGUESS: Visualization and Exploration of Code Clones in Context.;762-766;5;Formal Rsearch Demonstrations;Software Evolution
2007;Engin Uzuncaova,Sarfraz Khurshid;Kato: A Program Slicing Tool for Declarative Specifications.;767-770;4;Testing and Analysis;
2007;Aleksandar Milicevic,Sasa Misailovic,Darko Marinov,Sarfraz Khurshid;Korat: A Tool for Generating Structurally Complex Test Inputs.;771-774;4;Testing and Analysis;
2007;Ophelia C. Chesley,Xiaoxia Ren,Barbara G. Ryder,Frank Tip;Crisp--A Fault Localization Tool for Java Programs.;775-779;5;Testing and Analysis;
2007;Frederic Weigand Warr,Martin P. Robillard;Suade: Topology-Based Searches for Software Investigation.;780-783;4;Development, Integration, and Maintenance;
2007;Marco Autili,Paola Inverardi,Alfredo Navarra,Massimo Tivoli;SYNTHESIS: A Tool for Automatically Assembling Correct and Distributed Component-Based Systems.;784-787;4;Development, Integration, and Maintenance;
2007;Li-Te Cheng,Michael Desmond,Margaret-Anne D. Storey;Presentations by Programmers for Programmers.;788-792;5;Development, Integration, and Maintenance;
2007;Alexander Egyed;UML/Analyzer: A Tool for the Instant Consistency Checking of UML Models.;793-796;4;Modeling;
2007;Liming Zhu,Yan Liu,Ngoc Bao Bui,Ian Gorton;Revel8or: Model Driven Capacity Planning Tool Suite.;797-800;4;Modeling;
2007;Sven Burmester,Holger Giese,Stefan Henkler,Martin Hirsch,Matthias Tichy,Alfonso Gambuzza,Eckehard Munch,Henner Vocking;Tool Support for Developing Advanced Mechatronic Systems: Integrating the Fujaba Real-Time Tool Suite with CAMeL-View.;801-804;4;Modeling;
2006;Fuqing Yang,Hong Mei;Development of software engineering: co-operative efforts from academia, government and industry.;2-11;10;Keynote talks;
2006;Barry W. Boehm;A view of 20th and 21st century software engineering.;12-29;18;Keynote talks;
2006;Reinhold Achatz;Optimization of software development.;30;1;Keynote talks;
2006;Victor R. Basili,Sebastian G. Elbaum;Empirically driven SE research: state of the art and required maturity.;32;1;Invited talks;
2006;Manfred Broy;Challenges in automotive software engineering.;33-42;10;Invited talks;
2006;Jurgen Nehmer,Martin Becker,Arthur I. Karshmer,Rosemarie Lamm;Living assistance systems: an ambient intelligence approach.;43-50;8;Invited talks;
2006;Girish Suryanarayana,Mamadou H. Diallo,Justin R. Erenkrantz,Richard N. Taylor;Architectural support for trust models in decentralized applications.;52-61;10;Research papers: architecture & design I;
2006;Ingolf H. Kruger,Reena Mathew,Michael Meisinger;Efficient exploration of service-oriented architectures using aspects.;62-71;10;Research papers: architecture & design I;
2006;Basil Becker,Dirk Beyer,Holger Giese,Florian Stallmann,Daniela Schilling;Symbolic invariant verification for systems with dynamic structural adaptation.;72-81;10;Research papers: architecture & design I;
2006;Benoit Baudry,Franck Fleurey,Yves Le Traon;Improving test suites for efficient fault localization.;82-91;10;Research papers: test & analysis I;
2006;Lionel C. Briand,Yvan Labiche,Michal M. Sowka;Automated, contract-based user testing of commercial-off-the-shelf components.;92-101;10;Research papers: test & analysis I;
2006;David Willmor,Suzanne M. Embury;An intensional approach to the specification of test cases for database applications.;102-111;10;Research papers: test & analysis I;
2006;Jia Liu,Don S. Batory,Christian Lengauer;Feature oriented refactoring of legacy applications.;112-121;10;Research papers: software components & reuse;
2006;Sven Apel,Thomas Leich,Gunter Saake;Aspectual mixin layers: aspects and features in concert.;122-131;10;Research papers: software components & reuse;
2006;Maria Cutumisu,Curtis Onuczko,Duane Szafron,Jonathan Schaeffer,Matthew McNaughton,Thomas Roy,Jeff Siegel,Mike Carbonaro;Evaluating pattern catalogs: the computer games experience.;132-141;10;Research papers: software components & reuse;
2006;Ghassan Misherghi,Zhendong Su;HDD: hierarchical Delta Debugging.;142-151;10;Research papers: test & analysis II;
2006;Jianbin Tan,George S. Avrunin,Lori A. Clarke;Managing space for finite-state verification.;152-161;10;Research papers: test & analysis II;
2006;Dinakar Dhurjati,Vikram S. Adve;Backwards-compatible array bounds checking for C with very low overhead.;162-171;10;Research papers: test & analysis II;
2006;Mathieu Verbaere,Ran Ettinger,Oege de Moor;JunGL: a scripting language for refactoring.;172-181;10;Research papers: reverse engineering & refactoring;
2006;Robin Abraham,Martin Erwig;Inferring templates from spreadsheets.;182-191;10;Research papers: reverse engineering & refactoring;
2006;Ganesan Ramalingam,Raghavan Komondoor,John P. Field,Saurabh Sinha;Semantics-based reverse engineering of object-oriented data models.;192-201;10;Research papers: reverse engineering & refactoring;
2006;Robert G. Pettit IV,Hassan Gomaa;Modeling behavioral design patterns of concurrent objects.;202-211;10;Research papers: architecture & design II;
2006;Sergei Kojarski,David H. Lorenz;Modeling aspect mechanisms: a top-down approach.;212-221;10;Research papers: architecture & design II;
2006;David Mandelin,Douglas N. Kimelman,Daniel M. Yellin;A Bayesian approach to diagram matching with application to architectural models.;222-231;10;Research papers: architecture & design II;
2006;Brian Hackett,Manuvir Das,Daniel Wang,Zhe Yang;Modular checking for buffer overflows in the large.;232-241;10;Research papers: test & analysis III;
2006;Magiel Bruntink,Arie van Deursen,Tom Tourwe;Discovering faults in idiom-based exception handling.;242-251;10;Research papers: test & analysis III;
2006;David L. Heine,Monica S. Lam;Static detection of leaks in polymorphic containers.;252-261;10;Research papers: test & analysis III;
2006;Lingxiao Jiang,Zhendong Su;Osprey: a practical type system for validating dimensional unit correctness of C programs.;262-271;10;Research papers: test & analysis IV;
2006;Xiangyun Zhang,Neelam Gupta,Rajiv Gupta;Locating faults through automated predicate switching.;272-281;10;Research papers: test & analysis IV;
2006;Jinlin Yang,David Evans,Deepali Bhardwaj,Thirumalesh Bhat,Manuvir Das;Perracotta: mining temporal API rules from imperfect traces.;282-291;10;Research papers: test & analysis IV;
2006;Chang Xu,Shing-Chi Cheung,Wing Kwong Chan;Incremental consistency checking for pervasive context.;292-301;10;Research papers: theory & formal methods;
2006;Ankit Goel,Sun Meng,Abhik Roychoudhury,P. S. Thiagarajan;Interacting process classes.;302-311;10;Research papers: theory & formal methods;
2006;Felix Sheng-Ho Chang,Daniel B. Jackson;Symbolic model checking of declarative relational models.;312-320;9;Research papers: theory & formal methods;
2006;Hee Beng Kuan Tan,Yuan Zhao,Hongyu Zhang;Estimating LOC for information systems from their conceptual data models.;321-330;10;Research papers: empirical methods & measurement;
2006;Adam Trendowicz,Jens Heidrich,Jurgen Munch,Yasushi Ishigai,Kenji Yokoyama,Nahomi Kikuchi;Development of a hybrid cost estimation model in an iterative manner.;331-340;10;Research papers: empirical methods & measurement;
2006;Carmen Zannier,Grigori Melnik,Frank Maurer;On the success of empirical studies in the international conference on software engineering.;341-350;10;Research papers: empirical methods & measurement;
2006;Chunyang Ye,Shing-Chi Cheung,Wing Kwong Chan;Publishing and composition of atomicity-equivalent services for B2B collaboration.;351-360;10;Research papers: software process & workflow;
2006;John Anvik,Lyndon Hiew,Gail C. Murphy;Who should fix this bug?;361-370;10;Research papers: software process & workflow;
2006;Ji Zhang,Betty H. C. Cheng;Model-based development of dynamically adaptive software.;371-380;10;Research papers: software process & workflow;
2006;Alexander Egyed;Instant consistency checking for the UML.;381-390;10;Research papers: development with UML;
2006;Vahid Garousi,Lionel C. Briand,Yvan Labiche;Traffic-aware stress testing of distributed systems based on UML models.;391-400;10;Research papers: development with UML;
2006;Christian F. J. Lange,Michel R. V. Chaudron;Effects of defects in UML models: an experimental investigation.;401-411;11;Research papers: development with UML;
2006;Paul Luo Li,James D. Herbsleb,Mary M. Shaw,Brian P. Robinson;Experiences and results from initiating field defect prediction and product test prioritization efforts at ABB Inc.;413-422;10;Experience papers: risk analysis;
2006;Mingshu Li,Meng Huang,Fengdi Shu,Juan Li;A risk-driven method for eXtreme programming release planning.;423-430;8;Experience papers: risk analysis;
2006;Ye Yang,Barry W. Boehm,Betsy Clark;Assessing COTS integration risk using cost estimation inputs.;431-438;8;Experience papers: risk analysis;
2006;Barbara A. Kitchenham,Cat Kutay,D. Ross Jeffery,Colin Connaughton;Lessons learnt from the analysis of large-scale corporate databases.;439-444;6;Experience papers: using metrics;
2006;Brian Berenbach,Gail Borotto;Metrics for model driven requirements development.;445-451;7;Experience papers: using metrics;
2006;Nachiappan Nagappan,Thomas A. Ball,Andreas Zeller;Mining metrics to predict component failures.;452-461;10;Experience papers: using metrics;
2006;Timothy Sohn,William G. Griswold,James Scott,Anthony LaMarca,Yatin Chawathe,Ian E. Smith,Mike Y. Chen;Experiences with place lab: an open source toolkit for location-aware computing.;462-471;10;Experience papers: experiences with open source and legacy systems;
2006;Vijay K. Gurbani,Anita Garvert,James D. Herbsleb;A case study of a corporate open source development model.;472-481;10;Experience papers: experiences with open source and legacy systems;
2006;Damiano Distante,Gerardo Canfora,Scott R. Tilley,Shihong Huang;Redesigning legacy applications for the web with UWAT+: a case study.;482-491;10;Experience papers: experiences with open source and legacy systems;
2006;Thomas D. LaToza,Gina Danielle Venolia,Robert DeLine;Maintaining mental models: a study of developer work habits.;492-501;10;Experience papers: software development practices;
2006;LiGuo Huang,Barry W. Boehm,Hao Hu,JiDong Ge,Jian Lu,Cheng Qian;Applying the Value/Petri process to ERP software development in China.;502-511;10;Experience papers: software development practices;
2006;Jiang Zheng,Brian P. Robinson,Laurie A. Williams,Karen Smiley;Applying regression test selection for COTS-based applications.;512-522;11;Experience papers: software development practices;
2006;Xinyu Wang,Jianling Sun,Xiaohu Yang,Chao Huang,Zhijun He,Srinivasa R. Maddineni;Reengineering standalone C++ legacy systems into the J2EE partition distributed environment.;525-533;9;Far east experience papers: development technique;
2006;Minseong Kim,Suntae Kim,Sooyong Park,Mun-Taek Choi,Munsang Kim,Hassan Gomaa;UML-based service robot software development: a case study.;534-543;10;Far east experience papers: development technique;
2006;Osamu Kobayashi,Mitsuyoshi Kawabata,Makoto Sakai,Eddy Parkinson;Analysis of the interaction between practices for introducing XP effectively.;544-550;7;Far east experience papers: development technique;
2006;Hironori Washizaki,Yasuhide Kobayashi,Hiroyuki Watanabe,Eiji Nakajima,Yuji Hagiwara,Kenji Hiranabe,Kazuya Fukuda;Experiments on quality evaluation of embedded software in Japan robot software design contest.;551-560;10;Far east experience papers: evaluation;
2006;Pak-Lok Poon,Yuen-Tak Yu;Procurement of enterprise resource planning systems: experiences with some Hong Kong companies.;561-568;8;Far east experience papers: evaluation;
2006;Noboru Nakamichi,Kazuyuki Shima,Makoto Sakai,Ken-ichi Matsumoto;Detecting low usability web pages using quantitative data of users' behavior.;569-576;8;Far east experience papers: evaluation;
2006;Mutsumi Komuro;Experiences of applying SPC techniques to software development processes.;577-584;8;Far east experience papers: software process;
2006;Qing Wang,Nan Jiang,Lang Gou,Xia Liu,Mingshu Li,Yongji Wang;BSR: a statistic-based approach for establishing and refining software process performance baseline.;585-594;10;Far east experience papers: software process;
2006;Hideto Ogasawara,Takashi Ishikawa,Tetsuro Moriya;Practical approach to development of SPI activities in a large organization: Toshiba's SPI history since 2000.;595-599;5;Far east experience papers: software process;
2006;Seiya Abe,Osamu Mizuno,Tohru Kikuno,Nahomi Kikuchi,Masayuki Hirayama;Estimation of project success using Bayesian classifier.;600-603;4;Far east experience papers: posters;
2006;Hitoshi Furusawa,Eun-Hye Choi,Hiroshi Watanabe;Efficiency analysis of model-based review in actual software design.;604-607;4;Far east experience papers: posters;
2006;Stanislaw Jarzabek,Ulf Pettersson;Research journey towards industrial application of reuse technique.;608-611;4;Far east experience papers: posters;
2006;Jihyun Lee,Jin-Sam Kim,Jin-Hee Cho;A series of development methodologies for a variety of systems in Korea.;612-615;4;Far east experience papers: posters;
2006;Yoshiki Mitani,Nahomi Kikuchi,Tomoko Matsumura,Satoshi Iwamura,Yoshiki Higo,Katsuro Inoue,Mike Barker,Ken-ichi Matsumoto;Effects of software industry structure on a research framework for empirical software engineering.;616-619;4;Far east experience papers: posters;
2006;Autcha Mutchalintungkul,Juthamas Oonhawat,Kittiphong Pholpipatanaphong,Daricha Sutivong,Nakornthip Prompoon;Experience from applying RIM to educational ERP development.;620-623;4;Far east experience papers: posters;
2006;Phong Thanh Nguyen,Muhammad Ali Babar,June M. Verner;Critical factors in establishing and maintaining trust in software outsourcing relationships.;624-627;4;Far east experience papers: posters;
2006;Raymund Sison,Stanislaw Jarzabek,Siew Hock Ow,Wanchai Rivepiboon,Nguyen Nam Hai;Software practices in five ASEAN countries: an exploratory study.;628-631;4;Far east experience papers: posters;
2006;Jiang Wu,Sheldon Wang,Christine Chau,Lei Zeng,Jinsong Lin;Overseas development for a major U.S. eCommerce website.;632-635;4;Far east experience papers: posters;
2006;Hao Zhong,Lu Zhang,Hong Mei;An experimental comparison of four test suite reduction techniques.;636-640;5;Far east experience papers: posters;
2006;Shankar Venkatagiri;Engineering the software requirements of nonprofits: a service-learning approach.;643-648;6;Education papers: advanced topics in software engineering education;
2006;P. J. Rundle,Rick G. Dewar;Using return on investment to compare agile and plan-driven practices in undergraduate group projects.;649-654;6;Education papers: advanced topics in software engineering education;
2006;Daniel Port,David Klappholz;So you want brooks in your classroom?;655-660;6;Education papers: advanced topics in software engineering education;
2006;Nenad Stankovic;Software engineering for undergraduates.;661-666;6;Education papers: software engineering education fundamentals;
2006;Mario Bernhart,Thomas Grechenig,Jennifer Hetzl,Wolfgang Zuser;Dimensions of software engineering course design.;667-672;6;Education papers: software engineering education fundamentals;
2006;David Evans,Michael Peck;Inculcating invariants in introductory courses.;673-678;6;Education papers: software engineering education fundamentals;
2006;Ita Richardson,Allen E. Milewski,Neel Mullick,Patrick Keil;Distributed development: an education perspective on the global studio project.;679-684;6;Education papers: distributed development;
2006;Daniela E. Herlea,Allyson Hadwin,Ban Al-Ani;Instructional design and assessment strategies for teaching global software development: a framework.;685-690;6;Education papers: distributed development;
2006;Jon Bowyer,Janet Hughes;Assessing undergraduate experience of continuous integration and test-driven development.;691-694;4;Education papers: posters;
2006;Davor Cubranic,Margaret-Anne D. Storey,Jody Ryall;A comparison of communication technologies to support novice team programming.;695-698;4;Education papers: posters;
2006;Mohammad El-Ramly;Experience in teaching a software reengineering course.;699-702;4;Education papers: posters;
2006;Orit Hazzan,Yael Dubinsky;Teaching framework for software development methods.;703-706;4;Education papers: posters;
2006;Wilson P. Paula Filho;A software process for time-constrained course projects.;707-710;4;Education papers: posters;
2006;Ken Sakamura;Challenges in the age of ubiquitous computing: a case study of T-Engine, an open development platform for embedded systems.;713-720;8;Software engineering: achievements & challenges: ubiquitous and distributed systems;
2006;Chris Mattmann,Daniel J. Crichton,Nenad Medvidovic,Steve Hughes;A software architecture-based framework for highly distributed and data intensive scientific applications.;721-730;10;Software engineering: achievements & challenges: ubiquitous and distributed systems;
2006;Bikram Sengupta,Satish Chandra,Vibha Sinha;A research agenda for distributed software development.;731-740;10;Software engineering: achievements & challenges: domain-specific challenges;
2006;Minmin Han,Thomas Thiery,Xiping Song;Managing exceptions in the medical workflow systems.;741-750;10;Software engineering: achievements & challenges: domain-specific challenges;
2006;Judy M. Bishop;Multi-platform user interface construction: a challenge for software engineering-in-the-small.;751-760;10;Software engineering: achievements & challenges: domain-specific challenges;
2006;Jean-Raymond Abrial;Formal methods in industry: achievements, problems, future.;761-768;8;Software engineering: achievements & challenges: formal methods;
2006;Howard Foster,Sebastian Uchitel,Jeffrey N. Magee,Jeffrey Kramer;LTSA-WS: a tool for model-based verification of web service compositions and choreography.;771-774;4;Research demonstrations: verification and testing;
2006;Jin Song Dong,Ping Hao,Xian Zhang,Shengchao Qin;HighSpec: a tool for building and checking OZTA models.;775-778;4;Research demonstrations: verification and testing;
2006;Alexandre Duarte,Walfredo Cirne,Francisco Vilar Brasileiro,Patricia Machado;GridUnit: software testing on the grid.;779-782;4;Research demonstrations: verification and testing;
2006;Kyungseok Kim,Hyejung Kim,Miyoung Ahn,Minseok Seo,Yeop Chang,Kyo Chul Kang;ASADAL: a tool system for co-development of software and test environment based on product line engineering.;783-786;4;Research demonstrations: development and transformation;
2006;Gerardo Canfora,Giuseppe Di Santo,Eugenio Zimeo;Developing and executing java AWT applications on limited devices with TCPTE.;787-790;4;Research demonstrations: development and transformation;
2006;Marat Boshernitsan,Susan L. Graham;Interactive transformation of java programs in eclipse.;791-794;4;Research demonstrations: development and transformation;
2006;William G. J. Halfond,Alessandro Orso;Preventing SQL injection attacks using AMNESIA.;795-798;4;Research demonstrations: data base and business process;
2006;Ying Zou,Qi Zhang;A framework for automatic generation of evolvable e-commerce workplaces using business processes.;799-802;4;Research demonstrations: data base and business process;
2006;Yoann Padioleau,Benjamin Sigonneau,Olivier Ridoux;LISFS: a logical information system as a file system.;803-806;4;Research demonstrations: data base and business process;
2006;Dirk Beyer;Relational programming with CrocoPat.;807-810;4;Informal tool demonstrations;
2006;Gan Deng,Douglas C. Schmidt,Aniruddha S. Gokhale;Addressing crosscutting deployment and configuration concerns of distributed real-time and embedded systems via aspect-oriented & model-driven software development.;811-814;4;Informal tool demonstrations;
2006;Sven Jorges,Tiziana Margaria-Steffen,Bernhard Steffen;FormulaBuilder: a tool for graph-based modelling and generation of formulae.;815-818;4;Informal tool demonstrations;
2006;Jan Jurjens,Jorge Fox;Tools for model-based security engineering.;819-822;4;Informal tool demonstrations;
2006;Chang Liu,En Ye,Debra J. Richardson;LtRules: an automated software library usage rule extraction tool.;823-826;4;Informal tool demonstrations;
2006;Yu-Seung Ma,Jeff Offutt,Yong Rae Kwon;MuJava: a mutation system for java.;827-830;4;Informal tool demonstrations;
2006;Akira Mori,Tomonori Izumida,Toshimi Sawada,Tadashi Inoue;A tool for analyzing and detecting malicious mobile code.;831-834;4;Informal tool demonstrations;
2006;Tao Xie,Evan Martin,Hai Yuan;Automatic extraction of abstract-object-state machines from unit-test executions.;835-838;4;Informal tool demonstrations;
2006;Xinrong Xie,Denys Poshyvanyk,Andrian Marcus;3D visualization for concept location in source code.;839-842;4;Informal tool demonstrations;
2006;Muhammad Ali Babar,Barbara A. Kitchenham,Ian Gorton;Towards a distributed software architecture evaluation process: a preliminary assessment.;845-848;4;Emerging results: architecture;
2006;Lars Grunske;"Identifying ""good"" architectural design alternatives with multi-objective optimization strategies.";849-852;4;Emerging results: architecture;
2006;Roshanak Roshandel,Somo Banerjee,Leslie Cheung,Nenad Medvidovic,Leana Golubchik;Estimating software component reliability by leveraging architectural models.;853-856;4;Emerging results: architecture;
2006;David Woollard,Nenad Medvidovic;An architectural style for high-performance asymmetrical parallel computations.;857-860;4;Emerging results: architecture;
2006;Christoph Csallner,Yannis Smaragdakis;Dynamically discovering likely interface invariants.;861-864;4;Emerging results: formal methods and analysis;
2006;Shan Shan Huang,Yannis Smaragdakis;Easy language extension with meta-aspectJ.;865-868;4;Emerging results: formal methods and analysis;
2006;Yu-Seung Ma,Mary Jean Harrold,Yong Rae Kwon;Evaluation of mutation testing for object-oriented programs.;869-872;4;Emerging results: formal methods and analysis;
2006;Pete Manolios,Daron Vroon;Integrating static analysis and general-purpose theorem proving for termination analysis.;873-876;4;Emerging results: formal methods and analysis;
2006;Yutaka Yamauchi,Jack Whalen,Nozomi Ikeya,Erik Vinkhuyzen;The problem of knowledge decoupling in software development projects.;877-880;4;Emerging results: formal methods and analysis;
2006;Steven B. Dolins;Using the balanced scorecard process to compute the value of software applications.;881-884;4;Emerging results: metrics;
2006;Bela Mutschler,Johannes Bumiller,Manfred Reichert;Designing an economic-driven evaluation framework for process-oriented software technologies.;885-888;4;Emerging results: metrics;
2006;Wiboon Jiamthubthugsin,Daricha Sutivong;Portfolio management of software development projects using COCOMO II.;889-892;4;Emerging results: metrics;
2006;Georgia Frantzeskou,Efstathios Stamatatos,Stefanos Gritzalis,Sokratis K. Katsikas;Effective identification of source code authors using byte-level information.;893-896;4;Emerging results: program analysis;
2006;Jingyue Li,Reidar Conradi,Odd Petter N. Slyngstad,Christian Bunse,Marco Torchiano,Maurizio Morisio;An empirical study on decision making in off-the-shelf component-based development.;897-900;4;Emerging results: program analysis;
2006;Evan Martin,Tao Xie;Understanding software application interfaces via string analysis.;901-904;4;Emerging results: program analysis;
2006;S. R. Renuka;Using an information retrieval system to retrieve source code samples.;905-908;4;Emerging results: program analysis;
2006;Bhekisipho Twala,Michelle Cartwright,Martin J. Shepperd;Ensemble of missing data techniques to improve software prediction accuracy.;909-912;4;Emerging results: program analysis;
2006;Rukma Prabhu Verlekar,Varsha Apte;A methodology and tool for performance analysis of distributed server systems.;913-916;4;Emerging results: program analysis;
2006;Daniela E. Herlea,Filippo Lanubile,Teresa Mallardo;The role of asynchronous discussions in increasing the effectiveness of remote synchronous requirements negotiations.;917-920;4;Emerging results: requirements engineering;
2006;Vesna Mikulovic,Michael Heiss;"""How do I know what I have to do?"": the role of the inquiry culture in requirements communication for distributed software development projects.";921-925;5;Emerging results: requirements engineering;
2006;Hiroyuki Nakagawa,Takuya Karube,Shinichi Honiden;Analysis of multi-agent systems based on KAOS modeling.;926-929;4;Emerging results: requirements engineering;
2006;Xiping Song,Beatrice Hwong,Gilberto Matos,Arnold Rudorfer,Christopher Nelson,Minmin Han,Andrei Girenkov;Understanding requirements for computer-aided healthcare workflows: experiences and challenges.;930-934;5;Emerging results: requirements engineering;
2006;John Anvik;Automating bug report assignment.;937-940;4;Doctoral symposium: presentations;
2006;Martha-Rocio Ceballos,Juan-Luis Gorricho;P2P file sharing analysis for a better performance.;941-944;4;Doctoral symposium: presentations;
2006;Gan Deng;Resolving component deployment & configuration challenges for enterprise DRE systems via frameworks & generative techniques.;945-948;4;Doctoral symposium: presentations;
2006;Leticia Duboc,David S. Rosenblum,Tony Wicks;A framework for modelling and analysis of software systems scalability.;949-952;4;Doctoral symposium: presentations;
2006;Tammo Freese;Refactoring-aware version control.;953-956;4;Doctoral symposium: presentations;
2006;Dan Hao;Testing-based interactive fault localization.;957-960;4;Doctoral symposium: presentations;
2006;Reid Holmes;Unanticipated reuse of large-scale software features.;961-964;4;Doctoral symposium: presentations;
2006;Slinger Jansen;Improving the customer configuration update process by explicitly managing software knowledge.;965-968;4;Doctoral symposium: presentations;
2006;Na Liu;Visual languages for event integration specification.;969-972;4;Doctoral symposium: presentations;
2006;HongXing Liu,YanSheng Lu,Qing Yang;XML conceptual modeling with XUML.;973-976;4;Doctoral symposium: presentations;
2006;Joseph R. Ruthruff;Experimental program analysis: a new paradigm for program analysis.;977-980;4;Doctoral symposium: presentations;
2006;Xiang Yin;The echo approach to formal verification.;981-984;4;Doctoral symposium: presentations;
2006;Liang Zhao;A new approach for software testability analysis.;985-988;4;Doctoral symposium: presentations;
2006;Andy Ko;Debugging by asking questions about program output.;989-992;4;Doctoral symposium: posters;
2006;Christian F. J. Lange;Improving the quality of UML models in practice.;993-996;4;Doctoral symposium: posters;
2006;Qing Xie;Developing cost-effective model-based techniques for GUI testing.;997-1000;4;Doctoral symposium: posters;
2006;Thomas Zimmermann;Taking lessons from history.;1001-1005;5;Doctoral symposium: posters;
2006;Danilo Bruschi,Bart De Win,Mattia Monga;Software engineering for secure systems.;1007-1008;2;Workshops;
2006;Nikolay Mehandjiev,Pearl Brereton,John G. Hosking;Second international workshop on interdisciplinary software engineering research (WISER).;1009-1010;2;Workshops;
2006;J. Barrie Thompson,Helen M. Edwards;Third international summit on software engineering education (SSEE III): bridging the university/industry gap.;1011-1012;2;Workshops;
2006;Paul C. Clements;Early aspects at ICSE: workshop in aspect-oriented requirements engineering and architecture design.;1013-1014;2;Workshops;
2006;Betty H. C. Cheng,David Garlan,Rogerio de Lemos,Jeffrey N. Magee,Richard N. Taylor,Stephen Fickas,Hausi A. Muller;Software engineering for adaptive and self-managing systems.;1015-1016;2;Workshops;
2006;Jeffrey Kramer,Orit Hazzan;The role of abstraction in software engineering.;1017-1018;2;Workshops;
2006;Sunita Chulani,Barry W. Boehm,June M. Verner,Bernard Wong;Workshop description of 4th workshop on software quality (WOSQ).;1019-1020;2;Workshops;
2006;Stephan Diehl,Harald C. Gall,Martin Pinzger,Ahmed E. Hassan;MSR 2006: the 3rd international workshop on mining software repositories.;1021;1;Workshops;
2006;Ricardo Choren Noya,Ho-fung Leung,Alessandro Garcia,Carlos Jose Pereira de Lucena,Holger Giese,Alexander Romanovsky;Fifth workshop on software engineering for large-scale multi-agent systems (SELMAS).;1022-1023;2;Workshops;
2006;Warren Harrison,Roel Wieringa;Workshop on technology transfer in software engineering.;1024-1025;2;Workshops;
2006;Jean Bezivin,Jean-Marie Favre,Bernhard Rumpe;First international workshop on global integrated model management.;1026-1027;2;Workshops;
2006;Hong Zhu,Joseph R. Horgan,Shing-Chi Cheung,J. Jenny Li;The first international workshop on automation of software test.;1028-1029;2;Workshops;
2006;Jon G. Hall,Lucia Rapanotti,Karl Cox,Zhi Jin;2nd international workshop on advances and applications of problem frames.;1030-1031;2;Workshops;
2006;Philippe Kruchten,Yvonne Hsieh,Eve MacGregor,Deependra Moitra,Wolfgang Strigel,Christof Ebert;Global software development for the practitioner.;1032-1033;2;Workshops;
2006;Martin Rappl,Alexander Pretschner,Chris Salzmann,Thomas Stauner;3rd international workshop on software engineering for automotive systems - SEAS 2006.;1034;1;Workshops;
2006;Neelam Gupta,Andy Podgurski;Fourth international workshop on dynamic analysis (WODA 2006).;1035;1;Workshops;
2006;Elisabetta Di Nitto,Robert J. Hall,Jun Han,Yanbo Han,Andrea Polini,Kurt Sandkuhl,Andrea Zisman;International workshop on service oriented software engineering (IW-SOSE'06).;1036-1037;2;Workshops;
2006;Rick Kazman,Kevin J. Sullivan;The 8th international workshop on economics-driven software engineering research.;1038;1;Workshops;
2006;Jonathan P. Whittle,Leif Geiger,Michael Meisinger;Workshop description of 5th intl. workshop on scenarios and state machines: models-algorithms-and tools (SCESM).;1039-1040;2;Workshops;
2006;Gerhard G. Fischer;Software engineering themes for the future.;1043-1044;2;Tutorials: full day tutorials;
2006;Dewayne E. Perry,Susan Elliott Sim,Steve M. Easterbrook;Case studies for software engineers.;1045-1046;2;Tutorials: full day tutorials;
2006;Donald G. Firesmith;Engineering safety-related requirements for software-intensive systems.;1047-1048;2;Tutorials: full day tutorials;
2006;Klaus Pohl,Andreas Metzger;Variability management in software product line engineering.;1049-1050;2;Tutorials: full day tutorials;
2006;David Budgen,Pearl Brereton;Performing systematic literature reviews in software engineering.;1051-1052;2;Tutorials: full day tutorials;
2006;Stanislaw Jarzabek,Ulf Pettersson;Cost-effective engineering of web applications pragmatic reuse: building web application product lines.;1053-1054;2;Tutorials: full day tutorials;
2006;Harald C. Gall,Michele Lanza;Software evolution: analysis and visualization.;1055-1056;2;Tutorials: full day tutorials;
2006;Frank Maurer,Grigori Melnik;Agile methods: moving towards the mainstream of the software industry.;1057-1058;2;Tutorials: full day tutorials;
2006;Hassan Gomaa;Designing concurrent, distributed, and real-time applications with UML.;1059-1060;2;Tutorials: full day tutorials;
2006;Awais Rashid,Alessandro Garcia,Ana Moreira;Aspect-oriented software development beyond programming.;1061-1062;2;Tutorials: half-day tutorials;
2006;Jin Song Dong;From semantic web to expressive software specifications: a modeling languages spectrum.;1063-1064;2;Tutorials: half-day tutorials;
2006;Rogerio de Lemos;Software architectures for dependable systems: a software engineering perspective.;1065-1066;2;Tutorials: half-day tutorials;
2006;Luciano Baresi,Sam Guinea;Tutorial: towards dynamic web services.;1067-1068;2;Tutorials: half-day tutorials;
2006;Bran Selic;Tutorial: an overview of UML 2.;1069-1070;2;Tutorials: half-day tutorials;
2006;Liang Chen,Bruno Wassermann,Wolfgang Emmerich,Howard Foster;Web service orchestration with BPEL.;1071-1072;2;Tutorials: half-day tutorials;
2006;Neil A. M. Maiden,Suzanne Robertson,James Robertson;Creative requirements: invention and its role in requirements engineering.;1073-1074;2;Tutorials: half-day tutorials;
2006;Paul A. Strooper,Luke Wildman;Testing concurrent java components.;1075-1076;2;Tutorials: half-day tutorials;
2006;Weizhong Shao,Gang Huang 0001,Haiyan Zhao;Modeling of component based systems.;1077-1078;2;Tutorials: half-day tutorials;
2006;Natalia Juristo Juzgado,Xavier Ferre Grau;How to integrate usability into the software development process.;1079-1080;2;Tutorials: half-day tutorials;
2006;Kung-Kiu Lau;Software component models.;1081-1082;2;Tutorials: half-day tutorials;
2005;Luca Cardelli;Transitions in programming models: 2.;2;1;Keynote talks;
2005;Richard Florida;Global talent and innovation.;3;1;Keynote talks;
2005;Erich Gamma;Agile, open source, distributed, and on-time: inside the eclipse development process.;4;1;Keynote talks;
2005;Bev Littlewood;Dependability assessment of software-based systems: state of the art.;6-7;2;State of the art;
2005;Armando Fox;Addressing software dependability with statistical and machine learning techniques.;8;1;State of the art;
2005;Roy Want,Trevor Pering;System challenges for ubiquitous & pervasive computing.;9-14;6;State of the art;
2005;Jeffrey O. Kephart;Research challenges of autonomic computing.;15-22;8;State of the art;
2005;James D. Herbsleb;Beyond computer science.;23-27;5;Extending the discipline;
2005;Stephen Fickas;Clinical requirements engineering.;28-34;7;Extending the discipline;
2005;Michael Twidale;Silver bullet or fool's gold: supporting usability in open source software development.;35;1;Extending the discipline;
2005;Peter Ayton;Extending the discipline: how software can help or hinder human decision making (and vice-versa).;36;1;Extending the discipline;
2005;Jon Siegel;Why use the model driven architecture to design and build distributed applications?;37;1;State of the practice;
2005;Michael Hirsch;Moving from a plan driven culture to agile development.;38;1;State of the practice;
2005;Eric Brechner;Journey of enlightenment: the evolution of development at Microsoft.;39-42;4;State of the practice;
2005;Roy Thomas Fielding;Software architecture in an open source world.;43;1;State of the practice;
2005;Michael Jackson,Pamela Zave;Where do you go when you're through the turnstile?;44;1;Most influential paper of ICSE 17;
2005;Kevin J. Sullivan,Jeffrey N. Magee;Science of design.;46;1;Panel;
2005;William G. Griswold,Bashar Nuseibeh;Introduction to Research Papers.;48;1;Research papers;
2005;Gregor Kiczales,Mira Mezini;Aspect-oriented programming and modular reasoning.;49-58;10;Aspect-oriented software development;
2005;Hridesh Rajan,Kevin J. Sullivan;Classpects: unifying aspect- and object-oriented language design.;59-68;10;Aspect-oriented software development;
2005;Carine Courbis,Anthony Finkelstein;Towards aspect weaving applications.;69-77;9;Aspect-oriented software development;
2005;Yuetang Deng,Phyllis G. Frankl,David Chays;Testing database transactions with AGENDA.;78-87;10;Databases;
2005;Russell A. McClure,Ingolf H. Kruger;SQL DOM: compile time checking of dynamic SQL statements.;88-96;9;Databases;
2005;William R. Cook,Siddhartha Rai;Safe query objects: statically typed objects as remotely executable queries.;97-106;10;Databases;
2005;Amir Michail,Tao Xie;Helping users avoid bugs in GUI applications.;107-116;10;Tools & environments;
2005;Reid Holmes,Gail C. Murphy;Using structural context to recommend source code examples.;117-125;9;Tools & environments;
2005;Andy Ko,Htet Htet Aung,Brad A. Myers;Eliciting design requirements for maintenance-oriented IDEs: a detailed study of corrective and perfective maintenance tasks.;126-135;10;Tools & environments;
2005;Martin Erwig,Robin Abraham,Irene Cooperstein,Steve Kollmansberger;Automatic generation and maintenance of correct spreadsheets.;136-145;10;Testing and analysis;
2005;Renee C. Bryce,Charles J. Colbourn,Myra B. Cohen;A framework of greedy methods for constructing interaction test suites.;146-155;10;Testing and analysis;
2005;Jonathan Misurda,James A. Clause,Juliya L. Reed,Bruce R. Childers,Mary Lou Soffa;Demand-driven structural testing with dynamic instrumentation.;156-165;10;Testing and analysis;
2005;Tetsuo Tamai,Naoyasu Ubayashi,Ryoichi Ichiyama;An adaptive object model with dynamic role binding.;166-175;10;Programming languages;
2005;Brian Demsky,Martin C. Rinard;Data structure repair using goal-directed reasoning.;176-185;10;Programming languages;
2005;Wei-Ngan Chin,Siau-Cheng Khoo,Shengchao Qin,Corneliu Popeea,Huu Hai Nguyen;Verifying safety policies with size properties and alias controls.;186-195;10;Programming languages;
2005;Kathi Fisler,Shriram Krishnamurthi,Leo A. Meyerovich,Michael Carl Tschantz;Verification and change-impact analysis of access-control policies.;196-205;10;Change management;
2005;Patricia Lago,Johannes C. van Vliet;Explicit assumptions enrich architectural models.;206-214;9;Change management;
2005;Tien N. Nguyen,Ethan V. Munson,John Tang Boyland,Cheng Thao;An infrastructure for development of object-oriented, multi-level configuration management services.;215-224;10;Change management;
2005;Audris Mockus,Ping Zhang,Paul Luo Li;Predictors of customer perceived software quality.;225-233;9;Software quality and process;
2005;Luigi Lavazza,Giancarlo Barresi;Automated support for process-aware definition and execution of measurement plans.;234-243;10;Software quality and process;
2005;Tariq Al-Naeem,Ian Gorton,Muhammad Ali Babar,Fethi A. Rabhi,Boualem Benatallah;A quality-driven systematic approach for architecting distributed software applications.;244-253;10;Software quality and process;
2005;Atanas Rountev,Beth Harkness Connell;Object naming analysis for reverse-engineered sequence diagrams.;254-263;10;Software evolution;
2005;Eli Tilevich,Yannis Smaragdakis;Binary refactoring: improving code behind the scenes.;264-273;10;Software evolution;
2005;Johannes Henkel,Amer Diwan;CatchUp!: capturing and replaying refactorings to support API evolution.;274-283;10;Software evolution;
2005;Nachiappan Nagappan,Thomas A. Ball;Use of relative code churn measures to predict system defect density.;284-292;9;Empirical software engineering;
2005;Cemal Yilmaz,Arvind S. Krishna,Atif M. Memon,Adam A. Porter,Douglas C. Schmidt,Aniruddha S. Gokhale,Balachandran Natarajan;Main effects screening: a distributed continuous quality assurance process for monitoring performance degradation in evolving software systems.;293-302;10;Empirical software engineering;
2005;Parastoo Mohagheghi,Bente Cecilie Dahlum Anda,Reidar Conradi;Effort estimation of use cases for incremental large-scale software development.;303-311;9;Empirical software engineering;
2005;Vinod Ganapathy,Sanjit A. Seshia,Somesh Jha,Thomas W. Reps,Randal E. Bryant;Automatic discovery of API-level exploits.;312-321;10;Security;
2005;Jan Jurjens;Sound methods and effective tools for model-based security engineering with UML.;322-331;10;Security;
2005;Dzintars Avots,Michael Dalton,V. Benjamin Livshits,Monica S. Lam;Improving software security with a C pointer analysis.;332-341;10;Security;
2005;Holger Cleve,Andreas Zeller;Locating causes of program failures.;342-351;10;Fault localization;
2005;Joseph R. Ruthruff,Margaret M. Burnett,Gregg Rothermel;An empirical study of fault localization for end-user programmers.;352-361;10;Fault localization;
2005;Jane Cleland-Huang,Raffaella Settimi,Oussama Ben Khadra,Eugenia Berezhanskaya,Selvia Christina;Goal-centric traceability for managing non-functional requirements.;362-371;10;Requirements and specifications;
2005;Sascha Konrad,Betty H. C. Cheng;Real-time specification patterns.;372-381;10;Requirements and specifications;
2005;Emmanuel Letier,Jeffrey Kramer,Jeffrey N. Magee,Sebastian Uchitel;Monitoring and control in scenario-based requirements analysis.;382-391;10;Requirements and specifications;
2005;Alexander Pretschner,Wolfgang Prenninger,Stefan Wagner,Christian Kuhnel,M. Baumgartner,B. Sostawa,R. Zolch,Thomas Stauner;One evaluation of model-based testing and its automation.;392-401;10;Empirical evaluation of testing;
2005;Jamie Andrews,Lionel C. Briand,Yvan Labiche;Is mutation an appropriate tool for testing experiments?;402-411;10;Empirical evaluation of testing;
2005;David Leon,Wes Masri,Andy Podgurski;An empirical evaluation of test case filtering techniques based on exercising complex information flows.;412-421;10;Empirical evaluation of testing;
2005;Christoph Csallner,Yannis Smaragdakis;Check 'n' crash: combining static checking and testing.;422-431;10;Static and dynamic analysis;
2005;Taweesup Apiwattanapong,Alessandro Orso,Mary Jean Harrold;Efficient and precise dynamic impact analysis using execute-after sequences.;432-441;10;Static and dynamic analysis;
2005;Marcelo F. Frias,Juan P. Galeotti,Carlos Lopez Pombo,Nazareno Aguirre;DynAlloy: upgrading alloy with actions.;442-451;10;Static and dynamic analysis;
2005;Hamid Abdul Basit,Damith C. Rajapakse,Stanislaw Jarzabek;Beyond templates: a study of clones in the STL and some general implications.;451-459;9;Empirical studies;
2005;Elspeth Golden,Bonnie E. John,Leonard J. Bass;The value of a usability-supporting architectural pattern in software architecture design: a controlled experiment.;460-469;10;Empirical studies;
2005;Martin Host,Claes Wohlin,Thomas Thelin;Experimental context classification: incentives and experience of subjects.;470-478;9;Empirical studies;
2005;Constance L. Heitmeyer,Klaus Pohl;Introduction to the experience reports track.;480;1;Experience reports;
2005;Grigori Melnik,Frank Maurer;A cross-program investigation of students' perceptions of agile methods.;481-488;8;Agile methods;
2005;Denise M. Woit;Requirements interaction management in an eXtreme programming environment: a case study.;489-494;6;Agile methods;
2005;Hanna Hulkko,Pekka Abrahamsson;A multiple case study on the impact of pair programming on product quality.;495-504;10;Agile methods;
2005;Moonzoo Kim,Jaejoon Lee,Kyo Chul Kang,Youngjin Hong,Seokwon Bang;Re-engineering software architecture of home service robots: a case study.;505-513;9;Software architectures;
2005;Ian Gorton,Liming Zhu;Tool support for just-in-time architecture reconstruction and evaluation: an experience report.;514-523;10;Software architectures;
2005;James D. Herbsleb,Daniel J. Paulish,Matthew Bass;Global software development at siemens: experience from nine projects.;524-533;10;Product lines & processes;
2005;Martin Verlage,Thomas Kiesgen;Five years of product line engineering in a small company.;534-543;10;Product lines & processes;
2005;Klaus Schmid,Isabel John,Ronny Kolb,Gerald Meier;Introducing the puLSE approach to an embedded system population at testo AG.;544-552;9;Product lines & processes;
2005;Christof Ebert,Jozef De Man;requirements uncertainty: influencing factors and concrete improvements.;553-560;8;Requirements & testing;
2005;Neil A. M. Maiden,Suzanne Robertson;Developing use cases and scenarios in the requirements process.;561-570;10;Requirements & testing;
2005;Stefan Berner,Roland Weber,Rudolf K. Keller;Observations and lessons learned from automated testing.;571-579;9;Requirements & testing;
2005;Nachiappan Nagappan,Thomas A. Ball;Static analysis tools as early indicators of pre-release defect density.;580-586;7;Prediction & verification;
2005;Tim Menzies,Daniel Port,Zhihao Chen,Jairus Hihn,Sherry Stukes;Validation methods for calibrating software effort models.;587-595;9;Prediction & verification;
2005;Maurice H. ter Beek,Mieke Massink,Diego Latella,Stefania Gnesi,Alessandro Forghieri,Maurizio Sebastianis;A case study on the automated verification of groupware protocols.;596-603;8;Prediction & verification;
2005;Paola Inverardi,Mehdi Jazayeri;Introduction to education and training track.;606;1;Education & training track;
2005;Mary M. Shaw,James D. Herbsleb,Ipek Ozkaya;Deciding what to design: closing a gap in software engineering education.;607-608;2;Education & training track;
2005;Tetsuo Tamai;How to teach software modeling.;609-610;2;Education & training track;
2005;Augusto Sampaio,Carlos Albuquerque,Joao Vasconcelos,Luckerson Cruz,Luis Figueiredo,Sergio Cavalcante;Software test program: a software residency experience.;611-612;2;Education & training track;
2005;Chang Liu;Enriching software engineering courses with service-learning projects and the open-source approach.;613-614;2;Education & training track;
2005;Ken Blaha,Alvaro E. Monge,Dean Sanders,Beth Simon,Tammy VanDeGrift;Do students recognize ambiguity in software design? a multi-national, multi-institutional report.;615-616;2;Education & training track;
2005;Michael D. Ernst,John Chapin;The groupthink specification exercise.;617-618;2;Education & training track;
2005;Linda B. Sherrell,Sajjan G. Shiva;Will earlier projects plus a disciplined process enforce SE principles throughout the CS curriculum?;619-620;2;Education & training track;
2005;Johannes C. van Vliet;Some myths of software engineering education.;621-622;2;Education & training track;
2005;Joanne M. Atlee,Richard J. LeBlanc,Timothy C. Lethbridge,Ann E. Kelley Sobel,J. Barrie Thompson;Software engineering 2004: ACM/IEEE-CS guidelines for undergraduate programs in software engineering.;623-624;2;Education & training track;
2005;Neha Katira,Laurie A. Williams,Jason A. Osborne;Towards increasing the compatibility of student pair programmers.;625-626;2;Education & training track;
2005;Amir Zeid,Moemen Elswidi;Using peer reviews in teaching framework development.;627-628;2;Education & training track;
2005;Wilson P. Paula Filho;Process issues in course projects.;629-630;2;Education & training track;
2005;Zakarya Alzamil;Towards an effective software engineering course project.;631-632;2;Education & training track;
2005;Akinola S. Olalekan;Conducting empirical software engineering research in Nigeria: the posing problems.;633-634;2;Education & training track;
2005;Clemens A. Szyperski;The making of a software engineer challenges for the educator.;635-636;2;Education & training track;
2005;Carlo Ghezzi,Dino Mandrioli;The challenges of software engineering education.;637-638;2;Education & training track;
2005;Victor Pankratius,Wolffried Stucky;Information systems development at the virtual global university: an experience report.;639-640;2;Education & training track;
2005;Andre van der Hoek,David G. Kay,Debra J. Richardson;A B.S. degree in informatics: contextualizing software engineering education.;641-642;2;Education & training track;
2005;Matthew J. Hawthorne,Dewayne E. Perry;Software engineering education in the era of outsourcing, distributed development, and open source software: challenges and opportunities.;643-644;2;Education & training track;
2005;Yael Dubinsky,Orit Hazzan;The role of a project-based capstone course.;645-646;2;Education & training track;
2005;Orit Hazzan,James E. Tomayko;Teaching human aspects of software engineering.;647-648;2;Education & training track;
2005;Paolo Ciancarini;On the education of future software engineers.;649-650;2;Education & training track;
2005;Frank McCarey,Mel O Cinneide;Agile software reuse recommender.;652;1;Doctoral symposium oral presentations;
2005;Olga Jaufman;Emergent process design.;653;1;Doctoral symposium oral presentations;
2005;Corrado Aaron Visaggio;Empirical validation of pair programming.;654;1;Doctoral symposium oral presentations;
2005;Sam Guinea;Self-healing web service compositions.;655;1;Doctoral symposium oral presentations;
2005;David Saff,Michael D. Ernst;Test factoring: focusing test suites for the task at hand.;656;1;Doctoral symposium oral presentations;
2005;Sascha Konrad;Assurance patterns for distributed real-time embedded systems.;657;1;Doctoral symposium oral presentations;
2005;John C. Georgas;Knowledge-based architectural adaptation management for self-adaptive systems.;658;1;Doctoral symposium oral presentations;
2005;Guozheng Ge,Jim Whitehead;Automatic generation of rule-based software configuration management systems.;659;1;Doctoral symposium oral presentations;
2005;Zhenchang Xing;Design mentoring based on design evolution analysis.;660;1;Doctoral symposium oral presentations;
2005;Steven P. Reiss,Manos Renieris;Demonstration of JIVE and JOVE: Java as it happens.;662-663;2;Research demonstrations;
2005;Xiaoxia Ren,Barbara G. Ryder,Maximilian Storzer,Frank Tip;Chianti: a change impact analysis tool for java programs.;664-665;2;Research demonstrations;
2005;William Chung,William H. Harrison,Vincent J. Kruskal,Harold Ossher,Stanley M. Sutton Jr.,Peri L. Tarr,Matthew Chapman,Andrew Clement,Helen Hawkins,Sian January;The concern manipulation environment.;666-667;2;Research demonstrations;
2005;David Saff,Michael D. Ernst;Continuous testing in eclipse.;668-669;2;Research demonstrations;
2005;Sven Burmester,Holger Giese,Martin Hirsch,Daniela Schilling,Matthias Tichy;The fujaba real-time tool suite: model-driven development of safety-critical, real-time systems.;670-671;2;Research demonstrations;
2005;Michele Lanza,Stephane Ducasse,Harald C. Gall,Martin Pinzger;CodeCrawler: an information visualization tool for program comprehension.;672-673;2;Research demonstrations;
2005;Robert Chatley,Sebastian Uchitel,Jeffrey Kramer,Jeffrey N. Magee;Fluent-based web animation: exploring goals for requirements validation.;674-675;2;Research demonstrations;
2005;Marwan Abi-Antoun,Jonathan Aldrich,David Garlan,Bradley R. Schmerl,Nagi H. Nahas,Tony Tseng;Modeling and implementing software architecture with acme and archJava.;676-677;2;Research demonstrations;
2005;Siddhartha R. Dalal,Ashish Jain,Jesse H. Poore;Workshop on advances in model-based software testing.;680;1;Workshops;
2005;Danilo Bruschi,Bart De Win,Mattia Monga;Software engineering for secure systems.;681;1;Workshops;
2005;Alessandro Garcia,Ricardo Choren Noya,Carlos Jose Pereira de Lucena,Alexander Romanovsky,Tom Holvoet,Paolo Giorgini;Software engineering for large-scale multi-agent systems - SELMAS'05.;682;1;Workshops;
2005;Philip M. Johnson;Second international workshop on software engineering for high performance computing system applications.;683;1;Workshops;
2005;Kevin J. Sullivan;7th international workshop on economics-driven software engineering research.;684;1;Workshops;
2005;Martin P. Robillard,Peri L. Tarr;First international workshop on the modeling and analysis of concerns in software (MACS 2005).;685;1;Workshops;
2005;Michael John,Frank Maurer,Bjornar Tessem;Human and social factors of software engineering.;686;1;Workshops;
2005;David Budgen,Pearl Brereton,Barbara A. Kitchenham,Stephen G. Linkman;International workshop on realising evidence-based software engineering.;687;1;Workshops;
2005;Bernard Wong,June M. Verner,Sunita Chulani,Barry W. Boehm;Third workshop on software quality.;688-689;2;Workshops;
2005;Ahmed E. Hassan,Richard C. Holt,Stephan Diehl;MSR 2005 international workshop on mining software repositories.;690;1;Workshops;
2005;Rogerio de Lemos,Alexander Romanovsky;Workshop on architecting dependable systems (WADS 2005).;691;1;Workshops;
2005;Jelber Sayyad-Shirabad,Tim Menzies;Predictor models in software engineering (PROMISE).;692;1;Workshops;
2005;Jamie Andrews,Lori L. Pollock;Third international workshop on dynamic analysis(WODA 2005).;693;1;Workshops;
2005;Joseph Feller,Karim Lakhani,Brian Fitzgerald,Walt Scacchi,Scott A. Hissam;Open source application spaces: the 5th workshop on open source software engineering.;694;1;Workshops;
2005;Chris Salzmann,Thomas Stauner,Alexander Pretschner;2nd international workshop on software engineering for automotive systems.;695;1;Workshops;
2005;Lawrence Chung,Xavier Franch,Neil A. M. Maiden;Models and processes for the evaluation of off-the-shelf components -- MPEC'05.;696;1;Workshops;
2005;Yves Bontemps,Alexander Egyed;4th international workshop on scenarios and state machines: models, algorithms and tools (SCESM'05).;697;1;Workshops;
2005;Gregg Rothermel,Sebastian G. Elbaum;The first workshop on end-user software engineering.;698;1;Workshops;
2005;David Garlan,John Mylopoulos,Marin Litoiu,Dennis B. Smith,Hausi A. Muller,Kenny Wong;DEAS 2005: workshop on the design and evolution of autonomic application software.;699;1;Workshops;
2005;Holger Peine;Rules of thumb for secure software engineering.;702-703;2;Tutorials;
2005;Leon Sterling,Thomas Juan;The software engineering of agent-based intelligent adaptive systems.;704-705;2;Tutorials;
2005;Barry W. Boehm,A. Winsor Brown,Richard Turner;Spiral development of software-intensive systems of systems.;706-707;2;Tutorials;
2005;Howard B. Rockman,Vladimir Khodosh;The software engineer and the development, management and use of intellectual property.;708-709;2;Tutorials;
2005;Jane Cleland-Huang,Mark Denne;Financially informed requirements prioritization.;710-711;2;Tutorials;
2005;Ivica Crnkovic;Component-based software engineering for embedded systems.;712-713;2;Tutorials;
2005;Albert Zundorf;Story driven modeling: a practical guide to model driven software development.;714-715;2;Tutorials;
2005;Thomas Kuhne;Understanding metamodeling.;716-717;2;Tutorials;
2005;Stephan Diehl;Software visualization.;718-719;2;Tutorials;
2005;Donald G. Firesmith;Engineering safety-related requirements for software-intensive systems.;720-721;2;Tutorials;
2005;Alexander Pretschner;Model-based testing.;722-723;2;Tutorials;
2005;Paolo Tonella;Reverse engineering of object oriented code.;724-725;2;Tutorials;
2005;Ian Gorton,Anna Liu;An architects guide to enterprise application integration with J2EE and .NET.;726-727;2;Tutorials;
2005;Vittorio Cortellessa,Antinisca Di Marco,Paola Inverardi;Transformations of software models into performance models.;728-729;2;Tutorials;
2005;Gregor Kiczales;Aspect-oriented programming.;730;1;Tutorials;
2005;Frank Maurer,Grigori Melnik;What you always wanted to know about agile methods but did not dare to ask.;731-732;2;Tutorials;
2004;Karl J. Lieberherr;Controlling the Complexity of Software Design.;2-11;10;Keynote Talks;
2004;Jonathan A. Barker,Janet M. Thornton;Software Engineering Challenges in Bioinformatics.;12-15;4;Keynote Talks;
2004;Kenneth P. Birman,Robbert van Renesse,Werner Vogels;Adding High Availability and Autonomic Behavior to Web Services.;17-26;10;Linkages;
2004;Ian T. Foster;Grid Small and Large: Distributed Systems and Global Communities.;27;1;Linkages;
2004;Genaina Nunes Rodrigues;A Model Driven Approach for Software Systems Reliability.;30-32;3;Doctoral Symposium;Invited Participants
2004;Sascha Alda;Component-Based Self-Adaptability in Peer-to-Peer Architectures.;33-35;3;Doctoral Symposium;Invited Participants
2004;Hridesh Rajan;One More Step in the Direction of Modularized Integration Concerns.;36-38;3;Doctoral Symposium;Invited Participants
2004;Eun-Young Kang;Parametric Analysis of Real-Time Embedded Systems with Abstract Approximation Interpretation.;39-41;3;Doctoral Symposium;Invited Participants
2004;Annabella Loconsole;Empirical Studies on Requirement Management Measures.;42-44;3;Doctoral Symposium;Invited Participants
2004;Frank Keenan;Agile Process Tailoring and probLem analYsis (APTLY).;45-47;3;Doctoral Symposium;Invited Participants
2004;Mika Mantyla;Developing New Approaches for Software Design Quality Improvement Based on Subjective Evaluations.;48-50;3;Doctoral Symposium;Invited Participants
2004;Steffen Zschaler;Research Abstract: Semantic Concepts for the Specification of Non-Functional Properties of Component-Based Software.;51-53;3;Doctoral Symposium;Invited Participants
2004;James A. Jones;Fault Localization Using Visualization of Test Information.;54-56;3;Doctoral Symposium;Invited Participants
2004;Diana Kirk;A Flexible Software Process Model.;57-59;3;Doctoral Symposium;Invited Participants
2004;Nachiappan Nagappan;Toward a Software Testing and Reliability Early Warning Metric Suite.;60-62;3;Doctoral Symposium;Invited Participants
2004;Michael J. Pacione;Software Visualisation for Object-Oriented Program Comprehension.;63-65;3;Doctoral Symposium;Invited Participants
2004;Ciaran O'Reilly;A Weakly Constrained Approach to Software Change Coordination.;66-68;3;Doctoral Symposium;Invited Participants
2004;Roshanak Roshandel;Calculating Architectural Reliability via Modeling and Analysis.;69-71;3;Doctoral Symposium;Invited Participants
2004;Ana Belen Barragans-Martinez,Jose J. Pazos Arias;chi-SCTL/MUS: A Formal Methodology to Evolve Multi-Perspective Software Requirements Specifications.;72-74;3;Doctoral Symposium;Invited Participants
2004;Jennifer Tenzer;Improving UML Design Tools by Formal Games .;75-77;3;Doctoral Symposium;Invited Participants
2004;Leonardo Mariani;Behavior Capture and Test for Verifying Evolving Component-Based Systems.;78-80;3;Doctoral Symposium;Invited Participants
2004;Pakorn Waewsawangwong;A Constraint Architectural Description Approach to Self-Organising Component-Based Software Systems.;81-83;3;Doctoral Symposium;Invited Participants
2004;Lionel C. Briand,Yvan Labiche,Yihong Wang;Using Simulation to Empirically Investigate Test Coverage Criteria Based on Statechart.;86-95;10;Technical Sessions;Testing I
2004;Wee Kheng Leow,Siau-Cheng Khoo,Yi Sun;Automated Generation of Test Programs from Closed Specifications of Classes and Test Cases.;96-105;10;Technical Sessions;Testing I
2004;Jennifer Black,Emanuel Melachrinoudis,David R. Kaeli;Bi-Criteria Models for All-Uses Test Suite Reduction.;106-115;10;Technical Sessions;Testing I
2004;Wilhelm Hasselbring,Ralf H. Reussner,Holger Jakel,Jurgen Schlegelmilch,Thorsten Teschke,Stefan Krieghoff;The Dublo Architecture Pattern for Smooth Migration of Business Information Systems: An Experience Report.;117-126;10;Patterns and Frameworks;
2004;Mari Matinlassi;Comparison of Software Product Line Architecture Design Methods: COPA, FAST, FORM, KobrA and QADA.;127-136;10;Patterns and Frameworks;
2004;Stephen M. Blackburn,Perry Cheng,Kathryn S. McKinley;Oil and Water? High Performance Garbage Collection in Java with MMTk.;137-146;10;Patterns and Frameworks;
2004;Axel van Lamsweerde;Elaborating Security Requirements by Construction of Intentional Anti-Models.;148-157;10;Requirements;
2004;Elisa L. A. Baniassad,Siobhan Clarke;Theme: An Approach for Aspect-Oriented Analysis and Design.;158-167;10;Requirements;
2004;A. Alfonso,Victor A. Braberman,Nicolas Kicillof,Alfredo Olivero;Visual Timed Event Scenarios.;168-177;10;Requirements;
2004;James Skene,D. Davide Lamanna,Wolfgang Emmerich;Precise Service Level Agreements.;179-188;10;Quality of Service;
2004;Eric Wohlstadter,Stefan Tai,Thomas A. Mikalsen,Isabelle Rouvellou,Premkumar T. Devanbu;GlueQoS: Middleware to Sweeten Quality-of-Service Policy Interactions.;189-199;11;Quality of Service;
2004;Jin Song Dong,Chew Hung Lee,Yuan-Fang Li,Hai H. Wang;Verifying DAML+OIL and Beyond in Z/EVES.;201-210;10;Verification;
2004;Dimitra Giannakopoulou,Corina S. Pasareanu,Jamieson M. Cobleigh;Assume-Guarantee Verification of Source Code with Design-Level Assumptions.;211-220;10;Verification;
2004;Mauro Caporuscio,Paola Inverardi,Patrizio Pelliccione;Compositional Verification of Middleware-Based Software Architecture Descriptions.;221-230;10;Verification;
2004;Brian Berenbach;The Evaluation of Large, Complex UML Analysis and Design Model.;232-241;10;Unified Modeling Language;
2004;Tewfik Ziadi,Loic Helouet,Jean-Marc Jezequel;Revisiting Statechart Synthesis with an Algebraic Approach.;242-251;10;Unified Modeling Language;
2004;Jeffrey Ka-Hing Mak,Clifford Sze-Tsan Choy,Daniel Pak-Kong Lun;Precise Modeling of Design Patterns in UML.;252-261;10;Unified Modeling Language;
2004;Thomas Thelin;Team-Based Fault Content Estimation in the Software Inspection Process.;263-272;10;Empirical Methods;
2004;Barbara A. Kitchenham,Tore Dyba,Magne Jorgensen;Evidence-Based Software Engineering.;273-281;9;Empirical Methods;
2004;Parastoo Mohagheghi,Reidar Conradi,Ole M. Killi,Henrik Schwarz;An Empirical Study of Software Reuse vs. Defect-Density and Stability.;282-292;11;Empirical Methods;
2004;Wei Zhao,Lu Zhang,Yin Liu,Jiasu Sun,Fuqing Yang;SNIAFL: Towards a Static Non-Interactive Approach to Feature Location.;293-303;11;Feature-Based Software Engineering;
2004;Vu A. Ha,Murali Rangarajan,Darren D. Cofer,Harald Ruess,Bruno Dutertre;Feature-Based Decomposition of Inductive Proofs Applied to Real-Time Avionics Software: An Experience Report.;304-313;10;Feature-Based Software Engineering;
2004;Ramkrishna Chatterjee,Gopalan Arun,Sanjay Agarwal,Ben Speckhard,Ramesh Vasudevan;Using Data Versioning in Database Application Development.;315-325;11;Testing II;
2004;Dirk Beyer,Adam Chlipala,Thomas A. Henzinger,Ranjit Jhala,Rupak Majumdar;Generating Tests from Counterexamples.;326-335;10;Testing II;
2004;Saurabh Sinha,Alessandro Orso,Mary Jean Harrold;Automated Support for Development, Maintenance, and Testing in the Presence of Implicit Control Flow.;336-345;10;Testing II;
2004;Patrick Th. Eugster,Christian Heide Damm,Rachid Guerraoui;Towards Safe Distributed Application Development.;347-356;10;Software Architecture I;
2004;Mark Grechanik,Don S. Batory,Dewayne E. Perry;Design of Large-Scale Polylingual Systems.;357-366;10;Software Architecture I;
2004;Alexandre R. J. Francois;A Hybrid Architectural Style for Distributed Parallel Processing of Generic Data Streams.;367-376;10;Software Architecture I;
2004;Peter Manhart,Kurt Schneider;Breaking the Ice for Agile Development of Embedded Software: An Industry Experience Report.;378-386;9;Process and Project Management;
2004;Jon Froehlich,Paul Dourish;Unifying Artifacts and Activities in a Visual Tool for Distributed Software Development Teams.;387-396;10;Process and Project Management;
2004;Norman E. Fenton,William E. Marsh,Martin Neil,Patrick Cates,Simon Forey,Manesh Tailor;Making Resource Decisions for Software Projects.;397-406;10;Process and Project Management;
2004;Nathan D. Ryan,Alexander L. Wolf;Using Event-Based Translation to Support Dynamic Protocol Evolution.;408-417;10;Decentralized Systems;
2004;Koushik Sen,Abhay Vardhan,Gul A. Agha,Grigore Rosu;Efficient Decentralized Monitoring of Safety in Distributed Systems.;418-427;10;Decentralized Systems;
2004;Rohit Khare,Richard N. Taylor;Extending the Representational State Transfer (REST) Architectural Style for Decentralized Systems.;428-437;10;Decentralized Systems;
2004;Tudor Antoniu,Paul A. Steckler,Shriram Krishnamurthi,Erich Neuwirth,Matthias Felleisen;Validating the Unit Correctness of Spreadsheet Programs.;439-448;10;Analysis Tools;
2004;Johannes Henkel,Amer Diwan;A Tool for Writing and Debugging Algebraic Specifications.;449-458;10;Analysis Tools;
2004;Atif M. Memon,Adam A. Porter,Cemal Yilmaz,Adithya Nagarajan,Douglas C. Schmidt,Balachandran Natarajan;Skoll: Distributed Continuous Quality Assurance.;459-468;10;Analysis Tools;
2004;Hong Yan,David Garlan,Bradley R. Schmerl,Jonathan Aldrich,Rick Kazman;DiscoTect: A System for Discovering Architectures from Running Systems.;470-479;10;Dynamic Analysis;
2004;Yuriy Brun,Michael D. Ernst;Finding Latent Code Errors via Machine Learning over Program Executions.;480-490;11;Dynamic Analysis;
2004;Alessandro Orso,Taweesup Apiwattanapong,James B. Law,Gregg Rothermel,Mary Jean Harrold;An Empirical Comparison of Dynamic Impact Analysis Algorithms.;491-500;10;Dynamic Analysis;
2004;Xiangyun Zhang,Rajiv Gupta,Youtao Zhang;Efficient Forward Computation of Dynamic Slices Using Reduced Ordered Binary Decision Diagrams.;502-511;10;Slicing;
2004;Tao Wang,Abhik Roychoudhury;Using Compressed Bytecode Traces for Slicing Java Programs.;512-521;10;Slicing;
2004;Tankut Akgul,Vincent John Mooney III,Santosh Pande;A Fast Assembly Level Reverse Execution Method via Dynamic Slicing.;522-531;10;Slicing;
2004;Bas van der Raadt,Jasper Soetendal,Michiel Perdeck,Johannes C. van Vliet;Polyphony in Architecture.;533-542;10;Software Architecture II;
2004;Ian Gorton,Jereme N. Haack;Architecting in the Face of Uncertainty: An Experience Report.;543-551;9;Software Architecture II;
2004;Mark Turner,Fujun Zhu,Ioannis A. Kotsiopoulos,Michelle Russell,David Budgen,Keith H. Bennett,Pearl Brereton,John A. Keane,Paul J. Layzell,Michael Rigby;Using Web Service Technologies to Create an Information Broker: An Experience Report.;552-561;10;Software Architecture II;
2004;Thomas Zimmermann,Peter Weissgerber,Stephan Diehl,Andreas Zeller;Mining Version Histories to Guide Software Changes.;563-572;10;Software Configuration Management and Deployment;
2004;Ronald van der Lingen,Andre van der Hoek;An Experimental, Pluggable Infrastructure for Modular Configuration Management Policy Composition.;573-582;10;Software Configuration Management and Deployment;
2004;Eelco Dolstra,Eelco Visser,Merijn de Jonge;Imposing a Memory Management Discipline on Software Deployment.;583-592;10;Software Configuration Management and Deployment;
2004;Jamie Hillman,Ian Warren;An Open Framework for Dynamic Reconfiguration.;594-603;10;Dynamic Reconfiguration;
2004;Vahe Poladian,Joao P. Sousa,David Garlan,Mary M. Shaw;Dynamic Configuration of Resource-Aware Services.;604-613;10;Dynamic Reconfiguration;
2004;Humberto Cervantes,Richard S. Hall;Autonomous Adaptation to Dynamic Availability Using a Service-Oriented Component Model.;614-623;10;Dynamic Reconfiguration;
2004;Ira D. Baxter,Christopher W. Pidgeon,Michael Mehlich;DMS®: Program Transformations for Practical Scalable Software Evolution.;625-634;10;Static Analysis;
2004;Jianbin Tan,George S. Avrunin,Lori A. Clarke;Heuristic-Based Model Refinement for FLAVERS.;635-644;10;Static Analysis;
2004;Carl Gould,Zhendong Su,Premkumar T. Devanbu;Static Checking of Dynamically Generated Queries in Database Applications.;645-654;10;Static Analysis;
2004;Alexander Chatzigeorgiou,Spiros Xanthos,George Stephanides;Evaluating Object-Oriented Designs with Link Analysis.;656-665;10;Object-Oriented Programming;
2004;Neelam Soundarajan,Jason O. Hallstrom;Responsibilities and Rewards: Specifying Design Patterns.;666-675;10;Object-Oriented Programming;
2004;Andrew P. Black,Nathanael Scharli;Traits: Tools and Methodology.;676-686;11;Object-Oriented Programming;
2004;David F. Redmiles,Kumiyo Nakakoji;Supporting Reflective Practitioners.;688-690;3;Panels;
2004;Jean-Marc Jezequel,Wolfgang Emmerich;Panel MDA in Practice.;691;1;Panels;
2004;Walter F. Tichy;Agile Development: Evaluation and Experience.;692;1;Panels;
2004;David W. Bustard,Mike Holcombe,Ian Sommerville;BoF: New Directions in UK Software Engineering Research.;693-694;2;Panels;
2004;Carl Gould,Zhendong Su,Premkumar T. Devanbu;JDBC Checker: A Static Analysis Tool for SQL/JDBC Applications.;697-698;2;Research (Formal) Demos;Analysis and Visualization
2004;Alessandro Orso,James A. Jones,Mary Jean Harrold,John T. Stasko;Gammatella: Visualization of Program-Execution Data for Deployed Software.;699-700;2;Research (Formal) Demos;Analysis and Visualization
2004;Don S. Batory;Feature-Oriented Programming and the AHEAD Tool Suite.;702-703;2;Design Tools;
2004;Bradley R. Schmerl,David Garlan;AcmeStudio: Supporting Style-Centered Architecture Development.;704-705;2;Design Tools;
2004;Eric Wohlstadter,Stoney Jackson,Premkumar T. Devanbu;Design and Implementation of Distributed Crosscutting Features with DADO.;706-707;2;Design Tools;
2004;Cristovao Oliveira,Michel Wermelinger;The CommUnity Workbench.;709-710;2;Requirements and Specifications;
2004;Michael Breen;Statestep: A Tool for Systematic, Incremental Specification.;711-712;2;Requirements and Specifications;
2004;Norbert Seyff,Paul Grunbacher,Neil A. M. Maiden,Amit Tosar;Requirements Engineering Tools Go Mobile.;713-714;2;Requirements and Specifications;
2004;Leonard J. Bass,Bonnie E. John,Natalia Juristo Juzgado,Maribel Sanchez-Segura;Usability-Supporting Architectural Patterns.;716-717;2;Tutorials;
2004;Barry W. Boehm,Richard Turner;Balancing Agility and Discipline: Evaluating and Integrating Agile and Plan-Driven Methods.;718-719;2;Tutorials;
2004;Jan Bosch;Software Variability Management.;720-721;2;Tutorials;
2004;David N. Card;Statistical Techniques for Software Engineering Practice.;722-723;2;Tutorials;
2004;Jin Song Dong;Software Modeling Techniques and the Semantic Web.;724-725;2;Tutorials;
2004;Ian Gorton,Anna Liu;Architectures and Technologies for Enterprise Application Integration.;726-727;2;Tutorials;
2004;Mark Harman,Joachim Wegener;Getting Results from Search-Based Approaches to Software Engineering.;728-729;2;Tutorials;
2004;John C. Knight;An Introduction to Computing System Dependability.;730-731;2;Tutorials;
2004;Jyrki Kontio,Magnus Hoglund,Jan Ryden,Pekka Abrahamsson;Managing Commitments and Risks: Challenges in Distributed Agile Development.;732-733;2;Tutorials;
2004;Oscar Nierstrasz,Serge Demeyer;Object-Oriented Reengineering Patterns.;734-735;2;Tutorials;
2004;Dewayne E. Perry,Susan Elliott Sim,Steve M. Easterbrook;Case Studies for Software Engineers.;736-738;3;Tutorials;
2004;Mauro Pezze,Michal Young;Testing Object Oriented Software.;739-740;2;Tutorials;
2004;Bran Selic;Tutorial: An Overview of UML 2.0.;741-742;2;Tutorials;
2004;Paolo Tonella;Formal Concept Analysis in Software Engineering.;743-744;2;Tutorials;
2004;Arie van Deursen,Claudio Riva;Software Architecture Reconstruction.;745-746;2;Tutorials;
2004;Robert M. Balzer,Marin Litoiu,Hausi A. Muller,Dennis B. Smith,Margaret-Anne D. Storey,Scott R. Tilley,Kenny Wong;4th International Workshop on Adoption-Centric Software Engineering.;748-74;-673;Workshops;
2004;Antonio Carzaniga,Pascal Fenkam;Third International Workshop on Distributed Event-Based Systems - DEBS '04.;750-751;2;Workshops;
2004;Ricardo Choren Noya,Alessandro Garcia,Carlos Jose Pereira de Lucena,Martin L. Griss,David Chenho Kung,Naftaly H. Minsky,Alexander Romanovsky;Software Engineering for Large-Scale Multi-agent Systems - SELMAS'04.;752-753;2;Workshops;
2004;Karl Cox,Jon G. Hall,Lucia Rapanotti;1st International Workshop on Advances and Applications of Problem Frames.;754-755;2;Workshops;
2004;Daniela E. Herlea,Filippo Lanubile;The 3rd International Workshop on Global Software Development.;756-757;2;Workshops;
2004;Rogerio de Lemos,Cristina Gacek,Alexander Romanovsky;Twin Workshops on Architecting Dependable Systems (WADS 2004).;758;1;Workshops;
2004;Eric Dubois 0001,Xavier Franch;Models and Processes for the Evaluation of COTS Components.;759-760;2;Workshops;
2004;M. Hakan Erdogmus,Jyrki Kontio,Michael A. Cusumano,David Raffo;The Sixth International Workshop on Economics-Driven Software Engineering Research (EDSER-6).;761-762;2;Workshops;
2004;David Evans,Raimondas Lencevicius;Second International Workshop on Dynamic Analysis (WODA 2004).;763;1;Workshops;
2004;Joseph Feller,Brian Fitzgerald,Scott A. Hissam,Karim Lakhani;Collaboration, Conflict and Control: The 4th Workshop on Open Source Software Engineering.;764-765;2;Workshops;
2004;Holger Giese,Ingolf H. Kruger;Third Workshop on Scenarios and State Machines: Models, Algorithms, and Tools (SCESM'04).;766-767;2;Workshops;
2004;John C. Grundy,Ray Welland,Hermann Stoeckle;Workshop on Directions in Software Engineering Environments (WoDiSEE).;768-769;2;Workshops;
2004;Ahmed E. Hassan,Richard C. Holt,Audris Mockus;MSR 2004: International Workshop on Mining Software Repositories.;770-771;2;Workshops;
2004;Philip Johnson;Workshop on Software Engineering for High Performance Computing System (HPCS) Applications.;772;1;Workshops;
2004;Rick Kazman,Leonard J. Bass,Bonnie E. John;Bridging the Gaps II: Bridging the Gaps between Software Engineering and Human-Computer Interaction.;773-774;2;Workshops;
2004;Alessandro Orso,Adam A. Porter;Second ICSE Workshop on Remote Analysis and Measurement of Software Systems (RAMSS).;775-776;2;Workshops;
2004;Dietmar Pfahl,Ioana Rus,David Raffo,Paul Wernick;ProSim'04 - The 5th International Workshop on Software Process Simulation and Modeling.;777-778;2;Workshops;
2004;Chris Salzmann,Thomas Stauner,Alexander Pretschner;ICSE Workshop: Software Engineering for Automotive Systems.;779;1;Workshops;
2004;Bernard Wong,Sunita Chulani,June M. Verner,Barry W. Boehm;Second Workshop on Software Quality.;780-782;3;Workshops;
2003;David H. Lorenz,John M. Vlissides;Pluggable Reflection: Decoupling Meta-Interface and Implementation.;3-13;11;Technical Papers;Component Technologies
2003;Katsuro Inoue,Reishi Yokomori,Hikaru Fujiwara,Tetsuo Yamamoto,Makoto Matsushita,Shinji Kusumoto;Component Rank: Relative Significance Rank for Software Component Search.;14-24;11;Technical Papers;Component Technologies
2003;Johann Oberleitner,Thomas Gschwind,Mehdi Jazayeri;The Vienna Component Framework Enabling Composition Across Component Models.;25-37;13;Technical Papers;Component Technologies
2003;Myra B. Cohen,Peter B. Gibbons,Warwick B. Mugridge,Charles J. Colbourn;Constructing Test Suites for Interaction Testing.;38-48;11;Testing I;
2003;Sebastian G. Elbaum,Srikanth Karre,Gregg Rothermel;Improving Web Application Testing with User Session Data.;49-59;11;Testing I;
2003;Michael Harder,Jeff Mellen,Michael D. Ernst;Improving Test Suites via Operational Abstraction.;60-73;14;Testing I;
2003;Susan Elliott Sim,Steve M. Easterbrook,Richard C. Holt;Using Benchmarking to Advance Research: A Challenge to Software Engineering.;74-83;10;Empirical Studies I;
2003;Torgeir Dingsoyr,Emil Royrvik;An Empirical Study of an Informal Knowledge Repository in a Medium-Sized Software Consulting Company.;84-92;9;Empirical Studies I;
2003;Margaret M. Burnett,Curtis R. Cook,Omkar Pendse,Gregg Rothermel,Jay Summet,Chris S. Wallace;End-User Software Engineering with Assertions in the Spreadsheet Paradigm.;93-105;13;Empirical Studies I;
2003;Evelyn J. Barry,Chris F. Kemerer,Sandra Slaughter;On the Uniformity of Software Evolution Patterns.;106-113;8;Design Recovery and Documentation;
2003;Keith Chan,Zhi Cong Leo Liang,Amir Michail;Design Recovery of Interactive Graphical Applications.;114-124;11;Design Recovery and Documentation;
2003;Andrian Marcus,Jonathan I. Maletic;Recovering Documentation-to-Source-Code Traceability Links using Latent Semantic Indexing.;125-137;13;Design Recovery and Documentation;
2003;Jurgen Dingel;Computer-Assisted Assume/Guarantee Reasoning with VeriSoft.;138-148;11;Formal Methods I;
2003;Amnon H. Eden,Rick Kazman;Architecture, Design, Implementation.;149-159;11;Formal Methods I;
2003;John Hatcliff,Xianghua Deng,Matthew B. Dwyer,Georg Jung,Venkatesh Prasad Ranganath;Cadena: An Integrated Development, Analysis, and Verification Environment for Component-based Systems.;160-173;14;Formal Methods I;
2003;Eric Wohlstadter,Stoney Jackson,Premkumar T. Devanbu;DADO: Enhancing Middleware to Support Crosscutting Features in Distributed, Heterogeneous Systems.;174-186;13;Software Design;
2003;Don S. Batory,Jacob Neal Sarvela,Axel Rauschmayer;Scaling Step-Wise Refinement.;187-197;11;Software Design;
2003;David Coppit,Kevin J. Sullivan;Sound Methods and Effective Tools for Engineering Modeling and Analysis.;198-209;12;Software Design;
2003;Atanas Rountev,Ana Milanova,Barbara G. Ryder;Fragment Class Analysis for Testing of Polymorphism in Java Software.;210-220;11;Testing II;
2003;Antonia Bertolino,Andrea Polini;A Framework for Component Deployment Testing.;221-231;11;Testing II;
2003;Hyoung Seok Hong,Sung Deok Cha,Insup Lee,Oleg Sokolsky,Hasan Ural;Data Flow Testing as Model Checking.;232-243;12;Testing II;
2003;Pekka Abrahamsson,Juhani Warsta,Mikko T. Siponen,Jussi Ronkainen;New Directions on Agile Methods: A Comparative Analysis.;244-254;11;Software Process;
2003;Roope Kylmakoski;Efficient Authoring of Software Documentation Using RaPiD7.;255-261;7;Software Process;
2003;Giuseppe Valetto,Gail E. Kaiser;Using Process Technology to Control and Coordinate Software Adaptation.;262-273;12;Software Process;
2003;Audris Mockus,David M. Weiss,Ping Zhang;Understanding and Predicting Effort in Software Projects.;274-284;11;Empirical Studies II;
2003;Melanie Ruhe,D. Ross Jeffery,Isabella Wieczorek;Cost Estimation for Web Applications.;285-294;10;Empirical Studies II;
2003;Daniel L. Moody,Guttorm Sindre,Terje Brasethvik,Arne Solvberg;Evaluating the Quality of Information Models: Empirical Testing of a Conceptual Model Quality Framework.;295-307;13;Empirical Studies II;
2003;James B. Law,Gregg Rothermel;Whole Program Path-Based Dynamic Impact Analysis.;308-318;11;Program Analysis;
2003;Xiangyun Zhang,Rajiv Gupta,Youtao Zhang;Precise Dynamic Slicing Algorithms.;319-329;11;Program Analysis;
2003;David M. Binkley,Mark Harman;An Empirical Study of Predicate Dependence Levels and Trends.;330-340;11;Program Analysis;
2003;Michelle Casagni,Margaret J. Lyell;Comparison of Two Component Frameworks: The FIPA-Compliant Multi-Agent System and The Web-Centric J2EE Platform.;341-351;11;Software Architecture I;
2003;Elisa L. A. Baniassad,Gail C. Murphy,Christa Schwanninger;Design Pattern Rationale Graphs: Linking Design to Source.;352-362;11;Software Architecture I;
2003;William G. Griswold,Robert T. Boyer,Steven W. Brown,Tan Minh Truong;A Component Architecture for an Extensible, Highly Integrated Context-Aware Computing Infrastructure.;363-373;11;Software Architecture I;
2003;Bridget Spitznagel,David Garlan;A Compositional Formalization of Connector Wrappers.;374-384;11;Formal Methods II;
2003;Sagar Chaki,Edmund M. Clarke,Alex Groce,Somesh Jha,Helmut Veith;Modular Verification of Software Components in C.;385-395;11;Formal Methods II;
2003;Arnab Ray,Rance Cleaveland;Architectural Interaction Diagrams: AIDs for System Modeling.;396-407;12;Formal Methods II;
2003;Davor Cubranic,Gail C. Murphy;Hipikat: Recommending Pertinent Software Development Artifacts.;408-418;11;Software Understanding;
2003;Yunwen Ye,Kouichi Kishida;Toward an Understanding of the Motivation of Open Source Software Developers.;419-429;11;Software Understanding;
2003;Andre Marburger,Bernhard Westfechtel;Tools for Understanding the Behavior of Telecommunication Systems.;430-443;14;Software Understanding;
2003;Anita Sarma,Zahra Noroozi,Andre van der Hoek;Palantír: Raising Awareness among Configuration Management Workspaces .;444-454;11;Consistency Management and Quality Assurance;
2003;Christian Nentwich,Wolfgang Emmerich,Anthony Finkelstein;Consistency Management with Repair Actions.;455-464;10;Consistency Management and Quality Assurance;
2003;Andy Podgurski,David Leon,Patrick Francis,Wes Masri,Melinda Minch,Jiayang Sun,Bin Wang;Automated Support for Classifying Software Failure Reports.;465-477;13;Consistency Management and Quality Assurance;
2003;Robert Smeikal,Karl M. Goschka;Fault-tolerance in a Distributed Management System: a Case Study.;478-483;6;Experience Reports;Case Studies
2003;Mukund Raghavachari,Darrell Reimer,Robert D. Johnson;The Deployer's Problem: Configuring Application Servers for Performance and Reliability.;484-489;6;Experience Reports;Case Studies
2003;Jonathan P. Whittle,Jyoti Saboo,Richard Kwan;From Scenarios to Code: An Air Traffic Control Case Study.;490-497;8;Experience Reports;Case Studies
2003;Klaus Grimm;Software Technology in an Automotive Company - Major Challenges.;498-505;8;Automotive Software Engineering;
2003;Thomas Gantner,Tobias Barth;Experiences on Defining and Evaluating an Adapted Review Process.;506-511;6;Process Analysis and Improvement;
2003;Nadine Heumesser,Frank Houdek;Towards Systematic Recycling of Systems Requirements.;512-519;8;Process Analysis and Improvement;
2003;Christof Ebert,Michel Smouts;Tricks and Traps of Initiating a Product Line Concept in Existing Product.;520-527;8;Process Analysis and Improvement;
2003;Stefan Berner;About the Development of a Point of Sale System: an Experience Report.;528-533;6;Process and Tools;
2003;Kurt Schneider,Jan-Peter von Hunnius;Effective Experience Repositories for Software Engineering.;534-539;6;Process and Tools;
2003;Greg Borchers;The Software Engineering Impacts of Cultural Factors on Multi-cultural Software Development Teams.;540-547;8;Process and Tools;
2003;George Fairbanks;"Why Can't They Create Architecture Models Like ""Developer X""? An Experience Report.";548-552;5;Software Architecture II;
2003;Lutz Prechelt,Daniel J. Hutzel;The Co-Evolution of a Hype and a Software Architecture: Experience of Component-Producing Large-Scale EJB Early Adopters.;553-556;4;Software Architecture II;
2003;Mike Moore,Rick Kazman,Mark Klein,Jai Asundi;Quantifying the Value of Architecture Design Decisions: Lessons from the Field.;557-563;7;Software Architecture II;
2003;E. Michael Maximilien,Laurie A. Williams;Assessing Test-Driven Development at IBM.;564-569;6;Testing and Fault Correction;
2003;Dolores M. Zage,Wayne M. Zage;An Analysis of the Fault Correction Process in a Large-Scale SDL Production Model.;570-577;8;Testing and Fault Correction;
2003;Robyn R. Lutz,Ines Carmen Mikulski;Requirements Discovery during the Testing of Safety-Critical Software.;578-585;8;Testing and Fault Correction;
2003;Gorel Hedin,Lars Bendix,Boris Magnusson;Introducing Software Engineering by means of Extreme Programming.;586-593;8;Papers on Software Engineering Education and Training;Extreme Programming
2003;Jean-Guy Schneider,Lorraine Johnston;eXtreme Programming at Universities - An Educational Perspective.;594-601;8;Papers on Software Engineering Education and Training;Extreme Programming
2003;Charlie McDowell,Linda L. Werner,Heather E. Bullock,Julian Fernald;The Impact of Pair Programming on Student Performance, Perception and Persistence.;602-607;6;Undergraduate Education;
2003;Guttorm Sindre,Steinar Line,Ottar V. Valvag;Positive Experiences with an Open Project Assignment in an Introductory Programming Course.;608-613;6;Undergraduate Education;
2003;Alex Baker,Emily Oh Navarro,Andre van der Hoek;Problems and Programmers: An Educational Software Engineering Card Game.;614-621;8;Undergraduate Education;
2003;Jane Huffman Hayes,Timothy C. Lethbridge,Daniel Port;Evaluating Individual Contribution Toward Group Software Engineering Projects.;622-627;6;Course Delivery and Evaluation;
2003;Andrew Simpson,Andrew Martin,Jeremy Gibbons,Jim Davies,Steve McKeever;On The Supervision and Assessment Of Part-Time Postgraduate Software Engineering Projects.;628-633;6;Course Delivery and Evaluation;
2003;Donald J. Bagert,Susan A. Mengel;Using a Web-Based Project Process Throughout the Software Engineering Curriculum.;634-640;7;Course Delivery and Evaluation;
2003;Philip M. Johnson,Hongbing Kou,Joy Agustin,Christopher Chan,Carleton A. Moore,Jitender Miglani,Shenyan Zhen,William E. J. Doane;Beyond the Personal Software Process: Metrics collection and analysis for the differently disciplined.;641-646;6;Process and Methodology;
2003;Donald F. Ross;Teaching Contract Programming Concepts to Future Software Engineers.;647;1;Process and Methodology;
2003;Ahmed Seffah,Alina Andreevskaia;Empowering Software Engineers in Human-Centered Design.;653-659;7;Process and Methodology;
2003;Bertrand Meyer;The Grand Challenge of Trusted Components.;660-667;8;Invited Keynote Papers;
2003;Joanne McGrath Cohoon;Must There Be So Few? Including Women in CS.;668-675;8;Invited Keynote Papers;
2003;Bashar Nuseibeh,Jeffrey Kramer,Anthony Finkelstein;ViewPoints: meaningful relationships are difficult!;676-683;8;Invited Paper from the Awardees of the Most Influential Paper from ICSE'15;
2003;Clemens A. Szyperski;Component Technology - What, Where, and How?.;684-693;10;Invited Papers on the Frontiers of Software Practice;
2003;Douglas C. Schmidt,Frank Buschmann;Patterns, Frameworks, and Middleware: Their Synergistic Relationships.;694-704;11;Invited Papers on the Frontiers of Software Practice;
2003;Richard A. Kemmerer;Cybersecurity.;705-717;13;Invited Papers on the Frontiers of Software Practice;
2003;Hossein Saiedian;Panel: eXtreme Programming: Helpful or Harmful?;718;1;Panel Overviews;
2003;Manfred Broy;Automotive Software Engineering.;719-720;2;Panel Overviews;
2003;Robert J. Walker,Lionel C. Briand,David Notkin,Carolyn B. Seaman,Walter F. Tichy;Panel: Empirical Validation-What, Why, When, and How.;721-722;2;Panel Overviews;
2003;Premkumar T. Devanbu,Robert M. Balzer,Don S. Batory,Gregor Kiczales,John Launchbury,David Lorge Parnas,Peri L. Tarr;Modularity in the New Millenium: A Panel Summary.;723-725;3;Panel Overviews;
2003;Mary M. Shaw;Writing Good Software Engineering Research Paper.;726-737;12;Mini-Tutorial;
2003;David N. Card;Practical Software Measurement.;738-739;2;One and Two-day Tutorial;
2003;Paul C. Clements,David Garlan,Reed Little,Robert L. Nord,Judith A. Stafford;Documenting Software Architectures: Views and Beyond.;740-741;2;One and Two-day Tutorial;
2003;John C. Knight;Computing Systems Dependability.;742-743;2;One and Two-day Tutorial;
2003;Axel van Lamsweerde;Goal-Oriented Requirements Engineering: From System Objectives to UML Models to Precise Software Specifications.;744-745;2;One and Two-day Tutorial;
2003;Larry L. Constantine,Lucy A. D. Lockwood;Usage-Centered Software Engineering: An Agile Approach to Integrating Users, User Interfaces, and Usability into Software Engineering Practice.;746-747;2;One and Two-day Tutorial;
2003;Richard A. Kemmerer,Giovanni Vigna;Internet Security and Intrusion Detection.;748-749;2;One and Two-day Tutorial;
2003;Douglas C. Schmidt;Pattern-Oriented Distributed System Architectures.;750;1;One and Two-day Tutorial;
2003;John Klein,Barry Price,David M. Weiss;Industrial-Strength Software Product-Line Engineering.;751-752;2;One and Two-day Tutorial;
2003;Don S. Batory;A Tutorial on Feature Oriented Programming and Product-Lines.;753-754;2;One and Two-day Tutorial;
2003;Bran Selic;Tutorial H2: An Overview of UML 2.0.;755-756;2;One and Two-day Tutorial;
2003;Jan Bosch,Natalia Juristo Juzgado;Designing Software Architectures for Usability.;757-758;2;One and Two-day Tutorial;
2003;Torben Weis,Andreas Ulbrich,Kurt Geihs;Quality of Service Engineering with UML, .NET, and CORBA.;759-761;3;One and Two-day Tutorial;
2003;Dick Hamlet,Mary Lou Soffa;Report on the ICSE 2003 Doctoral Symposium.;762-766;5;Workshop Overviews;
2003;Leon J. Osterweil;New Software Engineering Faculty Symposium (NSEFS 03).;767-768;2;Workshop Overviews;
2003;Stuart R. Faulk,Lawrence G. Votta;SE Pioneers Symposium.;769-770;2;Workshop Overviews;
2003;Carlos Jose Pereira de Lucena,Jose Alberto R. P. Sardinha,Alessandro Garcia,Alexander Romanovsky,Jaelson Castro,Paulo S. C. Alencar,Donald D. Cowan;Software Engineering for Large-Scale Multi-Agent Systems - SELMAS'2003.;771-772;2;Workshop Overviews;
2003;Jyrki Kontio,Shawn A. Butler;"Fifth International Workshop on Economics-driven Software Engineering Research (EDSER-5) ""The Search for Value in Engineering Decisions"".";773-774;2;Workshop Overviews;
2003;Ivica Crnkovic,Heinz W. Schmidt,Judith A. Stafford,Kurt C. Wallnau;6th ICSE Workshop on Component-Based Software Engineering: Automated Reasoning and Prediction.;775-776;2;Workshop Overviews;
2003;Rick Kazman,Leonard J. Bass,Jan Bosch;Bridging the Gaps Between Software Engineering and Human-Computer Interaction.;777-778;2;Workshop Overviews;
2003;Peter Knauber,Jan Bosch;ICSE Workshop on Software Variability Management.;779-780;2;Workshop Overviews;
2003;Rogerio de Lemos,Cristina Gacek,Alexander Romanovsky;ICSE 2003 Workshop on Software Architectures for Dependable Systems.;781-782;2;Workshop Overviews;
2003;Alexander Egyed,Martin Glinz,Ingolf H. Kruger,Tarja Systa,Sebastian Uchitel,Albert Zundorf;Second Workshop on Scenarios and State Machines: Models, Algorithms, and Tools.;783-784;2;Workshop Overviews;
2003;Joseph Feller,Brian Fitzgerald,Scott A. Hissam,Karim Lakhani;The 3rd Workshop on Open Source Software Engineering.;785-786;2;Workshop Overviews;
2003;Martin S. Feather,Allen P. Nikora,Constance L. Heitmeyer,Nancy R. Mead;ICSE 2003 Workshop on Software Engineering for High Assurance Systems: Synergies between Process, Product, and Profiling (SEHAS 2003).;787-788;2;Workshop Overviews;
2003;Robert M. Balzer,Jens H. Weber-Jahnke,Marin Litoiu,Hausi A. Muller,Dennis B. Smith,Margaret-Anne D. Storey,Scott R. Tilley,Ken Wong;3rd International Workshop on Adoption-centric Software Engineering ACSE 2003.;789-790;2;Workshop Overviews;
2003;Alessandro Orso,Adam A. Porter;ICSE Workshop on Remote Analysis and Measurement of Software Systems (RAMSS).;791-792;2;Workshop Overviews;
2003;Daniela E. Herlea,Filippo Lanubile,Heather L. Oppenheimer;Addressing the Challenges of Software Industry Globalization: The Workshop on Global Software Development.;793-794;2;Workshop Overviews;
2003;Jonathan E. Cook,Michael D. Ernst;ICSE Workshop on Dynamic Analysis (WODA 2003).;795-796;2;Workshop Overviews;
2003;Daniel M. Berry,Rick Kazman,Roel Wieringa;Second International Workshop on From SofTware Requirements to Architectures (STRAW?03).;797-799;3;Workshop Overviews;
2003;Bruce Schafer,Mauro Pezze;Research Demonstrations and Posters.;800-801;2;Research Demonstration Summaries;
2003;David Chays,Yuetang Deng;Demonstration of AGENDA Tool Set for Testing Relational Database Applications.;802-803;2;Research Demonstration Summaries;
2003;Steve M. Easterbrook,Marsha Chechik,Benet Devereux,Arie Gurfinkel,Albert Y. C. Lai,Victor Petrovykh,Anya Tafliovich,Christopher D. Thompson-Walsh;\chiChek: A Model Checker for Multi-Valued Reasoning.;804-805;2;Research Demonstration Summaries;
2003;Martin Fredriksson,Rune Gustavsson;Trustworthy and sustainable operations in marine environments.;806-807;2;Research Demonstration Summaries;
2003;T. Wang,Ahmed E. Hassan,Ajith Guedem,Walid Abdelmoez,Katerina Goseva-Popstojanova,Hany H. Ammar;Architectural Level Risk Assessment Tool Based on UML Specifications.;808-809;2;Research Demonstration Summaries;
2003;Stanislaw Jarzabek,Paul Bassett,Hongyu Zhang,Weishan Zhang;XVCL: XML-based Variant Configuration Language.;810-811;2;Research Demonstration Summaries;
2003;Jonathan I. Maletic,Andrian Marcus,Louis Feng;Source Viewer 3D (sv3D) - A Framework for Software Visualization.;812-813;2;Research Demonstration Summaries;
2003;Keith Chan,Annie Chen,Zhi Cong Leo Liang,Amir Michail,Minh Hoai Nguyen,Nicholas Seow;DRT: A Tool for Design Recovery of Interactive Graphical Applications.;814-815;2;Research Demonstration Summaries;
2003;Frank Padberg;A Software Process Scheduling Simulator.;816-817;2;Research Demonstration Summaries;
2003;Steven P. Reiss,Christina M. Kennedy,Tom Wooldridge,Shriram Krishnamurthi;CLIME: An Environment for Constrained Evolution Demonstration Description.;818-819;2;Research Demonstration Summaries;
2003;Steven P. Reiss;JIVE: Visualizing Java in Action Demonstration Description.;820-821;2;Research Demonstration Summaries;
2003;Martin P. Robillard,Gail C. Murphy;FEAT. A Tool for Locating, Describing, and Analyzing Concerns in Source Code.;822-823;2;Research Demonstration Summaries;
2003;Jeffry T. Russell,Margarida F. Jacome;Embedded Architect: A Tool for Early Performance Evaluation of Embedded Software.;824-825;2;Research Demonstration Summaries;
2003;Christian Seybold,Martin Glinz,Silvio Meier,Nancy Schett;An Effective Layout Adaptation Technique for a Graphical Modeling Tool.;826-827;2;Research Demonstration Summaries;
2003;Reishi Yokomori,Takashi Ishio,Tetsuo Yamamoto,Makoto Matsushita,Shinji Kusumoto,Katsuro Inoue;Java Program Analysis Projects in Osaka University: Aspect-Based Slicing System ADAS and Ranked-Component Search System SPARS-J.;828-829;2;Research Demonstration Summaries;
2002;Donald Feinberg;Transforming and extending the enterprise through IT.;3;1;Invited Presentations;
2002;Donna H. Rhodes;Systems engineering: an essential engineering discipline for the 21st century.;4;1;Invited Presentations;
2002;Robert M. Balzer;Living with COTS.;5;1;Invited Presentations;
2002;Rachel L. Smith,George S. Avrunin,Lori A. Clarke,Leon J. Osterweil;PROPEL: an approach supporting property elucidation.;11-21;11;Software Specification;
2002;C. Murray Woodside,Dorin Bogdan Petriu,Khalid H. Siddiqui;Performance-related completions for software specifications.;22-32;11;Software Specification;
2002;Marc K. Zimmerman,Kristina Lundqvist,Nancy G. Leveson;Investigating the readability of state-based formal requirements specification languages.;33-43;11;Software Specification;
2002;Alastair Dunsmore,Marc Roper,Murray Wood;Further investigations into the development and evaluation of reading techniques for object-oriented code inspection.;47-57;11;Empirical Methods;
2002;Frank Padberg;Empirical interval estimates for the defect content after an inspection.;58-68;11;Empirical Methods;
2002;Victor R. Basili,Frank E. McGarry,Rose Pajerski,Marvin V. Zelkowitz;Lessons learned from 25 years of process improvement: the rise and fall of the NASA software engineering laboratory.;69-79;11;Empirical Methods;
2002;Emmanuel Letier,Axel van Lamsweerde;Agent-based tactics for goal-oriented requirements elaboration.;83-93;11;Requirements Engineering;
2002;Andres Silva;Requirements, domain and specifications: a viewpoint-based approach to requirements engineering.;94-104;11;Requirements Engineering;
2002;Jan Hendrik Hausmann,Reiko Heckel,Gabriele Taentzer;Detection of conflicting functional requirements in a use case-driven approach: a static analysis technique based on graph transformation.;105-115;11;Requirements Engineering;
2002;Jung-Min Kim,Adam A. Porter;A history-based test prioritization technique for regression testing in resource constrained environments.;119-129;11;Software Testing;
2002;Gregg Rothermel,Sebastian G. Elbaum,Alexey G. Malishevsky,Praveen Kallakuri,Brian Davia;The impact of test suite granularity on the cost-effectiveness of regression testing.;130-140;11;Software Testing;
2002;Marc Fisher II,Mingming Cao,Gregg Rothermel,Curtis R. Cook,Margaret M. Burnett;Automated test case generation for spreadsheets.;141-153;13;Software Testing;
2002;Elisabetta Di Nitto,Luigi Lavazza,Marco Schiavoni,Emma Tracanella,Michele Trombetta;Deriving executable process descriptions from UML.;155-165;11;Software Process;
2002;Rik Eshuis,Roel Wieringa;Verification support for workflow design with UML activity graphs.;166-176;11;Software Process;
2002;Jamie Dinkelacker,Pankaj K. Garg,Robert C. Miller,Dean Nelson;Progressive open source.;177-184;8;Software Process;
2002;Jonathan Aldrich,Craig Chambers,David Notkin;ArchJava: connecting software architecture to implementation.;187-197;11;Architecture and Implementation;
2002;Vugranam C. Sreedhar;Mixin Up components.;198-207;10;Architecture and Implementation;
2002;Eric Norman Eide,Alastair D. Reid,John Regehr,Jay Lepreau;Static and dynamic structure in design patterns.;208-218;11;Architecture and Implementation;
2002;David M. Weiss,David Bennett,John Y. Payseur,Patrick Tendick,Ping Zhang;Goal-oriented software assessment.;221-231;11;Software Evaluation;
2002;Shawn A. Butler;Security attribute evaluation method: a cost-benefit approach.;232-240;9;Software Evaluation;
2002;Giovanni Denaro,Mauro Pezze;An empirical evaluation of fault-proneness models.;241-251;11;Software Evaluation;
2002;Robbert Christiaan van Ommering;Building product populations with sofware components.;255-265;11;Software Architecture;
2002;Eric M. Dashofy,Andre van der Hoek,Richard N. Taylor;An infrastructure for the rapid development of XML-based architecture description languages.;266-276;11;Software Architecture;
2002;Paul T. Graunke,Shriram Krishnamurthi;Advanced control flows for flexible graphical user interfaces: or, growing GUIs on trees or, bookmarking GUIs.;277-287;11;Software Architecture;
2002;Sudheendra Hangal,Monica S. Lam;Tracking down software bugs using automatic anomaly detection.;291-301;11;Dynamic Program Analysis;
2002;Orna Raz,Philip Koopman,Mary M. Shaw;Semantic anomaly detection in online data sources.;302-312;11;Dynamic Program Analysis;
2002;Brian Demsky,Martin C. Rinard;Role-based exploration of object-oriented programs.;313-334;22;Dynamic Program Analysis;
2002;Amir Michail;Browsing and searching source code of applications written using a GUIframework.;327-337;11;Design Recovery;
2002;Jorg Niere,Wilhelm Schafer,Jorg P. Wadsack,Lothar Wendehals,Jim Welsh;Towards pattern-based design recovery.;338-348;11;Design Recovery;
2002;Ahmed E. Hassan,Richard C. Holt;Architecture recovery of web applications.;349-359;11;Design Recovery;
2002;Gruia-Catalin Roman,Christine Julien,Qingfeng Huang;Network abstractions for context-aware mobile computing.;363-373;11;Mobile and Distributed Computing;
2002;Yaron Weinsberg,Israel Ben-Shaul;A programming model and system for disconnected-aware applications on resource-constrained devices.;374-384;11;Mobile and Distributed Computing;
2002;Takeshi Inoue,Yasutaka Hino,Kouji Hayashi,Masanori Narukawa;A dynamic pair-program sending architecture for industrial remote operations.;385-391;7;Mobile and Distributed Computing;
2002;Matthias Gehrke,Holger Giese,Ulrich Nickel,Jorg Niere,Matthias Tichy,Jorg P. Wadsack,Albert Zundorf;Reporting about industrial strength software engineering courses for undergraduates.;395-405;11;Software Maintenance;
2002;Martin P. Robillard,Gail C. Murphy;Concern graphs: finding and describing concerns using structural program dependencies.;406-416;11;Software Maintenance;
2002;Alok Mehta,George T. Heineman;Evolving legacy system features into fine-grained components.;417-427;11;Software Maintenance;
2002;Satish Chandra,Patrice Godefroid,Christopher Palm;Software model checking in practice: an industrial case study.;431-441;11;Concurrency;
2002;Xianghua Deng,Matthew B. Dwyer,John Hatcliff,Masaaki Mizuno;Invariant-based specification, synthesis, and verification of synchronization in concurrent programs.;442-452;11;Concurrency;
2002;Aaron Greenhouse,William L. Scherlis;Assuring and evolving concurrent programs: annotations and policy.;453-463;11;Concurrency;
2002;James A. Jones,Mary Jean Harrold,John T. Stasko;Visualization of test information to assist fault localization.;467-477;11;Program Analysis;
2002;Torsten Robschink,Gregor Snelting;Efficient path conditions in dependence graphs.;478-488;11;Program Analysis;
2002;Abhik Roychoudhury,Tulika Mitra;Specifying multithreaded Java semantics for program verification.;489-499;11;Program Analysis;
2002;Audris Mockus,James D. Herbsleb;Expertise browser: a quantitative approach to identifying expertise.;503-512;10;Software Presentation;
2002;Yunwen Ye,Gerhard G. Fischer;Supporting reuse by delivering task-relevant and personalized information.;513-523;11;Software Presentation;
2002;Kenneth M. Anderson,Susanne A. Sherba,William Van Lepthien;Towards large-scale information integration.;524-534;11;Software Presentation;
2002;Wolfgang Emmerich;Distributed component technologies and their software engineering implications.;537-546;10;State-of-the-art presentations;
2002;John C. Knight;Safety critical systems: challenges and directions.;547-550;4;State-of-the-art presentations;
2002;Ian Gorton,Anna Liu;Software component quality assessment in practice: successes and practical impediments.;555-558;4;Industry track papers and presentations: invited presentations;
2002;Larry Augustin,Dan Bressler,Guy Smith;Accelerating software development through collaboration.;559-563;5;Industry track papers and presentations: invited presentations;
2002;Dick Mays,Richard J. LeBlanc;The cyclefree methodology: a simple approach to building reliable, robust, real-time systems.;567-575;9;Industry track papers and presentations: real time systems;
2002;Shinji Kusumoto,Masahiro Imagawa,Katsuro Inoue,Shuuma Morimoto,Kouji Matsusita,Michio Tsuda;Function point measurement from Java programs.;576-582;7;Industry track papers and presentations: real time systems;
2002;Alessandro Maccari;Experiences in assessing product family software architecture for evolution.;585-592;8;Industry track papers and presentations: product lines;
2002;Klaus Schmid;A comprehensive product line scoping approach and its validation.;593-603;11;Industry track papers and presentations: product lines;
2002;Lars Bratthall,Robert van der Geest,Holger Hofmann,Edgar Jellum,Zbigniew Korendo,Robert Martinez,Michal Orkisz,Christian Zeidler,Johan S. Andersson;Integrating hundred's of product through one architecture: the industrial IT architecture.;604-614;11;Industry track papers and presentations: product lines;
2002;Amr Elssamadisy,Gregory Schalliol;"Recognizing and responding to ""bad smells"" in extreme programming.";617-622;6;Industry track papers and presentations: technology trends;
2002;Tushar K. Hazra;Building enterprise portals: principles to practice.;623-633;11;Industry track papers and presentations: technology trends;
2002;Kival Chaves Weber,Celia Joseli do Nascimento;Brazilian software quality in 2002.;634-638;5;Industry track papers and presentations: technology trends;
2002;Marcus Ciolkowski,Oliver Laitenberger,H. Dieter Rombach,Forrest Shull,Dewayne E. Perry;Software inspections, reviews & walkthroughs.;641-642;2;Impact presentations;
2002;Jacky Estublier,David B. Leblang,Geoffrey Clemm,Reidar Conradi,Andre van der Hoek,Walter F. Tichy,Darcy Wiborg Weber;Impact of the research community for the field of software configuration management.;643-644;2;Impact presentations;
2002;Mikio Aoyama,Sanjiva Weerawarana,Hiroshi Maruyama,Clemens A. Szyperski,Kevin J. Sullivan,Doug Lea;Web services engineering: promises and challenges.;647-648;2;Panels;
2002;Leon J. Osterweil,Philippe Kruchten,Martin Fowler,Wilhelm Schafer;Lightweight vs. heavyweight processes: is this even the right question?;649;1;Panels;
2002;Carlos Jose Pereira de Lucena,Alessandro Garcia,Andrea Omicini,Jaelson Castro,Franco Zambonelli;Software engineering for large-scale multi-agent systems: SELMAS'2002.;653-654;2;Workshops;
2002;Ivica Crnkovic,Heinz W. Schmidt,Judith A. Stafford,Kurt C. Wallnau;5th ICSE workshop on component-based software engineering: benchmarks for predictable assembly.;655-656;2;Workshops;
2002;Mikio Aoyama,Katsuro Inoue,Vaclav Rajlich;Principles of software evolution: 5th international workshop on principles of software evolution (IWPSE 2002).;657-658;2;Workshops;
2002;Sebastian Uchitel,Tarja Systa,Albert Zundorf;Scenarios and state machines: models, algorithms, and tools.;659-660;2;Workshops;
2002;Yogesh Deshpande,Luis Olsina,San Murugesan;Third ICSE workshop on web engineering.;661-662;2;Workshops;
2002;Warren Harrison,M. Hakan Erdogmus,Rick Kazman;The fourth international workshop on economics-driven software engineering research (EDSER-4).;663-664;2;Workshops;
2002;Peter Knauber,Giancarlo Succi;Third ICSE workshop on software product lines: economics, architectures, and implications.;665-666;2;Workshops;
2002;Daniela E. Herlea;Workshop on global software development.;667-668;2;Workshops;
2002;Joseph Feller;Meeting challenges and surviving success: the 2nd workshop on open source software engineering.;669-670;2;Workshops;
2002;Kathia Marcal de Oliveira,Ana Regina Rocha,Kival Chaves Weber;Workshop on software quality.;671-672;2;Workshops;
2002;Rogerio de Lemos,Cristina Gacek,Alexander Romanovsky;ICSE 2002 workshop on architecting dependable systems.;673-674;2;Workshops;
2002;Philippe Kruchten,Richard F. Hilliard II,Rick Kazman,Wojtek Kozaczynski,J. Henk Obbink,Alexander Ran;Workshop on methods and techniques for softwaer architecture review and assessment (SARA).;675;1;Workshops;
2002;Craig Larman,Frances Paulisch;Pre-workshop summary: workshop on iterative, adaptive, and agile processes.;676;1;Workshops;
2002;Scott A. Hissam,Robert C. Seacord,Grace A. Lewis;Building systems from commercial components.;679-680;2;Tutorials;
2002;Jan Bosch;Architecture-centric software engineering.;681-682;2;Tutorials;
2002;M. Hakan Erdogmus,Barry W. Boehm,Warren Harrison,Donald J. Reifer,Kevin J. Sullivan;Software engineering economics: background, current practices, and future directions.;683-684;2;Tutorials;
2002;John C. Knight;Dependability of embedded systems.;685-686;2;Tutorials;
2002;San Murugesan,Yogesh Deshpande;Meeting the challenges of web application development: the web engineering approach.;687-688;2;Tutorials;
2002;Peri L. Tarr,Harold Ossher,Stanley M. Sutton Jr.;Hyper/J: multi-dimensional separation of concerns for Java.;689-690;2;Tutorials;
2002;Wolfgang Emmerich,Nima Kaveh;Component technologies: Java beans, COM, CORBA, RMI, EJB and the CORBA component model.;691-692;2;Tutorials;
2002;Philippe Kruchten,Bran Selic,Wojtek Kozaczynski;Tutorial: describing software architecture with UML.;693-694;2;Tutorials;
2002;James Newkirk;Introduction to agile processes and extreme programming.;695-696;2;Tutorials;
2002;Yossi Gil,John Howse,Stuart T. Kent;Advanced visual modelling: beyond UML.;697-698;2;Tutorials;
2002;Luiz Marcio Cysneiros Filho,Julio Cesar Sampaio do Prado Leite;Non-functional requirements: from elicitation to modelling languages.;699-700;2;Tutorials;
2002;Martin Fowler;Refactoring.;701;1;Tutorials;
2002;Martin Fowler;Information systems architecture.;702;1;Tutorials;
2002;Philippe Kruchten;Tutorial: introduction to the rational unified process®.;703;1;Tutorials;
2002;Craig Larman;Tutorial: mastering design patterns.;704;1;Tutorials;
2002;Sebastian Blaustein,Fernando Oliveto,Victor A. Braberman;Observing timed systems by means of message sequence chart graphs.;707;1;Posters and Research Demonstrations;
2002;Claudia Pons,Gabriel Baum;Reasoning about the correctness of software development process.;708;1;Posters and Research Demonstrations;
2002;Raimondas Lencevicius,Edu Metz,Alexander Ran;Software validation using power profiles.;709;1;Posters and Research Demonstrations;
2002;Fernando Schapachnik,Victor A. Braberman,Alfredo Olivero;An architecture-centric approach to the development of a distributed model-checker for timed automata.;710;1;Posters and Research Demonstrations;
2002;Martin Jandl,Wolfgang Radinger,Alexander Szep,Karl M. Goschka;Enterprise application integration by means of a generic CORBA LDAP gateway.;711;1;Posters and Research Demonstrations;
2002;Stefanos Zachariadis,Licia Capra,Cecilia Mascolo,Wolfgang Emmerich;XMIDDLE: information sharing middleware for a mobile environment.;712;1;Posters and Research Demonstrations;
2002;Michel Wermelinger,Cristovao Oliveira;The community workblench.;713;1;Posters and Research Demonstrations;
2002;Joao Gouveia,Georgios Koutsoukos,Michel Wermelinger,Luis Filipe Andrade,Jose Luiz Fiadeiro;Coordination contracts for Java applications.;714;1;Posters and Research Demonstrations;
2002;Silvia Teresita Acuna Castillo,Cecilia Maria Lasserre,Viviana Elizabet Quincoces;Human capacities in the software process: empiric validation.;715;1;Posters and Research Demonstrations;
2002;Federico Trilnik,J. Andres Diaz Pace,Marcelo R. Campo;Smartweaver: an agent-based approach for aspect-oriented development.;716;1;Posters and Research Demonstrations;
2002;J. Andres Diaz Pace,Marcelo R. Campo;An object-oriented bridge among architectural styles, aspects and frameworks.;717;1;Posters and Research Demonstrations;
2002;Martin P. Robillard;A representation for describing and analyzing concerns in source code.;721-722;2;Doctoral Symposia;
2002;Licia Capra;Mobile computing middleware for context-aware applications.;723-724;2;Doctoral Symposia;
2002;Yuk Kuen Wong;Use of software inspection inputs in practice.;725-726;2;Doctoral Symposia;
2002;Jorg Niere;Fuzzy logic based interactive recovery of software design.;727-728;2;Doctoral Symposia;
2002;Joseph Puett;Holistic framework for establishing interoperability of heterogeneous software development tools and models.;729-730;2;Doctoral Symposia;
2002;D. M. Atiya,S. King;A compliance notation for verifying concurrent systems.;731-732;2;Doctoral Symposia;
2002;Orna Raz;Research abstract for semantic detection in dynamic data feeds with incomplete specifications.;733-734;2;Doctoral Symposia;
2002;Maja D'Hondt;Making software knowledgeable.;735-736;2;Doctoral Symposia;
2001;Siobhan Clarke,Robert J. Walker;Composition Patterns: An Approach to Designing Reusable Aspects.;5-14;10;Technical Papers;Design and Specification of Distributed Systems
2001;Erkki Makinen,Tarja Systa;MAS - An Interactive Synthesizer to Support Behavioral Modeling in UML.;15-24;10;Technical Papers;Design and Specification of Distributed Systems
2001;Filippo Ricca,Paolo Tonella;Analysis and Testing of Web Applications.;25-34;10;Technical Papers;Design and Specification of Distributed Systems
2001;Jamieson M. Cobleigh,Lori A. Clarke,Leon J. Osterweil;The Right Algorithm at the Right Time: Comparing Data Flow Analysis Algorithms for Finite State Verification.;37-46;10;Static Analysis;
2001;Dennis Brylow,Niels Damgaard,Jens Palsberg;Static Checking of Interrupt-Driven Software.;47-56;10;Static Analysis;
2001;Laura K. Dillon,R. E. Kurt Stirewalt;Leightweight Analysis of Operational Specifications Using Inference Graphs.;57-67;11;Static Analysis;
2001;Pekka Abrahamsson;Commitment Development in Software Process Improvement: Critical Misconceptions.;71-80;10;Process Improvement for Multi-Site Environments;
2001;James D. Herbsleb,Audris Mockus,Thomas A. Finholt,Rebecca E. Grinter;An Empirical Study of Global Software Development: Distance and Speed.;81-90;10;Process Improvement for Multi-Site Environments;
2001;Jan Bosch;Software Product Lines: Organizational Alternatives.;91-100;10;Process Improvement for Multi-Site Environments;
2001;Jonathan I. Maletic,Andrian Marcus;Supporting Program Comprehension Using Semantic and Structural Information.;103-112;10;Design Recovery and Program Understanding;
2001;Derek Rayside,Kostas Kontogiannis;On the Syllogistic Structure of Object-Oriented Programming.;113-122;10;Design Recovery and Program Understanding;
2001;Alexander Egyed;A Scenario-Driven Approach to Traceability.;123-132;10;Design Recovery and Program Understanding;
2001;Alastair Dunsmore,Marc Roper,Murray Wood;Systematic Object-Oriented Inspection - An Emprirical Study.;135-144;10;Effective Uses of Inspections;
2001;Stefan Biffl,Wilfried Grossmann;Evaluating the Accuracy of Defect Estimation Models Based on Inspection Data from Two Inspection Cycles.;145-154;10;Effective Uses of Inspections;
2001;Stefan Biffl,Bernd G. Freimut,Oliver Laitenberger;Investigating the Cost-Effectiveness of Reinspections in Software Development.;155-164;10;Effective Uses of Inspections;
2001;R. E. Kurt Stirewalt,Laura K. Dillon;A Component-Based Approach to Building Formal Analysis Tools.;167-176;10;Building Formal Analysis Tools;
2001;Matthew B. Dwyer,John Hatcliff,Roby Joehanes,Shawn Laubach,Corina S. Pasareanu,Robby,Hongjun Zheng,Willem Visser;Tool-Supported Program Abstraction for Finite-State Verification.;177-187;11;Building Formal Analysis Tools;
2001;Sebastian Uchitel,Jeffrey Kramer;A Workbench for Synthesising Behaviour Models from Scenarios.;188-197;10;Building Formal Analysis Tools;
2001;Prakash Krishnamurthy,Paolo A. G. Sivilotti;The Specification and Testing of Quantified Progress Properties in Distributed Systems.;201-210;10;Dynamic Analysis and Testing;
2001;Antonia Bertolino,Paola Inverardi,Henry Muccini;An Explorative Journey from Architectural Tests Definition downto Code Tests Execution.;211-220;10;Dynamic Analysis and Testing;
2001;Steven P. Reiss,Manos Renieris;Encoding Program Executions.;221-230;10;Dynamic Analysis and Testing;
2001;Eddy Truyen,Bart Vanhaute,Wouter Joosen,Pierre Verbaeten,Bo Norregaard Jorgensen;Dynamic and Selective Combination of Extensions in Component-Based Applications.;233-242;10;Construction of Component-Based Systems;
2001;Eric Wohlstadter,Stoney Jackson,Premkumar T. Devanbu;Generating Wrappers for Command Line Programs: The Cal-Aggie Wrap-O-Matic Project.;243-252;10;Construction of Component-Based Systems;
2001;David H. Lorenz,John M. Vlissides;Designing Components Versus Objects: A Transformational Approach.;253-224;-28;Construction of Component-Based Systems;
2001;William G. Griswold,Jimmy J. Yuan,Yoshikiyo Kato;Exploiting the Map Metaphor in a Tool for Software Evolution.;265-274;10;Reengineering and Software Evolution;
2001;Gail C. Murphy,Albert Lai,Robert J. Walker,Martin P. Robillard;Separating Features in Source Code: An Exploratory Study.;275-284;10;Reengineering and Software Evolution;
2001;Richard Cardone,Calvin Lin;Comparing Frameworks and Layered Refinement.;285-294;10;Reengineering and Software Evolution;
2001;Rick Kazman,Jai Asundi,Mark Klein;Quantifying the Costs and Benefits of Architectural Decisions.;297-306;10;Analysis of Architectures;
2001;Somesh Jha,Jeannette M. Wing;Survivability Analysis of Network Systems.;307-317;11;Analysis of Architectures;
2001;Peter H. Feiler,John J. Walker;Adaptive Feedback Scheduling of Incremental and Design-to-Time Tasks.;318-326;9;Analysis of Architectures;
2001;Sebastian G. Elbaum,Alexey G. Malishevsky,Gregg Rothermel;Incorporating Varying Test Costs and Fault Severities into Test Case Prioritization.;329-338;10;Improving the Testing Process;
2001;William Dickinson,David Leon,Andy Podgurski;Finding Failures by Cluster Analysis of Execution Profiles.;339-348;10;Improving the Testing Process;
2001;Marvin V. Zelkowitz,Ioana Rus;Understanding IV & V in a Safety Critical and Complex Evolutionary Environment: The NASA Space Shuttle Program.;349-357;9;Improving the Testing Process;
2001;Richard G. Hamlet,David V. Mason,Denise M. Woit;Theory of Software Reliability Based on Components.;361-370;10;Reliability and Mobile Agents;
2001;Giacomo Cabri,Letizia Leonardi,Franco Zambonelli;Engineering Mobile-Agent Applications via Context-Dependent Coordination.;371-380;10;Reliability and Mobile Agents;
2001;Gruia-Catalin Roman,Qingfeng Huang,Ali Hazemi;Consistent Group Membership in Ad Hoc Networks.;381-388;8;Reliability and Mobile Agents;
2001;Tim Menzies,John D. Powell,Michael E. Houle;"Fast Formal Analysis of Requirements via ""Topoi Diagrams"".";391-400;10;Analysis of Requirements;
2001;Scott P. Overmyer,Benoit Lavoie,Owen Rambow;Conceptual Modeling through Linguistic Analysis Using LIDA.;401-410;10;Analysis of Requirements;
2001;Steve M. Easterbrook,Marsha Chechik;A Framework for Multi-Valued Reasoning over Inconsistent Viewpoints.;411-420;10;Analysis of Requirements;
2001;Annie I. Anton,Colin M. Potts;Functional Paleontology: System Evolution as the User Sees It.;421-430;10;Analysis of Requirements;
2001;William E. McUmber,Betty H. C. Cheng;A General Framework for Formalizing UML with Formal Languages.;433-442;10;Formal Frameworks;
2001;Alexis Campailla,Sagar Chaki,Edmund M. Clarke,Somesh Jha,Helmut Veith;Efficient Filtering in Publish-Subscribe Systems Using Binary Decision.;443-452;10;Formal Frameworks;
2001;Jean Berstel,Stefano Crespi-Reghizzi,Gilles Roussel,Pierluigi San Pietro;A Scalable Formal Method for Design and Automatic Checking of User Interfaces.;453-462;10;Formal Frameworks;
2001;Armando Martin Haeberer,Thomas Stephen Edward Maibaum;Scientific Rigour, an Answer to a Pragmatic Question: A Linguistic Framework for Software Engineering.;463-472;10;Formal Frameworks;
2001;Ivan Marsic;An Architecture for Heterogeneous Groupware Applications.;475-484;10;Architectures for Emerging Applications;
2001;Kevin J. Sullivan,Avneesh Saxena;A Web-Oriented Architectural Aspect for the Emerging Computational Tapestry.;485-492;8;Architectures for Emerging Applications;
2001;Ming-Ling Lo,Shyh-Kwei Chen,Sriram Padmanabhan,Jen-Yao Chung;XAS: A System for Accessing Componentized, Virtual XML Documents.;493-502;10;Architectures for Emerging Applications;
2001;James J. Hunt,Jurgen Reuter;Using the Web for Document Versioning: An Implementation Report for Delta V.;507-513;7;Case Study Papers;Infrastructure Support
2001;Scott R. Tilley,Shihong Huang;Evaluating the Reverse Engineering Capabilities of Web Tools for Understanding Site Content and Structure: A Case Study.;514-523;10;Case Study Papers;Infrastructure Support
2001;Atsushi Aoki,Kaoru Hayashi,Kouichi Kishida,Kumiyo Nakakoji,Yoshiyuki Nishinaka,Brent Reeves,Akio Takashima,Yasuhiro Yamamoto;A Case Study of the Evolution of Jun: An Object-Oriented Open-Source 3D Multimedia Library.;524-533;10;Case Study Papers;Infrastructure Support
2001;Matthias M. Muller,Walter F. Tichy;Case Study: Extreme Programming in a University Environment.;537-544;8;Applications of New Paradigms in Software Development;
2001;Christof Ebert,Casimiro Hernandez Parro,Roland Suttels,Harald Kolarczyk;Improving Validation Activities in a Global Software Development.;545-554;10;Applications of New Paradigms in Software Development;
2001;Hoh Peter In,Barry W. Boehm,Thomas Lee Rodgers,Michael Deutsch;Applying WinWin to Quality Requirements: A Case Study.;555-564;10;Applications of New Paradigms in Software Development;
2001;Wolfgang Emmerich,Ernst Ellmer,Henry Fieglein;TIGRA - An Architectural Style for Enterprise Application Integration.;567-576;10;Software Evolution;
2001;Fabrizio Fioravanti,G. Migliarese,Paolo Nesi;Reengineering Analysis of Object-Oriented Systems via Duplication.;577-586;10;Software Evolution;
2001;Barry W. Boehm,Daniel Port;Educating Software Engineering Students to Manage Risk.;591-600;10;Education Papers;Practical Software Engineering Education
2001;Murali Sitaraman,Timothy J. Long,Bruce W. Weide,E. James Harner,Liqing Wang;A Formal Approach to Component-Based Software Engineering: Education and Evaluation.;601-609;9;Education Papers;Practical Software Engineering Education
2001;Mira Kajko-Mattsson,Stefan Forssander,Ulf H. Olsson;Corrective Maintenance Maturity Model (CM3): Maintainer's Education and Training.;610-619;10;Education Papers;Practical Software Engineering Education
2001;Terry Shepard;An Efficient Set of Software Degree Programs for One Domain.;623-632;10;Degree Programs for Software Engineering Education;
2001;John D. Tvedt,Roseanne Tesoriero Tvedt,Kevin A. Gary;The Software Factory: Combining Undergraduate Computer Science and Software Engineering Education.;633-642;10;Degree Programs for Software Engineering Education;
2001;Kenneth L. Modesitt,Donald J. Bagert,Laurie Honour Werth;Academic Software Engineering: What Is and What Could Be? Results of the First Annual Survey for International SE Programs.;643-652;10;Degree Programs for Software Engineering Education;
2001;Daniel Sabbah;Software Engineering and the Internet.;655;1;Plenary Sessions;
2001;Mary M. Shaw;The Coming-of-Age of Software Architecture Research.;656-664;9;Plenary Sessions;
2001;Robert M. Balzer;"""Tolerating Inconsistency"" Revisited.";665;1;Plenary Sessions;
2001;Bernd Voigt;Software Engineering Challenges: A CIO's Perspective.;666;1;Plenary Sessions;
2001;Linda M. Northrop;Reuse That Pays.;667;1;Plenary Sessions;
2001;Robert M. Balzer,Volker Gruhn;Process-Centered Software Engineering Environments: Academic and Industrial Perspectives.;671-672;2;Challenges and Achievements in Software Engineering;
2001;Manfred Broy;Specification and Modeling: An Academic Perspective.;673-675;3;Challenges and Achievements in Software Engineering;
2001;Bran Selic;Specification and Modeling: An Industrial Perspective.;676-677;2;Challenges and Achievements in Software Engineering;
2001;Peter Freeman,Donald J. Bagert,Hossein Saiedian,Mary M. Shaw,Robert Dupuis,J. Barrie Thompson;Software Engineering Body of Knowledge (SWEBOK).;693-696;4;Panels;
2001;Leon J. Osterweil;Impact Project Panel: Determining the Impact of Software Engineering Research Upon Practice.;697;1;Panels;
2001;H. Dieter Rombach,Manfred Broy,Michael Evangelist,Ali Mili,Leon J. Osterweil,David Lorge Parnas;Software Engineering Research Agendas Panel (SERA): What Can't We Do, But Need to Learn How to Do?;698;1;Panels;
2001;David Notkin,Marc Donner,Michael D. Ernst,Michael M. Gorlick,Jim Whitehead;Panel: Perspectives on Software Engineering.;699-702;4;Panels;
2001;Robert B. France,Cris Kobryn;UML for Software Engineers.;705-706;2;Tutorials;
2001;Karol Fruhauf;The Intertwining Between Risk and Project Management.;707-708;2;Tutorials;
2001;Kurt C. Wallnau;Methods of Component-Based Software Engineering: Essential Concepts and Classroom Experience.;709-710;2;Tutorials;
2001;Albert Zundorf;From Use Cases to Code - Rigorous Software Development with UML.;711-712;2;Tutorials;
2001;Houman Younessi,Brian Henderson-Sellers;OPEN: A Flexible OO/CBD Process for Software-Intensive Systems Development, a UML Exposition.;713-714;2;Tutorials;
2001;Philippe Kruchten,Bran Selic,Wojtek Kozaczynski;Describing Software Architecture with UML.;715-716;2;Tutorials;
2001;Jan Bosch;Software Product Lines and Software Architecture Design.;717;1;Tutorials;
2001;Terry Shepard,Diane Kelly;How to Do Inspections When There is No Time.;718-719;2;Tutorials;
2001;Barry W. Boehm,Paul Grunbacher,Robert O. Briggs;EasyWinWin: A Groupware-Supported Nethodology for Requirements Negotiation.;720-721;2;Tutorials;
2001;Alexander Ran;Tutorial on Fundamental Concepts for Practical Software Architecture.;722-723;2;Tutorials;
2001;James White;"An Introduction to Java 2 Micro Edition (J2ME); Java in Small Things.";724-725;2;Tutorials;
2001;Forrest Shull,Ioana Rus,Victor R. Basili;Improving Software Inspections by Using Reading Techniques.;726-727;2;Tutorials;
2001;Dennis B. Smith,Liam O'Brien,John Bergey;Mining Components for a Software Architecture and a Product Line: the Options Analysis for Reengineering (OAR) Method.;728;1;Tutorials;
2001;Peri L. Tarr,Harold Ossher;Hyper/JTM: Multi-Dimensional Separation of Concerns for JavaTM.;729-730;2;Tutorials;
2001;James White;Enterprise JavaBean Architecture and Design Issues.;731-732;2;Tutorials;
2001;Jin Song Dong;State, Event, Time and Diagram in System Modeling.;733-734;2;Tutorials;
2001;Timothy D. Korson;From UML to Java, Building a 3-Tier Architecture: Case Study.;735-736;2;Tutorials;
2001;Hassan Gomaa;Designing Concurrent, Distributed, and Real-Time Applications with UML.;737-738;2;Tutorials;
2001;Ira D. Baxter;Using Transformation Systems for Software Maintenance and Reengineering.;739-740;2;Tutorials;
2001;Robert L. Nord,Daniel J. Paulish,Dilip Soni,Christine Hofmeister;Effective Software Architecture Design: From Global Analysis to UML Descriptions.;741-742;2;Tutorials;
2001;Daniel Amyot,Gunter Mussbacher;Bridging the Requirements/Design Gap in Dynamic Systems with Use Case Maps (UCMs).;743-744;2;Tutorials;
2001;Felix Bachmann,Leonard J. Bass;Introduction to the Attribute Driven Design Method.;745-746;2;Tutorials;
2001;Steve M. Easterbrook,Marsha Chechik;2nd International Workshop on Living with Inconsistency.;749-750;2;Workshops;
2001;Frank Maurer;"4th ICSE Workshop on ""Software Engineering over the Internet"".";751-752;2;Workshops;
2001;Peter Knauber,Giancarlo Succi;Second ICSE Workshop on Software Product Lines: Economics, Architectures, and Applications.;753-754;2;Workshops;
2001;Nigel Tracey,John Penix,Willem Visser;The Second International Workshop on Automated Program Analysis, Testing and Verification.;755;1;Workshops;
2001;Gruia-Catalin Roman,Gian Pietro Picco;Workshop on Software Engineering and Mobility.;756-757;2;Workshops;
2001;Wim De Pauw,Steven P. Reiss,John T. Stasko;ECSE Workshop on Software Visualization.;758-759;2;Workshops;
2001;Gregory Butler,Don S. Batory,Krzysztof Czarnecki,Ulrich W. Eisenecker;Generative Techniques for Product Lines.;760-761;2;Workshops;
2001;Mark Harman,Bryan F. Jones;SEMINAL: Software Engineering Using Metaheuristic INnovative Algorithms.;762-763;2;Workshops;
2001;Jaelson Castro,Jeffrey Kramer;From Software Requirements to Architectures.;764-765;2;Workshops;
2001;Jens H. Weber-Jahnke,Kostas Kontogiannis,Eleni Stroulia,Scott R. Tilley,Kenny Wong;3rd International Workshop on Net-Centric Computing (NCC 2001): Theme: Migrating to the Web.;766-767;2;Workshops;
2001;J. Barrie Thompson,Helen M. Edwards;Workshop to Consider Global Aspects of Software Engineering Professionalism.;768-769;2;Workshops;
2001;Kevin J. Sullivan,Mary M. Shaw,Barry W. Boehm,David Notkin,Warren Harrison;Third International Workshop on Economics-Driven Software Engineering Research.;770;1;Workshops;
2001;Ivica Crnkovic,Heinz W. Schmidt,Judith A. Stafford,Kurt C. Wallnau;4th ICSE Workshop on Component-Based Software Engineering: Component Certification and System Prediction.;771-772;2;Workshops;
2001;Andre van der Hoek;SCM-10: Tenth International Workshop on Software Configuration Management. New Practices, New Challenges, and New Boundaries.;773-774;2;Workshops;
2001;Cecilia Mascolo,Wolfgang Emmerich,Anthony Finkelstein;XML Technologies and Software Engineering.;775-776;2;Workshops;
2001;Philippe Kruchten,Bran Selic,Wojtek Kozaczynski,Grant Larsen,Alan W. Brown;Describing Software Architecture with UML.;777;1;Workshops;
2001;Peri L. Tarr,Harold Ossher;Workshop on Advanced Separation of Concerns in Software Engineering.;778-779;2;Workshops;
2001;Joseph Feller,Brian Fitzgerald,Andre van der Hoek;1st Workshop on Open Source Software Engineering.;780-781;2;Workshops;
2001;Laura A. Campbell;Visualizaiton an Interpretation of Analysis Results within the Context of Formalized UML Diagrams.;785-786;2;Doctoral Symposium;
2001;Joao W. Cangussu;Modeling and Controlling the Software Test Process.;787-788;2;Doctoral Symposium;
2001;Jeffrey G. Gray;Using Software Component Generators to Contstruct a Meta-Weaver Framework.;789-790;2;Doctoral Symposium;
2001;Daqing Hou;Supporting the Deployment of Object-Oriented Frameworks.;791-792;2;Doctoral Symposium;
2001;Nima Kaveh;Model Checking Distributd Objects Design.;793-794;2;Doctoral Symposium;
2001;Engin Kirda;Web Engineering Device Independent Web Services.;795-796;2;Doctoral Symposium;
2001;Alok Mehta;Evolving Legacy Systems Using Feature Engineering and CBSE.;797-798;2;Doctoral Symposium;
2001;Danila Smolko;Design and Evaluation of the Mobile Agent Architecture for Distributed Consistency Management.;799-800;2;Doctoral Symposium;
2001;Rebeca P. Diaz Redondo,Jose J. Pazos Arias;Reuse of Verificatino Efforts and Incomplete Specifications in a Formalized, Iterative and Incremental Software Process.;801-802;2;Doctoral Symposium;
2001;Detlef Streitferdt;Traceability for System Families.;803-804;2;Doctoral Symposium;
2001;Daniel Hoffman,David M. Weiss;David L. Parnas Symposium.;807-809;3;David L. Parnas Symposium;
2001;Leon J. Osterweil,Gabriel M. Silberman,Kenny Wong;New Software Engineering Faculty Symposium.;813;1;New Software Engineering Faculty Symposium;
2001;Johannes Koskinen,Jari Peltonen,Petri Selonen,Tarja Systa,Kai Koskimies;Model Processing Tools in UML.;819-820;2;Formal Research Demonstrations;Software Architecture
2001;Harold Ossher,Peri L. Tarr;Hyper/JTM: Multi-Dimensional Separation of Concerns for JavaTM.;821-822;2;Formal Research Demonstrations;Software Architecture
2001;Markku Hakala,Juha Hautamaki,Kai Koskimies,Jukka Paakki,Antti Viljamaa,Jukka Viljamaa;Architecture-Oriented Programming Using FRED.;823-824;2;Formal Research Demonstrations;Software Architecture
2001;Amir Michail;CodeWeb: Data Mining Library Reuse Patterns.;827-828;2;Reuse and Integration;
2001;Giancarlo Succi,Jason Yip,Witold Pedrycz;Holmes: An Intelligent System to Support Software Product Line Development.;829-830;2;Reuse and Integration;
2001;Huaxin Zhang,Eleni Stroulia;Babel: Representing Business Rules in XML for Application Integration.;831-832;2;Reuse and Integration;
2001;Rajeev Alur,Luca de Alfaro,Radu Grosu,Thomas A. Henzinger,M. Kang,Christoph Meyer,Rupak Majumdar,Freddy Y. C. Mang,Bow-Yaw Wang;JMOCHA: A Model Checking Tool that Exploits Design Structure.;835-836;2;Verification and Maintnenance;
2001;Toshihiro Kamiya,Fumiaki Ohata,Kazuhiro Kondou,Shinji Kusumoto,Katsuro Inoue;Maintenance Support Tools for JAVA Programs: CCFinder and JAAT.;837-838;2;Verification and Maintnenance;
2001;Chanika Hobatr,Brian A. Malloy;Using OCL-Queries for Debugging C++.;839-840;2;Verification and Maintnenance;
2000;Manuel Castells;Is the new economy socially sustainable? (abstract of invited presentation).;2;1;Invited Presentations;
2000;Grady Booch;The future of software (abstract of invited presentation).;3;1;Invited Presentations;
2000;Chris Horn;Dot com versus bricks and mortar - the impact of portal technology (abstract of invited presentation).;4;1;Invited Presentations;
2000;Axel van Lamsweerde;Requirements engineering in the year 00: a research perspective.;5-19;15;Invited Presentations;
2000;Ivica Crnkovic,Magnus E. Larsson;A case study: demands on component-based development.;23-31;9;Components and COTS;
2000;Maurizio Morisio,Carolyn B. Seaman,Amy T. Parra,Victor R. Basili,Steve E. Kraft,Steven E. Condon;Investigating and improving a COTS-based software development.;32-41;10;Components and COTS;
2000;L. David Balk,Ann Kedia;PPT: a COTS integration case study.;42-49;8;Components and COTS;
2000;Jan Gerben Wijnstra;Supporting diversity with component frameworks as architectural elements.;51-60;10;Software Architecture and Product Families;
2000;Juha Kuusela,Juha Savolainen;Requirements engineering for product families.;61-69;9;Software Architecture and Product Families;
2000;Yusuf Pisan;Extending requirement specifications using analogy.;70-76;7;Software Architecture and Product Families;
2000;Antony Bryant;It's engineering Jim ... but not as we know it: software engineering - solution to the software crisis, or part of the problem?;78-87;10;New Perspectives on Software Engineering;
2000;James C. Widmaier;Producing more reliable software: mature software engineering process vs. state-of-the-art technology?;88-93;6;New Perspectives on Software Engineering;
2000;Robert S. Brewer;Improving problem-oriented mailing list archives with MCS.;95-104;10;Data Analysis;
2000;Jamie Andrews,Yingjun Zhang;Broad-spectrum studies of log file analysis.;105-114;10;Data Analysis;
2000;David Leon,Andy Podgurski,Lee J. White;Multivariate visualization in observation-based testing.;116-125;10;Testing I;
2000;Jung-Min Kim,Adam A. Porter,Gregg Rothermel;An empirical study of regression test application frequency.;126-135;10;Testing I;
2000;Yvan Labiche,Pascale Thevenod-Fosse,Helene Waeselynck,M.-H. Durand;Testing levels for object-oriented software.;136-145;10;Testing I;
2000;Andreas Rausch;Software evolution in componentware using requirements/assurances contracts.;147-156;10;Evolution and Reuse;
2000;Ali Mili,Senta Fowler Chmiel,Ravi Gottumukkala,Lisa Zhang;An integrated cost model for software reuse.;157-166;10;Evolution and Reuse;
2000;Amir Michail;Data mining library reuse patterns using generalized association rules.;167-176;10;Evolution and Reuse;
2000;Nikunj R. Mehta,Nenad Medvidovic,Sandeep Phadke;Towards a taxonomy of software connectors.;178-187;10;Component-Based Systems;
2000;Matteo Pradella,Matteo Rossi,Dino Mandrioli,Alberto Coen-Porisini;A formal approach for designing CORBA based applications.;188-197;10;Component-Based Systems;
2000;Anke Drappa,Jochen Ludewig;Simulation in software engineering training.;199-208;10;Software Engineering Training;
2000;Ray Dawson;Twenty dirty tricks to train software engineers.;209-218;10;Software Engineering Training;
2000;Antonia Bertolino,Flavio Corradini,Paola Inverardi,Henry Muccini;Deriving test plans from architectural descriptions.;220-229;10;Testing II;
2000;Karen J. Rothermel,Curtis R. Cook,Margaret M. Burnett,Justin Schonfeld,Thomas R. G. Green,Gregg Rothermel;WYSIWYT testing in the spreadsheet paradigm: an empirical evaluation.;230-239;10;Testing II;
2000;Hans J. Kohler,Ulrich Nickel,Jorg Niere,Albert Zundorf;Integrating UML diagrams for production control systems.;241-251;11;Software Architecture;
2000;Gary E. Anderson,T. C. Nicholas Graham,Timothy N. Wright;Dragonfly: linking conceptual and implementation architectures of multiuser interactive systems.;252-261;10;Software Architecture;
2000;Audris Mockus,Roy Thomas Fielding,James D. Herbsleb;A case study of open source software development: the Apache server.;263-272;10;OPen Source and Software Markets;
2000;David Coppit,Kevin J. Sullivan;Multiple mass-market applications as components.;273-282;10;OPen Source and Software Markets;
2000;W. Richards Adroin;Developing and deploying software engineering courseware in an adaptable curriculum framework.;284-292;9;Software Engineering Education;
2000;Stuart R. Faulk;Achieving industrial relevance with academic excellence: lessons from the Oregon Master of Software engineering.;293-302;10;Software Engineering Education;
2000;Rajeev Alur,Kousha Etessami,Mihalis Yannakakis;Inference of message sequence charts.;304-313;10;System Model Derivation;
2000;Jonathan P. Whittle,Johann Schumann;Generating statechart designs from scenarios.;314-323;10;System Model Derivation;
2000;Gokul V. Subramaniam;Object model resurrection - an object oriented maintenance activity.;324-333;10;System Model Derivation;
2000;Tevfik Bultan;Action Language: a specification language for model checking reactive systems.;335-344;10;Model Checking;
2000;Zhe Dang,Richard A. Kemmerer;Three approximation techniques for ASTRAL symbolic model checking of infinite state real-time systems.;345-354;10;Model Checking;
2000;Jim Hayes,William G. Griswold,Stuart Moskovics;Component design of retargetable program analysis tools that reuse intermediate representations.;356-365;10;Program Analysis I;
2000;Donglin Liang,Mary Jean Harrold;Light-weight context recovery for efficient and accurate program analyses.;366-375;10;Program Analysis I;
2000;Lionel C. Briand,Tristen Langley,Isabella Wieczorek;A replicated assessment and comparison of common software cost modeling techniques.;377-386;10;Empirical Studies;
2000;Osamu Mizuno,Tohru Kikuno,Yasunari Takagi,Keishi Sakamoto;Characterization of risky projects based on project managers' evaluation.;387-395;9;Empirical Studies;
2000;Wolfgang Emmerich,Cecilia Mascolo,Anthony Finkelstein;Implementing incremental code migration with XML.;397-406;10;Web-Based Systems;
2000;Roy Thomas Fielding,Richard N. Taylor;Principled design of the modern Web architecture.;407-416;10;Web-Based Systems;
2000;Martin Lippert,Cristina Videira Lopes;A study on exception detecton and handling using aspect-oriented programming.;418-427;10;Case Studies;
2000;Marek Leszak,Dewayne E. Perry,Dieter Stoll;A case study in root cause defect analysis.;428-437;10;Case Studies;
2000;James C. Corbett,Matthew B. Dwyer,John Hatcliff,Shawn Laubach,Corina S. Pasareanu,Robby,Hongjun Zheng;Bandera: extracting finite-state models from Java source code.;439-448;10;Program Analysis II;
2000;Michael D. Ernst,Adam Czeisler,William G. Griswold,David Notkin;Quickly detecting relevant program invariants.;449-458;10;Program Analysis II;
2000;Patrick d'Astous,Pierre N. Robillard;Characterizing implicit information during peer review meetings.;460-466;7;Review and Inspection Techniques;
2000;Alastair Dunsmore,Marc Roper,Murray Wood;Object-oriented inspection in the face of delocalisation.;467-476;10;Review and Inspection Techniques;
2000;Idit Keidar,Roger I. Khazan,Nancy A. Lynch,Alexander A. Shvartsman;An inheritance-based technique for building simulation proofs incrementally.;478-487;10;Verification and Proofs;
2000;John Penix,Willem Visser,Eric Engstrom,Aaron A. Larson,Nicholas Weininger;Verification of time partitioning in the DEOS scheduler kernel.;488-497;10;Verification and Proofs;
2000;Jeffrey N. Magee,Nathaniel Pryce,Dimitra Giannakopoulou,Jeffrey Kramer;Graphical animation of behavior models.;499-508;10;Visual Techniques;
2000;Corin A. Gurr,Konstantinos Tourlas;Towards the principled design of software engineering diagrams.;509-518;10;Visual Techniques;
2000;Bill Curtis;From MCC and CMM: technology transfers bright and dim.;521-530;10;"Technology Transfer ""in the large""";
2000;H. Dieter Rombach;Fraunhofer: the German model for applied research and technology transfer.;531-537;7;"Technology Transfer ""in the large""";
2000;Martin Orsted;Software development engineer in Microsoft: a subjective view of soft skills required.;539-540;2;Professionalization of Software Engineering;
2000;Jane Grimson,Hans-Jurgen Kugler;Software needs engineering: a position paper.;541-544;4;Professionalization of Software Engineering;
2000;Peter Morrogh;Is software education narrow-minded? A position paper.;545-546;2;Professionalization of Software Engineering;
2000;Gerald C. Gannod,Robyn R. Lutz;An approach to architectural analysis of product lines.;548-557;10;Experience with a Product Line and Family Approach;
2000;Klaus Schmid,Ulrike Becker-Kornstaedt,Peter Knauber,Florian Bernauer;Introducng a software modeling concept in a medium-sized company.;558-567;10;Experience with a Product Line and Family Approach;
2000;Adrian M. Colyer;From research to reward: challenges in technology transfer.;569-576;8;Technology Transfer as an Explicit Business and Process Issue;
2000;Tetsuto Nishiyama,Kunihiko Ikeda,Toru Niwa;Technology transfer macro-process: a practical guide for the effective introduction of technology.;577-586;10;Technology Transfer as an Explicit Business and Process Issue;
2000;Stan Rifkin;When the project absolutely must get done: marrying the organization chart with the precedence diagram.;588-596;9;Support for Effective Project Estimation;
2000;Eduardo Miranda;An evaluation of the paired comparisons method for software sizing.;597-604;8;Support for Effective Project Estimation;
2000;Barry Murphy;Grow fast, grow global: how the Irish software industry evolved to this business model.;606-607;2;Technology Transfer in the Internet World;
2000;Sean Baker;The making of Orbix and the iPortal suite.;609-616;8;From Research to Business Success;
2000;Even-Andre Karlsson,Lars-Goran Andersson,Per Leion;Daily build and feature development in large distributed projects.;649-658;10;From Research to Business Success;
2000;Frank Titze;Improvement of a configuration management system.;618-625;8;Practical Experience: Company Case Studies I;
2000;Karlheinz Kautz,Henrik Westergaard Hansen,Kim Thaysen;Applying and adjusting a software process improvement model in practice: the use of the IDEAL model in a small software enterprise.;626-633;8;Practical Experience: Company Case Studies I;
2000;Fran O'Hara;European experiences with software process improvement.;635-640;6;Practical Experience: Company Case Studies II;
2000;Antonio Calio,Massimo Autiero,Giuseppe Bux;Software process improvement by object technology (ESSI PIE 27785 -- SPOT).;641-647;7;Practical Experience: Company Case Studies II;
2000;Leon J. Osterweil,Barry W. Boehm,Michael Evangelist,Volker Gruhn,Jeffrey Kramer,Edward F. Miller;Why don't we get more (self?) respect: the positive impact of software engineering research upon practice.;660;1;Panels;
2000;George T. Heineman,William T. Councill,Janet S. Flynt,Alok Mehta,John R. Speed,Mary M. Shaw;Component-based software engineering and the issue of trust.;661-664;4;Panels;
2000;Nancy R. Mead,Hossein Saiedian,Gunther Ruhe,Donald J. Bagert,Helen M. Edwards,Michael Ryan;Shortages of qualified software engineering faculty and practitioners (panel session): challenges in breaking the cycle.;665-668;4;Panels;
2000;Jeffrey N. Magee;Who needs doctors? (abstract of panel session).;669;1;Panels;
2000;Carleton A. Moore;Lessons learned from teaching reflective software engineering using the Leap toolkit.;672-675;4;Teachin Demos;
2000;Stephen Edwards;Can quality graduate software engineering courses really be delivered asynchronously on-line?;676-679;4;Teachin Demos;
2000;Nathalie Poerwantoro,Abdulmotaleb El-Saddik,Bernd J. Kramer,Ralf Steinmetz;Multibook's test environment.;680-683;4;Teachin Demos;
2000;George Birbilis,Manolis Koutlis,Kriton Kyrimis,George Tsironis,George Vasiliou;E-Slate: a software architectural style for end-user programming.;684-687;4;Teachin Demos;
2000;Helen C. Sharp,Pat Hall;An interactive multimedia software house simulation for postgraduate software engineers.;688-691;4;Teachin Demos;
2000;Sita Ramakrishnan;LIGHTVIEWS - visual interactive Internet environment for learning OO software testing.;692-695;4;Teachin Demos;
2000;Jeffrey N. Magee,Mauro Pezze;The ICSE2000 doctoral workshop.;697;1;Doctoral Workshop;
2000;Jing Dong;A logical framework for design composition.;698-700;3;Doctoral Workshop;
2000;Juan Fernandez-Ramil;Algorithmic cost estimation for software evolution.;701-703;3;Doctoral Workshop;
2000;Giovanni Denaro;Estimating software fault-proneness for tuning testing activities.;704-706;3;Doctoral Workshop;
2000;Radu Iosif;Formal verification applied to Java concurrent software.;707-709;3;Doctoral Workshop;
2000;Peter J. Kammer;Supporting dynamic distributed work processes with a component and event based approach.;710-712;3;Doctoral Workshop;
2000;Chang Liu;Platform-independent and tool-neutral test descriptions for automated software testing.;713-715;3;Doctoral Workshop;
2000;Marek Paralic;Contribution to simplifying the mobile agent programming.;716-718;3;Doctoral Workshop;
2000;Gledson Elias da Silveira;Spontaneous software: a Web-based, object computing paradigm.;719-721;3;Doctoral Workshop;
2000;Mel O Cinneide;Automated refactoring to introduce design patterns.;722-724;3;Doctoral Workshop;
2000;Michael W. Whalen;High-integrity code generation for state-based formalisms.;725-727;3;Doctoral Workshop;
2000;Daniel B. Jackson,Ian Schechter,Ilya Shlyakhter;Alcoa: the alloy constraint analyzer.;730-733;4;Research Demos;
2000;Harold Ossher,Peri L. Tarr;Hyper/J: multi-dimensional separation of concerns for Java.;734-737;4;Research Demos;
2000;David A. Marca,Beth A. Perdue;A software engineering approach and tool set for developing Internet applications.;738-741;4;Research Demos;
2000;Ulrich Nickel,Jorg Niere,Albert Zundorf;The FUJABA environment.;742-745;4;Research Demos;
2000;Fabiano Cattaneo,Elisabetta Di Nitto,Alfonso Fuggetta,Luigi Lavazza,Giuseppe Valetto;Managing software artifacts on the Web with Labyrinth.;746-749;4;Research Demos;
2000;David Coppit,Kevin J. Sullivan;Galileo: a tool built from mass-market applications.;750-753;4;Research Demos;
2000;Aaron G. Cass,Barbara Staudt Lerner,Stanley M. Sutton Jr.,Eric K. McCall,Alexander E. Wise,Leon J. Osterweil;Little-JIL/Juliette: a process definition language and interpreter.;754-757;4;Research Demos;
2000;Marlon E. R. Vieira,Marcio S. Dias,Debra J. Richardson;Analyzing software architectures with Argus-I.;758-761;4;Research Demos;
2000;James C. Corbett,Matthew B. Dwyer,John Hatcliff,Robby;Bandera: a source-level interface for model checking Java programs.;762-765;4;Research Demos;
2000;Gian Pietro Picco,Amy L. Murphy,Gruia-Catalin Roman;Developing mobile computing applications with LIME.;766-769;4;Research Demos;
2000;Bart Michiels,Bart Wydaeghe;Component composition (poster).;771;1;Posters;
2000;Raimondas Lencevicius,Alexander Ran,Rahav Yairi;Third eye - specification-based analysis of software execution traces (poster).;772;1;Posters;
2000;Skylar Lei,Michael R. Smith,Giancarlo Succi;Empirical investigation of a novel approach to check the integrity of software engineering measuring processes (poster).;773;1;Posters;
2000;Lynda Thomas;The implication of different learning styles on the modeling of object-oriented systems (poster).;774;1;Posters;
2000;Silvia Teresita Acuna Castillo,Graciela Elisa Barchini,Mabel del V. Sosa;A culture-centered multilevel software process cycle model (poster).;775;1;Posters;
2000;Chang Liu,Debra J. Richardson;Using application states in software testing (poster).;776;1;Posters;
2000;Juan Fernandez-Ramil,Meir M. Lehman;Effort estimation from change records of evolving software (poster).;777;1;Posters;
2000;Alan D. Sloane;Modeling deployment and configuration of CORBA systems with UML (poster).;778;1;Posters;
2000;Tim Walsh,Patrick Nixon,Simon Dobson;As strong as possible mobility (poster).;779;1;Posters;
2000;Kathleen Suzanne Barber,Stephen R. Jernigan;Hybrid domain representation archive (HyDRA) for requirements model synthesis across viewpoints (poster).;780;1;Posters;
2000;Yousef H. Daabaj;The use of task analysis methods in support of the development of interactive systems (poster).;781;1;Posters;
2000;Anna Liu;DeBOT - an approach for constructing high performance, scalable distributed object systems (poster).;782;1;Posters;
2000;Garry Froehlich,Amr Kamel,Paul G. Sorenson;Exploring O-O framework usage (poster).;783;1;Posters;
2000;Ali Mili,Senta Fowler Chmiel,Ravi Gottumukkala,Lisa Zhang;Tracking, predicting and assessing software reuse costs: an automated tool.;785;1;;
2000;Giancarlo Succi,Jason Yip,Eric Liu,Witold Pedrycz;Holmes: a system to support software product lines.;786;1;;
2000;Giancarlo Succi,Raymond Wong,Eric Liu,Michael R. Smith;Supporting dynamic composition of components.;787;1;;
2000;Rory V. O'Connor,Robert Cochran,Tony Moynihan;Prompter - a project planning assistant.;788;1;;
2000;Claudio Riva;Visualizing software release histories with 3DSoftVis.;789;1;;
2000;Eleni Stroulia,Mohammad El-Ramly,Paul G. Sorenson,Roland Penner;Legacy systems migration in CelLEST.;790;1;;
2000;Ulrike Becker-Kornstaedt,Louise Scott,Jorg Zettel;Process engineering with SpearmintTM/EPG.;791;1;;
2000;Antonia Bertolino,Gail C. Murphy;An overview of the ICSE 2000 workshop program.;793;1;Workshops;
2000;San Murugesan,Yogesh Deshpande;Second ICSE Workshop on Web Engineering.;794-795;2;Workshops;
2000;Nigel Tracey,John Penix,Willem Visser;The First International Workshop on Automated Program Analysis, Testing and Verification.;796;1;Workshops;
2000;John C. Dean;COTS Workshop: continuing collaborations for successful COTS development.;797-798;2;Workshops;
2000;Janice A. Singer,Margaret-Anne D. Storey,Susan Elliott Sim;Beg, borrow, or steal (workshop session): using multidisciplinary approaches in empirical software engineering research.;799-800;2;Workshops;
2000;Jonathan Gray,Louise Scott,Ian Ferguson;The Second International Symposium on Constructing Software Engineering Tools (CoSET2000).;801-802;2;Workshops;
2000;Philippe A. Palanque,Fabio Paterno;Design, specification, and verification of interactive systems (workshop session).;803-804;2;Workshops;
2000;Susan Elliott Sim,Richard C. Holt,Rainer Koschke;Workshop on standard exchange format (WoSEF).;805-806;2;Workshops;
2000;Frank Mauer;3rd workshop on software engineering over the Internet.;807-808;2;Workshops;
2000;Peri L. Tarr,William H. Harrison,Harold Ossher,Anthony Finkelstein,Bashar Nuseibeh,Dewayne E. Perry;Workshop on multi-dimensional separation of concerns in software engineering.;809-810;2;Workshops;
2000;Kevin J. Sullivan;The 2nd International Workshop on Economics-Driven Software Engineering Research.;811;1;Workshops;
2000;Tim Menzies;WISE3: the Third International Workshop on Intelligent Software Engineering (workshop session).;812-813;2;Workshops;
2000;Peter Knauber,Giancarlo Succi;Software product lines: economics, architectures, and applications (workshop).;814-815;2;Workshops;
2000;Paolo Ciancarini,Michael Wooldridge;Agent-oriented software engineering (workshop).;816-817;2;Workshops;
2000;Nigel Bevan;Specifying and measuring quality in use (tutorial session).;819;1;Tutorials;
2000;Rick Kazman,Mark Klein;Designing and analyzing software architectures using ABASs (tutorial session).;820;1;Tutorials;
2000;Karl J. Lieberherr,David H. Lorenz,Mira Mezini;Building modular object-oriented systems with reusable collaborations (tutorial session).;821;1;Tutorials;
2000;Steve Vinoski;Introduction to CORBA (tutorial session).;822;1;Tutorials;
2000;Pankaj Jalote;Moving from ISO9000 to higher levels of the CMM (tutorial session).;823;1;Tutorials;
2000;Robert L. Nord,Daniel J. Paulish,Dilip Soni;Planning realistic schedules using software architecture (tutorial session).;824;1;Tutorials;
2000;Cristina Videira Lopes,Gregor Kiczales;Improving design and source code modularity using AspectJ (tutorial session).;825;1;Tutorials;
2000;Steve Vinoski;Scalability issues in CORBA-based systems (tutorial session).;826;1;Tutorials;
2000;Gregory J. Kirsch,Yannis Skulikaris;Intellectual property protection for software in the United States and Europe (tutorial session): the changing roles of patents and copyrights.;827;1;Tutorials;
2000;Bill Curtis;Software process improvement (tutorial session): best practices and lessons learned.;828;1;Tutorials;
2000;Hassan Gomaa;Designing real-time and distributed applications with the UML (tutorial session).;829;1;Tutorials;
2000;Kenji Takahashi,Wolfgang Emmerich,Anthony Finkelstein,Sofia Guerra;System development using application services over the Net (tutorial session).;830;1;Tutorials;
2000;Bev Littlewood,Lorenzo Strigini;Software reliability (tutorial session): basic concepts and assessment methods.;831;1;Tutorials;
2000;Don S. Batory;Product-line architectures, aspects, and reuse (tutorial session).;832;1;Tutorials;
2000;Yossi Gil,John Howse,Stuart T. Kent;Advanced visual modeling (tutorial session): beyond UML.;833;1;Tutorials;
2000;Gian Pietro Picco;Understanding code mobility (tutorial session).;834;1;Tutorials;
2000;Bev Littlewood,Lorenzo Strigini;Fault tolerance via diversity against design faults (tutorial session): design principles and reliability assessment.;835;1;Tutorials;
2000;Victor R. Basili,Oliver Laitenberger,Forrest Shull,Ioana Rus;Improving software inspections by using reading techniques (tutorial session).;836;1;Tutorials;
1999;Eric M. Dashofy,Nenad Medvidovic,Richard N. Taylor;Using Off-the-Shelf Middleware to Implement Connectors in Distributed Software Architectures.;3-12;10;Architectures: Composition Techniques;
1999;Elisabetta Di Nitto,David S. Rosenblum;Exploiting ADLs to Specify Architectural Styles Induced by Middleware Infrastructures.;13-22;10;Architectures: Composition Techniques;
1999;David J. Kasik,Conrad E. Kimball,Jimmie L. Felt,Kenneth B. Frazier;A Flexible Approach to Alliances of Complex Applications.;23-32;10;Architectures: Composition Techniques;
1999;Jean-Marc DeBaud,Klaus Schmid;A Systematic Approach to Derive the Scope of Software Product Lines.;34-43;10;Architectures: Development Techniques;
1999;Nenad Medvidovic,David S. Rosenblum,Richard N. Taylor;A Language and Environment for Architecture-Based Software Development and Evolution.;44-53;10;Architectures: Development Techniques;
1999;Rick Kazman,Mario Barbacci,Mark Klein,S. Jeromy Carriere,Steven G. Woods;Experience with Performing Architecture Tradeoff Analysis.;54-63;10;Architectures: Development Techniques;
1999;Mark Woodman,Robert P. Griffiths,Malcolm Macgregor,Simon T. Holland,Hugh Robinson;Exploiting Smalltalk Modules in a Customizable Programming Environment.;65-74;10;Widescale Computing;
1999;Gregory D. Abowd;Software Engineering Issues for Ibiquitous Computing.;75-84;10;Widescale Computing;
1999;James D. Herbsleb,Rebecca E. Grinter;Splitting the Organization and Integrating the Code: Conway's Law Revisited.;85-95;11;Widescale Computing;
1999;Robert DeLine;Avoiding Packaging Mismatch with Flexible Packaging.;97-106;10;Program Composition;
1999;Peri L. Tarr,Harold Ossher,William H. Harrison,Stanley M. Sutton Jr.;N Degrees of Separation: Multi-Dimensional Separation of Concerns.;107-119;13;Program Composition;
1999;Robert J. Walker,Elisa L. A. Baniassad,Gail C. Murphy;An Initial Assessment of Aspect-Oriented Programming.;120-130;11;Program Composition;
1999;Zhe Dang,Richard A. Kemmerer;Using the ASTRAL Model Checker to Analyze Mobile IP.;132-142;11;Model Checking;
1999;William Chan,Richard J. Anderson,Paul Beame,David H. Jones,David Notkin,William E. Warner;Decoupling Synchronization from Local Control for Efficient Symbolic Model Checking of Statecharts.;142-151;10;Model Checking;
1999;David S. Keyes,Laura K. Dillon,Moon-Jung Chung;Analysis of a Scheduler for a CAD Framework.;152-161;10;Model Checking;
1999;Ophir Holder,Israel Ben-Shaul,Hovav Gazit;Dynamic Layout of Distributed Applications in FarGo.;163-173;11;Distributed Systems;
1999;Richard S. Hall,Dennis Heimbigner,Alexander L. Wolf;A Cooperative Approach to Support Software Deployment Using the Software Dock.;174-183;10;Distributed Systems;
1999;Kevin J. Sullivan,John C. Knight,Xing Du,Steve Geist;Information Survivability Control Systems.;184-192;9;Distributed Systems;
1999;Daniel B. Jackson,Allison Waingold;Lightweight Extraction of Object Models from Bytecode.;194-202;9;Evolution;
1999;Jonathan E. Cook,Jeffrey A. Dage;Highly Reliable Upgrading of Components.;203-212;10;Evolution;
1999;Michael D. Ernst,Jake Cockrell,William G. Griswold,David Notkin;Dynamically Discovering Likely Program Invariants to Support Program Evolution.;213-224;12;Evolution;
1999;Rudolf K. Keller,Reinhard Schauer,Sebastien Robitaille,Patrick Page;Pattern-Based Reverse-Engineering of Design Components.;226-235;10;Reverse Engineering;
1999;Katsuhisa Maruyama,Kenichi Shima;Automatic Method Refactoring Using Weighted Dependence Graphs.;236-245;10;Reverse Engineering;
1999;Arie van Deursen,Tobias Kuipers;Identifying Objects Using Cluster and Concept Analysis.;246-255;10;Reverse Engineering;
1999;Atif M. Memon,Martha E. Pollack,Mary Lou Soffa;Using a Goal-Driven Approach to Generate Test Cases for GUIs.;257-266;10;Testing;
1999;Lydie du Bousquet,Farid Ouabdesselam,Jean-Luc Richier,Nicolas Zuanon;Lutess: A Specification-Driven Testing Environment for Synchronous Software.;267-276;10;Testing;
1999;Christina Pavlopoulou,Michal Young;Residual Test Coverage Monitoring.;277-284;8;Testing;
1999;Siddhartha R. Dalal,Ashish Jain,Nachimuthu Karunanithi,J. M. Leaton,Christopher M. Lott,Gardner C. Patton,Bruce M. Horowitz;Model-Based Testing in Practice.;285-294;10;Testing;
1999;Daniil Yakimovich,James M. Bieman,Victor R. Basili;Software Architecture Classification for Estimating the Cost of COTS Integration.;296-302;7;Metrics: Cost Estimation;
1999;Lionel C. Briand,Khaled El Emam,Isabella Wieczorek;Explaining the Cost of European Space and Military Projects.;303-312;10;Metrics: Cost Estimation;
1999;Lionel C. Briand,Khaled El Emam,Dagmar Surmann,Isabella Wieczorek,Katrina Maxwell;An Assessment and Comparison of Common Software Cost Estimation Modeling Techniques.;313-322;10;Metrics: Cost Estimation;
1999;David L. Atkins,Thomas A. Ball,Todd L. Graves,Audris Mockus;Using Version Control Data to Evaluate the Impact of Software Tools.;324-333;10;Metrics: Tools & Design;
1999;Saida Benlarbi,Walcelio L. Melo;Polymorphism Measures for Early Risk Prediction.;334-344;11;Metrics: Tools & Design;
1999;Lionel C. Briand,Jurgen Wust,Stefan V. Ikonomovski,Hakim Lounis;Investigating Quality Factors in Object-Oriented Designs: An Industrial Case Study.;345-354;10;Metrics: Tools & Design;
1999;Yasuyuki Tahara,Akihiko Ohsuga,Shinichi Honiden;Agent System Development Method Based on Agent Patterns.;356-367;12;Agents, Mobility & Interoperability;
1999;Gian Pietro Picco,Amy L. Murphy,Gruia-Catalin Roman;LIME: Linda Meets Mobility.;368-377;10;Agents, Mobility & Interoperability;
1999;Alexander Borgida,Premkumar T. Devanbu;Adding more ``DL'' to IDL: Towards More Knowledgeable Component Inter-Operability.;378-387;10;Agents, Mobility & Interoperability;
1999;Gerald C. Gannod,Betty H. C. Cheng;A Specification Matching Based Approach to Reverse Engineering.;389-398;10;Specification & Verification;
1999;Gleb Naumovich,George S. Avrunin,Lori A. Clarke;Data Flow Analysis for Checking Properties of Concurrent Java Programs.;399-410;12;Specification & Verification;
1999;Matthew B. Dwyer,George S. Avrunin,James C. Corbett;Patterns in Property Specifications for Finite-State Verification.;411-420;10;Specification & Verification;
1999;Akira Nishimatsu,Minoru Jihira,Shinji Kusumoto,Katsuro Inoue;Call-Mark Slicing: An Efficient and Economical Way of Reducing Slice.;422-431;10;Program Analysis;
1999;Saurabh Sinha,Mary Jean Harrold,Gregg Rothermel;System-Dependence-Graph-Based Slicing of Programs with Arbitrary Interprocedural Control Flow.;432-441;10;Program Analysis;
1999;Jyh-Shiarn Yur,Barbara G. Ryder,William Landi;An Incremental Flow- and Context-Sensitive Pointer Aliasing Analysis.;442-451;10;Program Analysis;
1999;Mike Mannion,Hermann Kaindl,Joe Wheadon;Reusing Single System Requirements from Application Family Requirements.;453-462;10;Reuse & Browsing;
1999;Amir Michail,David Notkin;Assessing Software Libraries by Browsing Similar Classes, Functions and Relationships.;463-472;10;Reuse & Browsing;
1999;Premkumar T. Devanbu,Yih-Farn Chen,Emden R. Gansner,Hausi A. Muller,Johannes Martin;CHIME: Customizable Hyperlink Insertion and Maintenance Engine for Software Engineering Environments.;473-482;10;Reuse & Browsing;
1999;Alastair D. Reid,John Peterson,Gregory D. Hager,Paul Hudak;Prototyping Real-Time Vision Systems: An Experiment in DSL Design.;484-493;10;Inspection, Debugging & Prototyping;
1999;Oliver Laitenberger,Colin Atkinson;Generalizing Perspective-Based Inspection to Handle Object-Oriented Development Artifacts.;494-503;10;Inspection, Debugging & Prototyping;
1999;Mireille Ducasse;Coca: An automated Debugger for C.;504-513;10;Inspection, Debugging & Prototyping;
1999;PerOlof Bengtsson,Jan Bosch;Haemo Dialysis Software Architecture Design Experiences.;516-525;10;Case Studies;
1999;Giulio Fregonese,Alessandro Zorer,Giovanni Cortese;Architectural Framework Modeling in Telecommunication Domain.;526-534;9;Case Studies;
1999;David R. Barstow;Baseball Seasons and Dog Years.;535-542;8;Case Studies;
1999;Jan Bosch;Product-Line Architectures in Industry: A Case Study.;544-554;11;Case Studies;
1999;Ivan T. Bowman,Richard C. Holt,Neil V. Brewster;Linux as a Case Study: Its Extracted Software Architecture.;555-563;9;Case Studies;
1999;Neil Roodyn,Wolfgang Emmerich;An Architectural Style for Multiple Real-Time Data Feeds.;564-572;9;Case Studies;
1999;Kenneth M. Anderson;Supporting Industrial Hyperwebs: Lessons in Scalability.;573-582;10;Case Studies;
1999;Dewayne E. Perry;Software Evolution and ``light'' Semantics (Extended Abstract).;587-590;4;Best Paper;
1999;Nancy R. Mead;Panel: Issues in Software Engineering for Survivable Systems.;592-593;2;Panels;
1999;David Notkin,Gregory J. Kirsch,Yannis Skulikaris;Panel: Intellectual Property Issues in Software.;594-595;2;Panels;
1999;Gerard J. Holzmann,Margaret H. Smith;A Practical Method for Verifying Event-Driven Software.;597-607;11;State of the Art Report;
1999;Roger G. Fordham;Software Process Maturity: Is Level five Enough?;611;1;Invited Industry Presentations;
1999;Ted J. Biggerstaff;Reuse Technologies and Their Niches.;613-614;2;Invited Industry Presentations;
1999;Martin L. Griss;Architecting for Large-Scale Systematic Component Reuse.;615-616;2;Invited Industry Presentations;
1999;David M. MacKenzie;Designing Safe Software for Medical Devices.;618;1;Invited Industry Presentations;
1999;Peter Hantos;A Systems Engineering View of Requirements Management for Software-Intensive Systems.;620-621;2;Invited Industry Presentations;
1999;Eberhardt Rechtin;The Extension of Systems Architecting to the Architecting of Organizations.;622;1;Invited Industry Presentations;
1999;Charles Leinbach;Successfully Deliver Internet Applications Using Rapid Software Techniques.;624-625;2;Invited Industry Presentations;
1999;Dorothy McKinney;Impact of Commercial Off-the-Shelf (COTS) Software on the Interface Between Systems and Software Engineering.;627-628;2;Invited Industry Presentations;
1999;Norman Rajala,Djenana Campara,Nikolai Mansurov;Insight: Reverse Engineer Case Tool.;630-633;4;Formal Research Demonstrations;
1999;Jeffrey N. Magee;Behavioral Analysis of Software Architectures Using LTSA.;634-637;4;Formal Research Demonstrations;
1999;Mark Woodman,Robert P. Griffiths,Malcolm Macgregor,Simon T. Holland;OU LearningWorks: A Customized Programming Environment for Smalltalk Modules.;638-641;4;Formal Research Demonstrations;
1999;Frank Maurer,Giancarlo Succi,Harald Holz,Boris Kotting,Sigrid Goldmann,Barbara Dellen;Software Process Support over the Internet.;642-645;4;Formal Research Demonstrations;
1999;Ellis Horowitz,Joo H. Lee,June Sup Lee;WinWin: A System for Negotiating Requirements.;646-649;4;Formal Research Demonstrations;
1999;Scott Malabarba,Premkumar T. Devanbu,Aaron Stearns;MoHCA-Java: A Tool for C++ to Java Conversion Support.;650-653;4;Formal Research Demonstrations;
1999;Philip M. Johnson;Leap: A ``Personal Information Environment'' for Software Engineers.;654-657;4;Formal Research Demonstrations;
1999;Israel Ben-Shaul,Hovav Gazit,Yoad Gidron,Ophir Holder,Boris Lavva;FarGo: A System for Mobile Component-Based Application Development.;658-659;2;Formal Research Demonstrations;
1999;Arturo I. Concepcion,Sunny Lin,Scott J. Simon;The RMT (Recursive Multi-Threaded) Tool: A Computer Aided Software Engineering Tool for Monitoring and Predicting Software Development Progress.;660-663;4;Formal Research Demonstrations;
1999;Wolfgang Emmerich,Neil Roodyn;Distributed Objects.;665-666;2;Tutorials;
1999;Joyce Statz;Practical Software Measurement.;667-668;2;Tutorials;
1999;A. Winsor Brown;Personal Software Engineering Project Management Process.;669-670;2;Tutorials;
1999;Mark A. Ardis,David A. Cuka;Defining Families - Commonality Analysis.;671-672;2;Tutorials;
1999;Steve M. Easterbrook;Verification and Validation of Requirements for Mission Critical Systems.;673-674;2;Tutorials;
1999;Jack C. Wileden,Alan Kaplan;Software Interoperability: Principles and Practice.;675-676;2;Tutorials;
1999;Richard E. Fairley;Managing by the Numbers: A Tutorial on Quantitative Measurement and Control of software Projects.;677-678;2;Tutorials;
1999;Jyrki Kontio;Risk Management in Software Development: A Technology Overview and the Riskit Method.;679-680;2;Tutorials;
1999;Michel Ezran,Maurizio Morisio,Colin Tully;Failure and Success Factors in Reuse Programs: A Synthesis of Industrial Experiences.;681-682;2;Tutorials;
1999;Wilhelm Schafer,Albert Zundorf;Round-Trip Engineering with Design Patterns, UML, Java and C++.;683-684;2;Tutorials;
1999;Grady H. Campbell Jr.;Adaptable Components.;685-686;2;Tutorials;
1999;Harold Ossher,Peri L. Tarr;Using Subject-Oriented Programming to Overcome Common Problems in Object-Oriented Software Development/Evolution.;687-688;2;Tutorials;
1999;Jarrett Rosenberg;Tutorial: A Quick Introduction to Software Reliability Modeling.;689;1;Tutorials;
1999;Robert T. Monroe;Modeling and Analyzing software Architectures.;690-691;2;Tutorials;
1999;San Murugesan,Yogesh Deshpande;ICSE'99 Workshop on Web Engineering.;693-694;2;Workshops;
1999;Vaclav Rajlich;Software Change and Evolution (SCE'99).;695;1;Workshops;
1999;Frank Maurer;ICSE 99 Workshop on Software Engineering over the Internet.;696-697;2;Workshops;
1999;Andreas Ulrich,Peter Zimmerer;International Workshop on Testing Distributed Component-Based Systems.;698;1;Workshops;
1999;Kevin J. Sullivan,David Notkin,Alfonso Fuggetta,John M. Favaro;First Workshop on Economics-Driven Software Engineering Research.;699-700;2;Workshops;
1999;Marcelo Sant'Anna,Julio Cesar Sampaio do Prado Leite,Ira D. Baxter,David S. Wile,Ted J. Biggerstaff,Don S. Batory,Premkumar T. Devanbu,Elizabeth Burd;International Workshop on Software Transformation Systems (STS'99).;701-702;2;Workshops;
1999;Peter R. Croll,Hesham El-Rewini;The International Symposium on Software Engineering for Parallel and Distributed Systems PDSE'99.;703-704;2;Workshops;
1999;Wolfgang Emmerich,Volker Gruhn;Engineering Distributed Objects (EDO 99) Workshop Summary.;705-706;2;Workshops;
1999;Jonathan Gray,Louise Scott,Anna Liu,Jennifer Harvey;The First International Symposium on Constructing Software Engineering Tools (CoSET'99).;707-708;2;Workshops;
1999;Rachel Harrison;Summary: Empirical Studies of Software Development and Evolution.;709;1;Workshops;
1999;Victor R. Basili,Tom DeMarco,Ali Mili;Science and Engineering for Software Development: A Recognition of Harlan D. Mills' Legacy.;710-711;2;Workshops;
1999;Alan W. Brown,Kurt C. Wallnau;International Workshop on Component-Based Software Engineering.;714;1;Workshops;
1999;Victor A. Braberman;Automatic Verification of Real-Time Designs.;716-717;2;Workshops;
1999;Michael D. Ernst;Research Summary for Dynamic Detection of Program Invariants.;718-719;2;Workshops;
1999;Anita Jacob;Development of Object Oriented Frameworks for Spatio-Temporal Information systems.;720-721;2;Workshops;
1999;Alexander Kotov;The Internet as a Medium for Software Engineering Experiments.;722-723;2;Workshops;
1999;Cecilia Mascolo;Specification, Analysis, and Prototyping of Mobile Systems.;724-725;2;Workshops;
1999;Carleton A. Moore;Project LEAP: Personal Process Improvement for the Differently Disciplined.;726-727;2;Workshops;
1999;Amy L. Murphy;Algorithm Development in the Mobile Environment.;728-729;2;Workshops;
1999;Peyman Oreizy;A Flexible Approach to Decentralized Software Evolution.;730-731;2;Workshops;
1999;Andre van der Hoek;Configurable Software Architecture in Support of Configuration Management and Software Deployment.;732-733;2;Workshops;
1999;Robert J. Walker;Contextual Programming (Doctoral Symposium - Extended Abstract).;734-735;2;Workshops;
1999;Pu-Lin Yeh,Jin-Cherng Lin;Toward Precise Measurements Using Software Normalization.;736-737;2;Workshops;
1998;Mikio Aoyama;Agile Software Process and Its Experience.;3-12;10;Experiences with Software Process Improvement;
1998;Volker Gruhn,Juri Urbainczyk;Software Process Modeling and Enactment: An Experience Report Related to Problem Tracking in an Industrial Project.;13-21;9;Experiences with Software Process Improvement;
1998;Keishi Sakamoto,Kumiyo Nakakoji,Yasunari Takagi,Naoki Niihara;Toward Computational Support for Software Process Improvement Activities.;22-31;10;Experiences with Software Process Improvement;
1998;Rajesh Mascarenhas,Dinkar Karumuri,Ugo A. Buy,Robert V. Kenyon;Modeling and Analysis of a Virtual Reality System with Time Petri Nets.;33-42;10;Formal Modeling;
1998;Gregory Duval;Specification and Verification of an Object Request Broker.;43-52;10;Formal Modeling;
1998;Axel van Lamsweerde,Emmanuel Letier;Integrating Obstacles in Goal-Driven Requirements Engineering.;53-62;10;Formal Modeling;
1998;Elisa L. A. Baniassad,Gail C. Murphy;Conceptual Module Querying for Software Reengineering.;64-73;10;Reverse Engineering;
1998;Mary Jean Harrold,Ning Ci;Reuse-Driven Interprocedural Slicing.;74-83;10;Reverse Engineering;
1998;Nicolas Anquetil,Timothy C. Lethbridge;Extracting Concepts from File Names: A New File Clustering Criterion.;84-93;10;Reverse Engineering;
1998;Brendan P. Mahony,Jin Song Dong;Blending Object-Z and Timed CSP: An Introduction to TCOZ.;95-104;10;Formal Methods and Object Orientation;
1998;Yossi Gil,Stuart T. Kent;Three Dimensional Software Modeling.;105-114;10;Formal Methods and Object Orientation;
1998;Tommi Mikkonen;Formalizing Design Patterns.;115-124;10;Formal Methods and Object Orientation;
1998;Premkumar T. Devanbu,Philip W. L. Fong,Stuart G. Stubblebine;Techniques for Trusted Software Engineering.;126-135;10;Internet / Mobile Code / Security;
1998;David M. Hilbert,David F. Redmiles;An Approach to Large-Scale Collection of Application Usage Data Over the Internet.;136-145;10;Internet / Mobile Code / Security;
1998;Mario Baldi,Gian Pietro Picco;Evaluating the Tradeoffs of Mobile Code Design Paradigms in Network Management Applications.;146-155;10;Internet / Mobile Code / Security;
1998;Annie I. Anton,Colin M. Potts;The Use of Goals to Surface Requirements for Evolving Systems.;157-166;10;Software Evolution;
1998;Edwin C. Chan,John Tang Boyland,William L. Scherlis;Promises: Limited Specifications for Analysis and Manipulation.;167-176;10;Software Evolution;
1998;Peyman Oreizy,Nenad Medvidovic,Richard N. Taylor;Architecture-Based Runtime Software Evolution.;177-186;10;Software Evolution;
1998;Todd L. Graves,Mary Jean Harrold,Jung-Min Kim,Adam A. Porter,Gregg Rothermel;An Empirical Study of Regression Test Selection Techniques.;188-197;10;Testing;
1998;Gregg Rothermel,Lixin Li,Christopher DuPuis,Margaret M. Burnett;What You See Is What You Test: A Methodology for Testing Form-Based Visual Programs.;198-207;10;Testing;
1998;Jason E. Robbins,Nenad Medvidovic,David F. Redmiles;Integrating Architecture Description Languages with a Standard Design Method.;209-218;10;Novel Approaches to Design and Validation;
1998;Bruno d'Ausbourg,Christel Seguin,Guy Durrieu,Pierre Roche;Helping the Automated Validation Process of User Interfaces Systems.;219-228;10;Novel Approaches to Design and Validation;
1998;Peri L. Tarr,Lori A. Clarke;Consistency Management for Complex Applications.;230-239;10;Managing Objects;
1998;Jean-Marc Jezequel;Reifying Configuration Management for Object-Oriented Software.;240-249;10;Managing Objects;
1998;Dewayne E. Perry,Harvey P. Siy,Lawrence G. Votta;Parallel Changes in Large Scale Software Development: An Observational Case Study.;251-260;10;Large Scale and Complex System Development;
1998;Gianpaolo Cugola,Elisabetta Di Nitto,Alfonso Fuggetta;Exploiting an Event-Based Infrastructure to Develop Complex Distributed Systems.;261-270;10;Large Scale and Complex System Development;
1998;James D. Herbsleb,Rebecca E. Grinter;Conceptual Simplicity Meets Organizational Complexity: Case Study of a Corporate Metrics Program.;271-280;10;Large Scale and Complex System Development;
1998;Eric K. McCall,Lori A. Clarke,Leon J. Osterweil;An Adaptable Generation Approach to Agenda Management.;282-291;10;Computer Supported Cooperative Work;
1998;Pierre N. Robillard,Patrick d'Astous,Francoise Detienne,Willemien Visser;Measuring Cognitive Activities in Software Engineering.;292-300;9;Computer Supported Cooperative Work;
1998;Rudolf K. Keller,Reinhard Schauer;Design Components: Towards Software Composition at the Design Level.;302-311;10;Object-Oriented Technology;
1998;Tyng-Ruey Chuang,Y. S. Kuo,Chien-Min Wang;Non-Intrusive Object Introspection in C++: Architecture and Application.;312-321;10;Object-Oriented Technology;
1998;Savitha Srinivasan,John Vergo;Object Oriented Reuse: Experience in Developing a Framework for Speech Recognition Applications.;322-330;9;Object-Oriented Technology;
1998;Martin Host,Claes Wohlin;An Experimental Study of Individual Subjective Effort Estimations and Combinations of the Estimates.;332-339;8;Project Estimation and Simulation;
1998;Lionel C. Briand,Khaled El Emam,Oliver Laitenberger,Thomas Fussbroich;Using Simulation to Build Inspection Efficiency Benchmarks for Development Projects.;340-349;10;Project Estimation and Simulation;
1998;Noriko Hanakawa,Shuuji Morisaki,Ken-ichi Matsumoto;A Learning Curve Based Simulation Model for Software Development.;350-359;10;Project Estimation and Simulation;
1998;Susan Elliott Sim,Richard C. Holt;The Ramp-Up Problem in Software Projects: A Case Study of How Software Immigrants Naturalize.;361-370;10;Project and Workflow Management;
1998;Pankaj Jalote,M. Haragopal;Overcoming the NAH Syndrome for Inspection Deployment.;371-378;8;Project and Workflow Management;
1998;Volker Gruhn,Monika Schneider;Workflow Management Based on Process Model Repositories.;379-388;10;Project and Workflow Management;
1998;Lionel C. Briand,Khaled El Emam,Frank Bomarius;COBRA: A Hybrid Method for Software Cost Estimation, Benchmarking, and Risk Assessment.;390-399;10;Estimation Techologies;
1998;Claes Wohlin,Per Runeson;Defect Content Estimations from Review Data.;400-409;10;Estimation Techologies;
1998;Osamu Mizuno,Tohru Kikuno,Katsumi Inagaki,Yasunari Takagi,Keishi Sakamoto;Analyzing Effects of Cost Estimation Accuracy on Quality and Productivity.;410-419;10;Estimation Techologies;
1998;Mira Kajko-Mattsson;A Conceptual Model of Software Maintenance.;422-425;4;Project Management 1;
1998;Takeshi Tanaka,Minoru Aizawa,Hideto Ogasawara,Atsushi Yamada;Software Quality Analysis & Measurement Service Activity in the Company.;426-429;4;Project Management 1;
1998;Yukio Motoyoshi,Shigeru Otsuki;An Incremental Project Plan: Introducing Cleanroom Method and Object-Oriented Development Method.;430-433;4;Project Management 1;
1998;Elif Demirors,Onur Demirors,Oguz Dikenelli,Billur Keskin;Process Improvement Towards ISO 9001 Certification in a Small Software Organization.;435-438;4;Process Improvement;
1998;Yingxu Wang,Graham King,Alec Dorling,Dilip Patel,Ian Court,Geoff Staples,Margaret Ross;A Worldwide Survey of Base Process Activities Towards Software Engineering Process Excellence.;439-442;4;Process Improvement;
1998;Frank Houdek,Kurt Schneider,Eva Wieser;Establishing Experience Factories at Daimler-Benz An Experience Report.;443-447;5;Process Improvement;
1998;Taegyun Kim,Gyusang Shin;Restructuring OODesigner: A CASE Tool for OMT.;449-451;3;Metrics 1 (Object Oriented);
1998;Aaron B. Binkley,Stephen R. Schach;Validation of the Coupling Dependency Metric as a Predictor of Run-Time Failures and Maintenance Measures.;452-455;4;Metrics 1 (Object Oriented);
1998;Fabrizio Fioravanti,Paolo Nesi,Sandro Perlini;Assessment of System Evolution Through Characterization.;456-459;4;Metrics 1 (Object Oriented);
1998;Roseanne Tesoriero Tvedt,Marvin V. Zelkowitz;A Model of Noisy Software Engineering Data (Status Report).;461-464;4;Metrics 2 (Data Analysis);
1998;Yooichi Yokoyama,Mitsuhiko Kodaira;Software Cost and Quality Analysis by Statistical Approaches.;465-467;3;Metrics 2 (Data Analysis);
1998;Fumiko Fujiwara,Takushi Goto,Sadao Araki;Examples of Applying Software Estimate Tool.;469-472;4;Cost Estimation;
1998;Mauricio Amaral de Almeida,Hakim Lounis,Walcelio L. Melo;An Investigation on the Use of Machine Learned Models for Estimating Correction Costs.;473-476;4;Cost Estimation;
1998;Bradford Clark,Sunita Devnani-Chulani,Barry W. Boehm;Calibrating the COCOMO II Post-Architecture Model.;477-480;4;Cost Estimation;
1998;Alain April,Alain Abran,Ettore Merlo;Process Assurance Audits: Lessons Learned.;482-485;4;Project Management 2;
1998;Jyrki Kontio,Olli Pitkanen,Reijo Sulonen;Towards Better Software Projects and Contracts: Commitment Specifications in Software Development Projects.;486-489;4;Project Management 2;
1998;Martin Arnold,Peter Pedross;Software Size Measurement and Productivity Rating in a Large-Scale Software Development Department.;490-493;4;Project Management 2;
1998;Jorg Noack,Bruno Schienmann;Designing an Application Development Model for a Large Banking Organization.;495-498;4;Requirement Engineering;
1998;Yoko Shimizu,Noboru Fujimaki,Masayuki Hirayama;A Systematic Approach to Domain-Oriented Software Development.;499-502;4;Requirement Engineering;
1998;Barry W. Boehm,Alexander Egyed;Software Requirements Negotiation: Some Lessons Learned.;503-506;4;Requirement Engineering;
1998;Wolfgang Eixelsberger,Michaela Ogris,Harald C. Gall,Berndt Bellay;Software Architecture Recovery of a Program Family.;508-511;4;Software Architecture;
1998;Juha Kuusela,Alessandro Maccari,Jianli Xu;Architectural Modeling in Industry - An Experience Report.;512-515;4;Software Architecture;
1998;Hideki Koike,Hui-Chu Chu;How Does 3D Visualization Work in Software Engineering? : Empirical Study of a 3D Version/Module Visualization System.;516-519;4;Software Architecture;
1997;Gail E. Kaiser,Stephen E. Dossick,Wenyu Jiang,Jack Jingshuang Yang;An Architecture for WWW-based Hypercode Environments.;3-13;11;Exploiting the Internet;
1997;James Perpich,Dewayne E. Perry,Adam A. Porter,Lawrence G. Votta,Michael W. Wade;Anywhere, Anytime Code Inspections: Using the Web to Remove Inspection Bottlenecks in Large-Scale Software Development.;14-21;8;Exploiting the Internet;
1997;Antonio Carzaniga,Gian Pietro Picco,Giovanni Vigna;Designing Distributed Applications with Mobile Code Paradigms.;22-32;11;Exploiting the Internet;
1997;Shin Nakajima,Kokichi Futatsugi;An Object-Oriented Modeling Method for Algebraic Specifications in CafeOBJ.;34-44;11;Formal Specifications;
1997;Enoch Y. Wang,Heather Richter Lipford,Betty H. C. Cheng;Formalizing and Integrating the Dynamic Model within OMT.;45-55;11;Formal Specifications;
1997;Luciano Baresi,Alessandro Orso,Mauro Pezze;Introducing Formal Specification Methods in Industrial Practice.;56-66;11;Formal Specifications;
1997;Phyllis G. Frankl,Richard G. Hamlet,Bev Littlewood,Lorenzo Strigini;Choosing a Testing Method to Deliver Reliability.;68-78;11;Reliability;
1997;Andy Podgurski,Elaine J. Weyuker;Re-estimation of Software Reliability After Maintenance.;79-85;7;Reliability;
1997;Kazuyuki Shima,Shingo Takada,Ken-ichi Matsumoto,Koji Torii;A Study on the Failure Intensity of Different Software Faults.;86-94;9;Reliability;
1997;Carolyn B. Seaman,Victor R. Basili;An Empirical Study of Communication in Code Inspections.;96-106;11;Inspections and Reviews;
1997;Michael Stein,John Riedl,Soren J. Harner,Vahid Mashayekhi;A Case Study of Distributed, Asynchronous Software Inspection.;107-117;11;Inspections and Reviews;
1997;Philip M. Johnson,Danu Tjahjono;Assessing Software Review Meetings: A Controlled Experimental Study Using CSRS.;118-127;10;Inspections and Reviews;
1997;Adam A. Porter,Harvey P. Siy,Lawrence G. Votta;Understanding the Effects of Developer Activities on Inspection Interval.;128-138;11;Inspections and Reviews;
1997;William N. Robinson,Vecheslav Volkov;A Meta-Model for Restructuring Stakeholder Requirements.;140-149;10;User Inferface and Specifications;
1997;J.-P. Jacquot,D. Quesnot;Early Specification of User-Interfaces: Toward a Formal Approach.;150-160;11;User Inferface and Specifications;
1997;William M. Wilson,Linda H. Rosenberg,Lawrence E. Hyatt;Automated Analysis of Requirement Specifications.;161-171;11;User Inferface and Specifications;
1997;T. C. Nicholas Graham,Tore Urnes;Integrating Support for Temporal Media into an Architecture for Graphical User Interfaces.;172-182;11;User Inferface and Specifications;
1997;Alexander S. Yeh,David R. Harris,Melissa P. Chase;Manipulating Recovered Software Architecture Views.;184-194;11;Legacy Systems and Testing;
1997;Robert DeLine,Gregory Zelesnik,Mary M. Shaw;Lessons on Converting Batch Systems to Support Interaction (Experience Report).;195-204;10;Legacy Systems and Testing;
1997;I. S. Dunietz,Willa K. Ehrlich,B. D. Szablak,Colin L. Mallows,Anthony Iannino;Applying Design of Experiments to Software Testing (Experience Report).;205-215;11;Legacy Systems and Testing;
1997;Gilles Bernot,Laurent Bouaziz,Pascale Le Gall;A Theory of Probabilistic Functional Testing.;216-226;11;Legacy Systems and Testing;
1997;George S. Avrunin,James C. Corbett,Laura K. Dillon;Analyzing Partially-Implemented Real-Time Systems.;228-238;11;Static Analysis;
1997;Mauro Pezze,Michal Young;Constructing Multi-Formalism State-Space Analysis Tools: Using Rules to Specify Dynamic Semantics of Models.;239-249;11;Static Analysis;
1997;Jon Damon Reese,Nancy G. Leveson;Software Deviation Analysis.;250-260;11;Static Analysis;
1997;Maurizio Pighin,Roberto Zamolo;A Predictive Metric Based on Discriminant Statistical Analysis.;262-270;9;Metrics;
1997;Bernd Brugge,Allen H. Dutoit;Communication Metrics for Software Development.;271-281;11;Metrics;
1997;Victor R. Basili,Steven E. Condon,Khaled El Emam,Robert B. Hendrick,Walcelio L. Melo;Characterizing and Modeling the Cost of Rework in a Library of Reusable Software Components.;282-291;10;Metrics;
1997;Shinji Kusumoto,Osamu Mizuno,Tohru Kikuno,Yuji Hirayama,Yasunari Takagi,Keishi Sakamoto;A New Software Project Simulator Based on Generalized Stochastic Petri-net.;293-302;10;Process;
1997;Rodion M. Podorozhny,Leon J. Osterweil;The Criticality of Modeling Formalisms in Software Design Method Comparison: Experience Report.;303-313;11;Process;
1997;Viktor Friesen,Stefan Jahnichen,Matthias Weber;Specification of Software Controlling a Discrete-Continuous Environment.;315-325;11;Hardware/Software Issues;
1997;Mary F. Fernandez,Norman Ramsey;Automatic Checking of Instruction Specifications.;326-336;11;Hardware/Software Issues;
1997;Robert O'Callahan,Daniel B. Jackson;Lackwit: A Program Understanding Tool Based on Type Inference.;338-348;11;Reverse Engineering and Program Understanding;
1997;Christian Lindig,Gregor Snelting;Assessing Modular Structure of Legacy Code Based on Mathematical Concept Analysis.;349-359;11;Reverse Engineering and Program Understanding;
1997;Dean F. Jerding,John T. Stasko,Thomas A. Ball;Visualizing Interactions in Program Executions.;360-370;11;Reverse Engineering and Program Understanding;
1997;Theodore Hammer,Linda H. Rosenberg,Lenore Huffman,Lawrence E. Hyatt;Measuring Requirements Testing.;372-379;8;Process Improvement;
1997;Jo Ann Lane,David Zubrow;Intergrating Measurement with Improvement: An Action-Oriented Approach (Experience Report).;380-389;10;Process Improvement;
1997;Minh Ngoc Nguyen,Alf Inge Wang,Reidar Conradi;Total Software Process Model Evolution in EPOS (Experience Report).;390-399;10;Process Improvement;
1997;Flavio Bonfatti,Gianni Gadda,Paola Daniela Monari;An Improved Process for the Development of PLC Software (Experience Report).;400-410;11;Process Improvement;
1997;Lionel C. Briand,Premkumar T. Devanbu,Walcelio L. Melo;An Investigation into Coupling Measures for C++.;412-421;10;Analysis of C and C++;
1997;Jyh-Shiarn Yur,Barbara G. Ryder,William Landi,Phil Stocks;Incremental Analysis of Side Effects for C Software System.;422-432;11;Analysis of C and C++;
1997;Paolo Tonella,Giuliano Antoniol,Roberto Fiutem,Ettore Merlo;Flow Insensitive C++ Pointers and Polymorphism Analysis and its Application to Slicing.;433-443;11;Analysis of C and C++;
1997;June M. Verner,Narciso Cerpa;The Effect of Department Size on Developer Attitudes to Prototyping.;445-455;11;Economic and Legal Issues;
1997;Cristina Garcia Cifuentes,Anne Fitzgerald;Copyright in Shareware Software Distributed on the Internet - The Trumpet Winsock Case.;456-464;9;Economic and Legal Issues;
1997;Richard J. Botting;On the Economics of Mass-Marketed Software.;465-470;6;Economic and Legal Issues;
1997;David S. Wile;Abstract Syntax from Concrete Syntax.;472-480;9;Object-Oriented Technology;
1997;Gregor Kiczales,John Lamping,Cristina Videira Lopes,Chris Maeda,Anurag Mendhekar,Gail C. Murphy;Open Implementation Design Guidelines.;481-490;10;Object-Oriented Technology;
1997;Garry Froehlich,H. James Hoover,Ling Liu,Paul G. Sorenson;Hooking into Object-Oriented Application Frameworks.;491-501;11;Object-Oriented Technology;
1997;Kevin J. Sullivan,John Socha,Mark Marchukov;Using Formal Methods to Reason about Architectural Standards.;503-513;11;Testing and Analysis;
1997;Rajeev Alur,Lalita Jategaonkar Jagadeesan,Joseph J. Kott,James Von Olnhausen;Model-Checking of Real-Time Systems: A Telecommunications Application (Experience Report).;514-524;11;Testing and Analysis;
1997;Lalita Jategaonkar Jagadeesan,Adam A. Porter,Carlos Puchol,J. Christopher Ramming,Lawrence G. Votta;Specification-based Testing of Reactive Software: Tools and Experiments (Experience Report).;525-535;11;Testing and Analysis;
1997;Edward Yourdon;Beyond Software Engineering: Ten Imperatives for the Successful Software Developer at the End of the Decade (Abstract).;538;1;Plenary Speakers;
1997;Guy L. Steele Jr.;Java and the Evolution of Web Software (Abstract).;538;1;Plenary Speakers;
1997;Mark Weiser;Software Engineering That Matters to People (Abstract).;538;1;Plenary Speakers;
1997;Leon J. Osterweil;Software Processes Are Software Too, Revisited: An Invited Talk on the Most Influential Paper of ICSE 9.;540-548;9;Plenary Speakers;
1997;Meir M. Lehman;Process Modelling - Where Next.;549-552;4;Plenary Speakers;
1997;Werner Karbach,Jorg Noack,Hans-Bernd Kittlaus;Leveraging a Large Banking Organization to Object Technology.;554-555;2;Software Engineering in Organizations: Lessons and Status Report;
1997;Jeffrey Melanson,Robert L. Nord,Dilip Soni;Tailoring OMT for an Industry Software Project.;556-557;2;Software Engineering in Organizations: Lessons and Status Report;
1997;Wolfgang Eixelsberger,Lasse Warholm,Rene Klosch,Harald C. Gall;Software Architecture Recovery of Embedded Software.;558-559;2;Software Engineering in Organizations: Lessons and Status Report;
1997;Christoph Welsch,Alexander Schalk,Stefan Kramer;Integrating Forward and Reverse Object-Oriented Software Engineering.;560-561;2;Software Engineering in Organizations: Lessons and Status Report;
1997;Kent Sullivan;The Windows 95 User Interface: Iterative Design and Problem Tracking in Action.;562-563;2;Software Engineering in Organizations: Lessons and Status Report;
1997;Kevin Ryan,Joachim Karlsson;Prioritizing Software Requirements in an Industrial Setting.;564-565;2;Software Engineering in Organizations: Lessons and Status Report;
1997;Rick Hefner;Lessons Learned with the Systems Security Engineering Capability Maturity Model.;566-567;2;Software Engineering in Organizations: Lessons and Status Report;
1997;Franz Engelmann,Hans Stienen,Ernst Lebsanft;BOOTSTRAP: Four Years of Assessment Experience.;568-569;2;Software Engineering in Organizations: Lessons and Status Report;
1997;Richard A. Baker Jr.;Code Reviews Enhance Software Quality.;570-571;2;Software Engineering in Organizations: Lessons and Status Report;
1997;Robert Oshana,Frank P. Coyle;Implementing Cleanroom Software Engineering into a Mature CMM-Based Software Organization.;572-573;2;Software Engineering in Organizations: Lessons and Status Report;
1997;Debra Bond,Patty Rishi;Redesigning the Systems Development Process.;574-575;2;Software Engineering in Organizations: Lessons and Status Report;
1997;Richard W. Selby;Platforms for Software Execution: Databases vs. Operating Systems vs. Browsers (Panel).;578;1;Panels and Invited Presentations;
1997;Alexander Ram,Hamish Kellock,Peter Hjort;Architecting Families of Software-Intensive Products.;580;1;Panels and Invited Presentations;
1997;Anthony I. Wasserman;Java Development Environments (Panel).;582-583;2;Panels and Invited Presentations;
1997;Walter Royce;Pragmatic Software Metrics for Iterative Development (Presentation).;585;1;Panels and Invited Presentations;
1997;Prasun Dewan,Philip Johnson,Kanth Miriyala,Remo Pareschi;Panel on Collaborative Software Engineering.;586;1;Panels and Invited Presentations;
1997;Dewayne E. Perry;An Overview of the State of the Art in Software Architecture.;590-591;2;State of the Art Reports;
1997;Mark S. Ackerman;Everything you Need To Know About Collaboration and Collaboration Software.;592;1;State of the Art Reports;
1997;Gleb Naumovich,Lori A. Clarke,Leon J. Osterweil,Matthew B. Dwyer;Verification of Concurrent Software with FLAVERS.;594-595;2;Research Demonstrations;
1997;Craig Damon;Nitpick: A Tool for Interactive Design Analysis.;596-597;2;Research Demonstrations;
1997;Arthur S. Hitomi,Gregory Alan Bolcer,Richard N. Taylor;Endeavors: A Process System Infrastructure.;598-599;2;Research Demonstrations;
1997;Jason E. Robbins,David M. Hilbert,David F. Redmiles;Argo: A Design Environment for Evolving Software Architectures.;600-601;2;Research Demonstrations;
1997;Don Cohen,Martin S. Feather,Khaled Narayanaswamy,Stephen Fickas;Automatic Monitoring of Software Requirements.;602-603;2;Research Demonstrations;
1997;Karl J. Lieberherr,Doug Orleans;Preventive Program Maintenance in Demeter/Java.;604-605;2;Research Demonstrations;
1997;Margaret-Anne D. Storey,Kenny Wong,Hausi A. Muller;Rigi: A Visualization Environment for Reverse Engineering.;606-607;2;Research Demonstrations;
1997;Pei Hsia,David Chenho Kung;An Object-Oriented Testing and Maintenance Environment.;608-609;2;Research Demonstrations;
1997;Constance L. Heitmeyer,James Kirby,Bruce G. Labaw;The SCR Method for Formally Specifying, Verifying, and Validating Requirements: Tool Support.;610-611;2;Research Demonstrations;
1997;Robert Darimont,Emmanuelle Delor,Philippe Massonet,Axel van Lamsweerde;GRAIL/KAOS: An Environment for Goal-Driven Requirements Engineering.;612-613;2;Research Demonstrations;
1997;Jim Q. Ning;ADE - An Architecture Design Environment for Component-Based Software Engineering.;614-615;2;Research Demonstrations;
1997;Kevin J. Sullivan,Jake Cockrell,Shengtong Zhang,David Coppit;Package-Oriented Programming of Engineering Tools.;616-617;2;Research Demonstrations;
1997;Andy Schurr;Developing Graphical (Software Engineering) Tools with PROGRES.;618-619;2;Research Demonstrations;
1997;Pier Giorgio Bosco,Giovanni Martini,Corrado Moiso;TINA ACE: An Environment for Specifying, Developing and Generating TINA Services.;620-621;2;Research Demonstrations;
1997;Bill Curtis;Software Process Improvement: Methods and Lessons Learned (Tutorial).;624-625;2;Tutorial Summaries;
1997;Timothy D. Korson;A Realistic, Commercially Robust Process for the Development of Object-Oriented Software Systems (Tutorial).;626-627;2;Tutorial Summaries;
1997;John D. Musa;Software-Reliability-Engineered Testing Practice (Tutorial).;628-629;2;Tutorial Summaries;
1997;Jim Waldo;Java: A Language for Software Engineering (Tutorial).;630;1;Tutorial Summaries;
1997;Jack C. Wileden,Alan Kaplan;Software Interoperability: Principles and Practice (Tutorial).;631-632;2;Tutorial Summaries;
1997;Jeffrey Kramer,Jeffrey N. Magee;Distributed Software Architectures (Tutorial).;633-634;2;Tutorial Summaries;
1997;W. Morven Gentleman;Effective Use of COTS (Commercial-off-the-Shelf) Software Components in Long Lived Systems (Tutorial).;635-636;2;Tutorial Summaries;
1997;Stuart R. Faulk,Constance L. Heitmeyer;Rigorous Requirements for Real-Time Systems: Evolution and Application of the SCR Method (Tutorial).;637-638;2;Tutorial Summaries;
1997;Volker Gruhn,Wilhelm Schafer;Software and Business Process Technology (Tutorial).;639-640;2;Tutorial Summaries;
1997;Wolfgang Emmerich;An Introduction to OMG/CORBA (Tutorial).;641-642;2;Tutorial Summaries;
1997;Victor R. Basili,Frank E. McGarry;The Experience Factory: How to Build and Run One (Tutorial).;643-644;2;Tutorial Summaries;
1997;Watts S. Humphrey,James W. Over;The Personal Software Process (PSP): A Full-Day Tutorial.;645-646;2;Tutorial Summaries;
1997;Bashar Nuseibeh,Suzanne Robertson;Making Requirements Measurable (Tutorial).;647-648;2;Tutorial Summaries;
1997;Mark A. Ardis,David M. Weiss;Defining Families: The Commonality Analysis (Tutorial).;649-650;2;Tutorial Summaries;
1997;Shari Lawrence Pfleeger;Evaluating Software Technology (Tutorial).;651-652;2;Tutorial Summaries;
1997;Martin Fowler;A Survey of Object Oriented Analysis and Design Methods (Tutorial).;653-654;2;Tutorial Summaries;
1997;Linda M. Seiter,Karl J. Lieberherr,Doug Orleans;Simplifying the Evolution of Java Programs (Tutorial).;655-656;2;Tutorial Summaries;
1997;Dewayne E. Perry,Adam A. Porter,Lawrence G. Votta;A Primer on Empirical Studies (Tutorial).;657-658;2;Tutorial Summaries;
1997;Hausi A. Muller;Reverse Engineering Strategies for Software Migration (Tutorial).;659-660;2;Tutorial Summaries;
1997;Judith G. Brodman,Donna L. Johnson;A Software Process Improvement Approach Tailored for Small Organizations and Small Projects (Tutorial).;661-662;2;Tutorial Summaries;
1997;Wolfgang Pree,Hermann Sikora;Design Patterns for Object-Oriented Software Development (Tutorial).;663-664;2;Tutorial Summaries;
1997;Stefan Fischer,Stefan Leue;Formal Methods for Broadband and Multimedia Systems (Tutorial).;665-666;2;Tutorial Summaries;
1997;Amrit L. Goel,Miyoung Shin;Software Engineering Data Analysis Techniques (Tutorial).;667-668;2;Tutorial Summaries;
1997;Vaclav Rajlich;Comprehension and Evolution of Legacy Software (Tutorial).;669-670;2;Tutorial Summaries;
1997;Marilyn W. Bush;European and American Software Process Maturity Models and Assessments (Tutorial).;671-672;2;Tutorial Summaries;
1997;Graeme Smith;The Second ISEW Cleanroom Workshop.;674;1;Workshop Summaries;
1997;Rachel Harrison,Martin J. Shepperd,John W. Daly;Workshop Summary: Process Modelling and Empirical Studies of Software Evolution.;675;1;Workshop Summaries;
1997;David A. Eichmann;Software Engineering (on) the World Wide Web (Workshop).;676;1;Workshop Summaries;
1997;Laurie Honour Werth,John Werth;Fourth International Workshop on Software Engineering Education (IWSEE 4).;677;1;Workshop Summaries;
1997;Gul A. Agha,Stefano Russo;Workshop on Software Engineering for Parallel and Distributed Systems.;678;1;Workshop Summaries;
1997;Reidar Conradi;7th International Workshop on Software Configuration Management (SCM7), Boston, 18-19 May 1997.;679;1;Workshop Summaries;
1997;Michal Young;ICSE 97 Doctoral Consortium (Workshop Summary).;680-681;2;Workshop Summaries;
1997;Shirley Browne,James W. Moore;Reuse Library Interoperability and the World Wide Web.;684-691;8;Joint Session: 1997 Symposium on Software Reuse (SSR);
1997;Nenad Medvidovic,Peyman Oreizy,Richard N. Taylor;Reuse of Off-the-Shelf Components in C2-Style Architectures.;692-700;9;Joint Session: 1997 Symposium on Software Reuse (SSR);
1997;Anssi Karhinen,Alexander Ran,Tapio Tallgren;Configuring Designs for Reuse.;701-710;10;Joint Session: 1997 Symposium on Software Reuse (SSR);
1996;Tom DeMarco;The Role of Software Development Methodologies: Past, Present, and Future.;2-4;3;Keynote Address;
1996;Steven G. Woods,Qiang Yang;The Program Understanding Problem: Analysis and a Heuristic Approach.;6-15;10;Understanding and Analysis;
1996;Darren C. Atkinson,William G. Griswold;The Design of Whole-Program Analysis Tools.;16-27;12;Understanding and Analysis;
1996;Hermann Kaindl;How to Identify Binary Relations for Domain Models.;28-36;9;Understanding and Analysis;
1996;Denis Avrilionis,Pierre-Yves Cunin,Christer Fernstrom;OPSIS: A View Mechanism for Software Processes Which Supports Their Evolution and Reuse.;38-47;10;Supporting Requirements;
1996;Andreas Zamperoni;GRIDS - GRaph-based, Integrated Development of Software: Integrating Different Perspectives of Software Engineering.;48-59;12;Supporting Requirements;
1996;Xiaoqing Liu,John Yen;An Analytic Framework for Specifying and Analyzing Imprecise Requirements.;60-69;10;Supporting Requirements;
1996;Bogdan Korel,Ali M. Al-Yami;Assertion-Oriented Automated Test Data Generation.;71-80;10;Testing and Analysis;
1996;Aki Watanabe,Ken Sakamura;A Specification-Based Adaptive Test Case Generation Strategy for Open Operating System Standards.;81-89;9;Testing and Analysis;
1996;Gail C. Murphy,David Notkin,Erica S.-C. Lan;An Empirical Study of Static Call Graph Extractors.;90-99;10;Testing and Analysis;
1996;Chip Anderson;An Operating System Development: Windows 3 (Abstract).;101;1;Industrial Experiences;
1996;Kent Beck,James Coplien,Ron Crocker,Lutz Dominick,Gerard Meszaros,Frances Paulisch,John M. Vlissides;Industrial Experience with Design Patterns.;103-114;12;Object Orientation in Use;
1996;Stefan Biffl,Thomas Grechenig,Stephan Oberpfalzer;"Engineering an ""Open"" Client/Server-Platform for a Distributed Austrian Alpine Road-Pricing System in 240 Days: Case Study and Experience Report.";115-124;10;Object Orientation in Use;
1996;Alexander W. van der Vekens;An Object-Oriented Implementation of B-ISDN Signalling - Part 2: Extendability Stands the Test.;125-132;8;Object Orientation in Use;
1996;Naftaly H. Minsky;Independent On-Line Monitoring of Evolving Systems.;134-143;10;Analysis of Distributed Systems;
1996;Shing-Chi Cheung,Jeffrey Kramer;Checking Subsystem Safety Properties in Compositional Reachability Analysis.;144-154;11;Analysis of Distributed Systems;
1996;Gruia-Catalin Roman,Peter J. McCann,Jerome Y. Plun;Assertional Reasoning about Pairwise Transient Interactions in Mobile Computing.;155-164;10;Analysis of Distributed Systems;
1996;Douglas R. Smith;Machine Support for Software Development (Abstract).;167-168;2;Mini-Tutorial;
1996;Martin J. Shepperd,Christopher J. Schofield,Barbara A. Kitchenham;Effort Estimation Using Analogy.;170-178;9;Measurement;
1996;Hideto Ogasawara,Atsushi Yamada,Michiko Kojo;Experiences of Software Quality Management Using Metrics through the Life-Cycle.;179-188;10;Measurement;
1996;Premkumar T. Devanbu,Sakke Karstu,Walcelio L. Melo,William Thomas;Analytical and Empirical Evaluation of Software Reuse Metrics.;189-199;11;Measurement;
1996;Jyrki Kontio;A Case Study in Applying a Systematic Method for COTS Selection.;201-209;9;Component-Based Software;
1996;Jean Mayrand,Francois Coallier;System Acquisition Based on Software Product Assessment.;210-219;10;Component-Based Software;
1996;Kevin J. Sullivan,John C. Knight;Experience Assessing an Architectural Approach to Large-Scale Systematic Reuse.;220-229;10;Component-Based Software;
1996;Tony Hoare;The Role of Formal Techniques: Past, Current and Future or How Did Software Get so Reliable without Proof? (Extended Abstract).;233-234;2;Keynote Address;
1996;Yves Ledru;Using KIDS as a Tool Support for VDM.;236-245;10;Formal Design;
1996;David Harel,Eran Gery;Executable Object Modeling with Statecharts.;246-257;12;Formal Design;
1996;Krishna Kishore Dhara,Gary T. Leavens;Forcing Behavioral Subtyping through Specification Inheritance.;258-267;10;Formal Design;
1996;Si Pan,R. Geoff Dromey;Beyond Structured Programming.;268-277;10;Formal Design;
1996;Scott Henninger;Supporting the Construction and Evolution of Component Repositories.;279-288;10;Configuration Management and Reuse;
1996;Georg Heidenreich,Mark Minas,Detlef Kips;A New Approach to Consistency Control in Software Engineering.;289-297;9;Configuration Management and Reuse;
1996;Yi-Jing Lin,Steven P. Reiss;Configuration Management with Logical Structures.;298-307;10;Configuration Management and Reuse;
1996;Andre van der Hoek,Dennis Heimbigner,Alexander L. Wolf;A Generic, Peer-to-Peer Repository for Distributed Configuration Management.;308-317;10;Configuration Management and Reuse;
1996;Hasso Plattner;A Standard Software Application Development: SAP R/3 (Abstract).;320;1;Industrial Experiences;
1996;James D. Herbsleb,Dennis Goldenson;A Systematic Survey of CMM Experience and Results.;323-330;8;Process Effectiveness;
1996;Peter Heimann,Gregor Joeris,Carl-Arndt Krapp,Bernhard Westfechtel;DYNAMITE: Dynamic Task Nets for Software Process Management.;331-341;11;Process Effectiveness;
1996;Claude Godart,Gerome Canals,Francois Charoy,Pascal Molli,Hala Skaf-Molli;Designing and Implementing COO: Design Process, Architectural Style, Lessons Learned.;342-352;11;Process Effectiveness;
1996;Nancy S. Eickelmann,Debra J. Richardson;An Evaluation of Software Test Environment Architectures.;353-364;12;Process Effectiveness;
1996;Kai Koskimies,Hanspeter Mossenbock;Scene: Using Scenario Diagrams and Active Text for Illustrating Object-Oriented Programs.;366-375;10;System Validation;
1996;Raymond J. Madachy;System Dynamics Modeling of an Inspection-Based Process.;376-386;11;System Validation;
1996;Mohlalefi Sefika,Aamod Sane,Roy H. Campbell;Monitoring Compliance of a Software System with Its High-Level Design Models.;387-396;10;System Validation;
1996;Steven P. Reiss;Simplifying Data Integration: The Design of the Desert Software Development Environment.;398-407;10;Environments;
1996;Flavio De Paoli,Andrea Sosio;Requirements for a Layered Software Architecture Supporting Cooperative Multi-User Interaction.;408-417;10;Environments;
1996;T. C. Nicholas Graham,Tore Urnes;Linguistic Support for the Evolutionary Design of Software Architectures.;418-427;10;Environments;
1996;R. Mark Greenwood,Brian Warboys,Jin Sa;Cooperating Evolving Components: A Rigorous Approach to Evolving Large Software Systems.;428-437;10;Environments;
1996;Simon J. Gibbs,Christian Breiteneder;Large, Multimedia Programming - Concepts and Challenges (Abstract).;439-440;2;Mini-Tutorial;
1996;Victor R. Basili;The Role of Experimentation in Software Engineering: Past, Current, and Future.;442-449;8;Keynote Address;
1996;Mark J. Maybee,Dennis Heimbigner,Leon J. Osterweil;Multilanguage Interoperability in Distributed Systems.;451-463;13;Maintenance and Evolution;
1996;Victor R. Basili,Lionel C. Briand,Steven E. Condon,Yong-Mi Kim,Walcelio L. Melo,Jon D. Valett;Understanding and Predicting the Process of Software Maintenance Release.;464-474;11;Maintenance and Evolution;
1996;Johnson M. Hart,Antonio Pizzarello;A Scalable, Automated Process for Year 2000 System Correction.;475-484;10;Maintenance and Evolution;
1996;Martina Marre,Antonia Bertolino;Reducing and Estimating the Cost of Test Coverage Criteria.;486-494;9;Testing Algorithms;
1996;Loren Larsen,Mary Jean Harrold;Slicing Object-Oriented Software.;495-505;11;Testing Algorithms;
1996;Brian Mitchell,Steven J. Zeil;A Reliability Model Combining Representative and Directed Testing.;506-514;9;Testing Algorithms;
1996;Gerhard G. Fischer;Domain-Oriented Design Environments (Extended Abstract).;517-520;4;Mini-Tutorial;
1996;Kurt Schneider;Prototypes as Assets, not Toys: Why and How to Extract Knowledge from Prototypes.;522-531;10;System Generation;
1996;Dirk Baumer,Walter R. Bischofberger,Horst Lichter,Heinz Zullighoven;User Interface Prototyping - Concepts, Tools, and Experience.;532-541;10;System Generation;
1996;Richard B. Kieburtz,Laura McKinney,Jeffrey M. Bell,James Hook,Alexander Kotov,Jeffrey Lewis,Dino Oliva,Tim Sheard,Ira A. Smith,Lisa Walton;A Software Engineering Experiment in Software Component Generation.;542-552;11;System Generation;
1996;Matthew B. Dwyer,Lori A. Clarke;A Flexible Architecture for Building Data Flow Analyzers.;554-564;11;Dataflow Testing;
1996;Istvan Forgacs;An Exact Array Reference Analysis for Data Flow Testing.;565-574;10;Dataflow Testing;
1996;Evelyn Duesterwald,Rajiv Gupta,Mary Lou Soffa;A Demand-Driven Analyzer for Data Flow Testing at the Integration Level.;575-584;10;Dataflow Testing;
1996;Hans-Eugen Binder;A Telecommunication Development: Siemens' Digital Switching System, EWSD (Abstract).;587;1;Industrial Experiences;
1995;Mats Per Erik Heimdahl,Nancy G. Leveson;Completeness and Consistency Analysis of State-Based Requirements.;3-14;12;Requirements;
1995;Michael Jackson,Pamela Zave;Deriving Specifications from Requirements: An Example.;15-24;10;Requirements;
1995;Lawrence Chung,Brian A. Nixon;Dealing with Non-Functional Requirements: Three Experimental Studies of a Process-Oriented Approach.;25-37;13;Requirements;
1995;W. Eric Wong,Joseph R. Horgan,Saul London,Aditya P. Mathur;Effect of Test Set Minimization on Fault Detection Effectiveness.;41-50;10;Testing;
1995;Duncan Clarke,Insup Lee;Testing Real-Time Constraints in a Process Algebraic Setting.;51-60;10;Testing;
1995;Antonia Bertolino,Lorenzo Strigini;Using Testability Measures for Dependability Assessment.;61-70;10;Testing;
1995;Jonathan E. Cook,Alexander L. Wolf;Automating Process Discovery Through Event-Data Analysis.;73-82;10;Process I;
1995;Naser S. Barghouti,Balachander Krishnamurthy;Using Event Contexts and Matching Constraints to Monitor Software Processes.;83-92;10;Process I;
1995;Scott Henninger,Kris Lappala,Anand Raghavendran;An Organizational Learning Approach to Domain Analysis.;95-104;10;Reuse;
1995;Susan Rosenbaum,Bertrand du Castel;Managing Software Reuse - An Experience Report.;105-111;7;Reuse;
1995;Fabiano Cattaneo,Alfonso Fuggetta,Luigi Lavazza;An Experience in Process Assessment.;115-121;7;Process II;
1995;Toshifumi Tanaka,Keishi Sakamoto,Shinji Kusumoto,Ken-ichi Matsumoto,Tohru Kikuno;Improvement of Software Process by Process Description and Benefit Estimation.;123-132;10;Process II;
1995;Lionel C. Briand,Walcelio L. Melo,Carolyn B. Seaman,Victor R. Basili;Characterizing and Assessing a Large-Scale Software Maintenance Organization.;133-143;11;Process II;
1995;Matthew B. Dwyer,Lori A. Clarke,Kari A. Nies;A Compact Petri Net Representation for Concurrent Programs.;147-157;11;Concurrency;
1995;Mark A. Ardis,John A. Chaves,Lalita Jategaonkar Jagadeesan,Peter Mataga,Carlos Puchol,Mark G. Staskauskas,James Von Olnhausen;A Framework for Evaluating Specification Methods for Reactive Systems: Experience Report.;159-168;10;Concurrency;
1995;Kyo Chul Kang,Kwang-Il Ko;PARTS: A Temporal Logic-Based Real-Time Software Specification and Verification Method.;169-176;8;Concurrency;
1995;David Garlan,Robert Allen,John Ockerbloom;Architectural Mismatch or Why It's Hard to Build Systems Out Of Existing Parts.;179-185;7;Architecture;
1995;David R. Harris,Howard B. Reubenstein,Alexander S. Yeh;Reverse Engineering to the Architectural Level.;186-195;10;Architecture;
1995;Dilip Soni,Robert L. Nord,Christine Hofmeister;Software Architecture in Industrial Applications.;196-207;12;Architecture;
1995;Jacqueline Floch;Supporting Evolution and Maintenance by Using a Flexible Automatic Code Generator.;211-219;9;Development;
1995;Craig Chambers,Jeffrey Dean,David Grove;A Framework for Selective Recompilation in the Presence of Complex Intermodule Dependencies.;221-230;10;Development;
1995;Ryszard Janicki;Towards a Formal Semantics of Parnas Tables.;231-240;10;Development;
1995;Barry W. Boehm,Prasanta K. Bose,Ellis Horowitz,Ming June Lee;Software Requirements Negotiation and Renegotiation Aids: A Theory-W Based Spiral Approach.;243-253;11;Process III;
1995;Ulf Leonhardt,Jeffrey Kramer,Bashar Nuseibeh;Decentralised Process Enactment in a Multi-Perspective Development Environment.;255-264;10;Process III;
1995;Gianpaolo Cugola,Elisabetta Di Nitto,Carlo Ghezzi,M. Mantione;How to Deal With Deviations During Process Model Enactment.;265-273;9;Process III;
1995;Lawrence G. Votta,Adam A. Porter;Experimental Software Engineering: A Report on the State of the Art.;277-279;3;State-of-the-Art (Invited);
1995;Michael Jackson;The World and the Machine.;283-292;10;Keynote (Invited);
1995;Richard N. Taylor,Nenad Medvidovic,Kenneth M. Anderson,Jim Whitehead,Jason E. Robbins;A Component- and Message-Based Architectural Style for GUI Software.;295-304;10;Integration;
1995;George T. Heineman,Gail E. Kaiser;An Architecture for Integrating Concurrency Control into Environment Frameworks.;305-313;9;Integration;
1995;Bob Gautier,Chris W. Loftus,Edel Sherratt,Lynda Thomas;Tool Integration: Experiences and Directions.;315-324;10;Integration;
1995;Bruce W. Weide,Wayne D. Heym,Joseph E. Hollingsworth;Reverse Engineering of Legacy Code Exposed.;327-331;5;Panel: Tractability of Reverse Engineering;
1995;Alex Quilici;Reverse Engineering of Legacy Systems: A Path Toward Success.;333-336;4;Panel: Tractability of Reverse Engineering;
1994;Mark A. Ardis;Lessons from Using Basic LOTOS.;5-14;10;Experiences with Formal Representations of Software;
1994;John A. Keane,Walter Hussak;A Formal Approach to Determining Parallel Resource Bindings: Experience Report.;15-22;8;Experiences with Formal Representations of Software;
1994;Premkumar T. Devanbu,Mark A. Jones;The Use of Description Logics in KBSE Systems: Experience Report.;23-35;13;Experiences with Formal Representations of Software;
1994;Anneliese von Mayrhauser,A. Marie Vans;Comprehension Processes During Large Scale Maintenance.;39-48;10;Understanding Complex Systems;
1994;Maren Krone,Gregor Snelting;On the Inference of Configuration Structures from Source Code.;49-57;9;Understanding Complex Systems;
1994;Marla J. Baker,Stephen G. Eick;Visualizing Software Systems.;59-67;9;Understanding Complex Systems;
1994;Robert J. Allen,David Garlan;Formalizing Architectural Connection.;71-80;10;Software Architectures;
1994;Rick Kazman,Leonard J. Bass,Mike Webb,Gregory D. Abowd;SAAM: A Method for Analyzing the Properties of Software Architectures.;81-90;10;Software Architectures;
1994;Ali Mili,Rym Mili,Roland T. Mittermeir;Storing and Retrieving Software Components: A Refinement Based System.;91-100;10;Software Architectures;
1994;Adam A. Porter,Lawrence G. Votta;An Experiment to Assess Different Defect Detection Methods for Software Requirements Inspections.;103-112;10;Measurement and Evaluation;
1994;Philip M. Johnson;An Instrumented Approach to Improving Software Quality Through Formal Technical Review.;113-122;10;Measurement and Evaluation;
1994;Y. Takada,Ken-ichi Matsumoto,Koji Torii;A Programmer Performance Measure Based on Programmer State Transitions in Testing and Debugging Process.;123-132;10;Measurement and Evaluation;
1994;Sol J. Greenspan,John Mylopoulos,Alexander Borgida;On Formal Requirements Modeling Languages: RML Revisited.;135-147;13;Best Paper of ICSE-6;
1994;David Garlan,J. Frits Habermann,David Notkin;Nico Habermann's Research: A Brief Retrospective.;149-153;5;A. Nico Habermann;
1994;Eric S. K. Yu,John Mylopoulos;"Understanding ""Why"" in Software Process Modelling, Analysis, and Design.";159-168;10;Process Modelling;
1994;Keiichi Yasumoto,Teruo Higashino,Kenichi Taniguchi;Software Process Description Using LOTOS and Its Enaction.;169-178;10;Process Modelling;
1994;Israel Ben-Shaul,Gail E. Kaiser;A Paradigm for Decentralized Process Modeling and Its Realization in the Oz Environment.;179-188;10;Process Modelling;
1994;Monica Hutchins,Herbert Foster,Tarak Goradia,Thomas J. Ostrand;Experiments of the Effectiveness of Dataflow- and Controlflow-Based Test Adequacy Criteria.;191-200;10;Software Testing I;
1994;Gregg Rothermel,Mary Jean Harrold;A Framework for Evaluating Regression Test Selection Techniques.;201-210;10;Software Testing I;
1994;Yih-Farn Chen,David S. Rosenblum,Kiem-Phong Vo;TestTube: A System for Selective Regression Testing.;211-220;10;Software Testing I;
1994;Marie-Claude Gaudel;Formal Specification Techniques (Extended Abstract).;223-227;5;State of the Art Report;
1994;G. Deshmukh,R. Deshpande,James F. Leathrum,K. A. Liburdy;The Role of Testing Methodologies in Open Systems Standards: A POSIX Experience Report.;233-240;8;Software Testing II;
1994;Premkumar T. Devanbu,David S. Rosenblum,Alexander L. Wolf;Automated Construction of Testing and Analysis Tools.;241-250;10;Software Testing II;
1994;Jeffrey Kramer;Distributed Software Engineering.;253-263;11;;
1994;Kevin D. Wentzel;Software Reuse - Facts and Myths.;267-268;2;Panels;
1994;Victor R. Basili;Facts and Myths Affecting Software Reuse.;269;1;Panels;
1994;Martin L. Griss;Software Reuse Experience at Hewlett-Packard.;270;1;Panels;
1994;William J. Tracz;Software Reuse Myths Revisited.;271-272;2;Panels;
1994;Michael Wasmund;Reuse Facts and Myths.;273;1;Panels;
1994;David Lorge Parnas;Software Aging.;279-287;9;Invited Talk;
1994;H. Rebecca Callison;A Periodic Object Model for Real-Time Systems.;291-300;10;Real-Time and Distributed Systems;
1994;Tullio Vardanega;Experience with the Development of Hard Real-Time Embedded Ada Software.;301-308;8;Real-Time and Distributed Systems;
1994;Shing-Chi Cheung,Jeffrey Kramer;An Integrated Method for Effective Behaviour Analysis of Distributed Systems.;309-320;12;Real-Time and Distributed Systems;
1994;Albert Johnson;Software Process Improvement Experience in the DP/MIS Function: Experience Report.;323-329;7;Process Analysis and Improvement;
1994;Judith G. Brodman,Donna L. Johnson;What Small Business and Small Organizations Say About the CMM: Experience Report.;331-340;10;Process Analysis and Improvement;
1994;Pankaj K. Garg,Peiwei Mi,Thuan Q. Pham,Walt Scacchi,Gary Thunquest;The SMART Approach for Software Process Engineering.;341-350;10;Process Analysis and Improvement;
1994;Stephen Fickas,Peter G. Selfridge;Software Engineering and Artificial Intelligence.;353-354;2;Workshops;
1994;Roger King;Workshop on the Intersection Between Databases and Software Engineering.;355;1;Workshops;
1994;Richard N. Taylor,Joelle Coutaz;Workshop on Software Engineering and computer-Human Interaction: Joint Research Issues.;356-357;2;Workshops;
1994;Anthony Finkelstein;Software Engineering Education: A Place in the Sun?;358-359;2;Workshops;
1994;David Garlan,Dewayne E. Perry;Software Architecture: Practice, Potential, and Pitfalls.;363-364;2;Workshops;
1994;Barry W. Boehm;Software Architectures: Critical Success Factors and Cost Drivers.;365;1;Workshops;
1994;Jeffrey Kramer;Exoskeletal Software.;366;1;Workshops;
1994;Bill Curtis;A Process for Hitting Paydirt.;369;1;Workshops;
1993;Richard C. Linger;Cleanroom Software Engineering for Zero-Defect Software.;2-13;12;Formal Methods;
1993;Yabo Wang,David Lorge Parnas;Simulating the Behaviour of Software Modules by Trace Rewriting.;14-23;10;Formal Methods;
1993;Susan L. Gerhart,Dan Craigen,Ted Ralston;Observations on Industrial Practice Using Formal Methods.;24-33;10;Formal Methods;
1993;Arun Lakhotia;Rule-Based Approach to Computing Module Cohesion.;35-44;10;Metrics;
1993;Farokh B. Bastani,Giuseppe DiMarco,Alberto Pasquini;Experimental Evaluation of a Fuzzy-Set Based Measure of Software Correctness Using Program Mutation.;45-54;10;Metrics;
1993;Lionel C. Briand,William M. Thomas,Christopher J. Hetmanski;Modeling and Managing Risk Early in Software Development.;55-65;11;Metrics;
1993;David H. Kitson,Stephen M. Masters;An Analysis of SEI Software Process Assessment Results: 1987-1991.;68-77;10;Process;
1993;Rudolf K. Keller,Richard Lajoie,Nazim H. Madhavji,Tilmann F. W. Bruckhaus,Kamel Toubache,Won-Kook Hong,Khaled El Emam;A Comprehensive Process Model for Studying Software Process Papers.;78-88;11;Process;
1993;Inderpal S. Bhandari,Norman Roth;Post-Process Feedback With and Without Attribute Focusing: A Comparative Evaluation.;89-98;10;Process;
1993;Jeff Offutt,Gregg Rothermel,Christian Zapf;An Experimental Evaluation of Selective Mutation.;100-107;8;Testing;
1993;Janusz W. Laski,Wojciech Szermer,Piotr Luczycki;Dynamic Mutation Testing in Integrated Regression Analysis.;108-117;10;Testing;
1993;Richard G. Hamlet,Bruce Gifford,Borislav Nikolik;Exploring Dataflow Testing of Arrays.;118-129;12;Testing;
1993;Gail E. Kaiser,Steven S. Popovich,Israel Ben-Shaul;A Bi-Level Language for Software Process Modeling.;132-143;12;Process;
1993;Sergio Bandinelli,Alfonso Fuggetta;Computational Reflection in Software Process Modeling: The SLANG Approach.;144-154;11;Process;
1993;Mark G. Bradac,Dewayne E. Perry,Lawrence G. Votta;Prototyping a Process Monitoring Experiment.;155-165;11;Process;
1993;Tetsuo Tamai,Akito Itou;Requirements and Design Change in Large-Scale Software Development: Analysis From the Viewpoint of Process Backtracking.;167-176;10;Requirements Engineering;
1993;Jose M. Drake,W. W. Xie,Wei-Tek Tsai,Imran A. Zualkernan;Approach and Case Study of Requirement Analysis Where End Users Take an Active Role.;177-186;10;Requirements Engineering;
1993;Bashar Nuseibeh,Jeffrey Kramer,Anthony Finkelstein;Expressing the Relationships Between Multiple Views in Requirements Specification.;187-196;10;Requirements Engineering;
1993;Neil Iscoe;Domain Modeling - Overview & Ongoing Research at EDS.;198-200;3;;
1993;Clement L. McGowan,Shawn A. Bohner;Model Based Process Assessments.;202-211;10;Process;
1993;Harvey Wohlwend,Susan Rosenbaum;Software Improvements in an International Company.;212-220;9;Process;
1993;Horst Lichter,Matthias Schneider-Hufschmidt,Heinz Zullighoven;Prototyping in Industrial Software Projects - Bridging the Gap Between Theory and Practice.;221-229;9;Process;
1993;Guillermo Arango,Eric D. Schoen,Robert Pettengill;A Process for Consolidating and Reusing Design Knowledge.;231-242;12;Design Methods;
1993;Guillermo Arango,Eric D. Schoen,Robert Pettengill,Josiah C. Hoskins;The Graft-Host Method for Design Change.;243-254;12;Design Methods;
1993;Mitchell D. Lubars,Colin M. Potts,Charles Richter;Developing Initial OOA Models.;255-264;10;Design Methods;
1993;Kuo-Chung Tai;Predicate-Based Test Generation for Computer Programs.;267-276;10;Testing;
1993;Hasan Ural,Bo Yang;Modeling Software for Accurate Data Flow Representation.;277-286;10;Testing;
1993;Paul Piwowarski,Mitsuru Ohba,Joseph M. Caruso;Coverage Measurement Experience During Function Test.;287-301;15;Testing;
1993;Alexander Borgida,John Mylopoulos,Raymond Reiter;"""...And Nothing Else Changes"": The Frame Problem in Procedure Specifications.";303-314;12;Specification Methods;
1993;Pierre-Jacques Courtois,David Lorge Parnas;Documentation for Safety Critical Software.;315-323;9;Specification Methods;
1993;Michael F. Kleyn,James C. Browne;A High Level Language for Specifying Graph Based Languages and Their Programming Environments.;324-335;12;Specification Methods;
1993;Alan W. Brown;An Examination of the Current State of IPSE Technology.;338-347;10;Software Engineering Environments;
1993;Marvin V. Zelkowitz;Use of an Environment Classification Model.;348-357;10;Software Engineering Environments;
1993;Peri L. Tarr,Stanley M. Sutton Jr.;Programming Heterogeneous Transactions for Software Development Environments.;358-369;12;Software Engineering Environments;
1993;Robert J. Hall;Generalized Behavior-Based Retrieval.;371-380;10;Reuse;
1993;Michael F. Dunn,John C. Knight;Automating the Detection of Reusable Parts in Existing Software.;381-390;10;Reuse;
1993;Stephen B. Ornburn,Richard J. LeBlanc;Building, Modifying and Using Component Generators.;391-402;12;Reuse;
1993;Phil Stocks,David A. Carrington;Test Templates: A Specification-Based Testing Framework.;405-414;10;Testing;
1993;Phyllis G. Frankl,Elaine J. Weyuker;An Analytical Comparison of the Fault-Detecting Ability of Data Flow Testing Techniques.;415-424;10;Testing;
1993;Siddhartha R. Dalal,Joseph R. Horgan,J. R. Kettenring;Reliable Software and Communication: Software Quality, Reliability, and Safety.;425-435;11;Testing;
1993;Marty Sirkin,Don S. Batory,Vivek Singhal;Software Components in a Data Structure Precompiler.;437-446;10;Tools;
1993;David Garlan,Curtis Scott;Adding Implicit Invocation to Rraditional Programming Languages.;447-455;9;Tools;
1993;Sougata Mukherjea,John T. Stasko;Applying Algorithm Animation Techniques for Program Tracing, Debugging, and Understanding.;456-465;10;Tools;
1993;Howard A. Rubin;Software Process Maturity: Measuring Its Impact on Productivity and Quality.;468-476;9;;
1993;Barbara A. Kitchenham,Kari Kansala;Inter-item Correlations among Function Points.;477-480;4;;
1993;Ted J. Biggerstaff,Bharat G. Mitbander,Dallas E. Webster;The Concept Assignment Problem in Program Understanding.;482-498;17;;
1993;Helen M. Edwards,Malcolm Munro;RECAST: Reverse Engineering from COBOL to SSADM Specification.;499-508;10;;
1993;Jon Beck,David A. Eichmann;Program and Interface Slicing for Reverse Engineering.;509-518;10;;
1992;Nancy G. Leveson;High-Pressure Steam Engines and Computer Software.;2-14;13;Keynote Addresses;
1992;Dines Bjorner;Trusted Computing Systems: The ProCoS Experience.;15-34;20;Keynote Addresses;
1992;Andrew M. Lister;Design of Dependable Real-Time Systems.;35-36;2;Keynote Addresses;
1992;Sukesh Patel,William Cheng-Chung Chu,Rich Baxter;A Measure for Composite Module Cohesion.;38-48;11;Measurement and Prediction;
1992;Michio Tsuda,Yosuke Morioka,Masato Takadachi,Mayumi Takahashi;Productivity Analysis of Software Development with an Integrated CASE Tool.;49-58;10;Measurement and Prediction;
1992;Stephen G. Eick,Clive R. Loader,M. David Long,Lawrence G. Votta,Scott A. Vander Wiel;Estimating Software Fault Content Cefore Coding.;59-65;7;Measurement and Prediction;
1992;Mary Jean Harrold,John D. McGregor,Kevin J. Fitzpatrick;Incremental Testing of Object-Oriented Class Structures.;68-80;13;Software Analysis and Testing;
1992;Faten H. Afifi,Lee J. White,Steven J. Zeil;Testing for Linear Errors in Nonlinear Computer Programs.;81-91;11;Software Analysis and Testing;
1992;David S. Rosenblum;Towards a Method of Programming With Assertions.;92-104;13;Software Analysis and Testing;
1992;Debra J. Richardson,Stephanie Leif Aha,T. Owen O'Malley;Specification-Based Test Oracles for Reactive Systems.;105-118;14;Software Analysis and Testing;
1992;Brian W. Beach;Connecting Software Components with Declarative Glue.;120-137;18;Environment Support;
1992;Mariano P. Consens,Alberto O. Mendelzon,Arthur G. Ryman;Visualizing and Querying Software Structures.;138-156;19;Environment Support;
1992;Neil M. Goldman,Khaled Narayanaswamy;Software Evolution through Iterative Prototyping.;158-172;15;Software Evolution;
1992;Mitchell D. Lubars,Greg Meredith,Colin M. Potts,Charles Richter;Object-Oriented Analysis for Evolving Systems.;173-185;13;Software Evolution;
1992;Farn Wang,Aloysius K. Mok,E. Allen Emerson;Formal Specification of Ssynchronous Distributed Real-Time Systems by APTL.;188-198;11;Real-Time Systems;
1992;Miguel Felder,Angelo Morzenti;Validating Real-Time Systems by History-Checking TRIO Specifications.;199-211;13;Real-Time Systems;
1992;Laura K. Dillon,G. Kutty,Louise E. Moser,P. Michael Melliar-Smith,Y. S. Ramakrishna;Graphical Specifications for Concurrent Software Systems.;214-224;11;Formal Methods;
1992;Gruia-Catalin Roman,Rose F. Gamble,William E. Ball;Seeking Concurrency in Rule-Based Programming.;225-234;10;Formal Methods;
1992;Trevor W. Pearce,David Alex Lamb;The Property Vector Specification of a Multiset Iterator.;235-245;11;Formal Methods;
1992;Jean-Claude Fernandez,Hubert Garavel,Laurent Mounier,Anne Rasse,Carlos Rodriguez,Joseph Sifakis;A Toolbox for the Verification of LOTOS Programs.;246-259;14;Formal Methods;
1992;Burkhard Peuschel,Wilhelm Schafer;Concepts and Implementation of a Rule-Based Process Engine.;262-279;18;Software Processes;
1992;Pankaj K. Garg,Sanjay Bhansali;Process Programming by Hindsight.;280-293;14;Software Processes;
1992;Robert J. Hall;Call Path Profiling.;296-306;11;Tools;
1992;Premkumar T. Devanbu;GENOA: A Customizable Language- and Front-End Independent Code Analyzer.;307-317;11;Tools;
1992;Sadahiro Isoda;Experience Report on Software Reuse Project: Its Structure, Activities, and Statistical Results.;320-326;7;Software Re-Use;
1992;John E. Gaffney Jr.,R. D. Cruickshank;A General Economics Model of Software Reuse.;327-337;11;Software Re-Use;
1992;Johan Margono,Thomas E. Rhoads;Software Reuse Economics: Cost-Benefit Analysis on a Large-Scale Ada Project.;338-348;11;Software Re-Use;
1992;Andy Podgurski,Lynn Pierce;Behavior Sampling: A Technique for Automated Retrieval of Reusable Components.;349-360;12;Software Re-Use;
1992;Walter F. Tichy;Programming-in-the-Large: Past, Present, and Future.;362-367;6;Perspective;
1992;Victor R. Basili,Gianluigi Caldiera,Frank E. McGarry,Rose Pajerski,Gerald T. Page,Sharon Waligora;The Software Engineering Laboratory: An Operational Software Experience Factory.;370-381;12;State of the Art Reports (Invited Papers);
1992;Richard E. Fairley;Recent Advances in Software Estimation Techniques.;382-391;10;State of the Art Reports (Invited Papers);
1992;Susan Horwitz,Thomas W. Reps;The Use of Program Dependence Graphs in Software Engineering.;392-411;20;State of the Art Reports (Invited Papers);
1992;Gruia-Catalin Roman,Kenneth C. Cox;Program Visualization: The Art of Mapping Programs to Pictures.;412-420;9;State of the Art Reports (Invited Papers);
1991;James M. Purtilo,Aaron A. Larson,Jeff Clark;A Methodology for Prototyping-in-the-Large.;2-12;11;;
1991;Daniel B. Jackson;Aspect: An Economical Bug-Detector.;13-22;10;;
1991;Michael M. Gorlick,Rami R. Razouk;Using Weaves for Software Construction and Analysis.;23-34;12;;
1991;Susan L. Gerhart;Formal Methods: An International Perspective.;36-37;2;;
1991;Watts S. Humphrey,David H. Kitson,Julia Gale;A Comparison of U.S. and Japanese Software Process Maturity.;38-49;12;;
1991;William B. Frakes,Ted J. Biggerstaff,Ruben Prieto-Diaz,Kazuo Matsumura,Wilhelm Schafer;Software Reuse: is it delivering?;52-59;8;;
1991;John Hartman;Understanding Natural Programs Using Proper Decomposition.;62-73;12;;
1991;John D. Litke;Toward new Techniques to Assess the Software Implementation Process.;74-82;9;;
1991;Robert W. Schwanke;An Intelligent Tool for Re-Engineering Software Modularity.;83-92;10;;
1991;David A. Marca;Augmenting SADT to Develop Computer Support for Cooperative Work.;94-103;10;;
1991;Lillian Ruston,Michael J. Muller,Kathleen D. Cebulka;Designing Software for Use by Humans, not Machines.;104-113;10;;
1991;Jintae Lee;Extending the Potts and Bruns Model for Recording Design Rationale.;114-125;12;;
1991;Ronald J. Norman,Wayne Stevens,Elliot J. Chikofsky,John Jenkins,Burt L. Rubenstein,Gene Forte;CASE at the Start of the 1990's.;128-139;12;;
1991;Dan Craigen,Peter Y. A. Ryan;FM91: Formal Methods Workshop.;140-142;3;;
1991;Marc I. Kellner,Bill Curtis,Tom DeMarco,Kouichi Kishida,Maurice Schlumberger,Colin Tully;Non-Technological Issues in Software Engineering.;144-146;3;;
1991;Bill Curtis;Techies as Non-Technological Factors in Software Engineering?;147-148;2;;
1991;Tom DeMarco;Non-Technological Issues in Software Engineering.;149-150;2;;
1991;Kouichi Kishida;Position Statement.;151;1;;
1991;Maurice Schlumberger;Software Engineering Management.;152-153;2;;
1991;Colin Tully;A Failure of Management Nerve and Vision.;154-155;2;;
1991;Robert M. Balzer;Tolerating Inconsistency.;158-165;8;;
1991;Nazim H. Madhavji;The Prism Model of Changes.;166-177;12;;
1991;Richard A. DeMillo;Progress Toward Automated Software Testing.;180-183;4;;
1991;Dan Craigen;Tool Support for Formal Methods.;184-185;2;;
1991;Michel Banatre;Hiding Distribution in Distributed Systems.;189-196;8;;
1991;Andrew Bass,Maeve Boyle,Bryan Ratcliff;PRESTIGE: A CASE Workbench for the JSD Implementor.;198-207;10;;
1991;Rudolf K. Keller,Mary Cameron,Richard N. Taylor,Dennis B. Troup;User Interface Development and Software Environments: The Chiron-1 System.;208-218;11;;
1991;Steven S. Popovich,William M. Schell,Dewayne E. Perry;Experiences with an Environment Generation System.;219-224;6;;
1991;Raymond Jacoby,Yoshihiro Tohma;Parameter Value Computation by Least Square Method and Evaluation of Software Availability and Reliability at Service-Operation by the Hyper-Geometric Distribution Software Reliability Growth Model (HGDM).;226-237;12;;
1991;Joseph M. Caruso,David W. Desormeau;Integrating Prior Knowledge with a Software Reliability Growth Model.;238-245;8;;
1991;Ram Chillarege,Wei-lun Kao,Richard G. Condit;Defect Type and Its Impact on the Growth Curve.;246-255;10;;
1991;Takuya Katayama;ISPW6: Support for the Software Process.;258-262;5;;
1991;Donald Gotterbarn;Ethical Considerations in Software Engineering.;266-274;9;;
1991;Jairus Hihn,Hamid Habib-agahi;Cost Estimation of Software Intensive Projects: A Survey of Current Practices.;276-287;12;;
1991;Richard W. Selby,Adam A. Porter,Douglas C. Schmidt,Jim Berney;Metric-Driven Analysis and Feedback Systems for Enabling Empirically Guided Software Development.;288-298;11;;
1991;Marilyn W. Bush;Process Assessments in NASA.;299-304;6;;
1991;Christian Jahl;The Information Technology Security Evaluation Criteria.;306-312;7;;
1991;Gerhard G. Fischer,Scott Henninger,David F. Redmiles;Cognitive tools for locating and comprehending software objects for reuse.;318-328;11;;
1991;Michael F. Dunn,John C. Knight;Software Reuse in an Industrial Setting: A Case Study.;329-338;10;;
1991;Neil Iscoe,Gerald B. Williams,Guillermo Arango;Domain Modeling for Software Engineering.;340-343;4;;
1991;David W. Franke,Martin K. Purvis;Hardware/Software Codesign: A Perspective.;344-352;9;;
1991;John Werth,Laurie Honour Werth;Directions in Software Engineering Education.;353-357;5;;
1990;Walter Royce;TRW's Ada Process Model for Incremental Development of Large Software Systems.;2-11;10;Process Models 1;
1990;Ataru T. Nakagawa,Kokichi Futatsugi;Software Process à la Algebra: OBJ for OBJ.;12-23;12;Process Models 1;
1990;Sergio Cardenas-Garcia,Marvin V. Zelkowitz;Evaluation Criteria for Functional Specifications.;26-33;8;Formal Verification;
1990;Christine Lafontaine,Yves Ledru,Pierre-Yves Schobbens;An Experiment in Formal Software Development: Using the B Theorem Prover on a VDM Case Study.;34-42;9;Formal Verification;
1990;Victor R. Basili;Recent Advances in Software Measurement (Abstract for Talk).;44-49;6;Recent Advances in Metrics;
1990;Armen Gabrielian,Matthew K. Franklin;Multi-Level Specification and Verification of Real-Time Software.;52-62;11;Real-Time and Reactive Systems;
1990;H.-M. Jarvinen,Reino Kurki-Suonio,Markku Sakkinen,Kari Systa;Object-Oriented Specification of Reactive Systems.;63-71;9;Real-Time and Reactive Systems;
1990;Jack C. Wileden,Alexander L. Wolf,William R. Rosenblatt,Peri L. Tarr;Specification Level Interoperability.;74-85;12;Environments;
1990;Jean-Louis Giavitto,Guy Rosuel,Agnes Devarenne,Anne Mauboussin;Design Decisions for the Incremental Adage Framework.;86-95;10;Environments;
1990;Masayuki Hirayama,Hiroyuki Sato,Atushi Yamada,Junichiro Tsuda;Practice of Quality Modeling and Measurement on Software Life-Cycle.;98-107;10;Metrics and Reliability;
1990;Willa K. Ehrlich,John P. Stampfel,Jar R. Wu;Application of Software Reliability Modeling to Product Quality and Test Process.;108-116;9;Metrics and Reliability;
1990;Gilles M. E. Lafue;Panel on Software Re-engineering.;118;1;Panel: Software-Re-Engineering;
1990;Wojtek Kozaczynski;"The ""Catch 22"" of Re-engineering.";119;1;Panel: Software-Re-Engineering;
1990;Ted J. Biggerstaff;Human-Oriented Conceptual Abstractions in the Re-engineering of Software.;120;1;Panel: Software-Re-Engineering;
1990;Eric Bush;Software Re-engineering Position Statement.;121;1;Panel: Software-Re-Engineering;
1990;Elliot J. Chikofsky;CASE & Reengineering: From Archeology to Software Perestroika.;122;1;Panel: Software-Re-Engineering;
1990;Marco Maiocchi;Reengineering: Can a Program Put Intelligence in Stupid Programs?;123-124;2;Panel: Software-Re-Engineering;
1990;Tom DeMarco,Curt Geertgens;Use of Video for Program Documentation (Experience Report).;126-128;3;Experience Reports I;
1990;Lin Zucconi,Gregory Mack,Lloyd G. Williams;Using Object-Oriented Development for Support Prototyping (Experience Report).;129-132;4;Experience Reports I;
1990;Marilyn W. Bush;Getting Started on Metrics - JPL Productivity and Quality (Experience Report).;133-142;10;Experience Reports I;
1990;M. C. Costa,R. James Cunningham,J. Booth;Logical Animation.;144-149;6;Tools for Formal Verification;
1990;Harald Ganzinger,Renate Schafers;System Support for Modular Order-Sorted Horn Clause Specifications.;150-159;10;Tools for Formal Verification;
1990;Heinz Oswald,R. Esser,R. Mattmann;An Environment for Specifying and Executing Hierarchical Petri Nets.;164-172;9;Prototyping;
1990;Christine Choppy,Stephane Kaplan;Mixing Abstract and Concrete Modules: Specification, Development and Prototyping.;173-184;12;Prototyping;
1990;Gerard D. Guiho,Claude Hennebert;SACEM Software Validation (Experience Report).;186-191;6;Experience Reports II;
1990;Mark Dowson;Experience Using the Graphite Meta-Tool (Experience Report).;192-195;4;Experience Reports II;
1990;Marilyn W. Bush;Improving Software Quality: The Use of Formal Inspections at the JPL (Experience Report).;196-199;4;Experience Reports II;
1990;Francesco Parisi-Presicce;A Rule-Based Approach to Modular System Design.;202-211;10;Design and Architecture;
1990;Murthy Ganti,Pankaj Goyal,Sunil Podar;An Object-Oriented Software Application Architecture.;212-220;9;Design and Architecture;
1990;Jean-Claude Laprie;On the Assessment of Safety-Critical Software Systems.;222;1;Panel: Real-Life Safety-Critical Software;
1990;Nancy G. Leveson;Evaluation of Software Safety.;223-224;2;Panel: Real-Life Safety-Critical Software;
1990;E. Pilaud;Some Experiences of Critical Software Development.;225-226;2;Panel: Real-Life Safety-Critical Software;
1990;Martyn Thomas;Assessing Failure Probabilities in Safety-Critical Systems Containing Software.;227;1;Panel: Real-Life Safety-Critical Software;
1990;Dewayne E. Perry;ISPW5: Experience with Software Process Models (Workshop Report).;230-232;3;Workshop Reports;
1990;Dan Craigen;FM 89: Assessment of Formal Methods for Trustworthy Computer Systems (Workshop Report).;233-235;3;Workshop Reports;
1990;W. Lewis Johnson,Martin S. Feather;Building an Evolution Transformation Library.;238-248;11;AI Applications to Software Engineering;
1990;Premkumar T. Devanbu,Ronald J. Brachman,Peter G. Selfridge,Bruce W. Ballard;LaSSIE: a Knowledge-based Software Information System.;249-261;13;AI Applications to Software Engineering;
1990;Dines Bjorner,Larry E. Druffel;Position Statement: ICSE-12 Workshop on Industrial Experience Using Formal Methods.;264-266;3;Panel: Industrial Experience with Formal Methods;
1990;William N. Robinson;Negotiation Behavior During Requirements Specification.;268-276;9;Process Models 2;
1990;Nazim H. Madhavji,Volker Gruhn,Wolfgang Deiters,Wilhelm Schafer;Prism = Methodology + Process-oriented Environment.;277-288;12;Process Models 2;
1990;James D. Babcock,Les Belady,Nancy C. Gore;The Evolution of Technology Transfer at MCC's Software Technology Program: From Didactic to Dialectic.;290-299;10;Technology Transfer;
1990;Ruben Prieto-Diaz;Implementing Faceted Classification for Software Reuse (Experience Report).;300-304;5;Technology Transfer;
1990;David Talbot;Towards Systems Engineering: A Personal View of Progress.;306-307;2;Systems Engineering;
1990;David B. Bernstein,Rodney Farrow;Automatic Maintenance of Routine Programming Tasks Based on a Declarative Description (Experience Report).;310-315;6;Configuration Management;
1990;Thomas Rose,Matthias Jarke;A Decision-Based Configuration Process Model.;316-325;10;Configuration Management;
1990;Kurt F. Fischer;Experience in Using Defined Processes for Technology Transfer (Panel Overview).;328;1;Panel: Experience Using Defined Process for Technology Transfer;
1990;Rosa Alonzo;Position Paper on Technology Transfer.;329;1;Panel: Experience Using Defined Process for Technology Transfer;
1990;Maurizio Decina;CEFRIEL: an Innovative Approach to University-Industry Cooperation in Information Technologies.;330-331;2;Panel: Experience Using Defined Process for Technology Transfer;
1990;Priscilla J. Fowler;Technology Transfer as Collaboration: The Receptor Group.;332-333;2;Panel: Experience Using Defined Process for Technology Transfer;
1990;Garth Glynn;Semi Formal Process Model for Technology Transfer.;334-335;2;Panel: Experience Using Defined Process for Technology Transfer;
1990;Kouichi Kishida;Technology Transfer Aspects of Environment Construction.;336;1;Panel: Experience Using Defined Process for Technology Transfer;
1989;Dewayne E. Perry;The Inscape Environment.;2-12;11;Software Development Environments;
1989;Ian Thomas;Tool Integration in the Pact Environment.;13-22;10;Software Development Environments;
1989;Mitchell D. Lubars;The IDeA Design Environment.;23-32;10;Software Development Environments;
1989;Gruia-Catalin Roman,Kenneth C. Cox;Declarative Visualization in the Shared Dataspace Paradigm.;34-43;10;Analysis Techniques;
1989;Douglas L. Long,Lori A. Clarke;Task Interaction Graphs for Concurrency Analysis.;44-52;9;Analysis Techniques;
1989;Michal Young,Richard N. Taylor;Rethinking the Taxonomy of Fault Detection Techniques.;53-62;10;Analysis Techniques;
1989;Motoshi Saeki,Hisayuki Horai,Hajime Enomoto;Software Development Process from Natural Language Specification.;64-73;10;Specification and Design;
1989;Luc Jadoul,Luc Duponcheel,Willy Van Puymbroeck;An Algebraic Data Type Specification Language and Its Rapid Prototyping Environment.;74-84;11;Specification and Design;
1989;Gregory Fox;Performance Engineering as a Part of the Development Life Cycle for Large-Scale Software Systems.;85-94;10;Specification and Design;
1989;James E. Tomayko;Twenty-Year Retrospective: The NATO Software Engineering Conferences.;96;1;Panel: A Twenty Year Retrospective of the NATO Software Engineering Conferences;
1989;Bernard A. Galler;Thoughts on Software Engineering.;97;1;Panel: A Twenty Year Retrospective of the NATO Software Engineering Conferences;
1989;David Gries;My Thoughts on Software Engineering in the Late 1960s.;98;1;Panel: A Twenty Year Retrospective of the NATO Software Engineering Conferences;
1989;Mary M. Shaw;Remembrances of a Graduate Student.;99-100;2;Panel: A Twenty Year Retrospective of the NATO Software Engineering Conferences;
1989;Douglas T. Ross;The NATO Conferences form the Perspective of an Active Software Engineer.;101-102;2;Panel: A Twenty Year Retrospective of the NATO Software Engineering Conferences;
1989;Bradley P. Allen,S. Daniel Lee;A Knowledge-Based Environment for the Development of Software Parts Composition Systems.;104-112;9;Knowledge-Based and Formal Approaches;
1989;Wojtek Kozaczynski,Jim Q. Ning;SRE: A Knowledge-Based Environment for Large-Scale Software Re-Engineering Activities.;113-122;10;Knowledge-Based and Formal Approaches;
1989;S. Patel,R. A. Orr,M. T. Norris,David W. Bustard;Tools to Support Formal Methods.;123-132;10;Knowledge-Based and Formal Approaches;
1989;Tom DeMarco;Twenty Years of Software Engineering: Looking Forward, Looking Back.;134;1;Panel: Software Engineering for Business Applications;
1989;Michael Jackson;Software Engineering for Business DP: Looking Back and Looking Forward.;135;1;Panel: Software Engineering for Business Applications;
1989;Nicholas Zvegintzov;Software Survivor.;136;1;Panel: Software Engineering for Business Applications;
1989;T. Gallo,G. Serrano,Francesco Tisato;ObNet: An Object-Oriented Approach for Supporting Large, Long-Lived, Highly Configurable Systems.;138-144;7;Software Development Environments;
1989;Katsuro Inoue,Takeshi Ogihara,Tohru Kikuno,Koji Torii;A Formal Adaptation Method for Process Descriptions.;145-153;9;Software Development Environments;
1989;Evan Adams,Masahiro Honda,Terrence C. Miller;Object Management in a CASE Environment.;154-163;10;Software Development Environments;
1989;Ataru T. Nakagawa,Kokichi Futatsugi;Stepwise Refinement Process with Modularity: An Algebraic Approach.;166-177;12;Formal Approaches;
1989;Alan Carle,Lori L. Pollock;Modular Specification of Incremental Program Transformation Systems.;178-187;10;Formal Approaches;
1989;Kaizhi Yue;Validating System Requirements by Functional Decomposition and Dynamic Analysis.;188-196;9;Formal Approaches;
1989;Linda M. Ott,Jeffrey J. Thuss;The Relationship between Slices and Module Cohesion.;198-204;7;Software Design;
1989;Kevin W. Jameson;A Model for the Reuse of Software Design Information.;205-216;12;Software Design;
1989;Colin M. Potts;A Generic Model for Representing Design Methods.;217-226;10;Software Design;
1989;Peter Freeman;Software Engineering Research Agendas - A View from the Trenches (Panel).;228;1;Panel: Software Engineering Research Agendas;
1989;Yutaka Nakagawa,Shuetsu Hanata;An Error Complexity Model for Software Reliability Measurement.;230-236;7;Complexity and Reliability;
1989;Mitsuru Ohba,Xiao-Mei Chou;Does Imperfect Debugging Affect Software Reliability Growth?;237-244;8;Complexity and Reliability;
1989;John C. Munson,Taghi M. Khoshgoftaar;The Dimensionality of Program Complexity.;245-253;9;Complexity and Reliability;
1989;Robert M. Balzer;Software Engineering in the Year 2001.;256;1;Panel: Software Engineering in the Year 2001;
1989;Michael Jackson;Software Development in the Year 2000.;257;1;Panel: Software Engineering in the Year 2001;
1989;Michel Sintzoff;The Scientific Engineering of Software.;258;1;Panel: Software Engineering in the Year 2001;
1989;Salah Bendifallah,Walt Scacchi;Work Structures and Shifts: An Empirical Analysis of Software Specification Teamwork.;260-270;11;Process Assessment;
1989;Tom DeMarco,Tim Lister;Software Development: State of the Art vs. State of the Practice.;271-275;5;Process Assessment;
1989;Watts S. Humphrey,David H. Kitson,Tim C. Kasse;The State of Software Engineering Practice: A Preliminary Report.;277-288;12;Process Assessment;
1989;Hassan Gomaa;Structuring Criteria for Real Time System Design.;290-301;12;Real-Time Systems;
1989;Matthew S. Jaffe,Nancy G. Leveson;Completeness, Robustness, and Safety in Real-Time Software Requirements Specification.;302-311;10;Real-Time Systems;
1989;C. Samuel Hsieh;Timing Analysis of Cyclic Concurrent Programs.;312-318;7;Real-Time Systems;
1989;Yves Bernard,Pierre Lavency;A Process-Oriented Approach to Configuration Management.;320-330;11;Process Modeling;
1989;Watts S. Humphrey,Marc I. Kellner;Software Process Modeling: Principles of Entity Process Models.;331-342;12;Process Modeling;
1989;Takuya Katayama;A Hierarchical and Functional Software Process Description and Its Enaction.;343-352;10;Process Modeling;
1989;John C. Cherniavsky;Validation Through Testing.;354;1;Panel: Completely Validated Software;
1989;Richard A. DeMillo;Test Adequacy and Program Mutation.;355-356;2;Panel: Completely Validated Software;
1989;William E. Howden;Error-Based Validation Completeness.;357;1;Panel: Completely Validated Software;
1989;Richard C. Linger;Mathematics-Based Software Engineering for Completely Validated Software.;358;1;Panel: Completely Validated Software;
1989;Richard A. Kemmerer;Completely Validated Software.;359-360;2;Panel: Completely Validated Software;
1989;Elaine J. Weyuker;In Defense of Coverage Criteria.;361;1;Panel: Completely Validated Software;
1989;Walter F. Tichy,Rolf Adams,Lars Holter;NLH/E: A Natural Language Help System.;364-374;11;Current Issues;
1989;June M. Verner,Graham Tate,B. Jackson,R. G. Hayward;Technology Dependence in Function Point Analysis: A Case Study and Critical Review.;375-382;8;Current Issues;
1989;Robert W. Schwanke,Ellis S. Cohen,Raimund Gluecker,William M. Hasling,D. A. Son,Michael E. Wagner;Configuration Management in BiiN SMS.;383-393;11;Current Issues;
1989;Gregory A. Hansen;Modeling the Software Engineering Process.;396;1;Panel: Modeling the Software Process;
1989;Barry W. Boehm;What We Really Need Are Process Model Generators.;397;1;Panel: Modeling the Software Process;
1989;Bill Curtis;Three Problems Overcome with Behavioral Models of the Software Development Process.;398-399;2;Panel: Modeling the Software Process;
1989;Marc I. Kellner;Software Process Modeling Experience (Panel Session Position Paper).;400-401;2;Panel: Modeling the Software Process;
1989;Anthony Finkelstein;"""Not Waving but Drowning"": Representation Schemes for Modelling Software Development.";402-404;3;Panel: Modeling the Software Process;
1988;Kouichi Kishida;Evolution of Tools (Abstract).;2;1;Technical Keynote;
1988;P. R. Itzigehl;A Method for Asynchronous Parallelization.;4-9;6;Parallel and Distributed Applications;
1988;Mahadev Satyanarayanan;On the Influence of Scale in a Distributed System.;10-18;9;Parallel and Distributed Applications;
1988;Mario Barbacci,Charles B. Weinstock,Jeannette M. Wing;Programming at the Processor-Memory-Switch Level.;19-29;11;Parallel and Distributed Applications;
1988;Barry W. Boehm,Rony Ross;Theory-W Software Project Management: A Case Study.;30-40;11;Management;
1988;A. S. Duncan;Software Development Productivity Tools and Metrics.;41-48;8;Management;
1988;D. Dixon;Integrated Support for Project Management.;49-59;11;Management;
1988;Dewayne E. Perry,Gail E. Kaiser;Models of Software Development Environments.;60-68;9;Environments;
1988;Kouichi Kishida,Takuya Katayama,Masatoshi Matsuo,Isao Miyamoto,Koichiro Ochimizu,Nobuo Saito,John H. Sayler,Koji Torii,Lloyd G. Williams;SDA: A Novel Approach to Software Environment Design and Construction.;69-79;11;Environments;
1988;Hausi A. Muller,K. Klashinsky;Rigi - A System for Programming-in-the-Large.;80-87;8;Environments;
1988;J. Fagerstrom;Design and Test of Distributed Applications.;88-92;5;Distributed System Design;
1988;Max Muhlhauser;Software Engineering for Distributed Applications: The Design Project.;93-101;9;Distributed System Design;
1988;Michael Evangelist,V. Y. Shen,Ira R. Forman,M. Graf;Using Raddle To Design Distributed Systems.;102-115;14;Distributed System Design;
1988;X. Huang,H. Zhang,X. Cai;Heuristic Software Partitioning Algorithms for Distributed Real-Time Applications.;116-121;6;Real Time;
1988;M. Hagemann;Requirements Analysis for Real-Time Automation Projects.;122-129;8;Real Time;
1988;R. A. Orr,M. T. Norris,R. Tinker,C. D. V. Rouch;Tools for Real-Time System Design.;130-140;11;Real Time;
1988;W. Murray,Clarence Pittman;Plenary Session-Software for Space Station.;141-143;3;Plenary Session;
1988;David W. Embley,Scott N. Woodfield;Assessing the Quality of Abstract Data Types Written in Ada.;144-153;10;Software Quality Techniques;
1988;Aditya P. Mathur,Edward W. Krauser;Modeling Mutation on a Vector Processor.;154-161;8;Software Quality Techniques;
1988;Mireille Ducasse,Anna-Maria Emde;A Review of Automated Debugging Systems: Knowledge, Strategies, and Techniques.;162-173;12;Software Quality Techniques;
1988;Lloyd G. Williams;Software Process Modeling: A Behavioral Approach.;174-186;13;Process Models;
1988;D. Ross Jeffery,Victor R. Basili;Validating the TAME Resource Data Model.;187-201;15;Process Models;
1988;O. R. Fonorow;Modeling Software Tools with Icon.;202-221;20;Process Models;
1988;K. Narayanaswamy;Static Analysis-Based Program Evolution Support in the Common Lisp Framework.;222-230;9;Environments Components;
1988;N. Mano;Modeling of Data-Processing Software for Generating and Reusing Their Programs.;231-240;10;Environments Components;
1988;Steven J. Zeil,Edward C. Epp;Interpretation in a Tool-Fragment Environment.;241-249;9;Environments Components;
1988;Anthony I. Wasserman;Implications of Hardware Advances for Software Development.;250-253;4;Panel;
1988;Karl J. Lieberherr,Arthur J. Riel;Demeter: A Case Study of Software Growth through Parameterized Classes.;254-264;11;Reuse;
1988;H. Tarumi,Kiyoshi Agusa,Yutaka Ohno;A Programming Environment Supporting Reuse of Object-Oriented Software.;265-273;9;Reuse;
1988;David Notkin,William G. Griswold;Extension and Software Development.;274-285;12;Reuse;
1988;Matthias Hallman;An Operational Requirement Description Model for Open Systems.;286-295;10;Specifying Concurrent Systems;
1988;Gruia-Catalin Roman;Language and Visualization Support for Large-Scale Concurrency.;296-308;13;Specifying Concurrent Systems;
1988;Lin Chiu,Ming-Tsan Liu;High-Level Specification of Concurrency Control in Distributed Database Systems.;309-319;11;Specifying Concurrent Systems;
1988;Lloyd G. Williams;Software Reuse (Panel Abstract).;320-323;4;Panel;
1988;Dan Craigen,Sentot Kromodimoeljo,Irwin Meisels,A. Neilson,Bill Pase,Mark Saaltink;m-EVES: A Tool for Verifying Software.;324-333;10;Formal Methods;
1988;Ataru T. Nakagawa,Kokichi Futatsugi,Satoru Tomura,T. Shimizu;Algebraic Specification of Macintosh's Quickdraw Using OBJ2.;334-343;10;Formal Methods;
1988;Robert B. Terwilliger,Roy H. Campbell;An Early Report on Encompass.;344-355;12;Formal Methods;
1988;Ronald M. Baecker;Enhancing Program Readability and Comprehensibility with Tools for Program Visualization.;356-366;11;User Issues;
1988;Michal Young,Richard N. Taylor,Dennis B. Troup,Cheryl D. Kelly;Design Principles behind Chiron: A UIMS for Software Environments.;367-376;10;User Issues;
1988;Stephen S. Cha,Nancy G. Leveson,Timothy J. Shimeall;Safety Verification in Murphy Using Fault Tree Analysis.;377-387;11;User Issues;
1988;J. L. Benjamin;PILOT: A Prescription for Program Performance Measurement.;388-395;8;Automated Tools;
1988;David Harel,Hagi Lachover,Amnon Naamad,Amir Pnueli,Michal Politi,Rivi Sherman,Aharon Shtull-Trauring;"STATEMATE; A Working Environment for the Development of Complex Reactive Systems.";396-406;11;Automated Tools;
1988;Helen C. Sharp;KDA - A Tool for Automatic Design Evaluation and Refinement Using the Blackboard Model of Control.;407-417;11;Automated Tools;
1988;Colin M. Potts,Glenn Bruns;Recording the Reasons for Design Decisions.;418-427;10;Software Derivation;
1988;W. Lewis Johnson;Deriving Specifications from Requirements.;428-438;11;Software Derivation;
1988;David R. Barstow;Automatic Programming for Streams II: Transformational Implementation.;439-447;9;Software Derivation;
1987;Leon J. Osterweil;Software Processes Are Software Too.;2-13;12;Plenary Sessions;
1987;Meir M. Lehman;Process Models, Process Programs, Programming Support.;14-16;3;Plenary Sessions;
1987;Dines Bjorner;On the Use of Formal Methods in Software Development.;17-29;13;Plenary Sessions;
1987;V. Stenning;On the Role of an Environment.;30-35;6;Plenary Sessions;
1987;Mark Dowson;Iteration in the Software Process: Review of the 3rd International Software Process Workshop.;36-41;6;Panel: Understanding and Assessing the Software Process;
1987;E. F. Berliner,Pamela Zave;An Experiment in Technology Transfer: PAISLey Specification of Requirements for an Undersea Lightwave Cable System.;42-50;9;Formal Specification Languages;
1987;Kokichi Futatsugi,Joseph A. Goguen,Jose Meseguer,Koji Okada;Parameterized Programming in OBJ2.;51-60;10;Formal Specification Languages;
1987;Dewayne E. Perry;Software Interconnection Models.;61-71;11;Formal Specification Languages;
1987;Willa K. Ehrlich,T. J. Emerson;Modeling Software Failures and Reliability Growth During System Testing.;72-82;11;Measuring and Modeling the Software Process;
1987;Y. Miyazaki,N. Murakami;Software Metrics Using Deviation Value.;83-95;13;Measuring and Modeling the Software Process;
1987;Bill Curtis,Herb Krasner,Vincent Yun Shen,Neil Iscoe;On Building Software Process Models Under the Lamppost.;96-105;10;Panel: Empirical Studies of the Software Process;
1987;Peter B. Ladkin;Specification of Time Dependencies and Synthesis of Concurrent Processes.;106-115;10;More Formal Specification Languages;
1987;Bernd J. Kramer;SEGRAS - A Formal and Semigraphical Language Combining Petri Nets and Abstract Data Types for the Specification of Distributed Systems.;116-125;10;More Formal Specification Languages;
1987;Gruia-Catalin Roman;Specifying Software/Hardware Interactions in Distributed Systems.;126-141;16;More Formal Specification Languages;
1987;Dewayne E. Perry;Version Control in the Inscape Environment.;142-149;8;Supporting Version Control;
1987;Jurgen F. H. Winkler;Version Control in Families of Large Programs.;150-165;16;Supporting Version Control;
1987;Philip A. Bernstein;Database System Support for Software Engineering.;166-179;14;Panel: Database Technologies and Software Engineering;
1987;Gail E. Kaiser,Peter H. Feiler;An Architecture for Intelligent Assistance in Software Development.;180-188;9;Some Existing Software Process Models;
1987;D. P. Schwartz;Software Evolution Management: An Integrated Discipline for Managing Software.;189;1;Some Existing Software Process Models;
1987;L. D. I. Serbanati;Interform: A CAD System for Program Development.;190-199;10;Some Existing Software Process Models;
1987;David R. Barstow;Artificial Intelligence and Software Engineering.;200-215;16;Panel: Artificial Intelligence and Software Engineering;
1987;Christian Rathke;Human-Computer Communication Meets Software Engineering.;216-224;9;User Interface Support;
1987;Steven P. Reiss;A Conceptual Programming Environment.;225-237;13;User Interface Support;
1987;J. C. Kelly;A Comparison of Four Design Methods for Real-Time Systems.;238-252;15;Software Process Assessments and Improvements;
1987;Mitchell D. Lubars,Mehdi T. Harandi;Knowledge-Based Software Design Using Design Schemas.;253-262;10;Software Process Assessments and Improvements;
1987;T. Nomura;Use of Software Engineering Tools in Japan.;263-269;7;Software Process Assessments and Improvements;
1987;Karsten Schwan,Rajiv Ramnath,Sridhar Vasudevan,David M. Ogle;A System for Parallel Programming.;270-285;16;Software Process Assessments and Improvements;
1987;Leon J. Osterweil;Lessons of Current Environments.;286;1;Panel: Sampling of Existing Environments;
1987;Mark Dowson;ISTAR and the Contractual Approach.;287-288;2;Panel: Sampling of Existing Environments;
1987;Anthony D. Hall;Tool Interfaces in Integrated Project Support Environments.;289-290;2;Panel: Sampling of Existing Environments;
1987;Y. Matsumoto;Ten Years Experiences of a Software/Hardware Producing Environment.;291;1;Panel: Sampling of Existing Environments;
1987;Nelson H. Weiderman;Evaluating Software Development Environments.;292-295;4;Panel: Sampling of Existing Environments;
1987;Barry W. Boehm;Software Process Management: Lessons Learned from History.;296-298;3;Panel: Software Process Management: Lessons Learned from History;
1987;H. D. Benington;Production of Large Computer Programs.;299-310;12;Panel: Software Process Management: Lessons Learned from History;
1987;W. A. Hosier;Pitfalls and Safeguards in Real-Time Digital Systems with Emphasis on Programming.;311-327;17;Panel: Software Process Management: Lessons Learned from History;
1987;W. W. Royce;Managing the Development of Large Software Systems: Concepts and Techniques.;328-339;12;Panel: Software Process Management: Lessons Learned from History;
1987;Colin Tully;Prospects for Future Environments: Introduction to Panel Session.;340-343;4;Panel: Prospects for Future Envionments;
1987;William E. Riddle;Improving the Software Process.;344;1;Panel: Appoaches to Improving Software Processes;
1987;Victor R. Basili,H. Dieter Rombach;Tailoring the Software Process to Project Goals and Environments.;345-359;15;Panel: Appoaches to Improving Software Processes;
1987;David W. Embley,Scott N. Woodfield;A Knowledge Structure for Reusing Abstract Data Types.;360-368;9;Support for Evolution and Reuse;
1987;Gerhard G. Fischer,Andreas C. Lemke,Christian Rathke;From Design to Redesign.;369-376;8;Support for Evolution and Reuse;
1987;S. Katz,Charles Richter,K.-S. The;PARIS: A System for Reusing Partially Interpreted Schemas.;377-386;10;Support for Evolution and Reuse;
1985;D. Rosenberg;PRISM - Productivity Improvement for Software Engineers and Managers.;2-7;6;Environments: Life Cycle Support;
1985;Ellis Horowitz,Ronald Williamson;SODOS - A Software Documentation Support Environment: Its Use.;8-14;7;Environments: Life Cycle Support;
1985;Nazim H. Madhavji;Operations for Programming in the All.;15-25;11;Environments: Life Cycle Support;
1985;E. A. M. Vefsnmo;"""DASOM"" - A Software Engineering Tool for Communication Applications Increasing Productivity and Software Quality.";26-35;10;Environments: Life Cycle Support;
1985;Daniel M. Yellin,Eva-Maria M. Mueckstein;Two-Way Translators Based on Attribute Grammar Inversion.;36-42;7;Formal Methods;
1985;David W. Stemple,Tim Sheard;Database Theory for Supporting Specification-Based Database Systems Development.;43-49;7;Formal Methods;
1985;Q. Chen;Extending the Implementation Scheme of Functional Programming System FP for Supporting the Formal Software Development Methodology.;50-54;5;Formal Methods;
1985;Dennis M. Volpano,Richard B. Kieburtz;Software Templates.;55-61;7;Formal Methods;
1985;Raymond J. A. Buhr,C. Murray Woodside,Gerald M. Karam,K. Van Der Loo,D. G. Lewis;Experiments with Prolog Design Descriptions and Tools in CAEDE: An Iconic Design Environment for Multitasking, Embdedded Systems.;62-67;6;Environments: Extended Capabilities;
1985;Peter B. Henderson,Mark Weiser;Continous Execution: The VisiProg Environment.;68-74;7;Environments: Extended Capabilities;
1985;Alexander L. Wolf,Lori A. Clarke,Jack C. Wileden;Interface Control and Incremental Development in the PIC Environment.;75-82;8;Environments: Extended Capabilities;
1985;Jochen Ludewig,Martin Glinz,Hansjorg Huser,G. Matheis,Hans Matheis,M. F. Schmidt;SPADES - A Specification and Design System and Its Graphical Interface.;83-91;9;Environments: Extended Capabilities;
1985;Naftaly H. Minsky,Abe Lockman;Ensuring Integrity by Adding Obligations to Privileges.;92-102;11;Software Design and Development;
1985;P. Barth,Scott B. Guthery,David R. Barstow;The Stream Machine: A Data Flow Architecture for Real-Time Applications.;103-110;8;Software Design and Development;
1985;Allan M. Stavely,D. C. Becker,S. P. Orr,Gregory B. Titus;A Collection of Software Tools for Analyzing Design of Concurrent Software Systems.;111-118;8;Software Design and Development;
1985;Colin M. Potts,A. Bartlett,B. H. Cherrie,Roy MacLean;Discrete Event Simulation as a Means of Validating JSD Design Specifications.;119-127;9;Software Design and Development;
1985;Les Belady;New Software Engineering Program - Worldwide (Panel).;128-131;4;Panel;
1985;David Lorge Parnas,David M. Weiss;Active Design Reviews: Principles and Practices.;132-136;5;Ensuring Software Quality;
1985;S. G. Crawford,M. H. Fallah;Software Development Process Audits - A General Procedure.;137-141;5;Ensuring Software Quality;
1985;T. Sunazuka,Motoei Azuma,Noriko Yamagishi;Software Quality Assessment Technology.;142-149;8;Ensuring Software Quality;
1985;Maria Heloisa (Lolo) Penedo,E. Don Stuckle;PMDB - A Project Master Database for Software Engineering Environments.;150-157;8;Environment: Database Issues;
1985;Bertrand Meyer;The Software Knowledge Base.;158-165;8;Environment: Database Issues;
1985;Ronald Morrison,Alan Dearle,Peter J. Bailey,Fred Brown,Malcolm P. Atkinson;The Persistent Store as an Enabling Technology for Integrated Project Support.;166-173;8;Environment: Database Issues;
1985;Barbara A. Kitchenham,Howard A. Rubin;A Comparison of Cost Estimation Tools (Panel).;174-181;8;Panel;
1985;N. H. Petschenik;Building Awareness of System Testing Issues.;182-188;7;Education and Technical Transfer;
1985;Samuel T. Redwine Jr.,William E. Riddle;Software Technology Maturation.;189-200;12;Education and Technical Transfer;
1985;M. Schaul;Design Using Software Engineering Principles: Overview of an Educational Program.;201-209;9;Education and Technical Transfer;
1985;S. Lee;On Executable Models for Rule-Based Prototyping.;210-215;6;Rapid Prototyping;
1985;James W. Hooper,John T. Ellis,T. A. Johnson;Distributed Software Prototyping with ADS.;216-223;8;Rapid Prototyping;
1985;R. D. Tavendale;A Technique for Prototyping Directly from a Specification.;224-229;6;Rapid Prototyping;
1985;Giorgio Bruno,Giuseppe Marchetto;Rapid Prototyping of Control Systems Using High Level Petri Nets.;230-237;8;Rapid Prototyping;
1985;Lee J. White,P. N. Sahay;Experiments Determining Best Paths for Testing Computer Program Predicates.;238-243;6;Path Testing and Analysis;
1985;Lori A. Clarke,Andy Podgurski,Debra J. Richardson,Steven J. Zeil;A Comparison of Data Flow Path Selection Criteria.;244-251;8;Path Testing and Analysis;
1985;Herbert Pesch,Peter Schnupp,Hans Schaller,A. P. Spirk;Test Case Generation Using Prolog.;252-258;7;Path Testing and Analysis;
1985;David Hedley,Michael A. Hennell;The Causes and Effects of Infeasible Paths in Computer Programs.;259-267;9;Path Testing and Analysis;
1985;Tom DeMarco,Tim Lister;Programmer Performance and the Effects of the Workplace.;268-272;5;Software Management Concerns;
1985;John H. Manley;Software Engineering Provisioning Process.;273-284;12;Software Management Concerns;
1985;F. Hattori,K. Kushima,T. Wasano;A Comparison of Lisp, Prolog, and Ada Programming Productivity an AI Areas.;285-291;7;Software Management Concerns;
1985;Y. Miyazaki,K. Mori;COCOMO Evaluation and Tailoring.;292-301;10;Software Management Concerns;
1985;Jack C. Wileden;The Software Process and Software Environments (Panel).;302-305;4;Panel;
1985;J. Ramsey,Victor R. Basili;Analyzing the Test Process Using Structural Coverage.;306-312;7;Testing and Debugging;
1985;Moheb R. Girgis,Martin R. Woodward;An Integrated System for Program Testing Using Weak Mutation and Data Flow Analysis.;313-319;7;Testing and Debugging;
1985;Nicoletta De Francesco,Diego Latella,Gigliola Vaglini;An Interactive Debugger for a Concurrent Language.;320-329;10;Testing and Debugging;
1985;Muneo Takahashi,Yuji Kamayachi;An Empirical Study of a Model for Program Error Prediction.;330-336;7;Defect Measurement;
1985;John C. Knight,Paul Ammann;An Experimental Evaluation of Simple Methods for Seeding Program Errors.;337-342;6;Defect Measurement;
1985;D. R. Miller,A. Sofer;Completely Monotone Regression Estimates of Software Failure Rates.;343-349;7;Defect Measurement;
1985;Tohru Shimizu,Ken Sakamura;Automatic Tuning of Multi-Task Programs for Real-Time Embedded Systems.;350-357;8;Knowledge-Based Approaches;
1985;K. Fukunaga;PROMPTER: A Knowledge Based Support Tool for Code Understanding.;358-363;6;Knowledge-Based Approaches;
1985;M. Stephens,K. Whitehead;The Analyst - A Workstation for Analysis and Design.;364-371;8;Knowledge-Based Approaches;
1985;David N. Card,Gerald T. Page,Frank E. McGarry;Criteria for Software Modularization.;372-377;6;Metric Studies from the SEL;
1985;Dennis G. Kafura,J. Canning;A Validation of Software Metrics Using Many Metrics and Two Resources.;378-385;8;Metric Studies from the SEL;
1985;Victor R. Basili,Richard W. Selby;Calculation and Use of an Environment's Characteristic Software Metric Set.;386-393;8;Metric Studies from the SEL;
1985;Robert M. Balzer;Panel Description: The Role of Logic and AI in the Software Enterprise.;394;1;Panel;
1985;Alan J. Perlis;Another View of Software (Panel).;395-396;2;Panel;
1985;Gerald Jay Sussman;Intelligent Support for the Engineering of Software (Panel).;397-399;3;Panel;
1985;Wladyslaw M. Turski;The Role of Logic in Software Enterprise (Panel).;400;1;Panel;
1984;Augusto Ciuffoletti;Error Recovery in Systems of Communicating Processes.;6-17;12;Error Processing;
1984;Michel Bidoit,Brigitte Biebow,Marie-Claude Gaudel,Christian Gresse,Gerard D. Guiho;Exception Handling: Formal Specification and Systematic Program Construction.;18-29;12;Error Processing;
1984;K. Chong,P. Hsia;Diagnostic System for Distributed Software: A Relational Database Approach.;30-43;14;Error Processing;
1984;Gruia-Catalin Roman,Mark S. Day;Multifaceted Distributed Systems Specification Using Processes and Event Synchronization.;44-55;12;Distributed Systems;
1984;Guy T. Almes,Andrew P. Black,C. Bunje,D. Wiebe;Edmas: A Locally Distributed Mail System.;56-66;11;Distributed Systems;
1984;Krithi Ramamritham;Resource Controller Tasks in Ada: Their Structure and Semantics.;67-77;11;Distributed Systems;
1984;Joseph C. Spicer;A Spiral Approach to Software Engineering Project Management Education.;78-85;8;Management Issues;
1984;K. Uemura,M. Ohori;A Cooperative Approach to Software Development by Application Engineers and Software Engineers.;86-96;11;Management Issues;
1984;Bill Curtis;Fifteen Years of Psychology in Software Engineering: Individual Differences and Cognitive Science.;97-107;11;Management Issues;
1984;T. Mohri,E. Ono,S. Uehara,T. Takao,H. Sato;PDAS: An Assistant for Detailed Design and Implementation of Programs.;108-115;8;Programming Environments I;
1984;Richard N. Taylor,Thomas A. Standish;Steps to an Advanced Ada Programming Environment.;116-125;10;Programming Environments I;
1984;J. Guyard,J.-P. Jacquot;MAIDAY: An Environment for Guided Programming.;126-137;12;Programming Environments I;
1984;M. W. Evans,L. M. Picinich;POWER: A Tool for Quantitative Evaluation of Software Project Effectiveness.;138-142;5;Cost and Productivity Measures;
1984;J. Vosburgh,Bill Curtis,R. Wolverton,B. Albert,H. Malec,S. Hoben,Y. Liu;Productivity Factors and Programming Environments.;143-152;10;Cost and Productivity Measures;
1984;R. E. Boydston;Programming Cost Estimate: Is It Reasonable?;153-161;9;Cost and Productivity Measures;
1984;H. Maezawa,M. Kobayashi,K. Saito,Y. Futamura;Interactive System for Structured Program Production.;162-171;10;Programming Environments II;
1984;Paul A. Scheffer,Albert H. Stone III,William E. Rzepka;A Large System Evaluation of SREM.;172-180;9;Programming Environments II;
1984;Warren Teitelman;A Tour Through Cedar.;181-197;17;Programming Environments II;
1984;B. Friman;MGEN - A Generator for Menu Driven Programs.;198-206;9;User Interfaces;
1984;Tom DeMarco,Aurel Soceneantu;SYNCRO: A Dataflow Command Shell for the Lilith/Modula Computer.;207-213;7;User Interfaces;
1984;Stephen W. Draper,Donald A. Norman;Software Engineering for User Interfaces.;214-221;8;User Interfaces;
1984;Ramadan Moawad;Comparison of Concurrent Software Reliability Models.;222-229;8;Reliability and Complexity Measures I;
1984;John D. Musa,Kazuhira Okumoto;A Logarithmic Poisson Execution Time Model for Software Reliability Measurement.;230-238;9;Reliability and Complexity Measures I;
1984;Kuo-Chung Tai;A Program Complexity Metric Based on Data Flow Information in Control Graphs.;239-249;11;Reliability and Complexity Measures I;
1984;Simeon C. Ntafos;An Evaluation of Required Element Testing Strategies.;250-256;7;Testing;
1984;Steven J. Zeil;Perturbation Testing for Computation Errors.;257-265;9;Testing;
1984;Michael A. Hennell,David Hedley,I. J. Riddell;Assessing a Class of Software Tools.;266-277;12;Testing;
1984;Ira R. Forman;An Algebra for Data Flow Anomaly Detection.;278-287;10;Testing;
1984;James L. Elshoff;Characteristic Program Complexity Measures.;288-293;6;Reliability and Complexity Measures II;
1984;T. J. Emerson;A Discriminant Metric for Module Cohersion.;294-303;10;Reliability and Complexity Measures II;
1984;A. Schroeder;Integrated Program Measurement and Documentation Tools.;304-313;10;Reliability and Complexity Measures II;
1984;John Beane,Nancy Giddings,Jon Silverman;Quantifying Software Designs.;314-323;10;Reliability and Complexity Measures II;
1984;Steven P. Reiss;PECAN: Program Development Systems That Support Multiple Views.;323-333;11;Editors;
1984;Ted J. Biggerstaff,D. M. Endres,Ira R. Forman;TABLE: Object Oriented Editing of Complex Structures.;334-345;12;Editors;
1984;Veronique Donzeau-Gouge,Bernard Lang,Bertrand Melese;Practical Applications of a Syntax Directed Program Manipulation Environment.;346-357;12;Editors;
1984;G. Fischer,M. Schneider;Knowledge-Based Communication Processes in Software Engineering.;358-368;11;Knowledge-Based Software Enginerring;
1984;W. Lewis Johnson,Elliot Soloway;PROUST: Knowledge-Based Program Understanding.;369-380;12;Knowledge-Based Software Enginerring;
1984;Daniel G. Shapiro,Jeffrey S. Dean,Brian P. McCune;A Knowledge Base for Supporting and Intelligent Program Editor.;381-387;7;Knowledge-Based Software Enginerring;
1984;Carlos Jose Pereira de Lucena,R. C. B. Martins,Paulo A. S. Veloso,Donald D. Cowan;The Data Transform Programming Metho: An Example for File Processing Problems.;388-397;10;Design Methods;
1984;A. G. Duncan,J. S. Hutchison,John W. Bailey,T. M. Chapman,A. Fregly,Elizabeth Kruesi,T. McDonald,D. Merrill,Sylvia B. Sheppard;Communication System Design Using Ada.;398-407;10;Design Methods;
1984;David Lorge Parnas,Paul C. Clements,David M. Weiss;The Modular Structure of Complex Systems.;408-419;12;Design Methods;
1984;Rudi Studer;Abstract Models of Dialogue Concepts.;420-429;10;Formal Specifications;
1984;G. B. Clemmensen,Ole N. Oest;Formal Specification and Development of an Ada Compiler - A VDM Case Study.;430-440;11;Formal Specifications;
1984;Susan L. Gerhart;Application of Axiomatic Methods to a Specification Analyser.;441-453;13;Formal Specifications;
1984;W. J. Rogers;A New Program Structure to Improve Accuracy and Readability of Pascal Software.;454-462;9;Programming Methodologies;
1984;Koji Torii,Yoshitomi Morisawa,Yuji Sugiyama,Tadao Kasami;Functional Programming and Logical Programming for the Telegram Analysis Problem.;463-472;10;Programming Methodologies;
1984;Barry W. Boehm,Terence E. Gray,Thomas Seewaldt;Prototyping vs. Specifying: A Multi-Project Experiment.;473-485;13;Programming Methodologies;
1984;S.-C. Chyou;Structure Charts and Program Correctness Proofs.;486-498;13;Verification;
1984;Ali Mili,Jules Desharnais;A System for Classifying Program Verification Methods: Assigning Meanings to Program Verification Methods.;499-509;11;Verification;
1984;Pierre Azema,G. Juandle,E. Sanchis,M. Montbernard;Specification and Verification of Distributed Systems Using PROLOG Interpreded Petri Nets.;510-519;10;Verification;
1984;H. Hozumi,Y. Sekine,H. Ejima;A Method of Large-Scale Software Development.;520-527;8;Development Models and Methods;
1984;Thomas Stephen Edward Maibaum,Wladyslaw M. Turski;On What Exactly Is Going On When Software Is Developed Step-by-Step.;528-533;6;Development Models and Methods;
1984;Bruce I. Blum;Three Paradigms for Developing Information Systems.;534-544;11;Development Models and Methods;
1982;Gerald M. Weinberg;Overstructured Management of Software Engineering.;2-9;8;Invited Presentation;
1982;Robert S. Arnold,D. A. Parker;The Dimensions of Healthy Maintenance.;10-27;18;Perspectives in Software Engineering;
1982;S. Warren;MAP: A Tool for Understanding Software.;28-39;12;Perspectives in Software Engineering;
1982;Wayne A. Babich,Larry Weissman,M. Wolfe;Design Considerations in Language Processing Tools for Ada.;40-47;8;Language Processing Issues;
1982;Ali Mili;A Closer Look at Iteration: The Self Stabilizing Capability of Loops.;48-57;10;Language Processing Issues;
1982;Walter F. Tichy;Design, Implementation, and Evaluation of a Revision Control System.;58-67;10;Configuration Management;
1982;O. Shigo,Y. Wada,Y. Terashima,K. Iwamoto,T. Nishimura;Configuration Control for Evolutional Software Products.;68-83;16;Configuration Management;
1982;Friedrich L. Bauer;From Specifications to Machine Code: Program Construction through Formal Reasoning.;84-93;10;Invited Presentation;
1982;D. Potier,J. L. Albin,R. Ferreol,A. Bilodeau;Experiments with Computer Software Complexity and Reliability.;94-103;10;Quantitative Aspects of Software;
1982;M. Itakura,A. Takayanagi;A Model for Estimating Program Size and Its Evaluation.;104-109;6;Quantitative Aspects of Software;
1982;Walid A. Abu-Sufah,R. Lee,Mohammad Malkawi,P. Yew;Experimental Results on the Paging Behavior of Numerical Programs.;110-119;10;Quantitative Aspects of Software;
1982;Kiyoshi Agusa,A. Ohnishi,Yutaka Ohno;Verification System for Formal Requirements Description.;120-126;7;Requirements Techniques;
1982;Jun Murai,Nobuo Saito,Norihisa Doi,M. Morohashi,T. Fujisaki;Requirement Specification Description System in Japanese Language - JISDOS.;127-136;10;Requirements Techniques;
1982;David A. Marca,Clement L. McGowan;Static and Dynamic Data Modeling for Information System Design.;137-147;11;Requirements Techniques;
1982;Barry W. Boehm,James F. Elwell,Arthur B. Pyster,E. Don Stuckle,Ronald D. Williams;The TRW Software Productivity System.;148-156;9;Programming Environments;
1982;Harald Wertz;The Design of an Integrated, Interactive and Incremental Programming Environment.;157-165;9;Programming Environments;
1982;Leon J. Osterweil;Toolpack - An Experimental Software Development Environment Research Project.;166-177;12;Programming Environments;
1982;Jean Cochrane Zolnowski,P. D. Ting;An Insider's Survey on Software Development.;178-187;10;Maintenance Evaluation and Tools;
1982;M. J. Lawrence;An Examination of Evolution Dynamics.;188-196;9;Maintenance Evaluation and Tools;
1982;P. G. Hamer,G. D. Frewin;M. H. Halstead's Software Science - A Critical Examination.;197-207;11;Maintenance Evaluation and Tools;
1982;Naoki Yonezaki,Takao Katayama;Functional Specification of Synchronized Processes Based on Modal Logic.;208-217;10;Specification Techniques;
1982;Toshiki Sakabe,Yasuyoshi Inagaki,Namio Honda;Specification of Abstract Data Types with Partially Defined Operations.;218-224;7;Specification Techniques;
1982;Sol J. Greenspan,John Mylopoulos,Alexander Borgida;Capturing More World Knowledge in the Requirements Specification.;225-235;11;Specification Techniques;
1982;Andres Rudmik,B. E. Casey,H. Cohen;Consistency Checking within Embedded Design Languages.;236-245;10;Tools for Program Design and Construction;
1982;S. Warren,Bruce E. Martin,Charles Hoch;Experience with a Module Package in Developing Production Quality PASCAL Programs.;246-253;8;Tools for Program Design and Construction;
1982;Huang Cheng Cheng Kuo,C. H. Li,J. Ramanathan;A Form-Based Approach to Human Engineering Methodologies.;254-271;18;Tools for Program Design and Construction;
1982;Sandra Rapps,Elaine J. Weyuker;Data Flow Analysis Techniques for Test Data Selection.;272-278;7;Testing and Tools;
1982;D. V. Buyansky,J. W. Schatz;No 1A ESS Laboratory Support System - Erasable Flag Facility.;279-286;8;Testing and Tools;
1982;H. Ohba;Software Quality = Test Accuracy * Test Coverage.;287-295;9;Testing and Tools;
1982;M. M. Ling;Designing Data Entry Programs Using State Diagram as a Common Model.;296-308;13;Software Notations;
1982;Robert G. Babb II;Data-Driven Implementation of Data Flow Diagrams.;309-318;10;Software Notations;
1982;S. Ito;Automatic Input of Flow Chart in Document Image.;319-329;11;Software Notations;
1982;Yukikazu Nakamoto,T. Iwamoto,M. Hori,Kenichi Hagihara,Nobuki Tokura;An Editor for Documentation in pi-System to Support Software Development and Maintenance.;330-339;10;Interactive Systems;
1982;G. Beretta,Helmar Burkhart,Peter Fink,Jurg Nievergelt,Jan Stelovsky,Hirotsugo Sugaya;XS-1: An Integrated Interactive System and Its Kernel.;340-349;10;Interactive Systems;
1982;Luigi Petrone,Antonio Di Leva,Franco Sirovich;DUAL: An Interactive Tool for Developing Documented Programs by Step-Wise Refinements.;350-359;10;Interactive Systems;
1982;David R. Barstow,Roger Duffey,Stephen W. Smoliar,Stanley Vestal;An Automatic Programming System to Support an Experimental Science.;360-366;7;Case Studies;
1982;P. Lucas,Tore Risch;Representation of Factual Information by Equations and Their Evaluation.;367-376;10;Case Studies;
1982;Eric Harslem,LeRoy E. Nelson;A Retrospective on the Development of Star.;377-385;9;Case Studies;
1982;Ira R. Forman;Global Data Flow Analysis by Decomposition into Primes.;386-392;7;Program Analysis and Synthesis;
1982;Kokichi Futatsugi,Koji Okada;A Hierarchical Structuring Method for Functional Software Systems.;393-402;10;Program Analysis and Synthesis;
1982;Norio Shiratori,J. Gohara,Shoichi Noguchi;A New Design Language for Communication Protocols and a Systematic Design Method of Communication Systems.;403-413;11;Program Analysis and Synthesis;
1982;K. Takahashi,T. Aso,M. Kobayashi;Visual Aid for FORTRAN Program Debugging.;414-415;2;Short Papers;
1982;B. Runge;The Inspection Metho Applied to Small Projects.;416-417;2;Short Papers;
1982;Joseph E. Urban;Software Development with Executable Functional Specifications.;418-419;2;Short Papers;
1982;K. Miyazawa,M. Oda,S. Kato;The Portable Communication Protocol Program COMPAS for Data Terminal Systems.;420-421;2;Short Papers;
1982;Yoshihisa Mano,Kazuhito Ohmaki,Koji Torii;Early Experiences with a Multi-Display Programming Environment.;422-423;2;Short Papers;
1982;K. Chiba,K. Konishi,Akira Kurematsu;A Model for Description of Communication Protocol.;424-428;5;Short Papers;
1981;Niklaus Wirth;Lilith: A Personal Computer for the Software Engineer.;2-16;15;Keynote Presentation;
1981;Robert E. Loesh,B. Larman,P. Molko,Donald J. Reifer;Implementing a Software Management Discipline.;17;1;Case Studies;
1981;D. L. Paster;Experience with Application of Modern Software Management Controls.;18-26;9;Case Studies;
1981;David B. Wortman,James R. Cordy;Early Experiences with Euclid.;27-33;7;Case Studies;
1981;Hans-Ludwig Hausen,Monika Mullerburg;Conspectus of Software Engineering Environments.;34-43;10;Software Environments I;
1981;Peter H. Feiler,Raul Medina-Mora;An Incremental Programming Environment.;44-53;10;Software Environments I;
1981;Karen E. Huff;A Database Model for Effective Configuration Management in the Programming Environment.;54-62;9;Software Environments I;
1981;James P. Black,David J. Taylor,David E. Morgan;A Robust B-Tree Implementation.;63-70;8;Abstract Models;
1981;Christer Hulten;An Index Organization for Applications with Highly Skewed Access Patterns.;71-78;8;Abstract Models;
1981;Nachum Dershowitz;The Evolution of Programs: Program Abstraction and Instantiation.;79-89;11;Abstract Models;
1981;Pentti Kerola,Peter Freeman;A Comparison of Lifecycle Models.;90-99;10;Life Cycle Considerations;
1981;T. Sunohara,A. Takano,K. Uehara,T. Ohkawa;Program Complexity Measure for Software Development Management.;100-106;7;Life Cycle Considerations;
1981;J. W. Bailey,Victor R. Basili;A Meta-Model for Software Development Resource Expenditures.;107-116;10;Life Cycle Considerations;
1981;E. Chen,Marvin V. Zelkowitz;Use of Cluster Analysis to Evaluate Software Engineering Methodologies.;117-124;8;Life Cycle Considerations;
1981;Maria Heloisa (Lolo) Penedo,Daniel M. Berry,Gerald Estrin;An Algorithm to Support Code-Skeleton Generation for Concurrent Systems.;125-135;11;Software Environments II;
1981;P. M. Cashin,Marc L. Joliat,R. F. Kamel,D. M. Lasker;Experience with a Modular Typed Language: PROTEL.;136-143;8;Software Environments II;
1981;Erik Sandewall,Claes Stromberg,Henrik Sorensen;Software Architecture Based on Communicating Residential Environments.;144-152;9;Software Environments II;
1981;Motoei Azuma,M. Takahashi,Susumu Kamiya,K. Minomura;Interactive Software Development Tool: ISDT.;153-163;11;Software Environments II;
1981;Ira R. Forman;On the Time Overhead of Counters and Traversal Markers.;164-169;6;Analysis of Testing Methods;
1981;A. G. Duncan,J. S. Hutchison;Using Attributed Grammars to Test Designs and Implementations.;170-178;9;Analysis of Testing Methods;
1981;Joe W. Duran,Simeon C. Ntafos;A Report on Random Testing.;179-183;5;Analysis of Testing Methods;
1981;Steven J. Zeil,Lee J. White;Sufficient Tset Sets for Path Analysis Testing Strategies.;184-194;11;Analysis of Testing Methods;
1981;K. H. Britton,R. A. Parker,David Lorge Parnas;A Procedure for Designing Abstract Interfaces for Device Interface Modules.;195-206;12;Disciplined Approach to Real-Time Software-Design - A Look at Several Case Studies;
1981;Sylvia B. Sheppard,Elizabeth Kruesi,Bill Curtis;The Effects of Symbology and Spatial Arrangement on the Comprehension of Software Specifications.;207-214;8;Human Engineering;
1981;Scott N. Woodfield,Hubert E. Dunsmore,Vincent Yun Shen;The Effect of Modularization and Comments on Program Comprehension.;215-223;9;Human Engineering;
1981;Thomas G. Moher,G. Michael Schneider;Methods for Improving Controlled Experimentation in Software Engineering.;224-234;11;Human Engineering;
1981;William E. Howden;Completeness Criteria for Testing Elementary Program Functions.;235-243;9;Program Testing Tools & Techniques;
1981;Debra J. Richardson,Lori A. Clarke;A Partition Analysis Method to Increase Program Reliability.;244-253;10;Program Testing Tools & Techniques;
1981;Dorothy M. Andrews,Jeoffrey P. Benson;An Automated Program Testing Methodology and Its Implementation.;254-262;9;Program Testing Tools & Techniques;
1981;Paulo Roberto Freire Cunha,Thomas Stephen Edward Maibaum;Resource = Abstract Data Type + Synchronization - A Methodology for Message Oriented Programming.;263-272;10;Data Abstraction;
1981;Richard L. Schwartz,P. Michael Melliar-Smith;The Finalization Operation for Abstract Types.;273-282;10;Data Abstraction;
1981;M. L. Wilson;A Requirements and Design Aid for Relational Data Bases.;282-294;13;Data Abstraction;
1981;Pamela Zave,Raymond T. Yeh;Executable Requirements for Embedded Systems.;295-304;10;Requirements Engineering;
1981;N. Komoda,K. Haruna,H. Kaji,H. Shinozawa;An Innovative Approach to System Requirements Analysis by Using Structural Modeling Method.;305-313;9;Requirements Engineering;
1981;Victor R. Basili,David M. Weiss;Evaluation of a Software Requirements Document by Analysis of Change Data.;314-324;11;Requirements Engineering;
1981;Y. Futamura,T. Kawai,H. Horikoshi,M. Tsutsumi;Development of Computer Programs by Problem Analysis Diagram (PAD).;325-332;8;Design Techniques;
1981;Hassan Gomaa,D. B. H. Scott;Prototyping as a Tool in the Specification of User Requirements.;333-342;10;Design Techniques;
1981;T. Katayama;HFP: A Hierarchical and Functional Programming Based on Attribute Grammar.;343-353;11;Design Techniques;
1981;Gregory R. Andrews,David P. Dobkin,Peter J. Downey;Active Data Structures.;354-362;9;Concurrent Systems;
1981;Jean-Loup Baer,Georges Gardarin,Claude Girault,Gerard Roucairol;The Two-Step Commitment Protocol: Modeling, Specification and Proof Methodology.;363-373;11;Concurrent Systems;
1981;Krithi Ramamritham,Robert M. Keller;Specifying and Proving Properties of Sentinel Processes.;374-386;13;Concurrent Systems;
1981;Anthony I. Wasserman;User Software Engineering and the Design of Interactive Systems.;387-393;7;Interactive Systems;
1981;R. W. Lingard;A Software Methodology for Buidling Interactive Tools.;394-399;6;Interactive Systems;
1981;N. Relles,L. A. Price;A User Interface for Online Assistance.;400-409;10;Interactive Systems;
1981;Gene Myers,Leon J. Osterweil;BIGMAC II: A FORTRAN Language Augmentation Tool.;410-421;12;Programming Tools;
1981;J. W. Lewis;Beyond ALBE/P: Language Neutral Form.;422-429;8;Programming Tools;
1981;Thomas E. Cheatham Jr.,Glenn H. Holloway,Judy A. Townley;Program Refinement by Transsformation.;430-438;9;Programming Tools;
1981;Mark Weiser;Program Slicing.;439-449;11;Program Decomposition;
1981;Robert M. Balzer,A. Cooperband,Martin S. Feather,Philip E. London,David S. Wile;Application Downloading.;450-459;10;Program Decomposition;
1981;Anne Adam,Paul Y. Gloess,Jean-Pierre H. Laurent;An Interactive Tool for Program Manipulation.;460-;0;Program Decomposition;
1979;Brian Randell;Software Engineering: As it was in 1968.;1-10;10;;
1979;Barry W. Boehm;Software Engineering: As it is.;11-21;11;;
1979;D. M. Lasker;Module Structure in an Evolving Family of Real Time Systems.;22-28;7;;
1979;Walter F. Tichy;Software Development Based on Module Interconnection.;29-41;13;;
1979;Flaviu Cristian;A Recovery Mechanism for Modular Software.;42-51;10;;
1979;Charles R. Vick;On Software Engineering Tools: Past, Present and Future.;52;1;;
1979;Thomas E. Cheatham Jr.,Judy A. Townley,Glenn H. Holloway;A System for Program Refinement.;53-62;10;;
1979;Erhard Ploedereder;Pragmatic Techniques for Program Analysis and Verification.;63-72;10;;
1979;Roger S. Scowen;A New Technique for Improving the Quality of Computer Programs.;73-78;6;;
1979;Jacques Cohen;Computer-Aided Micro-Analysis of Programs.;79-84;6;;
1979;P. C. Belford,R. A. Berg,T. L. Hannan;Central Flow Control Software Development: A Case Study of the Effectiveness of Software Engineering Techniques.;85-93;9;;
1979;R. R. Horsley,William C. Lynch;Pilot: A Software Engineering Case Study.;94-99;6;;
1979;T. Martin;PEARL At the Age of Three.;100-110;11;;
1979;W. S. Amey;The Computer Assisted Software (Case) System.;111-115;5;;
1979;R. R. Willis,E. P. Jensen;Computer Aided Design of Software Systems.;116-125;10;;
1979;Geoff P. Mullery;CORE : A Method for Controlled Requirement Expression.;126-135;10;;
1979;A. F. Hutchings,R. W. McGuffin,A. E. Elliston,B. R. Tranter,P. N. Westmacott;On CADES-Software Engineering in Practice.;136-144;9;;
1979;H. S. Elovitz;An Experiment in Software Engineering: The Architecture Research Facility as a Case Study.;145-152;8;;
1979;Ernst Denert;The Project Library : A Tool for Software Development.;153-173;21;;
1979;Hugh C. Lauer,Edwin H. Satterthwaite;The Impact of Mesa on System Design.;174-182;9;;
1979;Jeffrey Kramer,R. James Cunningham;Invariants for Specifications.;183-193;11;;
1979;M. S. Laventhal;A Constructive Approach to Reliable Synchronization Code.;194-202;9;;
1979;S. Keramidis,L. Mackert;Specification and Implementation of Parallel Activities on Abstract Objects.;203-211;9;;
1979;Roy H. Campbell,R. B. Kolstad;Path Expressions in Pascal.;212-219;8;;
1979;J.-C. Rault;France on An Approach Towards Reliable Software.;220-230;11;;
1979;Chittoor V. Ramamoorthy,Farokh B. Bastani,John M. Favaro,Yu-King R. Mok,C. W. Nam,Keiichi Suzuki;On A Systematic Approach to the Development and Validation of Critical Software for Nuclear Power Plants.;231-240;10;;
1979;J. Gomez;An Interactive FORTRAN Structuring Aid.;241-244;4;;
1979;Rudolf Lauber,Joachim Biewald,Peter Gohner,H. Schelling;EPOS : A Specification and Design Technique for Computer Controlled Real-time Automation Systems.;245-250;6;;
1979;Patrizia Asirelli,Pierpaolo Degano,Giorgio Levi,Alberto Martelli,Ugo Montanari,Giuliano Pacini,Franco Sirovich,Franco Turini;A Flexible Environment for Program Development Based on a Symbolic Interpreter.;251-264;14;;
1979;William E. Riddle,G. Bristow,C. Drey,B. Edwards;Anomaly Detection in Concurrent Programs.;265-273;9;;
1979;Rudolf Marty,L. Vanek;Hierarchical Coroutines: A Mechanism for Improved Program Structure.;274-285;12;;
1979;Harald Wertz;A System to Improve incorrect Programs.;286-293;8;;
1979;Daniel M. Berry,Maria Heloisa (Lolo) Penedo;The Use of a Module Interconnection Specification Capability in the SARA System Design Methodology.;294-307;14;;
1979;Jean-Pierre Banatre,Michel Banatre;Language Features for Description of Cooperating Processes.;308-314;7;;
1979;Anita K. Jones,Karsten Schwan;TASK Forces: Distributed Software for Solving Problems of Substantial Size.;315-331;17;;
1979;A. D'Agapayeff;On Microprocessors: A Platform for True Program Portability with Examples from Microcobal.;332-339;8;;
1979;William M. McKeeman;On An Overview.;340;1;;
1979;Horst Remus,Stephen N. Zilles;Prediction and Management of Program Quality.;341-350;10;;
1979;Alan R. Feuer,E. B. Fowlkes;Some Results from an Empirical Study of Computer Software.;351-355;5;;
1979;Bill Curtis,Sylvia B. Sheppard,Phil Milliman;Third Time Charm: Stronger Replication of the Ability of Software Complexity Metrics to Predict Programmer Performance.;356-360;5;;
1979;T. H. Bruggere;Software Engineering: Management, Personnel and Methodology.;361-368;8;;
1979;D. Ross Jeffery,M. J. Lawrence;An Inter-Organizational Comparison of Programming Productivity.;369-377;9;;
1979;J. Abe,Ken Sakamura,Hideo Aiso;An Analysis of Software Project Failure.;378-385;8;;
1979;John W. Brackett,R. S. Eanes,C. K. Hitchon,Richard Thall;An Environment for Producing Well-Engineered Microcomputer Software.;386-398;13;;
1979;Massimo Ancona,Gabriella Dodero,E. L. Durante;Cross Software Development for Microprocessors Using a Translator Writing System.;399-402;4;;
1979;J. Rohmer;The APL2M System : A General Computer-Aided Software Engineering Environment for Mini and Microcomputers.;403-411;9;;
1979;Joan M. Morrissey,L. S.-Y. Wu;On Software Engineering-An Economic Perspective.;412-422;11;;
1979;Rudolf Bayer;On Synchronization and Recovery in Database Systems.;423-424;2;;
1979;Jonathan A. Bauer,Alan B. Finger;Test Plan Generation Using Formal Grammars.;425-432;8;;
1979;J. Horejs;Finite Semantics for Program Testing.;433-441;9;;
1979;Edsger W. Dijkstra;Software Engineering : As It Should Be.;442-448;7;;
1979;Wladyslaw M. Turski;Software Engineering : As It Will Be.;449-456;8;;
1978;Tony Hoare;Software Engineering: A Keynote Address.;1-4;4;Welcome and Opening;
1978;Gary Lindstrom;Control Structure Aptness: A Cast Study Using Top-Down Parsing.;5-12;8;Language Issues;
1978;William E. Riddle,Jack C. Wileden,John H. Sayler,Alan R. Segal,Allan M. Stavely;Behavior Modelling During Software Design.;13-22;10;Language Issues;
1978;Richard B. Kieburtz,W. Barabash,C. R. Hill;A Type-Checking Program Linkage System for Pascal.;23-28;6;Language Issues;
1978;Patricia A. Hamilton,John D. Musa;Measuring Reliability of Computer Center Software.;29-36;8;Software Reliability;
1978;Bev Littlewood;How to Measure Software Reliability, and How Not To.;37-45;9;Software Reliability;
1978;Isao Miyamoto;Toward an Effective Software Reliability Evaluation.;46-55;10;Software Reliability;
1978;Peter Freeman,Anthony I. Wasserman;A Proposed Curriculum for Software Engineering Education.;56-62;7;Educational Issues;
1978;Lawrence J. Peters,Leonard L. Tripp;A Model of Software Engineering.;63-70;8;Educational Issues;
1978;James C. King;Prospects for Program Verification (Tutorial).;71;1;Tutorial;
1978;Michael Jackson;Information Systems: Modelling, Sequencing and Transformations.;72-81;10;Invited Papers;
1978;David A. Fisher;The Interaction Between the Preliminary Designs and the Technical Requirements for the DoD Common High Order Language.;82-83;2;Invited Papers;
1978;Leon G. Stucki;How Software is Really Engineered?;84;1;Invited Papers;
1978;Jan T. Pedersen,John K. Buckle;Kongsberg's Road to an Industrial Software Methodology.;85-93;9;Software Design;
1978;Donald L. Boyd,Antonio Pizzarello;Introduction to the Wellmade Design Methodology.;94-100;7;Software Design;
1978;Sharon A. Stephens,Leonard L. Tripp;Requirements Expression and Verification Aid.;101-108;8;Software Design;
1978;R. R. Willis;DAS: An Automated System to Support Design Analysis.;109-115;7;Software Design;
1978;Victor R. Basili,Marvin V. Zelkowitz;Analyzing Medium-Scale Software Development.;116-123;8;Case Studies;
1978;A. Dniestrowski,J. M. Guillaume,R. Mortier;Software Engineering in Avionics Applications.;124-131;8;Case Studies;
1978;Edward Gainer,Edward Kimball,Alan A. Kortesoja,Alfred Maley;The Design of a Reliable Applications System.;132-135;4;Case Studies;
1978;John R. Brown,Kurt F. Fischer;A Graph Theoretic Approach to the Verification of Program Structures.;136-141;6;Program Analysis;
1978;James C. Browne,David B. Johnson;FAST: A Second Generation Program Analysis System.;142-148;7;Program Analysis;
1978;Carma L. McClure;A Model for Program Complexity Analysis.;149-157;9;Program Analysis;
1978;Nachum Dershowitz,Zohar Manna;Inference Rules for Program Annotation.;158-167;10;Formal Analysis;
1978;Pierre Azema,Jean-Michel Ayache,Bernard Berthomieu;Design and Verification of Communication Procedures: A Bottom-Up Approach.;168-174;7;Formal Analysis;
1978;Zohar Manna,Richard J. Waldinger;The Synthesis of Structure Changing Programs.;175-187;13;Formal Analysis;
1978;Wolfgang Dzida,Siegfried Herda,Wolf D. Itzfeldt;User Perceived Quality of Interactive Systems.;188-195;8;Human Factors;
1978;Ruven E. Brooks;Using a Behavioral Theory of Program Comprehension in Software Engineering.;196-201;6;Human Factors;
1978;Mary Anne Herndon,Ann P. Keenan;Analysis of Error Remediation Expenditures During Validation.;202-206;5;Human Factors;
1978;L. Boi,P. Michel;Design and Principles of a Fault Tolerant System.;207-214;8;System Design;
1978;Paul Chung,Berry Gaiman;Use of State Diagrams to Engineer Communications Software.;215-221;7;System Design;
1978;Leighton R. Scott;An Engineering Methodology for Presenting Software Functional Architecture.;222-229;8;System Design;
1978;Ivan M. Campos,Gerald Estrin;Concurrent Software System Design, Supported by SARA at the Age of One.;230-242;13;System Design;
1978;Peter Wegner;Research Directions in Software Technology.;243-259;17;Invited Papers;
1978;Bill Hetzel;A Perspective on Software Development.;260-263;4;Invited Papers;
1978;David Lorge Parnas;Designing Software for Ease of Extension and Contraction.;264-277;14;Invited Papers;
1978;T. H. Van Vleck,C. T. Clingen;The Multics System Programming Process.;278-280;3;Invited Papers;
1978;Douglas Cook;Measuring Memory Protection.;281-287;7;Operating Systems;
1978;Guy T. Almes,George G. Robertson;An Extensible File System for Hydra.;288-294;7;Operating Systems;
1978;Hannes Goullon,Rainer Isle,Klaus-Peter Lohr;Dynamic Restructuring in an Experimental Operating System.;295-304;10;Operating Systems;
1978;William E. Howden;Theoretical and Empirical Studies of Program Testing.;305-311;7;Testing;
1978;Guido Persch,Georg Winterstein;Symbolic Interpretation and Tracing of PASCAL-Programs.;312-319;8;Testing;
1978;David J. Panzl;Automatic Revision of Formal Test Procedures.;320-326;7;Testing;
1978;Max Stern;Some Experience in Building Portable Software.;327-332;6;Software Portability;
1978;Daniel Thalmann;Evolution in the Design of Abstract Machines for Software Portability.;333-340;8;Software Portability;
1978;Anthony I. Wasserman;Toward the Engineerin of Software: Problems of the 80's (Panel).;341;1;Panel;
1976;Douglas T. Ross,Kenneth E. Schoman Jr.;Structured Analysis for Requirements Definition (Abstract).;1;1;Requirements Definition;
1976;Daniel Teichroew,Ernest A. Hershey III;PSL/PSA: A Computer-Aided Technique for Structured Documentation and Analysis of Information Processing Systems (Abstract).;2;1;Requirements Definition;
1976;C. A. Irvine,John W. Brackett;Automated Software Engineering Through Structured Data Management (Abstract).;3;1;Requirements Definition;
1976;C. Cordell Green;The Design of the PSI Program Synthesis System.;4-18;15;Program Synthesis Techniques;
1976;David R. Barstow,Elaine Kant;Observations on the Interaction Between Coding and Efficiency Knowledge in the PSI Program Synthesis System.;19-31;13;Program Synthesis Techniques;
1976;Zohar Manna,Richard J. Waldinger;Is 'Sometime' Sometimes Better Than 'Always'? Intermittent Assertions in Proving Program Correctness.;32-39;8;Program Synthesis Techniques;
1976;Richard Alan Karp,David C. Luckham;Verification of Fairness in an Implementation of Monitors.;40-46;7;Operating Systems;
1976;John H. Howard;Signaling in Monitors.;47-52;6;Operating Systems;
1976;A. R. Saxena,Thomas H. Bredt;Verification of a Monitor Specification.;53-59;7;Operating Systems;
1976;Carl G. Davis,Charles R. Vick;The Software Development System (Abstract).;60;1;Requirements Engineering;
1976;Thomas E. Bell,T. A. Thayer;Software Requirements: Are They Really a Problem?;61-68;8;Requirements Engineering;
1976;Mack W. Alford;A Requirements Engineering Methodology for Real-Time Processing Requirements (Abstract).;69;1;Requirements Engineering;
1976;Thomas E. Bell,David C. Bixler,Margaret E. Dyer;An Extendable Approach to Computer-Aided Software Requirements Engineering (Abstract).;70;1;Requirements Engineering;
1976;P. C. Belford,A. F. Bond,D. G. Henderson,L. S. Sellers;Specifications: A Key to Effective Software Development.;71-79;9;Requirements Engineering;
1976;S. N. Gaulding,J. D. Lawson;Process Design Engineering: A Methodology for Real-Time Software Development.;80-85;6;Requirements Engineering;
1976;R. G. Koppang;Process Design System: An Integrated Set of Software Development Tools.;86-90;5;Requirements Engineering;
1976;K. G. Salter;A Methodology for Decomposing System Requirements Into Data Processing Requirements.;91-101;11;Requirements Engineering;
1976;D. W. Cooper;Adaptive Testing.;102-105;4;Requirements Engineering;
1976;J. P. Benson,R. A. Melton;A Laboratory for the Development and Evaluation of BMD Software Quality Enhancement Techniques.;106-109;4;Requirements Engineering;
1976;Edward E. Balkovich,G. P. Engelberg;Research Towards a technology to Support the Specification of Data Processing System Performance Requirements.;110-115;6;Requirements Engineering;
1976;Peter Freeman,Anthony I. Wasserman,Richard E. Fairley;Essential Elements of Software Engineering Education.;116-122;7;Education;
1976;David Lorge Parnas,Georg Handzel,Harald Wurges;Design and Specification of the Minimal Subset of an Operating System Family (Abstract).;123;1;Operating Systems and Networks;
1976;J. V. Phillips,Thomas H. Bredt;Design and Verification of Real-Time Systems.;124-131;8;Operating Systems and Networks;
1976;J. Eugene Ball,Jerome A. Feldman,James R. Low,Richard F. Rashid,Paul Rovner;RIG, Rochester's Intelligent Gateway: System Overview (Abstract).;132;1;Operating Systems and Networks;
1976;C. V. Ravi;The Structure and Characteristics of Distributed Systems.;133-137;5;Operating Systems and Networks;
1976;James C. Browne;A Critical Overview of Computer Performance Evaluation.;138-145;8;Performance Evaluation;
1976;Domenico Ferrari,Edwin J. Lau;An Experiment in Program Restructuring for Performance Enhancement.;146-150;5;Performance Evaluation;
1976;N. Billawala,Stephen A. Szygenda,Ewald W. Thomson;A Data Structure and Drive Mechanism for a Table-Driven Simulation System Employing Multilevel Structural Representations of Digital Systems.;151-157;7;Performance Evaluation;
1976;Marvin V. Zelkowitz;Automatic Program Analysis and Evaluation.;158-163;6;Performance Evaluation;
1976;Ted A. Dolotta,John R. Mashey;An Introduction to the Programmer's Workbench.;164-168;5;Programmer's Workbench;
1976;John R. Mashey;Using a Command Language as a High-Level Programming Language.;169-176;8;Programmer's Workbench;
1976;John R. Mashey,D. W. Smith;Documentation Tools and Techniques.;177-181;5;Programmer's Workbench;
1976;Ted A. Dolotta,J. S. Licwinko,R. E. Menninger,William D. Roome;The LEAP Load and Test Driver.;182-186;5;Programmer's Workbench;
1976;D. B. Knudsen,A. Barofsky,L. R. Satz;A Modification Request Control System.;187-192;6;Programmer's Workbench;
1976;M. H. Bianchi,J. L. Wood;A User's Viewpoint on the Programmer's Workbench.;193-199;7;Programmer's Workbench;
1976;David Gries;An Illustration of Current Ideas on the Derivation of Correctness Proofs and Correct Programs (Abstract).;200;1;Software Design and Development;
1976;W. W. Black;The Role of Software in Successful Computer Applications.;201-205;5;Design Principles of Large Programs;
1976;J. M. Dreyfus,P. J. Karacsony;The Preliminary Design as a Key to Successful Software Development.;206-213;8;Design Principles of Large Programs;
1976;John R. White,Taylor L. Booth;Towards and Engineering Approach to Software Design.;214-222;9;Design Principles of Large Programs;
1976;Friedrich L. Bauer;Programming as an Evolutionary Process.;223-234;12;Programming Languages;
1976;Anita K. Jones,Barbara Liskov;A Language Extension for Controlling Access to Shared Data (Abstract).;235;1;Programming Languages;
1976;Avi Silberschatz,Richard B. Kieburtz,Arthur J. Bernstein;Extending Concurrent Pascal to Allow Dynamic Resource Management (Abstract).;236;1;Programming Languages;
1976;Michael B. Feldman;New Languages from Old: The Extension of Programming Languages by Embedding, with a Case Study.;237-242;6;Programming Languages;
1976;Kapali P. Eswaran;Aspects of a Trigger Subsystem in an Integrated Data Base System.;243-250;8;Software Modeling;
1976;Erol Gelenbe;A Model of Roll-Back Recovery with Multiple Checkpoints.;251-255;5;Software Modeling;
1976;Mohamed G. Gouda,Eric G. Manning;On the Modelling, Analysis and Design of Protocols - A Special Class of Software Structures.;256-262;7;Software Modeling;
1976;Izhak Rubin;On Reliable Topologies for Computer Networks.;263-267;5;Software Modeling;
1976;M. L. Shooman;Structural Models for Software Reliability Prediction.;268-280;13;Software Modeling;
1976;K. Mani Chandy;Bayesian Models of Design Based on Intuition.;281-285;5;Software Modeling;
1976;Alan Jay Smith;On the Effectiveness of Set Associative Page Mapping and Its Application to Main Memory Management.;286-292;7;Software Modeling;
1976;Mehdi Jazayeri;Formal Specification and Automatic Programming.;293-296;4;Design Specifiaction and Management;
1976;Yaohan Chu;Introducing a Software Design Language.;297-304;8;Design Specifiaction and Management;
1976;R. Turn,M. R. Davis,Robert N. Reinstedt;A Management Approach to the Development of Computer-Based Systems.;305-311;7;Design Specifiaction and Management;
1976;W. E. Stephenson;An Analysis of the Resources Used in the SAFEGUARD System Software Development.;312-321;10;Design Specifiaction and Management;
1976;Peter Wegner;Research Pradigms in Computer Science.;322-330;9;Programming Languages and Systems;
1976;Richard L. Wexelblat;Maxims for Malfeasant Designers, or How to Design Languages to Make Programming as Difficult as Possible.;331-336;6;Programming Languages and Systems;
1976;Robert M. Balzer,Neil M. Goldman,David S. Wile;On the Transformational Implementation Approach to Programming.;337-344;8;Programming Languages and Systems;
1976;Art Lew,D. Tamanaha;Decision Table Programming and Reliability.;345-349;5;Programming Languages and Systems;
1976;Meir M. Lehman,F. N. Parr;Program Evolution and Its Impact on Software Engineering.;350-357;8;Software Design;
1976;Williaam A. Whitaker;A Defense View of Software Engineering.;358-362;5;Software Engineering in the Department of Defense;
1976;R. M. Pollock,W. L. McCoy;Software Engineering in the Development of the TRIDENT Fire Control System.;363-369;7;Software Engineering in the Department of Defense;
1976;J. C. Carrow;Structured Programming: From Theory to Practice.;370-372;3;Software Engineering in the Department of Defense;
1976;J. S. Greene;Dynamic Software Engineering: An Evolutionary Approach to Automated Software Development and Management.;373-378;6;Software Engineering in the Department of Defense;
1976;W. E. Carlson;Software Research in the Department of Defense.;379-383;5;Software Engineering in the Department of Defense;
1976;Peter J. Denning;Sacificing the Calf of Flexibility on the Altar of Reliability.;384-386;3;Software Verification and Validation;
1976;Maurice V. Wilkes;Software Engineering and Structured Programming (Abstract).;387;1;Software Verification and Validation;
1976;Harlan D. Mills;Software Development (Abstract).;388;1;Software Verification and Validation;
1976;Charles Reynolds,Raymond T. Yeh;Induction as the Basis for Program Verification (Abstract).;389;1;Software Verification and Validation;
1976;William A. Wulf,Ralph L. London,Mary M. Shaw;An Introduction to the Construction and Verification of Alphard Programs (Abstract).;390;1;Program Proving and Verification;
1976;Susan L. Gerhart,Lawrence Yelowitz;Control Structure Abstractions of the Backtracking Programming Technique (Abstract).;391;1;Program Proving and Verification;
1976;T. S. Chow;A Generalized Assertion Language.;392-399;8;Program Proving and Verification;
1976;Sanat K. Basu,Jayadev Misra;Some Classes of Naturally Provable Programs.;400-406;7;Program Proving and Verification;
1976;Thomas J. McCabe;A Complexity Measure (Abstract).;407;1;Theoretical Aspects of Software Engineering;
1976;Billy G. Claybrook;The Design of a Template Structure for a Generalized Data Structure Definition Facility.;408-413;6;Theoretical Aspects of Software Engineering;
1976;John V. Guttag,Ellis Horowitz,David R. Musser;The Design of Data Type Specifications.;414-420;7;Theoretical Aspects of Software Engineering;
1976;Peter G. Neumann,Richard J. Feiertag,Karl N. Levitt,Lawrence Robinson;Software Development and Proofs of Multi-Level Security.;421-428;8;Software Fault Tolerance;
1976;S. S. Yau,R. C. Cheung,D. C. Cochrane;An Approach to Error-Resistant Software Design.;429-436;8;Software Fault Tolerance;
1976;David Lorge Parnas,Harald Wurges;Response to Undesired Events in Software Systems.;437-446;10;Software Fault Tolerance;
1976;T. Anderson,R. Kerr;Recovery Blocks in Action: A System Supporting High Reliability.;447-457;11;Software Fault Tolerance;
1976;John H. Wensley,Milton W. Green,Karl N. Levitt,Robert E. Shostak;The Design, Analysis, and Verification of the SIFT Fault-Tolerant System.;458-469;12;Software Fault Tolerance;
1976;Robert S. Fabry;How to Design a System in Which Modules Can Be Changed on the Fly.;470-476;7;Validation and Testing;
1976;David J. Panzl;Test Procedures: A New Approach to Software Verification.;477-485;9;Validation and Testing;
1976;S. Pimont,J.-C. Rault;A Software Reliability Assessment Based on a Structural and Behavioral Analysis of Programs.;486-491;6;Validation and Testing;
1976;E. Burton Swanson;The Dimensions of Maintenance.;492-497;6;Validation and Testing;
1976;Michael Hammer,Dennis McLeod;A Framework for Data Base Semantic Integrity.;498-504;7;Data Bases;
1976;Larry Kerschberg,Esen A. Ozkarahan,J. E. S. Pacheco;A Synthetic English Query Language for a Relational Accociative Processor.;505-519;15;Data Bases;
1976;Dennis McLeod;The Translation and Compatibility of SEQUEL and Query by Example.;520-526;7;Data Bases;
1976;Michael Stonebraker;A Comparison of the Use of Links and Secondary Indices in a Relational Data Base System.;527-531;5;Data Bases;
1976;David K. Hsiao;A Software Engineering Experience in the Management, Design and Implementation of A Data Secure System.;532-538;7;Data Bases;
1976;Richard Chia-Tung Lee,James R. Slagle,C. T. Mong;Application of Clustering to Estimate Missing Data and Improve Data Integrity.;539-544;6;Data Bases;
1976;Isao Miyamoto;Some Considerations in Database Application Programming.;545-555;11;Data Bases;
1976;P. Kummel;Improved Updating in relational Dat Base Systems by Deuter-Shere Algorithms.;556-561;6;Data Bases;
1976;Peter Alsberg,J. D. Day;A Principle for Resilient Sharing of Distributed Resources.;562-570;9;Case Studies;
1976;Reinhard Wilhelm,Knut Ripken,Joachim Ciesinger,Harald Ganzinger,Walter Lahner,R. Nollmann;Design Evaluation of the Compiler Generating System MUGI.;571-576;6;Case Studies;
1976;J. Mohan,M. Geller;An Environmental Simulator for the FDNY Computer Aided Dispatch System.;577-584;8;Case Studies;
1976;K. S. Shankar,C. Sekar Chandersekaran;Dat Flow, Abstraction Levels and Specifications for Communications Switching Systems.;585-591;7;Case Studies;
1976;Barry W. Boehm,J. R. Brown,M. Lipow;Quantitative Evaluation of Software Quality.;592-605;14;Case Studies;
1976;Udo Voges;Aspects of Design, Test and Validation of the Software for a Computerized Reactor Protection System.;606-610;5;Case Studies;
1976;Wolfgang D. Ehrenberger,G. Rauch,K. Okroy;Program Analysis - A Method for the Verification of Software for the Control of a Nuclear Reactor.;611-616;6;Case Studies;
1976;B. C. Hodges,J. P. Ryan;A System for Automatic Software Evaluation.;617-623;7;Software Automated Tools;
1976;Lloyd D. Fosdick,Leon J. Osterweil;The Detection of Anomalous Interprocedural Data Flow.;624-628;5;Software Automated Tools;
1976;W. H. Jessop,J. Richard Kane,S. Roy,J. M. Scanlon;ATLAS - An Automated Software Testing System.;629-635;7;Software Automated Tools;
1976;Chittoor V. Ramamoorthy,Siu-Bun F. Ho,W. T. Chen;On the Automated Generation of Program Test Data (Abstract).;636;1;Software Automated Tools;
