2016;Fabio Palomba,Annibale Panichella,Andrea De Lucia,Rocco Oliveto,Andy Zaidman;A textual-based technique for Smell Detection.;1-10;10;Technical Research 1:Code Quality;
2016;Natthawute Sae-Lim,Shinpei Hayashi,Motoshi Saeki;Context-based code smells prioritization for prefactoring.;1-10;10;Technical Research 1:Code Quality;
2016;Felienne Hermans,Efthimia Aivaloglou;Do code smells hamper novice programming? A controlled experiment on Scratch programs.;1-10;10;Technical Research 1:Code Quality;
2016;Simone Scalabrino,Mario Linares Vásquez,Denys Poshyvanyk,Rocco Oliveto;Improving code readability models with textual features.;1-10;10;Technical Research 1:Code Quality;
2016;Huascar Sanchez,Jim Whitehead,Martin Schäf;Multistaging to understand: Distilling the essence of java code examples.;1-10;10;Technical Research 2:Program Comprehension;
2016;Mark Hills;Navigating the WordPress plugin landscape.;1-10;10;Technical Research 2:Program Comprehension;
2016;Vallary Singh,Lori L. Pollock,Will Snipes,Nicholas A. Kraft;A case study of program comprehension effort and technical debt estimations.;1-9;9;Technical Research 2:Program Comprehension;
2016;Yorai Geffen,Shahar Maoz;On method ordering.;1-10;10;Technical Research 2:Program Comprehension;
2016;Fabian Beck,Jan Melcher,Daniel Weiskopf;Identifying modularization patterns by visual comparison of multiple hierarchies.;1-10;10;Technical Research 3:Supporting Software Developers;
2016;Ignacio Fernandez,Alexandre Bergel,Juan Pablo Sandoval Alcocer,Alejandro Infante,Tudor Gîrba;Glyph-based software component identification.;1-10;10;Technical Research 3:Supporting Software Developers;
2016;Roberto Minelli,Andrea Mocci,Romain Robbes,Michele Lanza;Taming the IDE with fine-grained interaction data.;1-10;10;Technical Research 3:Supporting Software Developers;
2016;Yuan Tian,Dinusha Wijedasa,David Lo,Claire Le Goues;Learning to rank for bug report assignee recommendation.;1-10;10;Technical Research 3:Supporting Software Developers;
2016;Simon Kawuma,John Businge,Engineer Bainomugisha;Can we find stable alternatives for unstable Eclipse interfaces?;1-10;10;Technical Research 4:Language Usage;
2016;Mohamed Aymen Saied,Houari A. Sahraoui;A cooperative approach for combining client-based and library-based API usage pattern mining.;1-10;10;Technical Research 4:Language Usage;
2016;Guilherme Avelino,Leonardo Teixeira Passos,André C. Hora,Marco Tulio Valente;A novel approach for estimating Truck Factors.;1-10;10;Technical Research 4:Language Usage;
2016;Sebastian Okon,Stefan Hanenberg;Can we enforce a benefit for dynamically typed languages in comparison to statically typed ones? A controlled experiment.;1-10;10;Technical Research 4:Language Usage;
2016;Fang-Hsiang Su,Jonathan Bell,Gail E. Kaiser,Simha Sethumadhavan;Identifying functionally similar code in complex codebases.;1-10;10;Technical Research 5:Assessing Code;
2016;Mario Linares Vásquez,Andrew Holtzhauer,Denys Poshyvanyk;On automatically detecting similar Android apps.;1-10;10;Technical Research 5:Assessing Code;
2016;Xiao Cheng,Hao Zhong,Yuting Chen,Zhenjiang Hu,Jianjun Zhao;Rule-directed code clone synchronization.;1-10;10;Technical Research 5:Assessing Code;
2016;Simone Romano 0001,Christopher Vendome,Giuseppe Scanniello,Denys Poshyvanyk;Are unreachable methods harmful? Results from a controlled experiment.;1-10;10;Technical Research 5:Assessing Code;
2016;Latifa Guerrouj,Olga Baysal;Investigating the android apps' success: An empirical study.;1-4;4;Short Papers 1:Getting Deep Insight Into Your Software;
2016;Lei Ma,Cheng Zhang,Bing Yu,Jianjun Zhao;Retrofitting automatic testing through library tests reusing.;1-4;4;Short Papers 1:Getting Deep Insight Into Your Software;
2016;Syed Islam,Adel Noureddine,Rabih Bashroush;Measuring energy footprint of software features.;1-4;4;Short Papers 1:Getting Deep Insight Into Your Software;
2016;Suresh Kothari,Ahmed Tamrawi,Jon Mathews;Human-machine resolution of Invisible Control Flow?;1-4;4;Short Papers 1:Getting Deep Insight Into Your Software;
2016;Chelsea A. Metcalf,Farhaan Fowze,Tuba Yavuz,José Fortes;Extracting configuration parameter interactions using static analysis.;1-4;4;Short Papers 1:Getting Deep Insight Into Your Software;
2016;Bo Zhang,Vasil Tenev,Martin Becker 0002;Android build dependency analysis.;1-4;4;Short Papers 1:Getting Deep Insight Into Your Software;
2016;Brian Dillon,Richard Thompson;Software development and tool usability.;1-4;4;Short Papers 2:Comprehension You Can Use;
2016;Erina Makihara,Hiroshi Igaki,Norihiro Yoshida,Kenji Fujiwara,Hajimu Iida;Detecting exploratory programming behaviors for introductory programming exercises.;1-4;4;Short Papers 2:Comprehension You Can Use;
2016;Alexander Breckel,Matthias Tichy;Embedding programming context into source code.;1-4;4;Short Papers 2:Comprehension You Can Use;
2016;Jeong Yang,Young Lee,David Hicks;Synchronized static and dynamic visualization in a web-based programming environment.;1-4;4;Short Papers 2:Comprehension You Can Use;
2016;Madhusudan Srinivasan,Jeong Yang,Young Lee;Case studies of optimized sequence diagram for program comprehension.;1-4;4;Short Papers 2:Comprehension You Can Use;
2016;Aniket Kulkarni;Comprehending source code of large software system for reuse.;1-4;4;Short Papers 2:Comprehension You Can Use;
2016;Rijnard van Tonder,Claire Le Goues;Defending against the attack of the micro-clones.;1-4;4;Short Papers 3:Attack of the Development Team;
2016;Gerald Schermann,Jürgen Cito,Philipp Leitner,Harald C. Gall;Towards quality gates in continuous delivery and deployment.;1-4;4;Short Papers 3:Attack of the Development Team;
2016;Norihiro Yoshida,Tsubasa Saika,Eunjong Choi,Ali Ouni 0001,Katsuro Inoue;Revisiting the relationship between code smells and refactoring.;1-4;4;Short Papers 3:Attack of the Development Team;
2016;Yusuke Yuki,Yoshiki Higo,Keisuke Hotta,Shinji Kusumoto;Generating clone references with less human subjectivity.;1-4;4;Short Papers 3:Attack of the Development Team;
2016;Fábio Petrillo,Záphyrin Soh,Foutse Khomh,Marcelo Soares Pimenta,Carla Maria Dal Sasso Freitas,Yann-Gaël Guéhéneuc;Understanding interactive debugging with Swarm Debug Infrastructure.;1-4;4;Short Papers 3:Attack of the Development Team;
2016;Sven Amann,Sebastian Proksch,Sarah Nadi;FeedBaG: An interaction tracker for Visual Studio.;1-3;3;Tool Demonstrations;
2016;Mohammad R. Azadmanesh,Matthias Hauswirth;InfectoMeter: A tool that helps to place bug fixes.;1-3;3;Tool Demonstrations;
2016;Alexander Breckel,Matthias Tichy;INLINE: Now you're coding with portals.;1-3;3;Tool Demonstrations;
2016;Jonathan Cloutier,Segla Kpodjedo,Ghizlane El-Boussaidi;WAVI: A reverse engineering tool for web applications.;1-3;3;Tool Demonstrations;
2016;Syed S. Islam,David Binkley;PORBS: A parallel observation-based slicer.;1-3;3;Tool Demonstrations;
2016;Saket Khatiwada,Michael Kelly,Anas Mahmoud;STAC: A tool for Static Textual Analysis of Code.;1-3;3;Tool Demonstrations;
2016;Naoto Ogura,Jiachen Yang,Keisuke Hotta,Yoshiki Higo,Shinji Kusumoto;Hey! Are you injecting side effect?: A tool for detecting purity changes in java methods.;1-3;3;Tool Demonstrations;
2016;Weisong Sun,Xiaobing Sun,Hui Yang,Bin Li;WB4SP: A tool to build the word base for specific programs.;1-3;3;Tool Demonstrations;
2015;Gerald Schermann,Martin Brandtner,Sebastiano Panichella,Philipp Leitner,Harald C. Gall;Discovering loners and phantoms in commit and issue data.;4-14;11;Mining software repositories - technical research papers;
2015;Omar Benomar,Hani Abdeen,Houari A. Sahraoui,Pierre Poulin,Mohamed Aymen Saied;Detection of software evolution phases based on development activities.;15-24;10;Mining software repositories - technical research papers;
2015;Roberto Minelli,Andrea Mocci,Michele Lanza;I know what you did last summer: an investigation of how developers spend their time.;25-35;11;Mining software repositories - technical research papers;
2015;Tien-Duy B. Le,Mario Linares Vásquez,David Lo,Denys Poshyvanyk;RCLinker: automated linking of issue reports and commits leveraging rich contextual information.;36-47;12;Mining software repositories - technical research papers;
2015;Martin White,Mario Linares Vásquez,Peter Johnson,Carlos Bernal-Cárdenas,Denys Poshyvanyk;Generating reproducible and replayable bug reports from Android application crashes.;48-59;12;Mining software repositories - technical research papers;
2015;Ferdian Thung,Xuan-Bach D. Le,David Lo;Active semi-supervised defect categorization.;60-70;11;Mining software repositories - technical research papers;
2015;Mohamed Aymen Saied,Hani Abdeen,Omar Benomar,Houari A. Sahraoui;Could we infer unordered API usage patterns only using the library source code?;71-81;11;Learning and sharing program knowledge - technical research papers;
2015;Joshua Sunshine,James D. Herbsleb,Jonathan Aldrich;Searching the state space: a qualitative study of API protocol usability.;82-93;12;Learning and sharing program knowledge - technical research papers;
2015;Stefanie Beyer,Martin Pinzger;Synonym suggestion for tags on stack overflow.;94-103;10;Learning and sharing program knowledge - technical research papers;
2015;Laura MacLeod,Margaret-Anne D. Storey,Andreas Bergen;Code, camera, action: how software developers document and share program knowledge using YouTube.;104-114;11;Learning and sharing program knowledge - technical research papers;
2015;Benedikt Hauptmann,Elmar Jürgens,Volkmar Woinke;Generating refactoring proposals to remove clones from automated system tests.;115-124;10;Learning and sharing program knowledge - technical research papers;
2015;Raquel Fialho Lafetá,Marcelo de Almeida Maia,David Röthlisberger;Framework instantiation using cookbooks constructed with static and dynamic analysis.;125-128;4;Learning and sharing program knowledge - early research achievement papers;
2015;Tobias Roehm;Two user perspectives in program comprehension: end users and developer users.;129-139;11;Users, user interfaces, and feature location - technical research papers;
2015;Emily Hill,David C. Shepherd,Lori L. Pollock;Exploring the use of concern element role information in feature location evaluation.;140-150;11;Users, user interfaces, and feature location - technical research papers;
2015;Fabian Beck,Bogdan Dit,Jaleo Velasco-Madden,Daniel Weiskopf,Denys Poshyvanyk;Rethinking user interfaces for feature location.;151-162;12;Users, user interfaces, and feature location - technical research papers;
2015;Charlie Soh,Hee Beng Kuan Tan,Yauhen Leanidavich Arnatovich,Lipo Wang;Detecting clones in Android applications through analyzing user interfaces.;163-173;11;Users, user interfaces, and feature location - technical research papers;
2015;Howell R. Jordan,Jacek Rosik,Sebastian Herold,Goetz Botterweck,Jim Buckley;Manually locating features in industrial source code: the search actions of software nomads.;174-177;4;Users, user interfaces, and feature location - early research achievement papers;
2015;Eran Avidan,Dror G. Feitelson;From obfuscation to comprehension.;178-181;4;Users, user interfaces, and feature location - early research achievement papers;
2015;Roberto Minelli,Andrea Mocci,Michele Lanza;The plague doctor: a promising cure for the window plague.;182-185;4;Users, user interfaces, and feature location - early research achievement papers;
2015;Nevena Milojkovic,Andrea Caracciolo,Mircea Filip Lungu,Oscar Nierstrasz,David Röthlisberger,Romain Robbes;Polymorphism in the spotlight: studying its prevalence in Java and Smalltalk.;186-195;10;Large scale empirical studies - technical research papers;
2015;Simon Butler,Michel Wermelinger,Yijun Yu;A survey of the forms of Java reference names.;196-206;11;Large scale empirical studies - technical research papers;
2015;Douglas H. Martin,James R. Cordy,Bram Adams,Giuliano Antoniol;Make it simple: an empirical analysis of GNU make feature use in open source projects.;207-217;11;Large scale empirical studies - technical research papers;
2015;Christopher Vendome,Mario Linares Vásquez,Gabriele Bavota,Massimiliano Di Penta,Daniel M. Germán,Denys Poshyvanyk;License usage and changes: a large-scale study of Java projects on GitHub.;218-228;11;Large scale empirical studies - technical research papers;
2015;Javier Escobar-Avila,Mario Linares Vásquez,Sonia Haiduc;Unsupervised software categorization using bytecode.;229-239;11;Large scale empirical studies - technical research papers;
2015;Moritz Beller,Andy Zaidman,Andrey N. Karpov;The last line effect.;240-243;4;Large scale empirical studies - early research achievement papers;
2015;Ahmad Jbara,Dror G. Feitelson;How programmers read regular code: a controlled experiment using eye tracking.;244-254;11;Reading and visualizing - technical research papers;
2015;Teresa Busjahn,Roman Bednarik,Andrew Begel,Martha E. Crosby,James H. Paterson,Carsten Schulte,Bonita Sharif,Sascha Tamm;Eye movements in code reading: relaxing the linear order.;255-265;11;Reading and visualizing - technical research papers;
2015;Florian Fittkau,Santje Finke,Wilhelm Hasselbring,Jan Waller;Comparing trace visualizations for program comprehension through controlled experiments.;266-276;11;Reading and visualizing - technical research papers;
2015;Marcello Romanelli,Andrea Mocci,Michele Lanza;Towards visual reflexion models.;277-280;4;Reading and visualizing - early research achievement papers;
2015;Dan C. Cosma,Petru Florin Mihancea;Understanding web applications using component based visual patterns.;281-284;4;Reading and visualizing - early research achievement papers;
2015;Pavan Kumar Chittimalli,Vipul Shah;Fault localization during system testing.;285-286;2;Industry and experience reports;
2015;Chetan Khadke,Sunjit Rana,Vipul Shah;Recovering workflows from functional tests.;287-288;2;Industry and experience reports;
2015;Yusuke Sabi,Hiroaki Murakami,Yoshiki Higo,Shinji Kusumoto;Reordering results of keyword-based code search for supporting simultaneous code changes.;289-290;2;Industry and experience reports;
2015;Yuki Yano,Raula Gaikovina Kula,Takashi Ishio,Katsuro Inoue;VerXCombo: an interactive data visualization of popular library version combinations.;291-294;4;Tool demos;
2015;Amir Saeidi,Jurriaan Hage,Ravi Khadka,Slinger Jansen;ITMViz: interactive topic modeling for source code analysis.;295-298;4;Tool demos;
2015;Vahid Amintabar,Abbas Heydarnoori,Mohammad Ghafari;ExceptionTracer: a solution recommender for exceptions in an integrated development environment.;299-302;4;Tool demos;
2015;Milan Pavlovic,Milan Radulovic,Alex Ramírez,Petar Radojkovic;Limpio: LIghtweight MPI instrumentatiOn.;303-306;4;Tool demos;
2014;Mojtaba Shahin,Peng Liang,Zengyang Li;Do architectural design decisions improve the understanding of software architecture? two controlled experiments.;3-13;11;Architecture;
2014;Vanius Zapalowski,Ingrid Nunes,Daltro José Nunes;Revealing the relationship between architectural elements and source code characteristics.;14-25;12;Architecture;
2014;David Binkley,Daniel Heinz,Dawn J. Lawrie,Justin Overfelt;Understanding LDA in source code analysis.;26-36;11;Supporting Software Engineers;
2014;Alexandre Perez,Rui Abreu;A diagnosis-based approach to software comprehension.;37-47;11;Supporting Software Engineers;
2014;David H. White 0001;dsOli: data structure operation location and identification.;48-52;5;Supporting Software Engineers;
2014;Shaowei Wang,David Lo;Version history, similar report, and structure: putting them together for improved bug localization.;53-63;11;Supporting Software Engineers;
2014;Nesrine Noughi,Marco Mori,Loup Meurice,Anthony Cleve;Understanding the database manipulation behavior of programs.;64-67;4;Supporting Software Engineers;
2014;Joe F. Shobe,Md Yasser Karim,Motahareh Bahrami Zanjani,Huzefa H. Kagdi;On mapping releases to commits in open source systems.;68-71;4;Supporting Software Engineers;
2014;Lucas Batista Leite de Souza,Eduardo Cunha Campos,Marcelo de Almeida Maia;Ranking crowd knowledge to assist software development.;72-82;11;Collaborative and Human Aspects;
2014;Mario Linares Vásquez,Gabriele Bavota,Massimiliano Di Penta,Rocco Oliveto,Denys Poshyvanyk;How do API changes trigger stack overflow discussions? a study on the Android SDK.;83-94;12;Collaborative and Human Aspects;
2014;Bo Zhou,Xin Xia,David Lo,Cong Tian,Xinyu Wang;Towards more accurate content categorization of API discussions.;95-105;11;Collaborative and Human Aspects;
2014;Carmine Vassallo,Sebastiano Panichella,Massimiliano Di Penta,Gerardo Canfora;CODES: mining source code descriptions from developers discussions.;106-109;4;Collaborative and Human Aspects;
2014;Ferdian Thung,David Lo,Mohd Hafeez Osman,Michel R. V. Chaudron;Condensing class diagrams by analyzing design and network metrics using optimistic classification.;110-121;12;Collaborative and Human Aspects;
2014;Renan Vasconcelos,Marcelo Schots,Cláudia Werner;An information visualization feature model for supporting the selection of software visualizations.;122-125;4;Collaborative and Human Aspects;
2014;Denis Delimarschi,George Swartzendruber,Huzefa H. Kagdi;Enabling integrated development environments with natural user interface interactions.;126-129;4;Collaborative and Human Aspects;
2014;Kamal Hossen,Huzefa H. Kagdi,Denys Poshyvanyk;Amalgamating source code authors, maintainers, and change proneness to triage change requests.;130-141;12;Recommendations;
2014;Mohammad Ghafari,Carlo Ghezzi,Andrea Mocci,Giordano Tamburrelli;Mining unit tests for code recommendation.;142-145;4;Recommendations;
2014;Danilo Silva,Ricardo Terra,Marco Tulio Valente;Recommending automated extract method refactorings.;146-156;11;Recommendations;
2014;Laleh Mousavi Eshkevari,Giuliano Antoniol,James R. Cordy,Massimiliano Di Penta;Identifying and locating interference issues in PHP applications: the case of WordPress.;157-167;11;Recommendations;
2014;Daniela Steidl,Sebastian Eder;Prioritizing maintainability defects based on refactoring recommendations.;168-176;9;Joint Session with CHASE 1;
2014;Sebastiano Panichella,Gerardo Canfora,Massimiliano Di Penta,Rocco Oliveto;How the evolution of emerging collaborations relates to code changes: an empirical study.;177-188;12;Joint Session with CHASE 2;
2014;Ahmad Jbara,Dror G. Feitelson;On the effect of code regularity on comprehension.;189-200;12;Understanding Comprehension;
2014;Braden Walters,Timothy Shaffer,Bonita Sharif,Huzefa H. Kagdi;Capturing software traceability links from developers' eye gazes.;201-204;4;Understanding Comprehension;
2014;Vikrant S. Kaulgud,K. M. Annervaz,Janardan Misra,Gary Titus;Comprehension support during knowledge transitions: learning from field.;205-206;2;Understanding Comprehension;
2014;Katsuhisa Maruyama,Takayuki Omori,Shinpei Hayashi;A visualization tool recording historical data of program comprehension tasks.;207-211;5;Understanding Comprehension;
2014;Pujan Petersen,Stefan Hanenberg,Romain Robbes;An empirical comparison of static and dynamic type systems on API usage in the presence of an IDE: Java vs. groovy with eclipse.;212-222;11;Understanding Comprehension;
2014;Andreas Stefik,Stefan Hanenberg,Mark McKenney,Anneliese Amschler Andrews,Srinivas Kalyan Yellanki,Susanna Siebert;What is the foundation of evidence of human factors decisions in language design? an empirical study on programming language workshops.;223-231;9;Understanding Comprehension;
2014;Mario Linares Vásquez,Sam Klock,Collin McMillan,Aminata Sabane,Denys Poshyvanyk,Yann-Gaël Guéhéneuc;Domain matters: bringing further evidence of the relationships among anti-patterns, application domains, and quality-related metrics in Java mobile apps.;232-243;12;Software Quality;
2014;Shrinath Gupta,Himanshu Kumar Singh,Radhika D. Venkatasubramanyam,Umesh Uppili;SCQAM: a scalable structured code quality assessment method for industrial software.;244-252;9;Software Quality;
2014;Toshinori Matsumura,Takashi Ishio,Yu Kashima,Katsuro Inoue;Repeatedly-executed-method viewer for efficient visualization of execution paths and states in Java.;253-257;5;Software Quality;
2014;Dirk Beyer 0001,Peter Häring;A formal evaluation of DepDegree based on weyuker's properties.;258-261;4;Software Quality;
2014;Hiroyuki Kirinuki,Yoshiki Higo,Keisuke Hotta,Shinji Kusumoto;Hey! are you committing tangled changes?;262-265;4;Software Quality;
2014;Shrinath Gupta,Himanshu Kumar Singh;A semiautomated method for classifying program analysis rules into a quality model.;266-270;5;Software Quality;
2014;Takayuki Suzuki,Kazunori Sakamoto,Fuyuki Ishikawa,Shinichi Honiden;An approach for evaluating and suggesting method names using n-gram models.;271-274;4;Software Quality;
2014;Xin Xia,David Lo,Xingen Wang,Chenyi Zhang,Xinyu Wang;Cross-language bug localization.;275-278;4;Software Quality;
2014;Paul W. McBurney,Collin McMillan;Automatic documentation generation via source code summarization of method context.;279-290;12;Novel Development Tooling;
2014;Paul W. McBurney,Cheng Liu,Collin McMillan,Tim Weninger;Improving topic model source code summarization.;291-294;4;Novel Development Tooling;
2014;Aniket Kulkarni,Ravindra Metta;A code obfuscation framework using code clones.;295-299;5;Novel Development Tooling;
2014;Ahmad Jbara,Dror G. Feitelson;JCSD: visual support for understanding code control structure.;300-303;4;Novel Development Tooling;
2014;Zhenzhou Tian,Qinghua Zheng,Ting Liu,Ming Fan,Xiaodong Zhang,Zijiang Yang;Plagiarism detection for multithreaded software based on thread-aware software birthmarks.;304-313;10;Novel Development Tooling;
2014;Mark Grechanik,Collin McMillan,Tathagata Dasgupta,Denys Poshyvanyk,Malcom Gethers;Redacting sensitive information in software artifacts.;314-325;12;Novel Development Tooling;
2013;Samir Gupta,Sana Malik,Lori L. Pollock,K. Vijay-Shanker;Part-of-speech tagging of program identifiers for improved text-based software engineering tools.;3-12;10;Textual Analysis;
2013;Brian P. Eddy,Jeffrey A. Robinson,Nicholas A. Kraft,Jeffrey C. Carver;Evaluating source code summarization techniques: Replication and expansion.;13-22;10;Textual Analysis;
2013;Laura Moreno,Jairo Aponte,Giriprasad Sridhara,Andrian Marcus,Lori L. Pollock,K. Vijay-Shanker;Automatic generation of natural language summaries for Java classes.;23-32;10;Textual Analysis;
2013;Zohreh Sharafi,Alessandro Marchetto,Angelo Susi,Giuliano Antoniol,Yann-Gaël Guéhéneuc;An empirical study on the efficiency of graphical vs. textual representations in requirements comprehension.;33-42;10;The Role of Visualization in Program Comprehension;
2013;Kenichi Kobayashi,Manabu Kamimura,Keisuke Yano,Koki Kato,Akihiko Matsuo;SArF map: Visualizing software architecture from feature and layer viewpoints.;43-52;10;The Role of Visualization in Program Comprehension;
2013;Jonas Trümper,Jürgen Döllner,Alexandru Telea;Multiscale visual comparison of execution traces.;53-62;10;The Role of Visualization in Program Comprehension;
2013;Fabian Beck,Oliver Moseler,Stephan Diehl 0001,Günter Daniel Rey;In situ understanding of performance bottlenecks through visually augmented code.;63-72;10;The Role of Visualization in Program Comprehension;
2013;Tobias Roehm,Nigar Gurbanova,Bernd Bruegge,Christophe Joubert,Walid Maalej;Monitoring user interactions for supporting failure reproduction.;73-82;10;Software Quality;
2013;Daniela Steidl,Benjamin Hummel,Elmar Jürgens;Quality analysis of source code comments.;83-92;10;Software Quality;
2013;Hiroaki Murakami,Keisuke Hotta,Yoshiki Higo,Hiroshi Igaki,Shinji Kusumoto;Gapped code clone detection with lightweight source code analysis.;93-102;10;Source Code Comprehension;
2013;Manishankar Mondal,Chanchal K. Roy,Kevin A. Schneider;Insight into a method co-change pattern to identify highly coupled methods: An empirical study.;103-112;10;Source Code Comprehension;
2013;Philip Mayer,Andreas Schroeder;Patterns of cross-language linking in java frameworks.;113-122;10;Source Code Comprehension;
2013;Diana Diaz,Gabriele Bavota,Andrian Marcus,Rocco Oliveto,Silvia Takahashi,Andrea De Lucia;Using code ownership to improve IR-based Traceability Link Recovery.;123-132;10;Traceability and Feature Location;
2013;Blake Bassett,Nicholas A. Kraft;Structural information based term weighting in text retrieval for feature location.;133-141;9;Traceability and Feature Location;
2013;Yingying Zhang,Daqing Hou;Extracting problematic API features from forum discussions.;142-151;10;Comprehending API;
2013;Coen De Roover,Ralf Lämmel,Ekaterina Pek;Multi-dimensional exploration of API usage.;152-161;10;Comprehending API;
2013;Anas Mahmoud,Nan Niu;Evaluating software clustering algorithms in the context of program comprehension.;162-171;10;Comprehending Software Architectures;
2013;Leo Pruijt,Christian Köppe,Sjaak Brinkkemper;On the accuracy of Architecture Compliance Checking support Accuracy of dependency analysis and violation reporting.;172-181;10;Comprehending Software Architectures;
2013;Mohamed Aly,Anis Charfi,Mira Mezini;Building extensions for applications: Towards the understanding of extension possibilities.;182-191;10;Comprehending Software Architectures;
2013;Mario Bernhart,Thomas Grechenig;On the understanding of programs with continuous code reviews.;192-198;7;Industry Track;
2013;Yuki Yamanaka,Eunjong Choi,Norihiro Yoshida,Katsuro Inoue,Tateki Sano;Applying clone change notification system into an industrial development process.;199-206;8;Industry Track;
2013;Michele Lanza,Marco D'Ambros,Alberto Bacchelli,Lile Hattori,Francesco Rigotti;Manhattan: Supporting real-time visual team activity awareness.;207-210;4;Early Reserarch Achievements Track;
2013;Chris Parnin,Christoph Treude,Margaret-Anne D. Storey;Blogging developer knowledge: Motivations, challenges, and future directions.;211-214;4;Early Reserarch Achievements Track;
2013;Manabu Kamimura,Gail C. Murphy;Towards generating human-oriented summaries of unit test cases.;215-218;4;Early Reserarch Achievements Track;
2013;Cataldo Basile,Mariano Ceccato;Towards a unified software attack model to assess software protections.;219-222;4;Early Reserarch Achievements Track;
2013;Manishankar Mondal,Chanchal K. Roy,Kevin A. Schneider;Improving the detection accuracy of evolutionary coupling.;223-226;4;Early Reserarch Achievements Track;
2013;Toshihiro Kamiya;Agec: An execution-semantic clone detection tool.;227-229;3;Tool Demonstrations;
2013;Laura Moreno,Andrian Marcus,Lori L. Pollock,K. Vijay-Shanker;JSummarizer: An automatic generator of natural language summaries for Java classes.;230-232;3;Tool Demonstrations;
2013;Michael Falcone,Bonita Sharif;OnionUML: An Eclipse plug-in for visualizing UML class diagrams in onion graph notation.;233-235;3;Tool Demonstrations;
2013;Md. Sharif Uddin,Chanchal K. Roy,Kevin A. Schneider;SimCad: An extensible and faster clone detection tool for large scale software systems.;236-238;3;Tool Demonstrations;
2012;Oscar Nierstrasz,Mircea Lungu;Agile software assessment (Invited paper).;3-10;8;Invited Papers;
2012;Robert DeLine;Studying developers for fun and profit: (Keynote abstract).;11;1;Invited Papers;
2012;Vaclav Rajlich,Norman Wilde;A retrospective view on: The role of concepts in program comprehension: (MIP award).;12-13;2;Invited Papers;
2012;Bernhard Katzmarski,Rainer Koschke;Program complexity metrics and programmer opinions.;17-26;10;Main Research Track;Cognitive Processes
2012;Zohreh Sharafi,Zephyrin Soh,Yann-Gael Gueheneuc,Giuliano Antoniol;Women and men - Different but equal: On the impact of identifier style on source code reading.;27-36;10;Main Research Track;Cognitive Processes
2012;Takashi Ishio,Shogo Etsuda,Katsuro Inoue;A lightweight visualization of interprocedural data-flow paths for source code reading.;37-46;10;Main Research Track;Cognitive Processes
2012;Janet Feigenspan,Don S. Batory,Taylor L. Riche;Is the derivation of a model easier to understand than the model itself?;47-52;6;Main Research Track;Cognitive Processes
2012;Chandan Raj Rupakheti,Daqing Hou;Evaluating forum discussions to inform the design of an API critic.;53-62;10;The Role of the Developer;
2012;Sebastiano Panichella,Jairo Aponte,Massimiliano Di Penta,Andrian Marcus,Gerardo Canfora;Mining source code descriptions from developer communications.;63-72;10;The Role of the Developer;
2012;Janet Feigenspan,Christian Kastner,Jorg Liebig,Sven Apel,Stefan Hanenberg;Measuring programming experience.;73-82;10;The Role of the Developer;
2012;Ahmad Jbara,Adam Matan,Dror G. Feitelson;High-MCC functions in the Linux kernel.;83-92;10;Measurement;
2012;John-Jose Nunez,Gregor Kiczales;Understanding registration-based abstractions: A quantitative user study.;93-102;10;Measurement;
2012;Bruno Carreiro da Silva,Claudio Sant'Anna,Christina von Flach G. Chavez,Alessandro Garcia;Concern-based cohesion: Unveiling a hidden dimension of cohesion measurement.;103-112;10;Measurement;
2012;Israel J. Mojica Ruiz,Meiyappan Nagappan,Bram Adams,Ahmed E. Hassan;Understanding reuse in the Android Market.;113-122;10;Measurement;
2012;Chris Parnin,Spencer Rugaber;Programmer information needs after memory failure.;123-132;10;Understanding and Architecture;
2012;Luay Alawneh,Abdelwahab Hamou-Lhadj;Identifying computational phases from inter-process communication traces of HPC applications.;133-142;10;Understanding and Architecture;
2012;Amir Reza Yazdanshenas,Leon Moonen;Tracking and visualizing information flow in component-based systems.;143-152;10;Understanding and Architecture;
2012;Sebastian Kleinschmager,Stefan Hanenberg,Romain Robbes,Eric Tanter,Andreas Stefik;Do static type systems improve the maintainability of software systems? An empirical study.;153-162;10;Empirical Studies;
2012;Zephyrin Soh,Zohreh Sharafi,Bertrand Van den Plas,Gerardo Cepeda Porras,Yann-Gael Gueheneuc,Giuliano Antoniol;Professional status and expertise for UML class diagram comprehension: An empirical study.;163-172;10;Empirical Studies;
2012;Christopher S. Corley,Elizabeth A. Kammer,Nicholas A. Kraft;Modeling the ownership of source code topics.;173-182;10;Semantics and Traceability;
2012;Anas Mahmoud,Nan Niu,Songhua Xu;A semantic relatedness approach for traceability link recovery.;183-192;10;Semantics and Traceability;
2012;Andrea De Lucia,Massimiliano Di Penta,Rocco Oliveto,Annibale Panichella,Sebastiano Panichella;Using IR methods for labeling source code artifacts: Is it worthwhile?;193-202;10;Semantics and Traceability;
2012;Bogdan Dit,Evan Moritz,Denys Poshyvanyk;A TraceLab-based solution for creating, conducting, and sharing feature location experiments.;203-208;6;Semantics and Traceability;
2012;Benedikt Hauptmann,Maximilian Junker,Sebastian Eder,Elmar Jurgens,Rudolf Vaas;Can clone detection support test comprehension?;209-218;10;Source-Code Analysis;
2012;Jan Harder,Rebecca Tiarks;A controlled experiment on software clones.;219-228;10;Source-Code Analysis;
2012;Carlos Noguera,Coen De Roover,Andy Kellens,Viviane Jonckers;Code querying by UML.;229-238;10;Source-Code Analysis;
2012;Chandan Raj Rupakheti,Daqing Hou;CriticAL: A critic for APIs and libraries.;241-243;3;Tool Demonstrations;
2012;Janet Feigenspan,Norbert Siegmund;Supporting comprehension experiments with human subjects.;244-246;3;Tool Demonstrations;
2012;Iman Keivanloo,Chanchal Kumar Roy,Juergen Rilling;SeByte: A semantic clone detection tool for intermediate languages.;247-249;3;Tool Demonstrations;
2012;Keisuke Hotta,Yoshiki Higo,Hiroshi Igaki,Shinji Kusumoto;CRat: A refactoring support tool for Form Template Method.;250-252;3;Tool Demonstrations;
2012;Hiroshi Kazato,Shinpei Hayashi,Satoshi Okada,Shunsuke Miyata,Takashi Hoshino,Motoshi Saeki;Toward structured location of features.;255-256;2;Poster Presentations;
2012;Bo Zhang;Extraction and improvement of conditionally compiled product line code.;257-258;2;Poster Presentations;
2012;Vasil L. Tenev,Slawomir Duszynski;Applying bioinformatics in the analysis of software variants.;259-260;2;Poster Presentations;
2012;Hitesh Sajnani,Joel Ossher,Cristina Videira Lopes;Parallel code clone detection using MapReduce.;261-262;2;Poster Presentations;
2012;Hitesh Sajnani;Automatic software architecture recovery: A machine learning approach.;265-268;4;Student Research Symposium;
2012;Anas Mahmoud;Toward an effective automated tracing process.;269-272;4;Student Research Symposium;
2012;Ahmad Jbara;Characterization of the Linux configuration system.;273-276;4;Student Research Symposium;
2012;Iman Keivanloo;Leveraging clone detection for Internet-scale source code search.;277-280;4;Student Research Symposium;
2011;Leon Moonen;Keynotes.;;0;;
2011;Margaret-Anne D. Storey;Invited Talk.;;0;;
2011;Giuseppe Scanniello,Andrian Marcus;Clustering Support for Static Concept Location in Source Code.;1-10;10;Concept and Feature Location;
2011;Bogdan Dit,Latifa Guerrouj,Denys Poshyvanyk,Giuliano Antoniol;Can Better Identifier Splitting Techniques Help Feature Location?;11-20;10;Concept and Feature Location;
2011;Andrea De Lucia,Massimiliano Di Penta,Rocco Oliveto,Annibale Panichella,Sebastiano Panichella;Improving IR-based Traceability Recovery Using Smoothing Filters.;21-30;10;Concept and Feature Location;
2011;Annie T. T. Ying,Martin P. Robillard;The Influence of the Task on Programmer Behaviour.;31-40;10;Empirical Studies of Programmers;
2011;Oleksandr Panchenko,Jan Karstens,Hasso Plattner,Alexander Zeier;Precise and Scalable Querying of Syntactical Source Code Patterns Using Sample Code Snippets and a Database.;41-50;10;Empirical Studies of Programmers;
2011;Stefan Endrikat,Stefan Hanenberg;Is Aspect-Oriented Programming a Rewarding Investment into Future Code Changes? A Socio-technical Study on Development and Maintenance Time.;51-60;10;Empirical Studies of Programmers;
2011;David Rothlisberger,Oscar Nierstrasz,Stephane Ducasse;SmartGroups: Focusing on Task-Relevant Source Artifacts in IDEs.;61-70;10;Automated Support for Program Comprehension;
2011;Giriprasad Sridhara,Lori L. Pollock,K. Vijay-Shanker;Generating Parameter Comments and Integrating with Method Summaries.;71-80;10;Automated Support for Program Comprehension;
2011;Marouane Kessentini,Wael Kessentini,Houari A. Sahraoui,Mounir Boukadoum,Ali Ouni;Design Defects Detection and Correction by Example.;81-90;10;Automated Support for Program Comprehension;
2011;Daqing Hou,Lin Li;Obstacles in Using Frameworks and APIs: An Exploratory Study of Programmers' Newsgroup Discussions.;91-100;10;Collaborative Program Comprehension;
2011;Anja Guzzi,Lile Hattori,Michele Lanza,Martin Pinzger,Arie van Deursen;Collective Code Bookmarks for Program Comprehension.;101-110;10;Collaborative Program Comprehension;
2011;Nasir Ali,Yann-Gael Gueheneuc,Giuliano Antoniol;Trust-Based Requirements Traceability.;111-120;10;Collaborative Program Comprehension;
2011;Johan Fabry,Andy Kellens,Stephane Ducasse;AspectMaps: A Scalable Visualization of Join Point Shadows.;121-130;10;Aspect-Oriented Programming;
2011;Rachel Burrows,Francois Taiani,Alessandro Garcia,Fabiano Cutigi Ferrari;Reasoning about Faults in Aspect-Oriented Programs: A Metrics-Based Evaluation.;131-140;10;Aspect-Oriented Programming;
2011;Dominik Stein,Stefan Hanenberg;Comparison of a Visual and a Textual Notation to Express Data Constraints in Aspect-Oriented Join Point Selections: A Controlled Experiment.;141-150;10;Aspect-Oriented Programming;
2011;James R. Cordy;Exploring Large-Scale System Similarity Using Incremental Clone Detection and Live Scatterplots.;151-160;10;Software Evolution;
2011;Lile Hattori,Marco D'Ambros,Michele Lanza,Mircea Lungu;Software Evolution Comprehension: Replay to the Rescue.;161-170;10;Software Evolution;
2011;Elmar Jurgens,Martin Feilkas,Markus Herrmannsdorfer,Florian Deissenboeck,Rudolf Vaas,Karl-Heinz Prommer;Feature Profiling for Evolving Systems.;171-180;10;Software Evolution;
2011;Luay Alawneh,Abdelwahab Hamou-Lhadj;MTF: A Scalable Exchange Format for Traces of High Performance Computing Systems.;181-184;4;Short Papers;
2011;Nicolas Bettenburg,Bram Adams,Ahmed E. Hassan,Michel Smidt;A Lightweight Approach to Uncover Technical Artifacts in Unstructured Data.;185-188;4;Short Papers;
2011;Nir Eitan,Michal Gordon-Kiwkowitz,David Harel,Assaf Marron,Gera Weiss;On Visualization and Comprehension of Scenario-Based Programs.;189-192;4;Short Papers;
2011;Nan Niu,Anas Mahmoud,Xiaoyong Yang;Faceted Navigation for Software Exploration.;193-196;4;Short Papers;
2011;Chris Parnin;Subvocalization - Toward Hearing the Inner Thoughts of Developers.;197-200;4;Short Papers;
2011;Gabriella Toth,A. Z. Vegh,Arpad Beszedes,Tibor Gyimothy;Adding Process Metrics to Enhance Modification Complexity Prediction.;201-204;4;Short Papers;
2011;Mengliao Wang,Xiaoyu Shi,Kenny Wong;Capturing Expert Knowledge for Automated Configuration Fault Diagnosis.;205-208;4;Short Papers;
2011;Salima Hassaine,Ferdaous Boughanmi,Yann-Gael Gueheneuc,Sylvie Hamel,Giuliano Antoniol;Change Impact Analysis: An Earthquake Metaphor.;209-210;2;Posters;
2011;Gayani Samaraweera,Macneil Shonle,John Quarles;Programming from the Reader's Perspective: Toward an Expectations Approach.;211-212;2;Posters;
2011;Andreas Stefik,Susanna Siebert,Kim Slattery,Melissa Stefik;Toward Intuitive Programming Languages.;213-214;2;Posters;
2011;Mark D. Syer,Bram Adams,Ahmed E. Hassan;Industrial Case Study on Supporting the Comprehension of System Behaviour under Load.;215-216;2;Posters;
2011;James R. Cordy,Chanchal Kumar Roy;DebCheck: Efficient Checking for Open Source Code Clones in Software Systems.;217-218;2;Tool Demonstrations;
2011;James R. Cordy,Chanchal Kumar Roy;The NiCad Clone Detector.;219-220;2;Tool Demonstrations;
2011;Liang Huang,Kenny Wong;Anomaly Detection by Monitoring Filesystem Activities.;221-222;2;Tool Demonstrations;
2011;Iman Keivanloo,Juergen Rilling,Philippe Charland;SeClone - A Hybrid Approach to Internet-Scale Real-Time Code Clone Search.;223-224;2;Tool Demonstrations;
2011;Heidar Pirzadeh,Sara Shanian,Abdelwahab Hamou-Lhadj,Ali Mehrabian;The Concept of Stratified Sampling of Execution Traces.;225-226;2;Tool Demonstrations;
2011;Andrew Begel,Jochen Quante;Industrial Program Comprehension Challenge 2011: Archeology and Anthropology of Embedded Control Systems.;227-229;3;Industrial Challenge;
2011;Nasir Ali;Trustrace: Improving Automated Trace Retrieval through Resource Trust Analysis.;230-233;4;Student Symposium;
2011;Sonia Haiduc,Andrian Marcus;On the Effect of the Query in IR-based Concept Location.;234-237;4;Student Symposium;
2011;Soumaya Medini;Scalable Automatic Concept Mining from Execution Traces.;238-241;4;Student Symposium;
2011;Manishankar Mondal,Md. Saidur Rahman 0002,Ripon Kumar Saha,Chanchal Kumar Roy,Jens Krinke,Kevin A. Schneider;An Empirical Study of the Impacts of Clones in Software Maintenance.;242-245;4;Student Symposium;
2011;Scott David Ohlemacher,Andrian Marcus;Towards a Benchmark and Automatic Calibration for IR-Based Concept Location.;246-249;4;Student Symposium;
2011;Chandan Raj Rupakheti,Daqing Hou;Satisfying Programmers' Information Needs in API-Based Programming.;250-253;4;Student Symposium;
2011;Zohreh Sharafi;A Systematic Analysis of Software Architecture Visualization Techniques.;254-257;4;Student Symposium;
2011;Zephyrin Soh;Context and Vision: Studying Two Factors Impacting Program Comprehension.;258-261;4;Student Symposium;
2011;Wei Wu;Modeling Framework API Evolution as a Multi-objective Optimization Problem.;262-265;4;Student Symposium;
2011;Minhaz Fahim Zibran,Chanchal Kumar Roy;Conflict-Aware Optimal Scheduling of Code Clone Refactoring: A Constraint Programming Approach.;266-269;4;Student Symposium;
2010;Kunrong Chen,Vaclav Rajlich;Case Study of Feature Location Using Dependence Graph, after 10 Years.;1-3;3;Most Influential Paper from IWPC 2000;
2010;Jean-Remy Falleri,Marianne Huchard,Mathieu Lafourcade,Clementine Nebut,Violaine Prince,Michel Dao;Automatic Extraction of a WordNet-Like Identifier Network from Software.;4-13;10;Collecting Information;
2010;Meghan Revelle,Bogdan Dit,Denys Poshyvanyk;Using Data Fusion and Web Mining to Support Feature Location in Software.;14-23;10;Collecting Information;
2010;Alberto Bacchelli,Marco D'Ambros,Michele Lanza;Extracting Source Code from E-Mails.;24-33;10;Collecting Information;
2010;Janet Feigenspan,Christian Kastner,Mathias Frisch,Raimund Dachselt,Sven Apel;Visual Support for Understanding Product Lines.;34-35;2;Tool Demonstrations;
2010;Petru Florin Mihancea;Patrools: Visualizing the Polymorphic Usage of Class Hierarchies.;36-37;2;Tool Demonstrations;
2010;Patricia Jablonski,Daqing Hou;Renaming Parts of Identifiers Consistently within Code Clones.;38-39;2;Tool Demonstrations;
2010;Dirk Beyer,Ashgan Fararooy;DepDigger: A Tool for Detecting Complex Low-Level Dependencies.;40-41;2;Tool Demonstrations;
2010;Dirk Beyer,Ashgan Fararooy;CheckDep: A Tool for Tracking Software Dependencies.;42-43;2;Tool Demonstrations;
2010;Andrzej Olszak,Bo Norregaard Jorgensen;Featureous: A Tool for Feature-Centric Analysis of Java Software.;44-45;2;Tool Demonstrations;
2010;Domenico Amalfitano,Anna Rita Fasolino,Armando Polcaro,Porfirio Tramontana;DynaRIA: A Tool for Ajax Web Application Comprehension.;46-47;2;Tool Demonstrations;
2010;Mario Luca Bernardi,Giuseppe A. Di Lucca;The ConAn Tool to Identify Crosscutting Concerns in Object Oriented Systems.;48-49;2;Tool Demonstrations;
2010;Daniel Rolls,Carl Joslin,Sven-Bodo Scholz;Unibench: A Tool for Automated and Collaborative Benchmarking.;50-51;2;Tool Demonstrations;
2010;Lerina Aversano,Fiammetta Marulli,Maria Tortorella;Recovering Traceability Links between Business Process and Software System Components.;52-53;2;Posters;
2010;Sandro Boccuzzo,Harald Gall;Multi-touch for Software Exploration.;54-55;2;Posters;
2010;Mehdi Amoui,Sen Li,Edson A. Oliveira Jr.,Ladan Tahvildari;Towards Developing a Meta-model for Comprehending Software Adaptability.;56-57;2;Posters;
2010;Lewis Berman;Sound as an Aid in Understanding Low-Level Program Architecture.;58-59;2;Posters;
2010;Mario Marcelo Beron,Maria Joao Varanda Pereira,Nuno Oliveira,Daniela Carneiro da Cruz;SVS, BORS, SVSi: Three Strategies to Relate Problem and Program Domains.;60-61;2;Posters;
2010;Sergio Areias,Daniela Carneiro da Cruz,Jorge Sousa Pinto;Contract-Based Slicing Helps on Safety Reuse.;62-63;2;Posters;
2010;Mark Shtern,Vassilios Tzerpos;On the Comparability of Software Clustering Algorithms.;64-67;4;Supporting Program Comprehension;
2010;Rocco Oliveto,Malcom Gethers,Denys Poshyvanyk,Andrea De Lucia;On the Equivalence of Information Retrieval Methods for Automated Traceability Link Recovery.;68-71;4;Supporting Program Comprehension;
2010;Ahmad Taherkhani;Recognizing Sorting Algorithms with the C4.5 Decision Tree Classifier.;72-75;4;Supporting Program Comprehension;
2010;Liliane Barbour,Hao Yuan,Ying Zou;A Technique for Just-in-Time Clone Detection in Large Scale Systems.;76-79;4;Supporting Program Comprehension;
2010;Dirk Beyer,Ashgan Fararooy;A Simple and Effective Measure for Complex Low-Level Dependencies.;80-83;4;Supporting Program Comprehension;
2010;Daniel M. German,Massimiliano Di Penta,Julius Davies;Understanding and Auditing the Licensing of Open Source Software Distributions.;84-93;10;Program Analysis;
2010;Daniel Ratiu,Lars Heinemann;Utilizing Web Search Engines for Program Analysis.;94-103;10;Program Analysis;
2010;Ralf Lammel,Ekaterina Pek;Vivisection of a Non-Executable, Domain-Specific Language - Understanding (the Usage of) the P3P Language.;104-113;10;Program Analysis;
2010;Brian Chan,Ying Zou,Ahmed E. Hassan,Anand Sinha;Visualizing the Results of Field Testing.;114-123;10;Software Quality;
2010;Nicolas Bettenburg,Ahmed E. Hassan;Studying the Impact of Social Structures on Software Quality.;124-133;10;Software Quality;
2010;Gerardo Canfora,Luigi Cerulo,Massimiliano Di Penta,Francesco Pacilio;An Exploratory Study of Factors Influencing Change Entropy.;134-143;10;Software Quality;
2010;Mahmoud O. Elish;Exploring the Relationships between Design Metrics and Package Understandability: A Case Study.;144-147;4;People;
2010;Maen Hammad,Michael L. Collard,Jonathan I. Maletic;Measuring Class Importance in the Context of Design Evolution.;148-151;4;People;
2010;Eric Bouwers,Joost Visser,Carola Lilienthal,Arie van Deursen;A Cognitive Model for Software Architecture Complexity.;152-155;4;People;
2010;Surafel Lemma Abebe,Paolo Tonella;Natural Language Parsing of Program Element Names for Concept Extraction.;156-159;4;People;
2010;Andrew Sutton,Ryan Holeman,Jonathan I. Maletic;Identification of Idiom Usage in C++ Generic Libraries.;160-169;10;Software and System Structure;
2010;Patricia Jablonski,Daqing Hou;Aiding Software Maintenance with Copy-and-Paste Clone-Awareness.;170-179;10;Software and System Structure;
2010;Giuseppe Scanniello,Anna D'Amico,Carmela D'Amico,Teodora D'Amico;Using the Kleinberg Algorithm and Vector Space Model for Software System Clustering.;180-189;10;Software and System Structure;
2010;Andrew Begel;From Program Comprehension to People Comprehension.;190-191;2;Industrial Challenges;
2010;Nuno Oliveira,Maria Joao Varanda Pereira,Daniela Carneiro da Cruz,Mario Marcelo Beron;Influence of Synchronized Domain Visualizations on Program Comprehension.;192-195;4;Working Session;
2010;Bonita Sharif,Jonathan I. Maletic;An Eye Tracking Study on camelCase and under_score Identifier Styles.;196-205;10;Human Factors;
2010;Sukanya Ratanotayanon,Hye Jung Choi,Susan Elliott Sim;My Repository Runneth Over: An Empirical Study on Diversifying Data Sources to Improve Feature Search.;206-215;10;Human Factors;
2010;Nick Matthijssen,Andy Zaidman,Margaret-Anne D. Storey,R. Ian Bull,Arie van Deursen;Connecting Traces: Understanding Client-Server Interactions in Ajax Applications.;216-225;10;Human Factors;
2009;Vaclav Rajlich;Intensions are a key to program comprehension.;1-9;9;Keynote;
2009;Maksym Petrenko,Vaclav Rajlich;Variable granularity for improving precision of impact analysis.;10-19;10;Impact Analysis and Changes;
2009;Maen Hammad,Michael L. Collard,Jonathan I. Maletic;Automatically identifying changes that impact code-to-design traceability.;20-29;10;Impact Analysis and Changes;
2009;Abram Hindle,Daniel M. German,Michael W. Godfrey,Richard C. Holt;Automatic classication of large changes into maintenance categories.;30-39;10;Impact Analysis and Changes;
2009;Eric Larson;A plethora of paths.;40-49;10;Static Analysis;
2009;Yin Liu,Ana Milanova;Practical static analysis for inference of security-related program properties.;50-59;10;Static Analysis;
2009;Dehua Zhang,Ekwa Duala-Ekoko,Laurie J. Hendren;Impact analysis and visualization toolkit for static crosscutting in AspectJ.;60-69;10;Static Analysis;
2009;Dennis Jeffrey,Min Feng,Neelam Gupta,Rajiv Gupta;BugFix: A learning-based tool to assist developers in fixing bugs.;70-79;10;Cognitive and Other Issues;
2009;Chris Parnin,Spencer Rugaber;Resumption strategies for interrupted programming tasks.;80-89;10;Cognitive and Other Issues;
2009;Gail C. Murphy,Petcharat Viriyakattiyaporn,David Shepherd;Using activity traces to characterize programming behaviour beyond the lab.;90-94;5;Cognitive and Other Issues;
2009;Tara Kelly,Jim Buckley;An in-vivo study of the cognitive levels employed by programmers during software maintenance.;95-99;5;Cognitive and Other Issues;
2009;Bas Cornelissen,Andy Zaidman,Arie van Deursen,Bart Van Rompaey;Trace visualization for program comprehension: A controlled experiment.;100-109;10;Visualization and Sonification;
2009;Andreas Stefik,Ed Gellenbeck;Using spoken text to aid debugging: An empirical study.;110-119;10;Visualization and Sonification;
2009;Khaled Hussein,Eli Tilevich,Ivica Ico Bukvic,SooBeen Kim;Sonification design guidelines to enhance program comprehension.;120-129;10;Visualization and Sonification;
2009;Dennis Edwards,Norman Wilde,Sharon Simmons,Eric Golden;Instrumenting time-sensitive software for feature location.;130-137;8;Features and Concerns;
2009;Eduardo Magno Lages Figueiredo,Bruno Carreiro da Silva,Claudio Sant'Anna,Alessandro Garcia,Jonathan Whittle,Daltro Jose Nunes;Crosscutting patterns and design stability: An exploratory analysis.;138-147;10;Features and Concerns;
2009;Giovanni Capobianco,Andrea De Lucia,Rocco Oliveto,Annibale Panichella,Sebastiano Panichella;On the role of the nouns in IR-based traceability recovery.;148-157;10;Features and Concerns;
2009;David Binkley,Marcia Davis,Dawn Lawrie,Christopher Morrell;To camelcase or under_score.;158-167;10;Source Code Reading;
2009;Uri Dekel,James D. Herbsleb;Reading the documentation of invoked API functions in program comprehension.;168-177;10;Source Code Reading;
2009;Mariano Ceccato,Massimiliano Di Penta,Jasvir Nagra,Paolo Falcarin,Filippo Ricca,Marco Torchiano,Paolo Tonella;The effectiveness of source code obfuscation: An experimental assessment.;178-187;10;Source Code Reading;
2009;Martin Feilkas,Daniel Ratiu,Elmar Jurgens;The loss of architectural knowledge during system evolution: An industrial case study.;188-197;10;Architecture and Design;
2009;Alexander Serebrenik,Serguei A. Roubtsov,Mark van den Brand;Dn-based architecture assessment of Java Open Source software systems.;198-207;10;Architecture and Design;
2009;Gunter Kniesel,Alexander Binun;Standing on the shoulders of giants - A data fusion approach to design pattern detection.;208-217;10;Architecture and Design;
2009;Meghan Revelle,Denys Poshyvanyk;An exploratory study on assessing feature location techniques.;218-222;5;Short Papers I;
2009;Jens Nilsson,Welf Lowe,Johan Hall,Joakim Nivre;Natural language parsing for fact extraction from source code.;223-227;5;Short Papers I;
2009;Derrin Pierret,Denys Poshyvanyk;An empirical exploration of regularities in open-source software lexicons.;228-232;5;Short Papers I;
2009;Scott Grant,James R. Cordy;Vector space analysis of software clones.;233-237;5;Short Papers I;
2009;Daqing Hou,Patricia Jablonski,Ferosh Jacob;CnP: Towards an environment for the proactive management of copy-and-paste programming.;238-242;5;Short Papers I;
2009;Michel Chilowicz,Etienne Duris,Gilles Roussel;Syntax tree fingerprinting for source code similarity detection.;243-247;5;Short Papers I;
2009;Mark Shtern,Vassilios Tzerpos;Methods for selecting and improving software clustering algorithms.;248-252;5;Short Papers II;
2009;David Rothlisberger,Oscar Nierstrasz,Stephane Ducasse,Damien Pollet,Romain Robbes;Supporting task-oriented navigation in IDEs with configurable HeatMaps.;253-257;5;Short Papers II;
2009;Reinhard Schauer,Rudolf K. Keller;A case for concept programs.;258-262;5;Short Papers II;
2009;Katerina Troshina,Alexander Chernov,Alexander Fokin;Profile-based type reconstruction for decompilation.;263-267;5;Short Papers II;
2009;Bonita Sharif,Jonathan I. Maletic;An empirical study on the comprehension of stereotyped UML class diagram layouts.;268-272;5;Short Papers II;
2009;Huzefa H. Kagdi,Denys Poshyvanyk;Who can help me with this change request?;273-277;5;Short Papers II;
2009;Yann-Gael Gueheneuc,Huzefa H. Kagdi,Jonathan I. Maletic;Working session: Using eye-tracking to understand program comprehension.;278-279;2;Working Sessions;
2009;Marco Torchiano,Alberto Sillitti;TDD = too dumb developers? Implications of Test-Driven Development on maintainability and comprehension of software.;280-282;3;Working Sessions;
2009;Munakata Satoshi,Takashi Ishio,Katsuro Inoue;OGAN: Visualizing object interaction scenarios based on dynamic interaction context.;283-284;2;Tool Demonstrations;
2009;Daniel Porto,Manoel Gomes de Mendonca Neto,Sandra Camargo Pinto Ferraz Fabbri;CRISTA: A tool to support code comprehension based on visualization and reading technique.;285-286;2;Tool Demonstrations;
2009;Sunghun Kim,Shivkumar Shivaji,Jim Whitehead;Kenyon-web: Reconfigurable web-based feature extractor.;287-288;2;Tool Demonstrations;
2009;Yi Huang,Laura K. Dillon,R. E. Kurt Stirewalt;Prototyping synchronization policies for existing programs.;289-290;2;Tool Demonstrations;
2009;Glauco de Figueiredo Carneiro,Manoel Gomes de Mendonca Neto,Rodrigo Chaves Magnavita;Proposing a visual approach to support the characterization of software comprehension activities.;291-292;2;Tool Demonstrations;
2009;Andreas Stefik,Andrew Haywood,Shahzada Mansoor,Brock Dunda,Daniel Garcia;SODBeans.;293-294;2;Tool Demonstrations;
2009;Zhixiong Han,Linzhang Wang,Liqian Yu,Xin Chen,Jianhua Zhao,Xuandong Li;Design pattern directed clustering for understanding open source code.;295-296;2;Posters;
2009;Olga Baysal,Michael W. Godfrey,Robin Cohen;A bug you like: A framework for automated assignment of bugs.;297-298;2;Posters;
2009;Sukanya Ratanotayanon,Susan Elliott Sim;Creating task-based concern maps by merging concern fragments.;299-300;2;Posters;
2009;Mireille Samia,Michael Leuschel;Towards pie tree visualization of graphs and large software architectures.;301-302;2;Posters;
2009;Susan Elliott Sim,Sukanya Ratanotayanon,Leyna Cotran;Structure transition graphs: An ECG for program comprehension?;303-304;2;Posters;
2009;Daniel Popescu,Joshua Garcia,Nenad Medvidovic;Enabling more precise dependency analysis in event-based systems.;305-306;2;Posters;
2009;Khaironi Yatim Sharif,Jim Buckley;Observation of Open Source programmers' information seeking.;307-308;2;Posters;
2009;Andreas Bartho;Creating and maintaining tutorials with DEFT.;309-310;2;Posters;
2009;Andrew Forward,Timothy Lethbridge,Dusan Brestovansky;Improving program comprehension by enhancing program constructs: An analysis of the Umple language.;311-312;2;Posters;
2009;Erik Linstead,Lindsey Hughes,Cristina Videira Lopes,Pierre Baldi;Capturing Java naming conventions with first-order Markov models.;313-314;2;Posters;
2009;Suman Karumuri,Steven P. Reiss;Automatic detection of internal queues and stages in message processing systems.;315-316;2;Posters;
2009;Chris Parnin,Carsten Gorg,Spencer Rugaber;TaskBoard: Tracking pertinent task artifacts and plans.;317-318;2;Posters;
2009;Benjapol Auprasert,Yachai Limpiyakorn;Representing source code with Granular hierarchical structures.;319-320;2;Posters;
2008;Suraj C. Kothari;Scalable Program Comprehension for Analyzing Complex Defects.;3-4;2;Keynotes;
2008;Terence Parr;The Reuse of Grammars with Embedded Semantic Actions.;5-10;6;Keynotes;
2008;Maksym Petrenko,Vaclav Rajlich,Radu Vanciu;Partial Domain Comprehension in Software Evolution and Maintenance.;13-22;10;Software Evolution;
2008;Scott D. Fleming,Eileen Kraemer,R. E. Kurt Stirewalt,Laura K. Dillon,Shaohua Xie;Refining Existing Theories of Program Comprehension During Maintenance for Concurrent Software.;23-32;10;Software Evolution;
2008;Xinyi Dong,Michael W. Godfrey;Identifying Architectural Change Patterns in Object-Oriented Systems.;33-42;10;Software Evolution;
2008;Andrew R. Dalton,Jason O. Hallstrom;A Toolkit for Visualizing the Runtime Behavior of TinyOS Applications.;43-52;10;Dynamic Analysis;
2008;Marc Eaddy,Alfred V. Aho,Giuliano Antoniol,Yann-Gael Gueheneuc;CERBERUS: Tracing Requirements to Source Code Using Information Retrieval, Dynamic Analysis, and Program Analysis.;53-62;10;Dynamic Analysis;
2008;David Rothlisberger,Orla Greevy,Oscar Nierstrasz;Exploiting Runtime Information in the IDE.;63-72;10;Dynamic Analysis;
2008;Jochen Quante;Do Dynamic Object Process Graphs Support Program Understanding? - A Controlled Experiment.;73-82;10;Program Comprehension Studies;
2008;David Binkley,Dawn Lawrie,Steve Maex,Christopher Morrell;Impact of Limited Memory Resources.;83-92;10;Program Comprehension Studies;
2008;Andrea De Lucia,Carmine Gravino,Rocco Oliveto,Genoveffa Tortora;Data Model Comprehension: An Empirical Comparison of ER and UML Class Diagrams.;93-102;10;Program Comprehension Studies;
2008;Ahron Abadi,Mordechai Nisenson,Yahalomit Simionovici;A Traceability Technique for Specifications.;103-112;10;Domain Terms;
2008;Sonia Haiduc,Andrian Marcus;On the Use of Domain Terms in Source Code.;113-122;10;Domain Terms;
2008;Giriprasad Sridhara,Emily Hill,Lori L. Pollock,K. Vijay-Shanker;Identifying Word Relations in Software: A Comparative Study of Semantic Similarity Tools.;123-132;10;Domain Terms;
2008;Abram Hindle,Michael W. Godfrey,Richard C. Holt;Reading Beside the Lines: Indentation as a Proxy for Complexity Metric.;133-142;10;Metrics;
2008;Simon Denier,Yann-Gael Gueheneuc;Mendel: A Model, Metrics, and Rules to Understand Class Hierarchies.;143-152;10;Metrics;
2008;Chanchal Kumar Roy,James R. Cordy;Scenario-Based Comparison of Clone Detection Techniques.;153-162;10;Cloning, Slicing, and Parsing;
2008;Laszlo Vidacs,Judit Jasz,Arpad Beszedes,Tibor Gyimothy;Combining Preprocessor Slicing with C/C++ Language Slicing.;163-171;9;Cloning, Slicing, and Parsing;
2008;Chanchal Kumar Roy,James R. Cordy;NICAD: Accurate Detection of Near-Miss Intentional Clones Using Flexible Pretty-Printing and Code Normalization.;172-181;10;Cloning, Slicing, and Parsing;
2008;Abdulkareem Alali,Huzefa H. Kagdi,Jonathan I. Maletic;What's a Typical Commit? A Characterization of Open Source Software Repositories.;182-191;10;Analysis of Revision History;
2008;Adam Vanya,Lennart Holland,Steven Klusener,Pierre van de Laar,Johannes C. van Vliet;Assessing Software Archives with Evolutionary Clusters.;192-201;10;Analysis of Revision History;
2008;Martin P. Robillard,Putra Manggala;Reusing Program Investigation Knowledge for Code Understanding.;202-211;10;Analysis of Revision History;
2008;Irina Diana Coman,Alberto Sillitti;Automated Identification of Tasks in Development Sessions.;212-217;6;Short Paper Session 1;
2008;William M. Mongan,Maxim Shevertalov,Spiros Mancoridis;Re-Engineering a Reverse Engineering Portal to a Distributed SOA.;218-223;6;Short Paper Session 1;
2008;David A. McMeekin,Brian R. von Konsky,Elizabeth Chang,David J. A. Cooper;Checklist Inspections and Modifications: Applying Bloom's Taxonomy to Categorise Developer Comprehension.;224-229;6;Short Paper Session 1;
2008;Muhammad Usman Bhatti,Stephane Ducasse,Awais Rashid;Aspect Mining in Procedural Object Oriented Code.;230-235;6;Short Paper Session 1;
2008;Abhishek Rohatgi,Abdelwahab Hamou-Lhadj,Juergen Rilling;An Approach for Mapping Features to Code Based on Static and Dynamic Analysis.;236-241;6;Short Paper Session 2;
2008;Daniel Ratiu,Jan Jurjens;Evaluating the Reference and Representation of Domain Concepts in APIs.;242-247;6;Short Paper Session 2;
2008;Martin Feilkas,Daniel Ratiu;Ensuring Well-Behaved Usage of APIs through Syntactic Constraints.;248-253;6;Short Paper Session 2;
2008;Martin Pinzger,Katja Grafenhain,Patrick Knab,Harald Gall;A Tool for Visual Understanding of Source Code Dependencies.;254-259;6;Short Paper Session 2;
2008;Ruben Filipe Cardoso da Fonseca,Daniela Carneiro da Cruz,Pedro Rangel Henriques,Maria Joao Varanda Pereira;How to Interconnect Operational and Behavioral Views of Web Applications.;263-267;5;Tool Demonstrations;
2008;Johannes Bohnet,Stefan Voigt,Jurgen Dollner;Locating and Understanding Features of Complex Software Systems by Synchronizing Time-, Collaboration- and Code-Focused Views on Execution Traces.;268-271;4;Tool Demonstrations;
2008;Tatsuya Sato,Buntarou Shizuki,Jiro Tanaka;Support for Understanding GUI Programs by Visualizing Execution Traces Synchronized with Screen Transitions.;272-275;4;Tool Demonstrations;
2008;Juergen Rilling,Rene Witte,Dragan Gasevic,Jeff Z. Pan;Semantic Technologies in System Maintenance (STSM 2008).;279-282;4;Workshops;
2008;Thomas Roy Dean,Joost Visser;Industrial Realities of Program Comprehension (IRPC 2008).;283-284;2;Workshops;
2008;Mathieu Verbaere,Michael W. Godfrey,Tudor Girba;Query Technologies and Applications for Program Comprehension (QTAPC 2008).;285-288;4;Workshops;
2007;Mark Harman;Search Based Software Engineering for Program Comprehension.;3-13;11;Keynotes;
2007;Gregor Kiczales;Making the Code Look Like the Design - Aspects and Other Recent Work.;14;1;Keynotes;
2007;Jay Kothari,Trip Denton,Ali Shokoufandeh,Spiros Mancoridis;Reducing Program Comprehension Effort in Evolving Software by Recognizing Feature Implementation Convergence.;17-26;10;Technical Session 1: Feature and Concept Analysis;
2007;Maurice M. Carey,Gerald C. Gannod;Recovering Concepts from Source Code with Automated Concept Identification.;27-36;10;Technical Session 1: Feature and Concept Analysis;
2007;Denys Poshyvanyk,Andrian Marcus;Combining Formal Concept Analysis with Information Retrieval for Concept Location in Source Code.;37-48;12;Technical Session 1: Feature and Concept Analysis;
2007;Bas Cornelissen,Danny Holten,Andy Zaidman,Leon Moonen,Jarke J. van Wijk,Arie van Deursen;Understanding Execution Traces Using Massive Sequence and Circular Bundle Views.;49-58;10;Technical Session 2: Dynamic Analysis;
2007;Adrian Lienhard,Orla Greevy,Oscar Nierstrasz;Tracking Objects to Detect Feature Dependencies.;59-68;10;Technical Session 2: Dynamic Analysis;
2007;Andreas Stefik,Roger T. Alexander,Robert Patterson,Jonathan Brown;WAD: A Feasibility study using the Wicked Audio Debugger.;69-80;12;Technical Session 2: Dynamic Analysis;
2007;Michael W. Godfrey;A Hybrid Program Model for Object-Oriented Reverse Engineering.;81-90;10;Technical Session 3: Conceptual Models;
2007;Daniel Ratiu,Florian Deissenboeck;From Reality to Programs and (Not Quite) Back Again.;91-102;12;Technical Session 3: Conceptual Models;
2007;Brian de Alwis,Gail C. Murphy,Martin P. Robillard;A Comparative Study of Three Program Exploration Tools.;103-112;10;Technical Session 4: Empirical Studies;
2007;Shehnaaz Yusuf,Huzefa H. Kagdi,Jonathan I. Maletic;Assessing the Comprehension of UML Class Diagrams via Eye Tracking.;113-122;10;Technical Session 4: Empirical Studies;
2007;Shaohua Xie,Eileen Kraemer,R. E. Kurt Stirewalt;Empirical Evaluation of a UML Sequence Diagram with Adornments to Support Understanding of Thread Interactions.;123-134;12;Technical Session 4: Empirical Studies;
2007;Lijie Zou,Michael W. Godfrey,Ahmed E. Hassan;Detecting Interaction Coupling from Task Interaction Histories.;135-144;10;Technical Session 5: Mining Software Repositories;
2007;Huzefa H. Kagdi,Jonathan I. Maletic,Bonita Sharif;Mining Software Repositories for Traceability Links.;145-154;10;Technical Session 5: Mining Software Repositories;
2007;Romain Robbes,Michele Lanza;Characterizing and Understanding Development Sessions.;155-166;12;Technical Session 5: Mining Software Repositories;
2007;Chanchal Kumar Roy,Mohammad Gias Uddin,Banani Roy,Thomas Roy Dean;Evaluating Aspect Mining Techniques: A Case Study.;167-176;10;Technical Session 6: Aspects and Change;
2007;Siavash Mirarab,Alaa Hassouna,Ladan Tahvildari;Using Bayesian Belief Networks to Predict Change Propagation in Software Systems.;177-188;12;Technical Session 6: Aspects and Change;
2007;Niklas Pettersson,Welf Lowe;A Non-conservative Approach to Software Pattern Detection.;189-198;10;Technical Session 7: Static Analysis;
2007;Maokeng Hung,Ying Zou;Recovering Workflows from Multi Tiered E-commerce Systems.;198-207;10;Technical Session 7: Static Analysis;
2007;Yi Zhang,S. Purushothaman Iyer;Error Report Driven Post-Mortem Analysis.;208-220;13;Technical Session 7: Static Analysis;
2007;Christian Lange,Michel R. V. Chaudron;Interactive Views to Improve the Comprehension of UML Models - An Experimental Validation.;221-230;10;Technical Session 8: Visualization;
2007;Richard Wettel,Michele Lanza;Program Comprehension through Software Habitability.;231-240;10;Technical Session 8: Visualization;
2007;Rogardt Heldal,Jenny Samuelsson,Ola Sundin;Scenario Explorer: Interactive Visualization of Use Cases.;241-252;12;Technical Session 8: Visualization;
2007;Nomair A. Naeem,Michael Batchelder,Laurie J. Hendren;Metrics for Measuring the Effectiveness of Decompilers and Obfuscators.;253-258;6;Short Papers Session;
2007;Juanjuan Jiang,Johannes Koskinen,Anna Ruokonen,Tarja Systa;Constructing Usage Scenarios for API Redocumentation.;259-264;6;Short Papers Session;
2007;Tommi Reinikainen,Imed Hammouda,Juha Laiho,Kai Koskimies,Tarja Systa;Software Comprehension through Concern-based Queries.;265-270;6;Short Papers Session;
2007;C. Dylan Shearer,Michael L. Collard;Enforcing Constraints Between Documentary Comments and Source Code.;271-280;10;Short Papers Session;
2007;Scott R. Tilley;15 Years of Program Comprehension.;279-280;2;Working Sessions;
2007;Massimiliano Di Penta,R. E. Kurt Stirewalt,Eileen Kraemer;Designing your Next Empirical Study on Program Comprehension.;281-285;5;Working Sessions;
2007;Giuseppe A. Di Lucca,Michael Smit,Bruce Fraser,Eleni Stroulia,H. James Hoover;Comprehending Aspect-Oriented Programs: Challenges and Open Issues.;286-292;7;Working Sessions;
2007;Andrejs Jermakovics,Marco Scotto,Alberto Sillitti,Giancarlo Succi;Lagrein: Visualizing User Requirements and Development Effort.;293-296;4;Tool Demonstrations;
2007;Rodrigo A. Vivanco;Use of a Genetic Algorithm to Identify Source Code Metrics Which Improves Cognitive Complexity Predictive Models.;297-300;4;Tool Demonstrations;
2006;Robert S. Autor;Evolving a Legacy Application Portfolio at Sallie Mae: Program Comprehension and Beyond.;;0;Keynote Address;
2006;Scott R. Tilley;Program Redocumentation: Lessons Learned & Future Challenges.;;0;Keynote Address;
2006;Dawn Lawrie,Christopher Morrell,Henry Feild,David Binkley;What's in a Name? A Study of Identifiers.;3-12;10;Experimental Studies;
2006;Chris Parnin,Carsten Gorg;Building Usage Contexts During Program Comprehension.;13-22;10;Experimental Studies;
2006;Curtis Schofield,Brendan Tansey,Zhenchang Xing,Eleni Stroulia;Digging the Development Dust for Refactorings.;23-34;12;Experimental Studies;
2006;Beat Fluri,Harald Gall;Classifying Change Types for Qualifying Change Couplings.;35-45;11;Evolution;
2006;Jay Kothari,Ali Shokoufandeh,Spiros Mancoridis,Ahmed E. Hassan;Studying the Evolution of Software Systems Using Change Clusters.;46-55;10;Evolution;
2006;Mihai Balint,Radu Marinescu,Tudor Girba;How Developers Copy.;56-68;13;Evolution;
2006;Bradley L. Vinz,Letha H. Etzkorn;A Synergistic Approach to Program Comprehension.;69-73;5;Short Papers;
2006;Andy Zaidman,Bart Du Bois,Serge Demeyer;How Webmining and Coupling Metrics Improve Early Program Comprehension.;74-78;5;Short Papers;
2006;Daniel Ratiu,Florian Deissenboeck;Programs are Knowledge Bases.;79-83;5;Short Papers;
2006;Hossein Safyallah,Kamran Sartipi;Dynamic Analysis of Software Systems using Execution Pattern Mining.;84-88;5;Short Papers;
2006;Andreas Stefik,Kelly Fitz,Roger T. Alexander;Layered Program Auralization: Using Music to Increase Runtime Program Comprehension and Debugging Effectiveness.;89-93;5;Short Papers;
2006;Dean Jin,James R. Cordy;Integrating Reverse Engineering Tools Using a Service-Sharing Methodology.;94-99;6;Short Papers;
2006;R. Ian Bull,Margaret-Anne D. Storey,Jean-Marie Favre,Marin Litoiu;An Architecture to Support Model Driven Software Visualization.;100-106;7;Short Papers;
2006;Raoul Praful Jetley,Yi Zhang,S. Purushothaman Iyer;Using Abstraction-driven Slicing for Postmortem Analysis of Software.;107-116;10;Static Analysis;
2006;Minh Ngoc Ngo,Hee Beng Kuan Tan,Doanh Trinh;Automated Extraction of Database Interactions in Web Applications.;117-126;10;Static Analysis;
2006;Ying Zou,Maokeng Hung;An Approach for Extracting Workflows from E-Commerce Applications.;127-136;10;Static Analysis;
2006;Denys Poshyvanyk,Andrian Marcus,Vaclav Rajlich,Yann-Gael Gueheneuc,Giuliano Antoniol;Combining Probabilistic Ranking and Latent Semantic Indexing for Feature Identification.;137-148;12;Static Analysis;
2006;Dawn Lawrie,Henry Feild,David Binkley;Leveraged Quality Assessment using Information Retrieval Techniques.;149-158;10;Quality Assessment;
2006;Mazeiar Salehie,Shimin Li,Ladan Tahvildari;A Metric-Based Heuristic Framework to Detect Object-Oriented Design Flaws.;159-168;10;Quality Assessment;
2006;Cristina Marinescu;Identification of Design Roles for the Assessment of Design Quality in Enterprise Applications.;169-180;12;Quality Assessment;
2006;Abdelwahab Hamou-Lhadj,Timothy Lethbridge;Summarizing the Content of Large Traces to Facilitate the Understanding of the Behaviour of a Software System.;181-190;10;Dynamic Analysis;
2006;Sokhom Pheng,Clark Verbrugge;Dynamic Data Structure Analysis for Java Programs.;191-201;11;Dynamic Analysis;
2006;Coen De Roover,Isabel Michiels,Kim Gybels,Kris Gybels,Theo D'Hondt;An Approach to High-Level Behavioral Program Documentation Allowing Lightweight Verification.;202-211;10;Dynamic Analysis;
2006;Johannes Koskinen,Markus Kettunen,Tarja Systa;Profile-Based Approach to Support Comprehension of Software Behavior.;212-224;13;Dynamic Analysis;
2006;Lewis I. Berman,Sebastian Danicic,Keith Gallagher,Nicolas Gold;The Sound of Software: Using Sonification to Aid Comprehension.;225-229;5;Working Sessions;
2006;Giuseppe A. Di Lucca,Massimiliano Di Penta;Experimental Settings in Program Comprehension: Challenges and Open Issues.;229-234;6;Working Sessions;
2006;Dennis B. Smith,Liam O'Brien,Kostas Kontogiannis;Working Session: Program Comprehension and Migration Strategies for Web Service and Service-Oriented Architectures.;235-240;6;Working Sessions;
2006;Brendan Cleary,Christopher Exton;The Cognitive Assignment Eclipse Plug-in.;241-244;4;Tool Demonstrations;
2006;Aiden Grandfield,Christopher Exton;INFORM: A Framework for Performance Informed Software Development.;245-247;3;Tool Demonstrations;
2006;Dirk Beyer,Ahmed E. Hassan;Evolution Storyboards: Visualization of Software Structure Dynamics.;248-251;4;Tool Demonstrations;
2006;Denys Poshyvanyk,Andrian Marcus,Yubo Dong;JIRiSS - an Eclipse plug-in for Source Code Exploration.;252-255;4;Tool Demonstrations;
2006;Kamran Sartipi,Lingdong Ye,Hossein Safyallah;Alborz: An Interactive Toolkit to Extract Static and Dynamic Views of a Software System.;256-259;4;Tool Demonstrations;
2006;Michael Desmond,Margaret-Anne D. Storey,Christopher Exton;Fluid Source Code Views.;260-263;4;Tool Demonstrations;
2006;Shimin Li,Ladan Tahvildari;JComp: A Reuse-Driven Componentization Framework for Java Applications.;264-267;4;Tool Demonstrations;
2006;Matias Madou,Ludo Van Put,Koenraad De Bosschere;Understanding Obfuscated Code.;268-274;7;Tool Demonstrations;
2006;Tara Kelly,Jim Buckley;A Context-Aware Analysis Scheme for Bloom's Taxonomy.;275-284;10;Cognitive Approaches;
2006;Petru Florin Mihancea;Towards a Client Driven Characterization of Class Hierarchies.;285-294;10;Cognitive Approaches;
2006;Daniel L. Moise,Kenny Wong,H. James Hoover,Daqing Hou;Reverse Engineering Scripting Language Extensions.;295-306;12;Cognitive Approaches;
2006;Andrea De Lucia,Fausto Fasano,Rocco Oliveto,Genoveffa Tortora;Can Information Retrieval Techniques Effectively Support Traceability Link Recovery?;307-316;10;Traceability and Languages;
2006;Andrea De Lucia,Rocco Oliveto,Francesco Zurolo,Massimiliano Di Penta;Improving Comprehensibility of Source Code via Traceability Information: a Controlled Experiment.;317-326;10;Traceability and Languages;
2006;Nomair A. Naeem,Laurie J. Hendren;Programmer-friendly Decompiled Java.;327-336;10;Traceability and Languages;
2005;;Message from the Chairs.;;0;;
2005;;Conference Committees.;;0;;
2005;;Sponsoring Organizations.;;0;;
2005;Douglas R. Smith;Comprehension by Derivation.;3-9;7;Keynote;
2005;Mariano Ceccato,Marius Marin,Kim Mens,Leon Moonen,Paolo Tonella,Tom Tourwe;A Qualitative Comparison of Three Aspect Mining Techniques.;13-22;10;Concerns and Concepts;
2005;Meghan Revelle,Tiffany Broadbent,David Coppit;Understanding Concerns in Software: Insights Gained from Two Case Studies.;23-32;10;Concerns and Concepts;
2005;Andrian Marcus,Vaclav Rajlich,Joseph Buchta,Maksym Petrenko,Andrey Sergeyev;Static Techniques for Concept Location in Object-Oriented Code.;33-42;10;Concerns and Concepts;
2005;Adam Murray,Timothy Lethbridge;Presenting Micro-Theories of Program Comprehension in Pattern Form.;45-54;10;Theories of Program Comprehension;
2005;Jorma Sajaniemi,Raquel Navarro-Prieto;An Investigation into Professional Programmers' Mental Representations of Variables.;55-64;10;Theories of Program Comprehension;
2005;Pamela O'Shea,Christopher Exton;An Investigation of Java Abstraction Usage for Program Modifications.;65-74;10;Theories of Program Comprehension;
2005;Douglas Kirk,Marc Roper,Murray Wood;Identifying and Addressing Problems in Framework Reuse.;77-86;10;Framework Understanding;
2005;Daqing Hou,Kenny Wong,H. James Hoover;What Can Programmer Questions Tell Us About Frameworks?;87-96;10;Framework Understanding;
2005;Florian Deissenboeck,Markus Pizka;Concise and Consistent Naming.;97-106;10;Framework Understanding;
2005;Anthony Cox,Michael L. Collard;Working Session: Textual Views of Source Code to Support Comprehension.;109-112;4;Working Session;
2005;Ida Hogganvik,Ketil Stolen;On the Comprehension of Security Risk Scenarios.;115-124;10;Empirical Studies;
2005;Michael P. O'Brien,Jim Buckley;Modelling the Information-Seeking Behaviour of Programmers - An Empirical Approach.;125-134;10;Empirical Studies;
2005;Anneliese von Mayrhauser,Andreas Stefik,Nina Picone,Sudipto Ghosh;A COTS Component Comprehension Process.;135-144;10;Empirical Studies;
2005;Paul Anderson,Mark Zarins;The CodeSurfer Software Understanding Platform.;147-148;2;Tool Demonstrations;
2005;Jonathan Buckner,Joseph Buchta,Maksym Petrenko,Vaclav Rajlich;JRipples: A Tool for Program Comprehension during Incremental Change.;149-152;4;Tool Demonstrations;
2005;Jussi Koskinen;HyperSoft System: Tool Demonstration and Use Example.;153-156;4;Tool Demonstrations;
2005;Abdelwahab Hamou-Lhadj,Timothy Lethbridge,Lianjiang Fu;SEAT: A Usable Trace Analysis Tool.;157-160;4;Tool Demonstrations;
2005;Grace Gui,Holger M. Kienle,Hausi A. Muller;REGoLive: Web Site Comprehension with Viewpoints.;161-164;4;Tool Demonstrations;
2005;Steven P. Reiss;Tool Demonstration: CHET: Checking Specifications in Java Systems.;165-168;4;Tool Demonstrations;
2005;Steven P. Reiss,Manos Renieris;Tool Demonstration: JIVE and JOVE: Java as it Happens.;169-172;4;Tool Demonstrations;
2005;Janice Singer,Robert Elves,Margaret-Anne D. Storey;NavTracks: Supporting Navigation in Software.;173-175;3;Tool Demonstrations;
2005;Nikita Synytskyy,Richard C. Holt,Ian J. Davis;Browsing Software Architectures With LSEdit.;176-178;3;Tool Demonstrations;
2005;Margaret-Anne D. Storey;Theories, Methods and Tools in Program Comprehension: Past, Present and Future.;181-191;11;Keynote;
2005;Katsuhisa Maruyama,Shinichirou Yamamoto;Design and Implementation of an Extensible and Modifiable Refactoring Tool.;195-204;10;Code Understanding and Refactoring;
2005;Carsten Gorg,Peter Weissgerber;Detecting and Visualizing Refactorings from Software Archives.;205-214;10;Code Understanding and Refactoring;
2005;Neil Walkinshaw,Marc Roper,Murray Wood;Understanding Object-Oriented Source Code from the Behavioural Perspective.;215-224;10;Code Understanding and Refactoring;
2005;Scott A. Hendrickson,Eric M. Dashofy,Richard N. Taylor;An (Architecture-Centric) Approach for Tracing, Organizing, and Understanding Events in Event-Based Software Architectures.;227-236;10;Dynamic Analysis;
2005;Michael Fischer,Johann Oberleitner,Harald Gall,Thomas Gschwind;System Evolution Tracking through Execution Trace Analysis.;237-246;10;Dynamic Analysis;
2005;Steven P. Reiss;Efficient Monitoring and Display of Thread State in Java.;247-256;10;Dynamic Analysis;
2005;Dirk Beyer,Andreas Noack;Clustering Software Artifacts Based on Frequent Common Changes.;259-268;10;Clustering and Components;
2005;Zhihua Wen,Vassilios Tzerpos;Software Clustering based on Omnipresent Object Detection.;269-278;10;Clustering and Components;
2005;Andrew Le Gear,Jim Buckley,Brendan Cleary,J. J. Collins,Kieran O'Dea;Achieving a Reuse Perspective within a Component Recovery Process: An Industrial Scale Case Study.;279-288;10;Clustering and Components;
2005;Dean Jin,Andreas Winter;Working Session on Interoperable Reengineering Services.;291-293;3;Working Session;
2005;David Dearman,Anthony Cox,Maryanne Fisher;Adding Control-Flow to a Visual Data-Flow Representation.;297-306;10;Software Visualization;
2005;Andrian Marcus,Denise Comorski,Andrey Sergeyev;Supporting the Evolution of a Software Visualization Tool Through Usability Studies.;307-316;10;Software Visualization;
2005;Dabo Sun,Kenny Wong;On Evaluating the Layout of UML Class Diagrams for Program Comprehension.;317-326;10;Software Visualization;
2005;Michael English,Jim Buckley,Tony Cahill,Kristian Lynch;An Empirical Study of the Use of Friends in C++ Software.;329-332;4;Short Papers;
2005;Andrea De Lucia,Rita Francese,Giuseppe Scanniello,Genoveffa Tortora;Understanding Cloned Patterns in Web Applications.;333-336;4;Short Papers;
2005;Bradley Dux,Anand Iyer,Saumya K. Debray,David Forrester,Stephen G. Kobourov;Visualizing the Behavior of Dynamically Modifiable Code.;337-340;4;Short Papers;
2005;Susan Elliott Sim;A Small Social History of Software Architecture.;341-344;4;Short Papers;
2004;Don S. Batory;Program Comprehension in Generative Programming: A History of Grand Challenges.;2-13;12;Keynote;
2004;Ludwik Kuzniarz,Miroslaw Staron,Claes Wohlin;An Empirical Study on Using Stereotypes to Improve Understanding of UML Models.;14-23;10;Understanding of UML Models;
2004;Imed Hammouda,Olcay Guldogan,Kai Koskimies,Tarja Systa;Tool-Supported Customization of UML Class Diagrams for Learning Complex System Models.;24-33;10;Understanding of UML Models;
2004;Zhenchang Xing,Eleni Stroulia;Understanding Class Evolution in Object-Oriented Software.;34-45;12;Understanding of UML Models;
2004;Pierre Kelsen;A Simple Static Model for Understanding the Dynamic Behavior of Programs.;46-51;6;Theories and Models for Software Comprehension;
2004;Thomas Panas,Jonas Lundberg,Welf Lowe;Reuse in Reverse Engineering.;52-61;10;Theories and Models for Software Comprehension;
2004;Gerardo Canfora,Aniello Cimitile,Corrado Aaron Visaggio;Working in Pairs as a Means for Design Knowledge Building: An Empirical Study.;62-69;8;Theories and Models for Software Comprehension;
2004;Abdelwahab Hamou-Lhadj,Timothy Lethbridge,Lianjiang Fu;Challenges and Requirements for an Effective Trace Exploration Tool.;70-78;9;Analysis Techniques;
2004;Christopher A. Mennie,Charles L. A. Clarke;Giving Meaning to Macros.;79-88;10;Analysis Techniques;
2004;Sebastian Danicic,Andrea De Lucia,Mark Harman;Building Executable Union Slices using Conditioned Slicing.;89-99;11;Analysis Techniques;
2004;Christoph Stoermer,Liam O'Brien,Chris Verhoef;Architectural Views through Collapsing Strategies.;100-110;11;Reverse Engineering and Visualization of Software Artifacts;
2004;Camilo Sarmiento,Silvia Takahashi;Understanding CASE Generated Legacy Applications: A Case Study.;111-119;9;Reverse Engineering and Visualization of Software Artifacts;
2004;Giuliano Antoniol,Massimiliano Di Penta,Michele Zazzara;Understanding Web Applications through Dynamic Analysis.;120-131;12;Reverse Engineering and Visualization of Software Artifacts;
2004;Andrea De Lucia,Rita Francese,Giuseppe Scanniello,Genoveffa Tortora;Reengineering Web Applications Based on Cloned Pattern Analysis.;132-141;10;Understanding Web-Based Systems;
2004;Damiano Distante,Tauhida Parveen,Scott R. Tilley;Towards a Technique for Reverse Engineering Web Transactions from a User's Perspective.;142-150;9;Understanding Web-Based Systems;
2004;Nicolas Gold,Keith H. Bennett;Program Comprehension for Web Services.;151-161;11;Understanding Web-Based Systems;
2004;Harry M. Sneed;Program Comprehension for the Purpose of Testing.;162-171;10;Program Comprehension in-the-large;
2004;Andrea Capiluppi,Maurizio Morisio,Juan Fernandez-Ramil;Structural Evolution of an Open Source System: A Case Study.;172-182;11;Program Comprehension in-the-large;
2004;Ahmed E. Hassan,Richard C. Holt;Using Development History Sticky Notes to Understand Software Architecture.;183-193;11;Program Comprehension in-the-large;
2004;Zhihua Wen,Vassilios Tzerpos;An Effectiveness Measure for Software Clustering Algorithms.;194-203;10;Clustering for Program Comprehension;
2004;Filippo Ricca,Paolo Tonella,Christian Girardi,Emanuele Pianta;An Empirical Study on Keyword-based Web Site Clustering.;204-213;10;Clustering for Program Comprehension;
2004;Yiannis Kanellopoulos,Christos Tjortjis;Data Mining Source Code to Facilitate Program Comprehension: Experiments on Clustering Data Retrieved from C++ Programs.;214-225;12;Clustering for Program Comprehension;
2004;Marco Torchiano;Empirical Assessment of UML Static Object Diagrams.;226-230;5;Short Papers;
2004;Andrew Foss,Kenny Wong;On Migrating a Legacy Application to the Palm Platform.;231-235;5;Short Papers;
2004;Andrew Mohan,Nicolas Gold;Programming Style Changes in Evolving Source Code.;236-240;5;Short Papers;
2004;Jingwei Wu,Richard C. Holt;Resolving Linkage Anomalies in Extracted Software System Models.;241-245;5;Short Papers;
2004;Bogdan Korel,Luay Ho Tahat;Understanding Modifications in State-Based Models.;246-250;5;Short Papers;
2004;Dirk Beyer,Thomas A. Henzinger,Ranjit Jhala,Rupak Majumdar;An Eclipse Plug-in for Model Checking.;251-255;5;Short Papers;
2004;Ladan Tahvildari,Kostas Kontogiannis;Requirements Driven Software Evolution.;258-259;2;Working Sessions;
2004;Liam O'Brien,Dennis B. Smith;Working Session: Program Comprehension Strategies for Web Service and Service-oriented Architectures.;260-263;4;Working Sessions;
2004;Manu De Backer,Guido Dedene,Jacques Vandenbulcke;Web Services Composition, Execution and Visualization.;264-265;2;Tool Demonstrations;
2004;Claude Tadonki;Universal Report: A Generic Reverse Engineering Tool.;266-267;2;Tool Demonstrations;
2004;Brendan Cleary,Christopher Exton;CHIVE - A Program Source Visualisation Framework.;268-270;3;Tool Demonstrations;
2003;Paul Klint;How Understanding and Restructuring Differ from Compiling - A Rewriting Perspective.;2-;0;Keynote;
2003;Giuliano Antoniol,Massimiliano Di Penta,Ettore Merlo;YAAB (Yet Another AST Browser): Using OCL to Navigate ASTs.;13-;0;Analysis Techniques;
2003;Thomas Roy Dean,Yuling Chen;Design Recovery of a Two Level System.;23-32;10;Analysis Techniques;
2003;Raghavan Komondoor,Susan Horwitz;Effective, Automatic Procedure Extraction.;33-;0;Analysis Techniques;
2003;James M. Bieman,Anneliese von Mayrhauser,Helen J. Yang;Understanding Change-Proneness in OO Software through Visualization.;44-53;10;Program Understanding Tools and Technique;
2003;Martin Pinzger,Johann Oberleitner,Harald Gall;Analyzing and Understanding Architectural Characteristics of COM+ Components.;54-63;10;Program Understanding Tools and Technique;
2003;Panagiotis K. Linos,Zhi-hong Chen,Seth Berrier,Brian O'Rourke;A Tool For Understanding Multi-Language Program Dependencies.;64-;0;Program Understanding Tools and Technique;
2003;Steven P. Reiss;Event-Based Performance Analysis.;74-83;10;Dynamic Analysis Techniques;
2003;Edward B. Duffy,J. Paul Gibson,Brian A. Malloy;Applying the Decorator Pattern for Profiling Object-Oriented Software.;84-93;10;Dynamic Analysis Techniques;
2003;Dirk Heuzeroth,Thomas Holl,Gustav Hogstrom,Welf Lowe;Automatic Design Pattern Detection.;94-;0;Dynamic Analysis Techniques;
2003;Andrian Marcus,Louis Feng,Jonathan I. Maletic;Comprehension of Software Analysis Data Using 3D Visualization.;105-114;10;Program Comprehension Approache;
2003;Juergen Rilling,Tuomas Klemola;Identifying Comprehension Bottlenecks Using Program Slicing and Cognitive Complexity Metric.;115-124;10;Program Comprehension Approache;
2003;Christos Tjortjis,Loukas Sinos,Paul J. Layzell;Facilitating Program Comprehension by Mining Association Rules from Source Code.;125-;0;Program Comprehension Approache;
2003;Michael L. Collard,Huzefa H. Kagdi,Jonathan I. Maletic;An XML-Based Lightweight C++ Fact Extractor.;134-143;10;Fact Extraction Techniques;
2003;James R. Cordy;Generalized Selective XML Markup of Source Code Using Agile Parsing.;144-153;10;Fact Extraction Techniques;
2003;Anthony Cox,Charles L. A. Clarke;Syntactic Approximation Using Iterative Lexical Analysis.;154-;0;Fact Extraction Techniques;
2003;Jim Buckley,Christopher Exton;Blooms? Taxonomy: A Framework for Assessing Programmers? Knowledge of Software Systems.;165-174;10;Comprehension Frameworks and Evaluation;
2003;Andy Ko,Bob Uttl;Individual Differences in Program Comprehension Strategies in Unfamiliar Programming Systems.;175-184;10;Comprehension Frameworks and Evaluation;
2003;Andrew Walenstein;Observing and Measuring Cognitive Support: Steps Toward Systematic Tool Evaluation and Engineering.;185-;0;Comprehension Frameworks and Evaluation;
2003;James R. Cordy;Comprehending Reality - Practical Barriers to Industrial Adoption of Software Maintenance Automation.;196-206;11;Keynote;
2003;Filippo Ricca,Paolo Tonella;Using Clustering to Support the Migration from Static to Dynamic Web Pages.;207-216;10;Clustering Applications and Evaluation;
2003;Yves Chiricota,Fabien Jourdan,Guy Melancon;Software Components Capture Using Graph Clustering.;217-226;10;Clustering Applications and Evaluation;
2003;Zhihua Wen,Vassilios Tzerpos;An Optimal Algorithm for MoJo Distance.;227-;0;Clustering Applications and Evaluation;
2003;Andrew Chan,Reid Holmes,Gail C. Murphy,Annie T. T. Ying;Scaling an Object-Oriented System Execution Visualizer through Sampling.;237-244;8;Short Papers I;
2003;Thomas Gschwind,Johann Oberleitner,Martin Pinzger;Using Run-Time Data for Program Comprehension.;245-250;6;Short Papers I;
2003;Keith Gallagher,Lucas Layman;Are Decomposition Slices Clones?.;251-;0;Short Papers I;
2003;Gerald C. Gannod,Shilpa Murthy;Verification of Recovered Software Architectures.;258-265;8;Short Papers II;
2003;Igor Ivkovic,Michael W. Godfrey;Enhancing Domain-Specific Software Architecture Recovery.;266-273;8;Short Papers II;
2003;Jorg Niere,Jorg P. Wadsack,Lothar Wendehals;Handling Large Search Space in Pattern-Based Reverse Engineering.;274-;0;Short Papers II;
2003;Shihong Huang,Scott R. Tilley;Workshop on Graphical Documentation for Programmers: Assessing the Efficacy of UML Diagrams for Program Understanding.;281-282;2;Working Sessions;
2003;Arie van Deursen,Jean-Marie Favre,Rainer Koschke,Juergen Rilling;Experiences in Teaching Software Evolution and Program Comprehension.;283-284;2;Working Sessions;
2003;Arun Lakhotia,Junwei Li,Andrew Walenstein,Yun Yang;Towards a Clone Detection Benchmark Suite and Results Archive.;285-;0;Working Sessions;
2003;S. Dhinakar Jacob,Madhuchhanda Das;TALK2C: A Tool for Automatic Migratio.;288-289;2;Tool Demonstrations;
2003;Marbod Hopfner,Dietmar Seipel,Jurgen Wolff von Gudenberg;Comprehending and Visualizing Software Based on XML - Representations and Call Graphs.;290-291;2;Tool Demonstrations;
2003;Nishant Bawa,Sudipto Ghosh;Visualizing Interactions in Distributed Java Applications.;292-293;2;Tool Demonstrations;
2003;Dirk Beyer,Claus Lewerentz;CrocoPat: Efficient Pattern Analysis in Object-Oriented Programs.;294-295;2;Tool Demonstrations;
2003;Andreas Zeller;Isolating Cause-Effect Chains with AskIgo.;296-297;2;Tool Demonstrations;
2003;Mark Hennessy,Brian A. Malloy,James F. Power;gccXfront: Exploiting gcc as a Front End for Program Comprehension Tools via XML/XSLT.;298-;0;Tool Demonstrations;
2002;Alexandru Telea,Alessandro Maccari,Claudio Riva;An Open Visualization Toolkit for Reverse Architecting.;3-10;8;Visualization and User Interaction;
2002;Aaron J. Quigley;Experience with FADE for the Visualization and Abstraction of Software Views.;11-20;10;Visualization and User Interaction;
2002;Mohammad El-Ramly,Eleni Stroulia,Paul G. Sorenson;Mining System-User Interaction Traces for Use Case Models.;21-32;12;Visualization and User Interaction;
2002;Steve Counsell,Emilia Mendes,Stephen Swift;Comprehension of Object-Oriented Software Cohesion: The Empirical Quagmire.;33-42;10;Theories and Models for Software Comprehension I;
2002;Thomas Vestdam,Kurt Normark;Aspects of Internal Program Documentation - An Elucidative Perspective.;43-52;10;Theories and Models for Software Comprehension I;
2002;Martin Pinzger,Harald Gall;Pattern-Supported Architecture Recovery.;53-64;12;Theories and Models for Software Comprehension I;
2002;Dean Jin,James R. Cordy,Thomas Roy Dean;Where's the Schema? A Taxonomy of Patterns for Software Exchange.;65-74;10;Theories and Models for Software Comprehension II;
2002;Andrew Walenstein;Theory-based Analysis of Cognitive Support in Software Comprehension Tools.;75-84;10;Theories and Models for Software Comprehension II;
2002;Stephane Soteg Some,Timothy Lethbridge;Enhancing Program Comprehension with Recovered State Models.;85-96;12;Theories and Models for Software Comprehension II;
2002;David Binkley;An Empirical Study of the Effect of Semantic Differences on Programmer Comprehension.;97-106;10;Experimental and Empirical Studies;
2002;Liz Burd,Dawn Overy,Ady Wheetman;Evaluating Using Animation to Improve Understanding of Sequence Diagrams.;107-113;7;Experimental and Empirical Studies;
2002;Susan Elliott Sim,Richard C. Holt,Steve M. Easterbrook;On Using a Benchmark to Evaluate C++ Extractors.;114-126;13;Experimental and Empirical Studies;
2002;Qiang Tu,Michael W. Godfrey;An Integrated Approach for Studying Architectural Evolution.;127-136;10;Tools and Integration;
2002;Arie van Deursen,Joost Visser;Building Program Understanding Tools Using Visitor Combinators.;137-146;10;Tools and Integration;
2002;Claire Knight,Malcolm Munro;"Program Comprehension Experiences with GXL; Comprehension for Comprehension.";147-158;12;Tools and Integration;
2002;Abdelwahab Hamou-Lhadj,Timothy Lethbridge;Compression Techniques to Simplify the Analysis of Large Execution Traces.;159-168;10;Analysis of Dynamic Aspects;
2002;Tomonori Takada,Fumiaki Ohata,Katsuro Inoue;Dependence-Cache Slicing: A Program Slicing Method Using Lightweight Dynamic Information.;169-177;9;Analysis of Dynamic Aspects;
2002;Igor Ivkovic,Michael W. Godfrey;Architecture Recovery of Dynamically Linked Applications: A Case Study.;178-186;9;Analysis of Dynamic Aspects;
2002;Jens H. Weber-Jahnke,Hausi A. Muller,Andrew Walenstein,Nikolai Mansurov,Kenny Wong;Fused Data-Centric Visualizations for Software Evolution Environments.;187-196;10;Evolution and Reuse;
2002;Lerina Aversano,Gerardo Canfora,Andrea De Lucia,Silvio Stefanucci;Evolving Ispell: A Case Study of Program Understanding for Reuse.;197-206;10;Evolution and Reuse;
2002;Massimiliano Di Penta,Sara Gradara,Giuliano Antoniol;Traceability Recovery in RAD Software Systems.;207-218;12;Evolution and Reuse;
2002;Leon Moonen;Lightweight Impact Analysis using Island Grammars.;219-228;10;Analysis I;
2002;Anthony Cox,Charles L. A. Clarke;Relocating XML Elements from Preprocessed to Unprocessed Code.;229-238;10;Analysis I;
2002;Jingwei Wu,Ahmed E. Hassan,Richard C. Holt;Using Graph Patterns to Extract Scenarios.;239-250;12;Analysis I;
2002;Jianjun Zhao;Slicing Aspect-Oriented Software.;251-260;10;Analysis II;
2002;Giuseppe A. Di Lucca,Anna Rita Fasolino,F. Pace,Porfirio Tramontana,Ugo de Carlini;Comprehending Web Applications by a Clustering Based Approach.;261-270;10;Analysis II;
2002;Vaclav Rajlich,Norman Wilde;The Role of Concepts in Program Comprehension.;271-280;10;Analysis II;
2002;Christopher Exton;Constructivism and Program Comprehension Strategies.;281-284;4;Short Papers;
2002;Scott R. Tilley,Shihong Huang;On Selecting Software Visualization Tools for Program Understanding in an Industrial Context.;285-288;4;Short Papers;
2002;Jonathan I. Maletic,Michael L. Collard,Andrian Marcus;Source Code Files as Structured Documents.;289-292;4;Short Papers;
2001;Keith H. Bennett;Systems Evolution, Components and Services: Understanding the New Software Environment.;3-6;4;;
2001;Sarita Bassil,Rudolf K. Keller;Software Visualization Tools: Survey and Analysis.;7-17;11;Visualization;
2001;Claire Knight,Malcolm Munro;Mediating Diverse Visualisations for Comprehension.;18-25;8;Visualization;
2001;Jonathan I. Maletic,Andrian Marcus,Greg Dunlap,Jason Leigh;Visualizing Object-Oriented Software in Virtual Reality.;26-38;13;Visualization;
2001;Alessandro Orso,Saurabh Sinha,Mary Jean Harrold;Effects of Pointers on Data Dependences.;39-49;11;Analysis I;
2001;Yunbo Deng,Suraj C. Kothari,Yogy Namara;Program Slice Browser.;50-59;10;Analysis I;
2001;Johan Moe,David A. Carr;Understanding Distributed Systems via Execution Trace Data.;60-70;11;Analysis I;
2001;Michael P. O'Brien,Jim Buckley;Inference-Based and Expectation-Based Processing in Program Comprehension.;71-78;8;Program Understanding;
2001;Russell Mosemann,Susan Wiedenbeck;Navigation and Comprehension of Programs by Novice Programmers.;79-88;10;Program Understanding;
2001;Chris Fox,Sebastian Danicic,Mark Harman,Robert M. Hierons;Backward Conditioning: A New Program Specialisation Technique and Its Application to Program Comprehension.;89-97;9;Program Understanding;
2001;Yang Li,Hongji Yang;Simplicity: A Key Engineering Concept for Program Understanding.;98-110;13;Program Understanding;
2001;Margaret-Anne D. Storey,Casey Best,Jeff Michaud;SHriMP Views: An Interactive Environment for Exploring Java Programs.;111-112;2;Tool Demo;
2001;Mark E. M. Stewart;Automated Analysis of Scientific and Engineering Semantics.;113-114;2;Tool Demo;
2001;Kamran Sartipi;Alborz: A Query-based Tool for Software Architecture Recovery.;115-118;4;Tool Demo;
2001;Timothy Lethbridge;Report from the Dagstuhl Seminar on Interoperability of Reengineering Tools.;119;1;Working Session Track I;
2001;Eleni Stroulia,Tarja Systa;Structure-Behavior-Function Program Understanding.;120-122;3;Working Session Track I;
2001;Dewayne E. Perry;Software Architecture: Leverage for System/Program Comprehension.;123-126;4;Keynote Address;
2001;Andrew J. Malton,Kevin A. Schneider,James R. Cordy,Thomas Roy Dean,Darren Cousineau,Jason Reynolds;Processing Software Source Text in Automated Design Recovery and Transformation.;127-134;8;Design Recovery;
2001;Nicolas Gold,Keith H. Bennett;A Flexible Method for Segmentation in Concept Assignmen.;135-144;10;Design Recovery;
2001;James R. Cordy,Kevin A. Schneider,Thomas Roy Dean,Andrew J. Malton;HSML: Design Directed Source Code Hot Spots.;145-156;12;Design Recovery;
2001;Periklis Andritsos,Renee J. Miller;Reverse Engineering Meets Data Analysis.;157-166;10;Techniques and Methods;
2001;Harry M. Sneed;Extracting Business Logic from Existing COBOL Programs as a Basis for Redevelopment.;167-175;9;Techniques and Methods;
2001;Giuseppe A. Di Lucca,Anna Rita Fasolino,Ugo de Carlini;An Algebraic Notation for Representing Threads in Object Oriented Software Comprehension.;176-188;13;Techniques and Methods;
2001;Scott R. Tilley,Mohan DeSouza;Spreading Knowledge about Gnutella: A Case Study in Understanding Net-Centric Applications.;189-198;10;Case Studies;
2001;Lerina Aversano,Gerardo Canfora,Silvio Stefanucci;Understanding and Improving the Maintenance Process: A Method and Two Case Studies.;199-208;10;Case Studies;
2001;Carola Lange,Andreas Winter,Harry M. Sneed;Comparing Graph-Based Program Comprehension Tools to Relational Database-Based Tools.;209-220;12;Case Studies;
2001;Gerald C. Gannod,Betty H. C. Cheng;A Suite of Tools for Facilitating Reverse Engineering Using Formal Methods.;221-232;12;Analysis Tools;
2001;Jean-Marie Favre;GSEE: A Generic Software Exploration Environment.;233-244;12;Analysis Tools;
2001;Iyad Zayour,Timothy Lethbridge;Adoption of Reverse Engineering Tools: A Cognitive Perspective and Methodology.;245-258;14;Analysis Tools;
2001;Kamran Sartipi;A Software Evaluation Model Using Component Association Views.;259-268;10;Redocumentation;
2001;Reinder J. Bril,Andre Postma;An Architectural Connectivity Metric and Its Support for Incremental Re-Architecting of Large Legacy Systems.;269-280;12;Redocumentation;
2001;Giuliano Antoniol,Massimiliano Di Penta,Gerardo Casazza,Ettore Merlo;A Method to Re-Organize Legacy Systems via Concept Analysis.;281-292;12;Redocumentation;
2001;Zhifeng Yu,Vaclav Rajlich;Hidden Dependencies in Program Comprehension and Change Propagation.;293-299;7;Analysis II;
2001;Thomas Eisenbarth,Rainer Koschke,Daniel Simon;Feature-Driven Program Understanding Using Concept Analysis of Execution Traces.;300-309;10;Analysis II;
2001;Mark Harman,Malcolm Munro,Lin Hu,Xingyuan Zhang;Side-Effect Removal Transformation.;310-322;13;Analysis II;
2001;Kenny Wong;Research Challenges in the Reverse Engineering Community.;323-324;2;Working Session Track II;
2000;Roland T. Mittermeir;Comprehending by varying Focal Distance.;3-4;2;Keynotes;
2000;Hausi A. Muller;Program Comprehension and Software Migration Strategies.;5-;0;Keynotes;
2000;Claes Wohlin,Martin Host,Magnus C. Ohlsson;Understanding the Sources of Software Defects: A Filtering Approach.;9-17;9;Software Quality Analysis;
2000;Jens H. Weber-Jahnke,Jorg Niere,Jorg P. Wadsack;Automated Quality Analysis of Component Software for Embedded Systems.;18-26;9;Software Quality Analysis;
2000;Lars Bratthall,Claes Wohlin;Understanding Some Software Quality Aspects from Architecture and Design Models.;27-;0;Software Quality Analysis;
2000;Kamran Sartipi,Kostas Kontogiannis,Farhad Mavaddat;A Pattern Matching Framework for Software Architecture Recovery and Restructuring.;37-47;11;Architecture Recovery;
2000;John B. Tran,Michael W. Godfrey,Eric H. S. Lee,Richard C. Holt;Architectural Repair of Open Source Software.;48-59;12;Architecture Recovery;
2000;Steve Counsell,Peter Newson,Emilia Mendes;Architectural Level Hypothesis Testing through Reverse Engineering of Object-Oriented Software.;60-;0;Architecture Recovery;
2000;Jean-Christophe Deprez,Arun Lakhotia;A Formalism to Automate Mapping from Program Features to Code.;69-78;10;Reverse Engineering;
2000;Giuliano Antoniol,Gerardo Canfora,Andrea De Lucia,Gerardo Casazza,Ettore Merlo;Tracing Object-Oriented Code into Functional Requirements.;79-86;8;Reverse Engineering;
2000;Jean-Francois Girard,Martin Wurthner;Evaluating the Accessor Classification Approach to Detect Abstract Data Types.;87-;0;Reverse Engineering;
2000;Jorma Sajaniemi;Program Comprehension through Multiple Simultaneous Views: A Session with VinEd.;99-108;10;Tools and Environments;
2000;Neil M. Goldman;Smiley-An Interactive Tool for Monitoring Inter-Module Function Calls.;109-118;10;Tools and Environments;
2000;Kurt Normark;Requirements for an Elucidative Programming Environment.;119-;0;Tools and Environments;
2000;Stan Rifkin,Lionel E. Deimel;Program Comprehension Techniques Improve Software Inspections: A Case Study.;131-138;8;Program Comprehension Studies;
2000;Cynthia L. Corritore,Susan Wiedenbeck;Direction and Scope of Comprehension-Related Activities by Procedural and Object-Oriented Programmers: An Empirical Study.;139-148;10;Program Comprehension Studies;
2000;Alessandro Bianchi,Giuseppe Visaggio,Anna Rita Fasolino;An Exploratory Case Study of the Maintenance Effectiveness of Traceability Models.;149-;0;Program Comprehension Studies;
2000;David Binkley,L. Ross Raszewski,Christopher Smith,Mark Harman;An Empirical Study of Amorphous Slicing as a Program Comprehension Support Tool.;161-170;10;Metrics and Slicing;
2000;James F. Power,Brian A. Malloy;Metric-Based Analysis of Context-Free Grammars.;171-178;8;Metrics and Slicing;
2000;Harry M. Sneed;Source Animation as a Means of Program Comprehension.;179-;0;Metrics and Slicing;
2000;Derek Rayside,Steve Reuss,Erik Hedges,Kostas Kontogiannis;The Effect of Call Graph Construction Algorithms for Object-Oriented Programs on Automatic Clustering.;191-200;10;Clustering Techniques;
2000;Rainer Koschke,Thomas Eisenbarth;A Framework for Experimental Evaluation of Clustering Techniques.;201-210;10;Clustering Techniques;
2000;Vassilios Tzerpos,Richard C. Holt;On the Stability of Software Clustering Algorithms.;211-;0;Clustering Techniques;
2000;Tobias Kuipers,Leon Moonen;Types and Concept Analysis for Legacy Systems.;221-230;10;Concept Analysis;
2000;Nicolas Anquetil;A Comparison of Graphs of Concept for Reverse Engineering.;231-240;10;Concept Analysis;
2000;Kunrong Chen,Vaclav Rajlich;Case Study of Feature Location Using Dependence Graph.;241-;0;Concept Analysis;
2000;Giuliano Antoniol,Gerardo Casazza,Ettore Merlo;Identification of Lower-Level Artifacts.;253;1;Working Sessions;
2000;Marian Petre;Empirical Studies of Programming-in-the-Large: How?;254;1;Working Sessions;
2000;Keith Gallagher;Tools for Program Comprehension: Building a Comprehender's Workbench.;255;1;Working Sessions;
2000;Francoise Balmas,Harald Wertz,Janice Singer;Understanding Program Understanding.;256;1;Working Sessions;
1999;Claire Knight,Malcolm Munro;Comprehension with[in] Virtual Environment Visualisations.;4-11;8;Paper Session I: Visualization;
1999;Panagiotis K. Linos,Esther T. Ososanya,Vijay Karunakaran;Improving the Visibility of Graphical Program Displays: An Experimental Study.;12-19;8;Paper Session I: Visualization;
1999;James Westland Cain,Rachel Jane McCrindle;Program Visualisation using C++ Lenses.;20-;0;Paper Session I: Visualization;
1999;Ivan T. Bowman,Richard C. Holt;Reconstructing Ownership Architectures To Help Understand Software Systems.;28-37;10;Paper Session II: Architectures for Understanding;
1999;M. P. A. Sellink,Chris Verhoef;An Architecture for Automated Software Maintenance.;38-48;11;Paper Session II: Architectures for Understanding;
1999;Jean-Francois Patenaude,Ettore Merlo,Michel R. Dagenais,Bruno Lague;Extending Software Quality Assessment Techniques to Java Systems.;49-;0;Paper Session II: Architectures for Understanding;
1999;Anna Rita Fasolino,Giuseppe Visaggio;Improving Software Comprehension through an Automated Dependency Tracer.;58-65;8;Paper Session III: Integration Frameworks;
1999;Ilene Burnstein,Floyd Saner;An Application of Fuzzy Reasoning to Support Automated Program Comprehension.;66-73;8;Paper Session III: Integration Frameworks;
1999;Arie van Deursen,Leon Moonen;Understanding COBOL Systems using Inferred Types.;74-;0;Paper Session III: Integration Frameworks;
1999;Beniamino Di Martino,Antonino Mazzeo,Nicola Mazzocca,Umberto Villano;Restructuring Parallel Programs by Transformation of Point-To-Point Interactions into Collective Communication.;84-91;8;Paper Session IV: Comprehension Strategies;
1999;Harry M. Sneed,Tomas Dombovari;Comprehending a Complex, Distributed, Object-Oriented Software System a Report from the Field.;218-;0;Paper Session IV: Comprehension Strategies;
1999;Bogdan Korel;Black-Box Understanding of COTS Components.;92-;0;Paper Session IV: Comprehension Strategies;
1999;Margaret Ann Francel,Spencer Rugaber;The Relationship of Slicing and Debugging to Program Understanding.;106-113;8;Paper Session V: Parsing;
1999;Gregory Knapen,Bruno Lague,Michel R. Dagenais,Ettore Merlo;Parsing C++ Despite Missing Declarations.;114-125;12;Paper Session V: Parsing;
1999;Jianjun Zhao;Slicing Concurrent Java Programs.;126-;0;Paper Session V: Parsing;
1999;Gerardo Canfora,Aniello Cimitile,Andrea De Lucia,Giuseppe A. Di Lucca;A Case Study of Applying an Eclectic Approach to Identify Objects in Code.;136-143;8;Paper Session VI: Decomposition and Composition;
1999;Liwu Li 0001;On Managing Classes for Evolving Software.;144-150;7;Paper Session VI: Decomposition and Composition;
1999;Giuliano Antoniol,Alessandra Potrich,Paolo Tonella,Roberto Fiutem;Evolving Object Oriented Design to Improve Code Traceability.;151-;0;Paper Session VI: Decomposition and Composition;
1999;Jussi Koskinen;Empirical Evaluation of Hypertextual Information Access from Program Text.;162-169;8;Paper Session VII: Empirical Aspects;
1999;Anneliese von Mayrhauser,Stephen Lang;On the Role of Static Analysis during Software Maintenance.;170-177;8;Paper Session VII: Empirical Aspects;
1999;Paul Warren,Cornelia Boldyreff,Malcolm Munro;The Evolution of Websites.;178-;0;Paper Session VII: Empirical Aspects;
1999;Cristina Cifuentes,Mike Van Emmerik;Recovery of Jump Table Case Statements from Binary Code.;192-199;8;Paper Session VIII: Program Analysis;
1999;Christoph W. Kessler,Craig Smith;The SPARAMAT Approach to Automatic Comprehension of Sparse Matrix Computations.;200-207;8;Paper Session VIII: Program Analysis;
1999;Mark Harman,Chris Fox,Robert M. Hierons,David Binkley,Sebastian Danicic;Program Simplification as a Means of Approximating Undecidable Propositions.;208-217;10;Paper Session VIII: Program Analysis;
1998;Reinhard Schauer,Rudolf K. Keller;Pattern Visualization for Software Comprehension.;4-;0;Visualization;
1998;Susan K. Burkwald,Stephen G. Eick,Kurt D. Rivard,John D. Pyrce;Visualizing Year 2000 Program Changes.;13-;0;Visualization;
1998;Peter Young,Malcolm Munro;Visualizing Software in Virtual Reality.;19-;0;Visualization;
1998;Nabor C. Mendonca,Jeffrey Kramer;Developing an Approach for the Recovery of Distributed Software Architectures.;28-;0;Architecture;
1998;Bruno Lague,Charles Leduc,Andre Le Bon,Ettore Merlo,Michel R. Dagenais;An Analysis Framework for Understanding Layered Software Architectures.;37-44;8;Architecture;
1998;Spiros Mancoridis,Brian S. Mitchell,Chris Rorres,Yih-Farn Robin Chen,Emden R. Gansner;Using Automatic Clustering to Produce High-Level System Organizations of Source Code.;45-;0;Architecture;
1998;Steven Woods,Liam O'Brien,Tao Lin,Keith Gallagher,Alex Quilici;An Architecture for Interoperable Program Understanding Tools.;54-63;10;Integration Frameworks;
1998;Manfred Kamp;Managing a Multi-File, Multi-Language Software Repository for Program Comprehension Tools 3/4 A Generic Approach.;64-;0;Integration Frameworks;
1998;Arun Lakhotia;DIME: A Direct Manipulation Environment for Evolutionary Development of Software.;72-;0;Integration Frameworks;
1998;Francoise Detienne,Jean-Marie Burkhardt,Susan Wiedenbeck;The Effect of Object-Oriented Programming Expertise in Several Dimensions of Comprehension Strategies.;82-;0;Comprehension Strategies;
1998;Arie van Deursen,Tobias Kuipers;Rapid System Understanding: Two COBOL Case Studies.;90-97;8;Comprehension Strategies;
1998;Katalin Erdos,Harry M. Sneed;Partial Comprehension of Complex Programs (enough to perform maintenance).;98-;0;Comprehension Strategies;
1998;Mark van den Brand,M. P. A. Sellink,Chris Verhoef;Current Parsing Techniques in Software Renovation Considered Harmful.;108-;0;Parsing;
1998;Stephane Soteg Some,Timothy Lethbridge;Parsing Minimization when Extracting Information from Code in the Presence of Conditional Compilation.;118-125;8;Parsing;
1998;Cristina Cifuentes,Shane Sendall;Specifying the Semantics of Machine Instructions.;126-;0;Parsing;
1998;Gerardo Canfora,Aniello Cimitile,Andrea De Lucia,Giuseppe A. Di Lucca;Decomposing Legacy Programs: A First Step Towards Migrating to Client-Server Platforms.;136-144;9;Decomposition;
1998;Bogdan Korel,Juergen Rilling;Program Slicing in Understanding of Large Programs.;145-;0;Decomposition;
1998;Giuliano Antoniol,Roberto Fiutem,L. Cristoforetti;Design Pattern Recovery in Object-Oriented Software.;153-;0;Decomposition;
1998;Anneliese von Mayrhauser,A. Marie Vans;Program Understanding Behavior During Adaptation of Large Scale Software.;164-;0;Empirical Studies;
1998;Janice Singer,Timothy Lethbridge;Studying Work Practices to Assist Tool Design in Software Engineering.;173-;0;Empirical Studies;
1998;Susan Elliott Sim,Charles L. A. Clarke,Richard C. Holt;Archetypal Source Code Searches: A Survey of Software Developers and Maintainers.;180-;0;Empirical Studies;
1998;Alessio Bechini,Kuo-Chung Tai;Design of a Toolset for Dynamic Analysis of Concurrent Java Program.;190-;0;Program Analysis;
1998;David Binkley,Bruce Duncan,Brennan Jubb,April Wielgosz;The Feedback Compiler.;198-;0;Program Analysis;
1998;Beniamino Di Martino,Antonino Mazzeo,Nicola Mazzocca,Umberto Villano;Automatic Detection of Interaction Patterns for Parallel Program Analysis and Development .;206-;0;Program Analysis;
1997;Giuseppe Visaggio;Relationships between Documentation and Maintenance Activities.;4-16;13;Program Understanding-In-The-Large;
1997;Margaret-Anne D. Storey,F. David Fracchia,Hausi A. Muller;Cognitive Design Elements to Support the Construction of a Mental Model during Software Visualization.;17-28;12;Program Understanding-In-The-Large;
1997;Jean-Marie Favre;Understanding-In-The-Large.;29-;0;Program Understanding-In-The-Large;
1997;Ilene Burnstein,Katherine Roberson;Automated Chunking to Support Program Comprehension.;40-49;10;Automated Program Understanding;
1997;Dejan Markovic,Jack R. Hagemeister,Cauligi S. Raghavendra,Sanjay Bhansali;Semi-automatic Generation of Parallelizable Patterns from Source Code Examples.;50-59;10;Automated Program Understanding;
1997;Melody Moore Jackson,Spencer Rugaber;Using Knowledge Representation to Understand Interactive Systems.;60-;0;Automated Program Understanding;
1997;Mark Harman,Sebastian Danicic;Amorphous Program Slicing.;70-79;10;Program Analysis;
1997;Bogdan Korel,Juergen Rilling;Dynamic Program Slicing in Understanding of Program Execution.;80-89;10;Program Analysis;
1997;Paolo Tonella,Giuliano Antoniol,Roberto Fiutem,Ettore Merlo;Points-to Analysis for Program Understanding.;90-;0;Program Analysis;
1997;Richard Clayton,Spencer Rugaber,Lyman Taylor,Linda M. Wills;A Case Study of Domain-based Program Understanding.;102-110;9;Program Comprehension;
1997;Jelber Sayyad-Shirabad,Timothy Lethbridge,Steve Lyon;A Little Knowledge Can Go a Long Way Towards Program Understanding.;111-117;7;Program Comprehension;
1997;Rene Klosch,Johannes Weidl,Georg Trausmuth,Harald Gall;Facilitating Program Comprehension via Generic Components for State Machines.;118-;0;Program Comprehension;
1997;Liz Burd,Malcolm Munro;Enriching Program Comprehension for Software Reuse.;130-137;8;Finding Reusable Assets;
1997;Aniello Cimitile,Andrea De Lucia,Giuseppe A. Di Lucca,Anna Rita Fasolino;Identifying objects in legacy systems.;138-147;10;Finding Reusable Assets;
1997;Hongji Yang,Paul Luker,William Cheng-Chung Chu;Code Understanding through Program Transformation for Reusable Component Identification.;148-;0;Finding Reusable Assets;
1997;Vaclav Rajlich,George S. Cowan;Towards Standard for Experiments in Program Comprehension.;160-161;2;Panel Infrastructure for Software Comprehension and Reengineering;
1997;Spencer Rugaber,Linda M. Wills;Position Paper on Research Infrastructure for Reengineering.;162-164;3;Panel Infrastructure for Software Comprehension and Reengineering;
1997;Steve Lang,Anneliese von Mayrhauser;Building a Research Infrastructure for Program Comprehension Observations.;165-169;5;Panel Infrastructure for Software Comprehension and Reengineering;
1997;Scott R. Tilley,Dennis B. Smith;On Using the Web as Infrastructure for Reengineering.;170-;0;Panel Infrastructure for Software Comprehension and Reengineering;
1997;Anthony Berglas,John V. Harrison;Evaluation of the ITOC information system design recovery tool.;176-182;7;Tools;
1997;Mei C. Chuah,Stephen G. Eick;Glyphs for Software Visualization.;183-191;9;Tools;
1997;Pui-Shan Chan,Malcolm Munro;PUI: A Tool to Support Program Understanding.;192-;0;Tools;
1996;Stephen G. Eick,Amy Wards;An Interactive Visualization for Message Sequence Charts.;2-7;6;Program Comprehension;
1996;Andrea De Lucia,Anna Rita Fasolino,Malcolm Munro;Understanding Function Behaviors through Program Slicing.;9-10;2;Program Comprehension;
1996;Scott R. Tilley,Dennis B. Smith,Santanu Paul;Towards a Framework for Program Understanding.;19-;0;Program Comprehension;
1996;Gerardo Canfora,L. Mancini,Maria Tortorella;A Workbench for Program Comprehension during Software Maintenance.;30-39;10;Tools and Environments;
1996;Kevin J. Sullivan;Rapid Development of Simple, Custom Program Analysis Tools.;40-44;5;Tools and Environments;
1996;T. C. Nicholas Graham;A Method for The Formal Testing of Program Visualization Tools.;45-54;10;Tools and Environments;
1996;Alex Quilici,Steven Woods;Toward a Constraint-Satisfaction Framework for Evaluating Program-Understanding Algorithms.;55-;0;Tools and Environments;
1996;Anneliese von Mayrhauser,A. Marie Vans;On the Role of Hypotheses during Opportunistic Understanding While Porting Large Scale Code.;68-77;10;Comprehension Experiments and Estimation;
1996;Piernicola Fiore,Filippo Lanubile,Giuseppe Visaggio;Effort Estimation for Program Comprehension.;78-;0;Comprehension Experiments and Estimation;
1996;Kenny Wong;On Inserting Program Understanding Technology into the Software Change Process.;90-99;10;Software Evolution;
1996;Cornelia Boldyreff,Liz Burd,R. M. Hather,Malcolm Munro,E. J. Younger;Greater Understanding Through Maintainer Driven Traceability.;100-;0;Software Evolution;
1996;Harry M. Sneed,Katalin Erdos;Extracting Business Rules from Source Code .;240-;0;Software Evolution;
1996;Tim Bull;Comprehension of Safety-Critical Systems Using Domain-Specific Languages.;108-122;15;Domain-Specific Program Comprehension;
1996;Wayne Citrin,Carlos Santiago,Benjamin G. Zorn;Scalable Interfaces to Support Program Comprehension.;123-132;10;Domain-Specific Program Comprehension;
1996;Sandrine Blazy,Philippe Facon;Interprocedural analysis for program comprehension by specialization.;133-;0;Domain-Specific Program Comprehension;
1996;William G. Griswold,Darren C. Atkinson,Collin McCurdy;Fast, Flexible Syntactic Pattern Matching and Processing.;144-153;10;Pattern Matching Algorithms;
1996;Paulo S. C. Alencar,Donald D. Cowan,Thomas Kunz,Carlos Jose Pereira de Lucena;A Formal Architectural Design Patterns-Based Approach to Software Understanding.;154-163;10;Pattern Matching Algorithms;
1996;Beniamino Di Martino,Giulio Iannello;PAP Recognizer: A Tool for Automatic Recognition of Parallelizable Patterns.;164-;0;Pattern Matching Algorithms;
1996;Kurt C. Wallnau,Paul C. Clements,Edwin J. Morris,Robert Krut;The Gadfly: An Approach to Architectural-Level System Comprehension.;178-186;9;Software Architecture Comprehension;
1996;Roberto Fiutem,Ettore Merlo,Giuliano Antoniol,Paolo Tonella;Understanding the architecture of software systems.;187-;0;Software Architecture Comprehension;
1996;Thomas Kunz;Evaluating process clusters to support automatic program understanding.;198-207;10;Hierarchical Program Comprehension;
1996;Rene Klosch,Roland T. Mittermeir;Improving Program Understanding by Unfolding Layers of Interacting Patterns.;208-217;10;Hierarchical Program Comprehension;
1996;Michael Doorley,Anthony Cahill;Experiences in Automatic Leveling of Data Flow Diagrams.;218-229;12;Hierarchical Program Comprehension;
1996;Paul A. Bailes,Paul Burnim,Murray Chapman,Dan B. Johnston;Derivation and Presentation of an Abstract Program Space for Ada.;230-;0;Hierarchical Program Comprehension;
