2016;Aggelos Biboudis,Pablo Inostroza,Tijs van der Storm;Recaf: Java dialects as libraries.;http://doi.acm.org/10.1145/2993236.2993239;2-13;12;Generative Programming I;
2016;Yanlin Wang,Haoyuan Zhang,Bruno C. d. S. Oliveira,Marco Servetto;Classless Java.;http://doi.acm.org/10.1145/2993236.2993238;14-24;11;Generative Programming I;
2016;Theologos Zacharopoulos,Pablo Inostroza,Tijs van der Storm;Extensible modeling with managed data in Java.;http://doi.acm.org/10.1145/2993236.2993240;25-35;11;Generative Programming I;
2016;Andrea Rosà,Lydia Y. Chen,Walter Binder;Actor profiling in virtual execution environments.;http://doi.acm.org/10.1145/2993236.2993241;36-46;11;Generative Programming II;
2016;Gabriël Konat,Sebastian Erdweg,Eelco Visser;Bootstrapping domain-specific meta-languages in language workbenches.;http://doi.acm.org/10.1145/2993236.2993242;47-58;12;Generative Programming II;
2016;Laure Philips,Joeri De Koster,Wolfgang De Meuter,Coen De Roover;Dependence-driven delimited CPS transformation for JavaScript.;http://doi.acm.org/10.1145/2993236.2993243;59-69;11;Generative Programming II;
2016;Mina Lee,Sunbeom So,Hakjoo Oh;Synthesizing regular expressions from examples for introductory automata assignments.;http://doi.acm.org/10.1145/2993236.2993244;70-80;11;Code Generation and Synthesis;
2016;Cyrus Omar,Jonathan Aldrich;Programmable semantic fragments: the design and implementation of typy.;http://doi.acm.org/10.1145/2993236.2993245;81-92;12;Code Generation and Synthesis;
2016;Jörg Kienzle,Gunter Mussbacher,Philippe Collet,Omar Alam;Delaying decisions in variable concern hierarchies.;http://doi.acm.org/10.1145/2993236.2993246;93-103;11;Code Generation and Synthesis;
2016;Sorin Adam,Marco Kuhrmann,Ulrik Pagh Schultz;Automatic code generation in practice: experiences with embedded robot controllers.;http://doi.acm.org/10.1145/2993236.2993247;104-108;5;Code Generation and Synthesis;
2016;Larissa Braz,Rohit Gheyi,Melina Mongiovi,Márcio Ribeiro,Flávio Medeiros,Leopoldo Teixeira;A change-centric approach to compile configurable systems with #ifdefs.;http://doi.acm.org/10.1145/2993236.2993250;109-119;11;Feature Models and Product Lines;
2016;Juliana Alves Pereira,Pawel Matuszyk,Sebastian Krieter,Myra Spiliopoulou,Gunter Saake;A feature-based personalized recommender system for product-line configuration.;http://doi.acm.org/10.1145/2993236.2993249;120-131;12;Feature Models and Product Lines;
2016;Matthias Kowal,Sofia Ananieva,Thomas Thüm;Explaining anomalies in feature models.;http://doi.acm.org/10.1145/2993236.2993248;132-143;12;Feature Models and Product Lines;
2016;Mustafa Al-Hajjaji,Sebastian Krieter,Thomas Thüm,Malte Lochau,Gunter Saake;IncLing: efficient product-line testing using incremental pairwise sampling.;http://doi.acm.org/10.1145/2993236.2993253;144-155;12;Software Product Lines and Testing;
2016;Valentin Rothberg,Christian Dietrich 0001,Andreas Ziegler 0002,Daniel Lohmann;Towards scalable configuration testing in variable software.;http://doi.acm.org/10.1145/2993236.2993252;156-167;12;Software Product Lines and Testing;
2016;Michael J. Steindorfer,Jurgen J. Vinju;Towards a software product line of trie-based collections.;http://doi.acm.org/10.1145/2993236.2993251;168-172;5;Software Product Lines and Testing;
2016;Mustafa Al-Hajjaji,Jens Meinicke,Sebastian Krieter,Reimar Schröter,Thomas Thüm,Thomas Leich,Gunter Saake;Tool demo: testing configurable systems with FeatureIDE.;http://doi.acm.org/10.1145/2993236.2993254;173-177;5;Software Product Lines and Testing;
2016;Majid Makki,Dimitri Van Landuyt,Wouter Joosen;Automated regression testing of BPMN 2.0 processes: a capture and replay framework for continuous delivery.;http://doi.acm.org/10.1145/2993236.2993257;178-189;12;Testing and Verification;
2016;Matthew A. Hammer,Bor-Yuh Evan Chang,David Van Horn;A vision for online verification-validation.;http://doi.acm.org/10.1145/2993236.2993255;190-201;12;Testing and Verification;
2016;Mohamed Boussaa,Olivier Barais,Benoit Baudry,Gerson Sunyé;Automatic non-functional testing of code generators families.;http://doi.acm.org/10.1145/2993236.2993256;202-212;11;Testing and Verification;
2015;Priya Narasimhan,Utsav Drolia,Jiaqi Tan,Nathan D. Mickulicz,Rajeev Gandhi;The next-generation in-stadium experience (keynote).;http://doi.acm.org/10.1145/2814204.2814205;1-10;10;GPCE;
2015;Roland Leißa,Klaas Boesche,Sebastian Hack,Richard Membarth,Philipp Slusallek;Shallow embedding of DSLs via online partial evaluation.;http://doi.acm.org/10.1145/2814204.2814208;11-20;10;GPCE;
2015;Maximilian Scherr,Shigeru Chiba;Almost first-class language embedding: taming staged embedded DSLs.;http://doi.acm.org/10.1145/2814204.2814217;21-30;10;GPCE;
2015;Bob Reynders,Dominique Devriese,Frank Piessens;Generating safe boundary APIs between typed EDSLs and their environments.;http://doi.acm.org/10.1145/2814204.2814219;31-34;4;GPCE;
2015;Flávio Medeiros,Iran Rodrigues,Márcio Ribeiro,Leopoldo Teixeira,Rohit Gheyi;An empirical study on configuration-related issues: investigating undeclared and unused identifiers.;http://doi.acm.org/10.1145/2814204.2814206;35-44;10;GPCE;
2015;Sascha El-Sharkawy,Adam Krafczyk,Klaus Schmid;Analysing the Kconfig semantics and its analysis tools.;http://doi.acm.org/10.1145/2814204.2814222;45-54;10;GPCE;
2015;Zakarea Alshara,Abdelhak-Djamel Seriai,Chouki Tibermacine,Hinde-Lilia Bouziane,Christophe Dony,Anas Shatnawi;Migrating large object-oriented Applications into component-based ones: instantiation and inheritance transformation.;http://doi.acm.org/10.1145/2814204.2814223;55-64;10;GPCE;
2015;Michael Lopez,C. Jasson Casey,Gabriel Dos Reis,Colton Chojnacki;Safer SDN programming through Arbiter.;http://doi.acm.org/10.1145/2814204.2814218;65-74;10;GPCE;
2015;Alexey Kolesnichenko,Christopher M. Poskitt,Sebastian Nanz,Bertrand Meyer;Contract-based general-purpose GPU programming.;http://doi.acm.org/10.1145/2814204.2814216;75-84;10;GPCE;
2015;Hiroshi Yamaguchi,Shigeru Chiba;Inverse macro in Scala.;http://doi.acm.org/10.1145/2814204.2814213;85-94;10;GPCE;
2015;Sorin Adam,Ulrik Pagh Schultz;Towards tool support for spreadsheet-based domain-specific languages.;http://doi.acm.org/10.1145/2814204.2814215;95-98;4;GPCE;
2015;Antuan Byalik,Sanchit Chadha,Eli Tilevich;Native-2-native: automated cross-platform code synthesis from web-based programming resources.;http://doi.acm.org/10.1145/2814204.2814210;99-108;10;GPCE;
2015;Dmitri Makarov,Matthias Hauswirth;CLOP: a multi-stage compiler to seamlessly embed heterogeneous code.;http://doi.acm.org/10.1145/2814204.2814211;109-112;4;GPCE;
2015;Jan Oliver Ringert,Bernhard Rumpe,Andreas Wortmann;Composing code generators for C&C ADLs with Application-specific behavior languages (tool demonstration).;http://doi.acm.org/10.1145/2814204.2814224;113-116;4;GPCE;
2015;Milan Kabác,Charles Consel;Orchestrating masses of sensors: a design-driven development Approach.;http://doi.acm.org/10.1145/2814204.2814226;117-120;4;GPCE;
2015;Gabriel Foust,Jaakko Järvi,Sean Parent;Generating reactive programs for graphical user interfaces from multi-way dataflow constraint systems.;http://doi.acm.org/10.1145/2814204.2814207;121-130;10;GPCE;
2015;Spencer P. Florence,Burke Fetscher,Matthew Flatt,William H. Temps,Tina Kiguradze,Dennis P. West,Charlotte Niznik,Paul R. Yarnold,Robert Bruce Findler,Steven M. Belknap;POP-PL: a patient-oriented prescription programming language.;http://doi.acm.org/10.1145/2814204.2814221;131-140;10;GPCE;
2015;Kai Selgrad,Alexander Lier,Franz Köferl,Marc Stamminger,Daniel Lohmann;Lightweight, generative variant exploration for high-performance graphics Applications.;http://doi.acm.org/10.1145/2814204.2814220;141-150;10;GPCE;
2015;Christoph Seidl,Sven Schuster,Ina Schaefer;Generative software product line development using variability-aware design patterns.;http://doi.acm.org/10.1145/2814204.2814212;151-160;10;GPCE;
2015;Jaime Font,Lorena Arcega,Øystein Haugen,Carlos Cetina;Addressing metamodel revisions in model-based software product lines.;http://doi.acm.org/10.1145/2814204.2814214;161-170;10;GPCE;
2015;Pablo Inostroza,Tijs van der Storm;Modular interpreters for the masses: implicit context propagation using object algebras.;http://doi.acm.org/10.1145/2814204.2814209;171-180;10;GPCE;
2015;Carlos Noguera,Viviane Jonckers;Model querying with query models.;http://doi.acm.org/10.1145/2814204.2814225;181-184;4;GPCE;
2014;Jaakko Järvi,Gabriel Foust,Magne Haveraaen;Specializing planners for hierarchical multi-way dataflow constraint systems.;http://doi.acm.org/10.1145/2658761.2658762;1-10;10;Specialization and Modularity;
2014;Michael J. Steindorfer,Jurgen J. Vinju;Code specialization for memory efficient hash tries (short paper).;http://doi.acm.org/10.1145/2658761.2658763;11-14;4;Specialization and Modularity;
2014;Somayeh Malakuti,Mehmet Aksit;Emergent gummy modules: modular representation of emergent behavior.;http://doi.acm.org/10.1145/2658761.2658764;15-24;10;Specialization and Modularity;
2014;Maria Gouseti,Chiel Peters,Tijs van der Storm;Extensible language implementation with object algebras (short paper).;http://doi.acm.org/10.1145/2658761.2658765;25-28;4;Specialization and Modularity;
2014;Eric Walkingshaw,Klaus Ostermann;Projectional editing of variational software.;http://doi.acm.org/10.1145/2658761.2658766;29-38;10;Variation and Product Lines;
2014;Andreas Ruprecht,Bernhard Heinloth,Daniel Lohmann;Automatic feature selection in large-scale system-software product lines.;http://doi.acm.org/10.1145/2658761.2658767;39-48;10;Variation and Product Lines;
2014;Lei Ma,Cyrille Artho,Cheng Zhang,Hiroyuki Sato;Efficient testing of software product lines via centralization (short paper).;http://doi.acm.org/10.1145/2658761.2658768;49-52;4;Variation and Product Lines;
2014;Karl Smeltzer,Martin Erwig,Ronald A. Metoyer;A transformational approach to data visualization.;http://doi.acm.org/10.1145/2658761.2658769;53-62;10;DSLs;
2014;Masato Shioda,Hideya Iwasaki,Shigeyuki Sato;LibDSL: a library for developing embedded domain specific languages in d via template metaprogramming.;http://doi.acm.org/10.1145/2658761.2658770;63-72;10;DSLs;
2014;Vojin Jovanovic,Amir Shaikhha,Sandro Stucki,Vladimir Nikolaev,Christoph Koch 0001,Martin Odersky;Yin-yang: concealing the deep embedding of DSLs.;http://doi.acm.org/10.1145/2658761.2658771;73-82;10;DSLs;
2014;Benjamin Hess,Thomas R. Gross,Markus Püschel;Automatic locality-friendly interface extension of numerical functions.;http://doi.acm.org/10.1145/2658761.2658772;83-92;10;Specialization and Cross-Cutting;
2014;Sam Kamin,María Jesús Garzarán,Baris Aktemur,Danqing Xu,Buse Yilmaz,Zhongbo Chen;Optimization by runtime specialization for sparse matrix-vector multiplication.;http://doi.acm.org/10.1145/2658761.2658773;93-102;10;Specialization and Cross-Cutting;
2014;Piotr Danilewski,Marcel Köster,Roland Leißa,Richard Membarth,Philipp Slusallek;Specialization through dynamic staging.;http://doi.acm.org/10.1145/2658761.2658774;103-112;10;Specialization and Cross-Cutting;
2014;Kenichi Asai;Compiling a reflective language using MetaOCaml.;http://doi.acm.org/10.1145/2658761.2658775;113-122;10;Language Tools;
2014;Christian Humer,Christian Wimmer,Christian Wirth,Andreas Wöß,Thomas Würthinger;A domain-specific language for building self-optimizing AST interpreters.;http://doi.acm.org/10.1145/2658761.2658776;123-132;10;Language Tools;
2014;James H. Hill,Dennis C. Feiock;Pin++: an object-oriented framework for writing pintools.;http://doi.acm.org/10.1145/2658761.2658777;133-141;9;Language Tools;
2013;Sebastian Erdweg,Felix Rieger;A framework for extensible languages.;http://doi.acm.org/10.1145/2517208.2517210;3-12;10;Extensible and domain-specific languages;
2013;Matthew Flatt;Submodules in racket: you want it when, again?;http://doi.acm.org/10.1145/2517208.2517211;13-22;10;Extensible and domain-specific languages;
2013;Robert Dyer 0001,Hridesh Rajan,Tien N. Nguyen;Declarative visitors to ease fine-grained source code mining with full history on billions of AST nodes.;http://doi.acm.org/10.1145/2517208.2517226;23-32;10;Extensible and domain-specific languages;
2013;Yuriy Solodkyy,Gabriel Dos Reis,Bjarne Stroustrup;Open pattern matching for C++.;http://doi.acm.org/10.1145/2517208.2517222;33-42;10;Programming languages;
2013;Marko Martin,Mira Mezini,Sebastian Erdweg;Template constructors for reusable object initialization.;http://doi.acm.org/10.1145/2517208.2517212;43-52;10;Programming languages;
2013;Julien Richard-Foy,Olivier Barais,Jean-Marc Jézéquel;Efficient high-level abstractions for web programming.;http://doi.acm.org/10.1145/2517208.2517227;53-60;8;Programming languages;
2013;Prodromos Gerakios,Aggelos Biboudis,Yannis Smaragdakis;Reified type parameters using Java annotations.;http://doi.acm.org/10.1145/2517208.2517223;61-64;4;Programming languages;
2013;Sandro Schulze,Jörg Liebig,Janet Siegmund,Sven Apel;Does the discipline of preprocessor annotations matter?: a controlled experiment.;http://doi.acm.org/10.1145/2517208.2517215;65-74;10;Product-line implementation;
2013;Flávio Medeiros,Márcio Ribeiro,Rohit Gheyi;Investigating preprocessor-based syntax errors.;http://doi.acm.org/10.1145/2517208.2517221;75-84;10;Product-line implementation;
2013;Dean Kramer,Samia Oussena,Peter Komisarczuk,Tony Clark;Using document-oriented GUIs in dynamic software product lines.;http://doi.acm.org/10.1145/2517208.2517214;85-94;10;Product-line implementation;
2013;Norbert Siegmund,Alexander von Rhein,Sven Apel;Family-based performance measurement.;http://doi.acm.org/10.1145/2517208.2517209;95-104;10;Analysis;
2013;Lukás Marek,Stephen Kell,Yudi Zheng,Lubomír Bulej,Walter Binder,Petr Tuma,Danilo Ansaloni,Aibek Sarimbekov,Andreas Sewe;ShadowVM: robust and comprehensive dynamic program analysis for the java platform.;http://doi.acm.org/10.1145/2517208.2517219;105-114;10;Analysis;
2013;Sergiy S. Kolesnikov,Alexander von Rhein,Claus Hunsen,Sven Apel;A comparison of product-based, feature-based, and family-based type checking.;http://doi.acm.org/10.1145/2517208.2517213;115-124;10;Analysis;
2013;Georg Ofenbeck,Tiark Rompf,Alen Stojanov,Martin Odersky,Markus Püschel;Spiral in scala: towards the systematic construction of generators for performance libraries.;http://doi.acm.org/10.1145/2517208.2517228;125-134;10;Staging and synthesis;
2013;Peter C. Chapin,Christian Skalka,Scott F. Smith,Michael Watson;Scalaness/nesT: type specialized staged programming for sensor networks.;http://doi.acm.org/10.1145/2517208.2517217;135-144;10;Staging and synthesis;
2013;Arvind K. Sujeeth,Austin Gibbons,Kevin J. Brown,HyoukJoong Lee,Tiark Rompf,Martin Odersky,Kunle Olukotun;Forge: generating a high performance DSL implementation from a declarative specification.;http://doi.acm.org/10.1145/2517208.2517220;145-154;10;Staging and synthesis;
2013;Darya Kurilova,Derek Rayside;On the simplicity of synthesizing linked data structure operations.;http://doi.acm.org/10.1145/2517208.2517225;155-158;4;Staging and synthesis;
2013;Deepak Dhungana,Andreas A. Falkner,Alois Haselböck;Generation of conjoint domain models for system-of-systems.;http://doi.acm.org/10.1145/2517208.2517224;159-168;10;Industrial applications;
2013;Fabio Paulo Basso,Raquel Mainardi Pillat,Toacy Cavalcante de Oliveira,Leandro Buss Becker;Supporting large scale model transformation reuse.;http://doi.acm.org/10.1145/2517208.2517218;169-178;10;Industrial applications;
2013;Kyoungho An,Takayuki Kuroda,Aniruddha S. Gokhale,Sumant Tambe,Andrea Sorbini;Model-driven generative framework for automated OMG DDS performance testing in the cloud.;http://doi.acm.org/10.1145/2517208.2517216;179-182;4;Industrial applications;
2012;Ferruccio Damiani,Luca Padovani,Ina Schaefer;A formal foundation for dynamic delta-oriented software product lines.;http://doi.acm.org/10.1145/2371401.2371403;1-10;10;"Software product lines; features";
2012;Thomas Thüm,Ina Schaefer,Martin Hentschel 0002,Sven Apel;Family-based deductive verification of software product lines.;http://doi.acm.org/10.1145/2371401.2371404;11-20;10;"Software product lines; features";
2012;Uwe Ryssel,Joern Ploennigs,Klaus Kabitzsch;Reasoning of feature models from derived features.;http://doi.acm.org/10.1145/2371401.2371405;21-30;10;"Software product lines; features";
2012;Derek Rayside,Vajih Montaghami,Francesca Leung,Albert Yuen,Kevin Xu,Daniel Jackson;Synthesizing iterators from abstraction functions.;http://doi.acm.org/10.1145/2371401.2371407;31-40;10;Generation;
2012;Geoffrey C. Hulette,Matthew J. Sottile,Allen D. Malony;Composing typemaps in Twig.;http://doi.acm.org/10.1145/2371401.2371408;41-49;9;Generation;
2012;Eyvind W. Axelsen,Stein Krogdahl;Package templates: a definition by semantics-preserving source-to-source transformations to efficient Java code.;http://doi.acm.org/10.1145/2371401.2371409;50-59;10;Generation;
2012;Petr Spacek,Christophe Dony,Chouki Tibermacine,Luc Fabresse;An inheritance system for structural & behavioral reuse in component-based software programming.;http://doi.acm.org/10.1145/2371401.2371411;60-69;10;"Software components; libraries";
2012;Huaxi (Yulin) Zhang,Lei Zhang,Christelle Urtado,Sylvain Vauttier,Marianne Huchard;A three-level component model in component based software development.;http://doi.acm.org/10.1145/2371401.2371412;70-79;10;"Software components; libraries";
2012;John Freeman,Jaakko Järvi,Gabriel Foust;HotDrink: a library for web user interfaces.;http://doi.acm.org/10.1145/2371401.2371413;80-83;4;"Software components; libraries";
2012;Taylor L. Riché,Rui C. Gonçalves,Bryan Marker,Don S. Batory;Pushouts in software architecture design.;http://doi.acm.org/10.1145/2371401.2371415;84-92;9;"Software architectures; adaptation";
2012;Hamid Bagheri,Kevin J. Sullivan;Pol: specification-driven synthesis of architectural code frameworks for platform-based applications.;http://doi.acm.org/10.1145/2371401.2371416;93-102;10;"Software architectures; adaptation";
2012;Tim Bauer,Martin Erwig,Alan Fern,Jervis Pinto;Faster program adaptation through reward attribution inference.;http://doi.acm.org/10.1145/2371401.2371417;103-111;9;"Software architectures; adaptation";
2012;Sven Efftinge,Moritz Eysholdt,Jan Köhnlein,Sebastian Zarnekow,Robert von Massow,Wilhelm Hasselbring,Michael Hanus;Xbase: implementing domain-specific languages for Java.;http://doi.acm.org/10.1145/2371401.2371419;112-121;10;Languages and language theory;
2012;Jon Rafkind,Matthew Flatt;Honu: syntactic extension for algebraic notation through enforestation.;http://doi.acm.org/10.1145/2371401.2371420;122-131;10;Languages and language theory;
2012;Eric Walkingshaw,Martin Erwig;A calculus for modeling and implementing variation.;http://doi.acm.org/10.1145/2371401.2371421;132-140;9;Languages and language theory;
2011;Marko Rosenmüller,Norbert Siegmund,Mario Pukall,Sven Apel;Tailoring dynamic software product lines.;http://doi.acm.org/10.1145/2047862.2047866;3-12;10;Software product lines;
2011;Don S. Batory,Peter Höfner,Jongwook Kim;Feature interactions, products, and composition.;http://doi.acm.org/10.1145/2047862.2047867;13-22;10;Software product lines;
2011;Márcio Ribeiro,Felipe Queiroz,Paulo Borba,Társis Tolêdo,Claus Brabrand,Sérgio Soares;On the impact of feature dependencies when maintaining preprocessor-based software product lines.;http://doi.acm.org/10.1145/2047862.2047868;23-32;10;Software product lines;
2011;Laís Neves,Leopoldo Teixeira,Demóstenes Sena,Vander Alves,Uirá Kulesza,Paulo Borba;Investigating the safe evolution of software product lines.;http://doi.acm.org/10.1145/2047862.2047869;33-42;10;Software product lines;
2011;Abdelhakim Hannousse,Rémi Douence,Gilles Ardourel;Static analysis of aspect interaction and composition in component models.;http://doi.acm.org/10.1145/2047862.2047871;43-52;10;Software components;
2011;William Otte,Aniruddha S. Gokhale,Douglas C. Schmidt,Johnny Willemsen;Infrastructure for component-based DDS application development.;http://doi.acm.org/10.1145/2047862.2047872;53-62;10;Software components;
2011;Yulin Li,Gordon S. Novak Jr.;Generation of geometric programs specified by diagrams.;http://doi.acm.org/10.1145/2047862.2047874;63-72;10;Applications;
2011;Andreas Steck,Alex Lotz,Christian Schlegel;Model-driven engineering and run-time model-usage in service robotics.;http://doi.acm.org/10.1145/2047862.2047875;73-82;10;Applications;
2011;Sander Daniël Vermolen,Guido Wachsmuth,Eelco Visser;Generating database migrations for evolving web applications.;http://doi.acm.org/10.1145/2047862.2047876;83-92;10;Applications;
2011;Olivier Danvy;Pragmatics for formal semantics.;http://doi.acm.org/10.1145/2047862.2047878;93-94;2;Tech talk 1;
2011;Gary J. Shubert;Application of model based development to flexible code generation.;http://doi.acm.org/10.1145/2047862.2047880;95-96;2;Keynote address 2;
2011;Kenichi Asai;Reflection in direct style.;http://doi.acm.org/10.1145/2047862.2047882;97-106;10;Runtime;
2011;Nathaniel Nystrom,Derek White,Kishen Das;Firepile: run-time compilation for GPUs in scala.;http://doi.acm.org/10.1145/2047862.2047883;107-116;10;Runtime;
2011;Shahram Esmaeilsabzali,Bernd Fischer 0002,Joanne M. Atlee;Monitoring aspects for the customization of automatically generated code for big-step models.;http://doi.acm.org/10.1145/2047862.2047884;117-126;10;Runtime;
2011;Ricky T. Lindeman,Lennart C. L. Kats,Eelco Visser;Declaratively defining domain-specific language debuggers.;http://doi.acm.org/10.1145/2047862.2047885;127-136;10;Runtime;
2011;B. J. Arnoldus,M. G. J. van den Brand,Alexander Serebrenik;Less is more: unparser-completeness of metalanguages for template engines.;http://doi.acm.org/10.1145/2047862.2047887;137-146;10;Theory;
2011;Vidar Slåtten,Frank Alexander Kraemer,Peter Herrmann;Towards automatic generation of formal specifications to validate and verify reliable distributed systems: a method exemplified by an industrial case study.;http://doi.acm.org/10.1145/2047862.2047888;147-156;10;Theory;
2011;Stefan Sobernig,Patrick Gaubatz,Mark Strembeck,Uwe Zdun;Comparing complexity of API designs: an exploratory experiment on DSL-based framework integration.;http://doi.acm.org/10.1145/2047862.2047890;157-166;10;Programming;
2011;Sebastian Erdweg,Lennart C. L. Kats,Tillmann Rendel,Christian Kästner,Klaus Ostermann,Eelco Visser;Growing a language environment with editor libraries.;http://doi.acm.org/10.1145/2047862.2047891;167-176;10;Programming;
2011;John Freeman,Jaakko Järvi,Wonseok Kim,Mat Marcus,Sean Parent;Helping programmers help users.;http://doi.acm.org/10.1145/2047862.2047892;177-184;8;Programming;
2011;John Launchbury;Theorem-based circuit derivation in cryptol.;http://doi.acm.org/10.1145/2047862.2047894;185-186;2;Tech talk 2;
2010;Dave Clarke,Michiel Helvensteijn,Ina Schaefer;Abstract delta modeling.;http://doi.acm.org/10.1145/1868294.1868298;13-22;10;Separation of concerns 1;
2010;Uwe Ryssel,Joern Ploennigs,Klaus Kabitzsch;Automatic variation-point identification in function-block-based models.;http://doi.acm.org/10.1145/1868294.1868299;23-32;10;Separation of concerns 1;
2010;Julio Sincero,Reinhard Tartler,Daniel Lohmann,Wolfgang Schröder-Preikschat;Efficient extraction and analysis of preprocessor-based variability.;http://doi.acm.org/10.1145/1868294.1868300;33-42;10;Separation of concerns 1;
2010;Arie Middelkoop,Atze Dijkstra,S. Doaitse Swierstra;Iterative type inference with attribute grammars.;http://doi.acm.org/10.1145/1868294.1868302;43-52;10;Languages and language technology 1;
2010;Matthias P. Krieger,Alexander Knapp,Burkhart Wolff;Automatic and efficient simulation of operation contracts.;http://doi.acm.org/10.1145/1868294.1868303;53-62;10;Languages and language technology 1;
2010;Yuheng Long,Sean L. Mooney,Tyler Sondag,Hridesh Rajan;Implicit invocation meets safe, implicit concurrency.;http://doi.acm.org/10.1145/1868294.1868304;63-72;10;Languages and language technology 1;
2010;Juan F. Navas,Jean-Philippe Babau,Jacques Pulou;A component-based run-time evolution infrastructure for resource-constrained embedded systems.;http://doi.acm.org/10.1145/1868294.1868306;73-82;10;Components;
2010;Christian Hofer,Klaus Ostermann;Modular domain-specific language components in scala.;http://doi.acm.org/10.1145/1868294.1868307;83-92;10;Components;
2010;Reinhard Wolfinger,Markus Löberbauer,Markus Jahn 0001,Hanspeter Mössenböck;Adding genericity to a plug-in framework.;http://doi.acm.org/10.1145/1868294.1868308;93-102;10;Components;
2010;Sandro Schulze,Sven Apel,Christian Kästner;Code clones in feature-oriented software product lines.;http://doi.acm.org/10.1145/1868294.1868310;103-112;10;Separation of concerns 2;
2010;Éric Tanter,Philippe Moret,Walter Binder,Danilo Ansaloni;Composition of dynamic analysis aspects.;http://doi.acm.org/10.1145/1868294.1868311;113-122;10;Separation of concerns 2;
2010;Thomas Würthinger,Walter Binder,Danilo Ansaloni,Philippe Moret,Hanspeter Mössenböck;Applications of enhanced dynamic code evolution for Java in GUI development and dynamic aspect-oriented programming.;http://doi.acm.org/10.1145/1868294.1868312;123-126;4;Separation of concerns 2;
2010;Tiark Rompf,Martin Odersky;Lightweight modular staging: a pragmatic approach to runtime code generation and compiled DSLs.;http://doi.acm.org/10.1145/1868294.1868314;127-136;10;Languages and language technology 2;
2010;Zoltán Porkoláb,Ábel Sinkovics;Domain-specific language integration with compile-time parser generator library.;http://doi.acm.org/10.1145/1868294.1868315;137-146;10;Languages and language technology 2;
2010;Kevin Atkinson,Matthew Flatt,Gary Lindstrom;ABI compatibility through a customizable language.;http://doi.acm.org/10.1145/1868294.1868316;147-156;10;Languages and language technology 2;
2010;Mirko Bordignon,Ulrik Pagh Schultz,Kasper Støy;Model-based kinematics generation for modular mechatronic toolkits.;http://doi.acm.org/10.1145/1868294.1868318;157-166;10;Generation;
2010;Weiyu Miao,Jeremy G. Siek;Incremental type-checking for type-reflective metaprograms.;http://doi.acm.org/10.1145/1868294.1868319;167-176;10;Generation;
2010;Neville Grech,Julian Rathke,Bernd Fischer 0002;JEqualityGen: generating equality and hashing methods.;http://doi.acm.org/10.1145/1868294.1868320;177-186;10;Generation;
2009;Jeremiah Willcock,Andrew Lumsdaine,Daniel J. Quinlan;Reusable, generic program analyses and transformations.;http://doi.acm.org/10.1145/1621607.1621611;5-14;10;Templates;
2009;Anya Helene Bagge,Valentin David,Magne Haveraaen;The axioms strike back: testing with concepts and axioms in C++.;http://doi.acm.org/10.1145/1621607.1621612;15-24;10;Templates;
2009;Ronald Garcia,Andrew Lumsdaine;Toward foundations for type-reflective metaprogramming.;http://doi.acm.org/10.1145/1621607.1621613;25-34;10;Templates;
2009;S. Hossein Sadat-Mohtasham,H. James Hoover;Transactional pointcuts: designation reification and advice of interrelated join points.;http://doi.acm.org/10.1145/1621607.1621615;35-44;10;Aspects;
2009;Shumpei Akai,Shigeru Chiba;Extending AspectJ for separating regions.;http://doi.acm.org/10.1145/1621607.1621616;45-54;10;Aspects;
2009;Yanhong A. Liu,Michael Gorbovitski,Scott D. Stoller;A language and framework for invariant-driven transformations.;http://doi.acm.org/10.1145/1621607.1621617;55-64;10;Aspects;
2009;Stefan Wehr,Peter Thiemann;JavaGI in the battlefield: practical experience with generalized interfaces.;http://doi.acm.org/10.1145/1621607.1621619;65-74;10;Components;
2009;Phil McGachey,Antony L. Hosking,J. Eliot B. Moss;Classifying Java class transformations for pervasive virtualized access.;http://doi.acm.org/10.1145/1621607.1621620;75-84;10;Components;
2009;Alex Villazón,Walter Binder,Danilo Ansaloni,Philippe Moret;Advanced runtime adaptation for Java.;http://doi.acm.org/10.1145/1621607.1621621;85-94;10;Components;
2009;Alex Villazón,Walter Binder,Danilo Ansaloni,Philippe Moret;HotWave: creating adaptive tools with dynamic aspect-oriented programming in Java.;http://doi.acm.org/10.1145/1621607.1621622;95-98;4;Components;
2009;Florian Heidenreich,Jendrik Johannes,Mirko Seifert,Christian Wende,Marcel Böhme;Generating safe template languages.;http://doi.acm.org/10.1145/1621607.1621624;99-108;10;Generation;
2009;Soonho Kong,Wontae Choi,Kwangkeun Yi;Abstract parsing for two-staged languages with concatenation.;http://doi.acm.org/10.1145/1621607.1621625;109-116;8;Generation;
2009;Srinivas Nedunuri,William R. Cook;Synthesis of fast programs for maximum segment sum problems.;http://doi.acm.org/10.1145/1621607.1621626;117-126;10;Generation;
2009;Ansgar Radermacher,Arnaud Cuccuru,Sébastien Gérard,François Terrier;Generating execution infrastructures for component-oriented specifications with a model driven toolchain: a case study for MARTE's GCM and real-time annotations.;http://doi.acm.org/10.1145/1621607.1621628;127-136;10;Applications;
2009;Damien Cassou,Benjamin Bertran,Nicolas Loriant,Charles Consel;A generative programming approach to developing pervasive computing systems.;http://doi.acm.org/10.1145/1621607.1621629;137-146;10;Applications;
2009;Jaakko Järvi,Mat Marcus,Sean Parent,John Freeman,Jacob N. Smith;Algorithms for user interfaces.;http://doi.acm.org/10.1145/1621607.1621630;147-156;10;Applications;
2009;Christian Kästner,Sven Apel,Martin Kuhlemann;A model of refactoring physically and virtually separated features.;http://doi.acm.org/10.1145/1621607.1621632;157-166;10;Features;
2009;Frans Sanen,Eddy Truyen,Wouter Joosen;Mapping problem-space to solution-space features: a feature interaction approach.;http://doi.acm.org/10.1145/1621607.1621633;167-176;10;Features;
2009;Martin Kuhlemann,Don S. Batory,Christian Kästner;Safe composition of non-monotonic features.;http://doi.acm.org/10.1145/1621607.1621634;177-186;10;Features;
2008;Marko Rosenmüller,Norbert Siegmund,Gunter Saake,Sven Apel;Code generation to support static and dynamic composition of software product lines.;http://doi.acm.org/10.1145/1449913.1449917;3-12;10;Technical papers 1;
2008;Marcílio Mendonça,Andrzej Wasowski,Krzysztof Czarnecki,Donald D. Cowan;Efficient compilation techniques for large scale feature models.;http://doi.acm.org/10.1145/1449913.1449918;13-22;10;Technical papers 1;
2008;Chang Hwan Peter Kim,Christian Kästner,Don S. Batory;On the modularity of feature interactions.;http://doi.acm.org/10.1145/1449913.1449919;23-34;12;Technical papers 1;
2008;Don S. Batory;Using modern mathematics as an FOSD modeling language.;http://doi.acm.org/10.1145/1449913.1449921;35-44;10;Technical papers 2;
2008;Ye Zhang 0002,Torben Amtoft,Flemming Nielson;From generic to specific: off-line optimization for a general constraint solver.;http://doi.acm.org/10.1145/1449913.1449922;45-54;10;Technical papers 2;
2008;Tom Rothamel,Yanhong A. Liu;Generating incremental implementations of object-set queries.;http://doi.acm.org/10.1145/1449913.1449923;55-66;12;Technical papers 2;
2008;Peter Gottschling,Andrew Lumsdaine;Integrating semantics and compilation: using c++ concepts to develop robust and efficient reusable libraries.;http://doi.acm.org/10.1145/1449913.1449925;67-76;10;Technical papers 3;
2008;Ewen Denney,Bernd Fischer 0002;Generating customized verifiers for automatically generated code.;http://doi.acm.org/10.1145/1449913.1449926;77-88;12;Technical papers 3;
2008;Jaakko Järvi,Mat Marcus,Sean Parent,John Freeman,Jacob N. Smith;Property models: from incidental algorithms to reusable components.;http://doi.acm.org/10.1145/1449913.1449927;89-98;10;Technical papers 3;
2008;Erik Meijer;Fundamentalist functional programming.;http://doi.acm.org/10.1145/1449913.1449929;99-100;2;Keynote address;
2008;Sven Apel,Christian Kästner,Christian Lengauer;Feature featherweight java: a calculus for feature-oriented programming and stepwise refinement.;http://doi.acm.org/10.1145/1449913.1449931;101-112;12;Technical papers 4;
2008;Tetsuo Kamina,Tetsuo Tamai;Lightweight dependent classes.;http://doi.acm.org/10.1145/1449913.1449932;113-124;12;Technical papers 4;
2008;Michael Lienhardt,Alan Schmitt,Jean-Bernard Stefani;Typing communicating component assemblages.;http://doi.acm.org/10.1145/1449913.1449933;125-136;12;Technical papers 4;
2008;Christian Hofer,Klaus Ostermann,Tillmann Rendel,Adriaan Moors;Polymorphic embedding of dsls.;http://doi.acm.org/10.1145/1449913.1449935;137-148;12;Technical papers 5;
2008;Julien Mercadal,Nicolas Palix,Charles Consel,Julia L. Lawall;Pantaxou: a domain-specific language for developing safe coordination services.;http://doi.acm.org/10.1145/1449913.1449936;149-160;12;Technical papers 5;
2008;Sven Apel,Christian Kästner,Don S. Batory;Program refactoring using functional aspects.;http://doi.acm.org/10.1145/1449913.1449938;161-170;10;Technical papers 6;
2008;Ilie Savga,Michael Rudolf 0001,Sebastian Goetz,Uwe Aßmann;Practical refactoring-based framework upgrade.;http://doi.acm.org/10.1145/1449913.1449939;171-180;10;Technical papers 6;
2008;Vinay Kulkarni,Sreedhar Reddy;An abstraction for reusable MDD components: model-based generation of model-based code generators.;http://doi.acm.org/10.1145/1449913.1449940;181-184;4;Technical papers 6;
2007;Martin Bravenboer,Eelco Dolstra,Eelco Visser;Preventing injection attacks with syntax embeddings.;http://doi.acm.org/10.1145/1289971.1289975;3-12;10;Session 1;
2007;Joseph Gil,Keren Lenz;Simple and safe SQL queries with c++ templates.;http://doi.acm.org/10.1145/1289971.1289976;13-24;12;Session 1;
2007;Jeroen Arnoldus,Jeanot Bijpost,Mark van den Brand;Repleo: a syntax-safe template engine.;http://doi.acm.org/10.1145/1289971.1289977;25-32;8;Session 1;
2007;Georg Jung,John Hatcliff;A type-centric framework for specifying heterogeneous, large-scale, component-oriented, architectures.;http://doi.acm.org/10.1145/1289971.1289979;33-42;10;Session 2;
2007;Michael Lienhardt,Alan Schmitt,Jean-Bernard Stefani;Oz/K: a kernel language for component-based open programming.;http://doi.acm.org/10.1145/1289971.1289980;43-52;10;Session 2;
2007;Florence Maraninchi,Tayeb Bouhadiba;42: programmable models of computation for a component-based approach to heterogeneous embedded systems.;http://doi.acm.org/10.1145/1289971.1289981;53-62;10;Session 2;
2007;Eric Van Wyk,August Schwerdfeger;Context-aware scanning for parsing extensible languages.;http://doi.acm.org/10.1145/1289971.1289983;63-72;10;Session 3;
2007;Jaakko Järvi,Matthew A. Marcus,Jacob N. Smith;Library composition and adaptation using c++ concepts.;http://doi.acm.org/10.1145/1289971.1289984;73-82;10;Session 3;
2007;Bran Selic;Challenges in generating qos-constrained software implementations.;http://doi.acm.org/10.1145/1289971.1289986;83-84;2;Keynote session;
2007;Miguel A. Laguna,Bruno González-Baixauli,José M. Marqués;Seamless development of software product lines.;http://doi.acm.org/10.1145/1289971.1289988;85-94;10;Session 4;
2007;Sahil Thaker,Don S. Batory,David Kitchin,William R. Cook;Safe composition of product lines.;http://doi.acm.org/10.1145/1289971.1289989;95-104;10;Session 4;
2007;Salvador Trujillo,Maider Azanza,Oscar Díaz;Generative metaprogramming.;http://doi.acm.org/10.1145/1289971.1289990;105-114;10;Session 4;
2007;Todd L. Veldhuizen;Parsimony principles for software components and metalanguages.;http://doi.acm.org/10.1145/1289971.1289992;115-122;8;Session 5;
2007;Peter Pirkelbauer,Yuriy Solodkyy,Bjarne Stroustrup;Open multi-methods for c++.;http://doi.acm.org/10.1145/1289971.1289993;123-134;12;Session 5;
2007;Ryan Culpepper,Matthias Felleisen;Debugging macros.;http://doi.acm.org/10.1145/1289971.1289994;135-144;10;Session 5;
2007;Tetsuo Kamina,Tetsuo Tamai;Lightweight scalable components.;http://doi.acm.org/10.1145/1289971.1289996;145-154;10;Session 6;
2007;Philip Weaver,Garrin Kimmell,Nicolas Frisby,Perry Alexander;Constructing language processors with algebra combinators.;http://doi.acm.org/10.1145/1289971.1289997;155-164;10;Session 6;
2007;Pascal Fradet,Stéphane Hong Tuan Ha;Aspects of availability.;http://doi.acm.org/10.1145/1289971.1289999;165-174;10;Session 7;
2007;Ilie Savga,Michael Rudolf 0001;Refactoring-based support for binary compatibility in evolving frameworks.;http://doi.acm.org/10.1145/1289971.1290000;175-184;10;Session 7;
2007;Victor L. Winter,Azamatbek Mametjanov;Generative programming techniques for Java library migration.;http://doi.acm.org/10.1145/1289971.1290001;185-196;12;Session 7;
2006;Sam Kamin,Baris Aktemur,Michael Katelman;Staging static analyses for program generation.;http://doi.acm.org/10.1145/1173706.1173708;1-10;10;Staging;
2006;Marcos Viera,Alberto Pardo;A multi-stage language with intensional analysis.;http://doi.acm.org/10.1145/1173706.1173709;11-20;10;Staging;
2006;Jonathan Riehl;Assimilating MetaBorg: : embedding language tools in languages.;http://doi.acm.org/10.1145/1173706.1173710;21-28;8;Staging;
2006;Gabriel A. Moreno;Creating custom containers with generative techniques.;http://doi.acm.org/10.1145/1173706.1173712;29-38;10;Components;
2006;Alexander Stuckenholz,Andre Osterloh;Safe component updates.;http://doi.acm.org/10.1145/1173706.1173713;39-48;10;Components;
2006;John H. Reppy,Chunyan Song;Application-specific foreign-interface generation.;http://doi.acm.org/10.1145/1173706.1173714;49-58;10;Components;
2006;Sven Apel,Don S. Batory;When to use features and aspects?: a case study.;http://doi.acm.org/10.1145/1173706.1173716;59-68;10;Advanced aspects;
2006;Yoshisato Yanagisawa,Kenichi Kourai,Shigeru Chiba;A dynamic aspect-oriented system for OS kernels.;http://doi.acm.org/10.1145/1173706.1173717;69-78;10;Advanced aspects;
2006;Rémi Douence,Didier Le Botlan,Jacques Noyé,Mario Südholt;Concurrent aspects.;http://doi.acm.org/10.1145/1173706.1173718;79-88;10;Advanced aspects;
2006;Eli Tilevich,Yannis Smaragdakis;Transparent program transformationsin the presence of opaque code.;http://doi.acm.org/10.1145/1173706.1173720;89-94;6;Short papers;
2006;Jorge Cláudio Cordeiro Pires Mascena,Silvio Romero de Lemos Meira,Eduardo Santana de Almeida,Vinicius Cardoso Garcia;Towards an effective integrated reuse environment.;http://doi.acm.org/10.1145/1173706.1173721;95-100;6;Short papers;
2006;Frances Perry,Limin Jia,David Walker;Expressing heap-shape contracts in linear logic.;http://doi.acm.org/10.1145/1173706.1173723;101-110;10;Safety and verification;
2006;Edwin Brady,Kevin Hammond;A verified staged interpreter is a verified compiler.;http://doi.acm.org/10.1145/1173706.1173724;111-120;10;Safety and verification;
2006;Ewen Denney,Bernd Fischer 0002;A generic annotation inference algorithm for the safety certification of automatically generated code.;http://doi.acm.org/10.1145/1173706.1173725;121-130;10;Safety and verification;
2006;Janina Reeder,Robert Giegerich;A graphical programming system for molecular motif search.;http://doi.acm.org/10.1145/1173706.1173727;131-140;10;Applications;
2006;Daniel Fontijne;Gaigen 2: a geometric algebra implementation generator.;http://doi.acm.org/10.1145/1173706.1173728;141-150;10;Applications;
2006;David Broman,Kaj Nyström,Peter Fritzson;Determining over- and under-constrained systems of equations using structural constraint delta.;http://doi.acm.org/10.1145/1173706.1173729;151-160;10;Applications;
2006;Peter Barron,Vinny Cahill;YABS: a domain-specific language for pervasive computing based on stigmergy.;http://doi.acm.org/10.1145/1173706.1173730;285-294;10;Applications;
2006;Ralf Lämmel,Klaus Ostermann;Software extension and integration with type classes.;http://doi.acm.org/10.1145/1173706.1173732;161-170;10;Measurement and evaluation;
2006;Walter Binder,Jarle Hulaas;Flexible and efficient measurement of dynamic bytecode metrics.;http://doi.acm.org/10.1145/1173706.1173733;171-180;10;Measurement and evaluation;
2006;Westley Weimer;Patches as better bug reports.;http://doi.acm.org/10.1145/1173706.1173734;181-190;10;Measurement and evaluation;
2006;Salvador Trujillo,Don S. Batory,Oscar Díaz;Feature refactoring a multi-representation program into a product line.;http://doi.acm.org/10.1145/1173706.1173736;191-200;10;Program families;
2006;Vander Alves,Rohit Gheyi,Tiago Massoni,Uirá Kulesza,Paulo Borba,Carlos José Pereira de Lucena;Refactoring product lines.;http://doi.acm.org/10.1145/1173706.1173737;201-210;10;Program families;
2006;Krzysztof Czarnecki,Krzysztof Pietroszek;Verifying feature-based model templates against well-formedness OCL constraints.;http://doi.acm.org/10.1145/1173706.1173738;211-220;10;Program families;
2006;Gary T. Leavens,Jean-Raymond Abrial,Don S. Batory,Michael J. Butler,Alessandro Coglio,Kathi Fisler,Eric C. R. Hehner,Cliff B. Jones,Dale Miller,Simon L. Peyton Jones,Murali Sitaraman,Douglas R. Smith,Aaron Stump;Roadmap for enhanced languages and methods to aid verification.;http://doi.acm.org/10.1145/1173706.1173740;221-236;16;Panel discussion;
2006;Christian Prehofer;Semantic reasoning about feature composition via multiple aspect-weavings.;http://doi.acm.org/10.1145/1173706.1173742;237-242;6;Short papers;
2006;Rui Shi,Chiyan Chen,Hongwei Xi;Distributed meta-programming.;http://doi.acm.org/10.1145/1173706.1173743;243-248;6;Short papers;
2006;Frédéric Jouault,Jean Bézivin,Ivan Kurtev;TCS: a DSL for the specification of textual concrete syntaxes in model engineering.;http://doi.acm.org/10.1145/1173706.1173744;249-254;6;Short papers;
2006;Zoltán Porkoláb,József Mihalicza,Ádám Sipos;Debugging C++ template metaprograms.;http://doi.acm.org/10.1145/1173706.1173746;255-264;10;Compilation;
2006;Anya Helene Bagge,Valentin David,Magne Haveraaen,Karl Trygve Kalleberg;Stayin' alert: : moulding failure and exceptions to your needs.;http://doi.acm.org/10.1145/1173706.1173747;265-274;10;Compilation;
2006;Manuel Fähndrich,Michael Carbin,James R. Larus;Reflective program generation with patterns.;http://doi.acm.org/10.1145/1173706.1173748;275-284;10;Compilation;
2005;Charles Consel,Fabien Latry,Laurent Réveillère,Pierre Cointe;A Generative Programming Approach to Developing DSL Compilers.;http://dx.doi.org/10.1007/11561347_4;29-46;18;Domain Specific Languages;
2005;Andrew Moss,Henk L. Muller;Efficient Code Generation for a Domain Specific Language.;http://dx.doi.org/10.1007/11561347_5;47-62;16;Domain Specific Languages;
2005;Christophe Alias,Denis Barthou;On Domain-Specific Languages Reengineering.;http://dx.doi.org/10.1007/11561347_6;63-77;15;Domain Specific Languages;
2005;Julia L. Lawall,Hervé Duchesne,Gilles Muller,Anne-Françoise Le Meur;Bossa Nova: Introducing Modularity into the Bossa Domain-Specific Language.;http://dx.doi.org/10.1007/11561347_7;78-93;16;Domain Specific Languages;
2005;Zhen Yao,Qilong Zheng,Guoliang Chen 0001;AOP++: A Generic Aspect-Oriented Programming Framework in C++.;http://dx.doi.org/10.1007/11561347_8;94-108;15;Aspect-Oriented Programming;
2005;Naoyasu Ubayashi,Tetsuo Tamai,Shinji Sano,Yusaku Maeno,Satoshi Murakami;Model Compiler Construction Based on Aspect-Oriented Mechanisms.;http://dx.doi.org/10.1007/11561347_9;109-124;16;Aspect-Oriented Programming;
2005;Sven Apel,Thomas Leich,Marko Rosenmüller,Gunter Saake;FeatureC++: On the Symbiosis of Feature-Oriented and Aspect-Oriented Programming.;http://dx.doi.org/10.1007/11561347_10;125-140;16;Aspect-Oriented Programming;
2005;Pengcheng Wu,Karl J. Lieberherr;Shadow Programming: Reasoning About Programs Using Lexical Join Point Information.;http://dx.doi.org/10.1007/11561347_11;141-156;16;Aspect-Oriented Programming;
2005;Martin Bravenboer,Rob Vermaas,Jurgen J. Vinju,Eelco Visser;Generalized Type-Based Disambiguation of Meta Programs with Concrete Object Syntax.;http://dx.doi.org/10.1007/11561347_12;157-172;16;Meta-programming and Transformation;
2005;Éric Tanter,Jacques Noyé;A Versatile Kernel for Multi-language AOP.;http://dx.doi.org/10.1007/11561347_13;173-188;16;Meta-programming and Transformation;
2005;Torben Æ. Mogensen;Semi-inversion of Guarded Equations.;http://dx.doi.org/10.1007/11561347_14;189-204;16;Meta-programming and Transformation;
2005;Saverio Perugini,Naren Ramakrishnan;A Generative Programming Approach to Interactive Information Retrieval: Insights and Experiences.;http://dx.doi.org/10.1007/11561347_15;205-220;16;Generative Techniques;
2005;Baris Aktemur,Joel Jones,Samuel N. Kamin,Lars Clausen;Optimizing Marshalling by Run-Time Program Generation.;http://dx.doi.org/10.1007/11561347_16;221-236;16;Generative Techniques;
2005;Yang Jun,Stan Jarzabek;Applying a Generative Technique for Enhanced Genericity and Maintainability on the J2EE Platform.;http://dx.doi.org/10.1007/11561347_17;237-255;19;Generative Techniques;
2005;Jacques Carette,Oleg Kiselyov;Multi-stage Programming with Functors and Monads: Eliminating Abstraction Overhead from Generic Code.;http://dx.doi.org/10.1007/11561347_18;256-274;19;Multi-stage Programming;
2005;Jason Eckhardt,Roumen Kaiabachev,Emir Pasalic,Kedar N. Swadi,Walid Taha;Implicitly Heterogeneous Multi-stage Programming.;http://dx.doi.org/10.1007/11561347_19;275-292;18;Multi-stage Programming;
2005;Samuel N. Kamin,Baris Aktemur,Philip Morton;Source-Level Optimization of Run-Time Program Generators.;http://dx.doi.org/10.1007/11561347_20;293-308;16;Generative Techniques;
2005;Shan Shan Huang,David Zook,Yannis Smaragdakis;Statically Safe Program Generation with SafeGen.;http://dx.doi.org/10.1007/11561347_21;309-326;18;Generative Techniques;
2005;Dirk Draheim,Christof Lutteroth,Gerald Weber;A Type System for Reflective Program Generators.;http://dx.doi.org/10.1007/11561347_22;327-341;15;Generative Techniques;
2005;Krister Åhlander;Sorting Out the Relationships Between Pairs of Iterators, Values, and References.;http://dx.doi.org/10.1007/11561347_23;342-356;15;Generative Techniques;
2005;Steffen Priebe;Preprocessing Eden with Template Haskell.;http://dx.doi.org/10.1007/11561347_24;357-372;16;Components and Templates;
2005;Ryan Culpepper,Scott Owens,Matthew Flatt;Syntactic Abstraction in Component Interfaces.;http://dx.doi.org/10.1007/11561347_25;373-388;16;Components and Templates;
2005;Daniel Hirschkoff,Tom Hirschowitz,Damien Pous,Alan Schmitt,Jean-Bernard Stefani;Component-Oriented Programming with Sharing: Containment is Not Ownership.;http://dx.doi.org/10.1007/11561347_26;389-404;16;Components and Templates;
2005;Jeremy G. Siek,Andrew Lumsdaine;Language Requirements for Large-Scale Generic Libraries.;http://dx.doi.org/10.1007/11561347_27;405-421;17;Generic Programming;
2005;Krzysztof Czarnecki,Michal Antkiewicz;Mapping Features to Models: A Template Approach Based on Superimposed Variants.;http://dx.doi.org/10.1007/11561347_28;422-437;16;Generic Programming;
2005;Mónica Pinto,Daniel Jiménez,Lidia Fuentes;Developing Dynamic and Adaptable Applications with CAM/DAOP: A Virtual Office Application.;http://dx.doi.org/10.1007/11561347_29;438-441;4;Demonstrations;
2005;Risto Pohjonen;Metamodeling Made Easy - MetaEdit+ (Tool Demonstration).;http://dx.doi.org/10.1007/11561347_30;442-446;5;Demonstrations;
2004;David Zook,Shan Shan Huang,Yannis Smaragdakis;Generating AspectJ Programs with Meta-AspectJ.;http://dx.doi.org/10.1007/978-3-540-30175-2_1;1-18;18;Aspect Orientation;
2004;Sean McDirmid,Wilson C. Hsieh;Splice: Aspects That Analyze Programs.;http://dx.doi.org/10.1007/978-3-540-30175-2_2;19-38;20;Aspect Orientation;
2004;Douglas R. Smith;A Generative Approach to Aspect-Oriented Programming.;http://dx.doi.org/10.1007/978-3-540-30175-2_3;39-54;16;Aspect Orientation;
2004;Daniel Lohmann,Georg Blaschke,Olaf Spinczyk;Generic Advice: On the Combination of AOP with Generative Programming in AspectC++.;http://dx.doi.org/10.1007/978-3-540-30175-2_4;55-74;20;Aspect Orientation;
2004;Awais Rashid,Nicholas A. Leidenfrost;Supporting Flexible Object Database Evolution with Aspects.;http://dx.doi.org/10.1007/978-3-540-30175-2_5;75-94;20;Aspect Orientation;
2004;Rémi Douence,Luc Teboul;A Pointcut Language for Control-Flow.;http://dx.doi.org/10.1007/978-3-540-30175-2_6;95-114;20;Aspect Orientation;
2004;Andrew Jackson,Siobhán Clarke;SourceWeave.NET: Cross-Language Aspect-Oriented Programming.;http://dx.doi.org/10.1007/978-3-540-30175-2_7;115-135;21;Aspect Orientation;
2004;Emir Pasalic,Nathan Linger;Meta-programming with Typed Object-Language Representations.;http://dx.doi.org/10.1007/978-3-540-30175-2_8;136-167;32;Staged Programming;
2004;Gregory Neverov,Paul Roe;Metaphor: A Multi-stage, Object-Oriented Programming Language.;http://dx.doi.org/10.1007/978-3-540-30175-2_9;168-185;18;Staged Programming;
2004;Sean Seefried,Manuel M. T. Chakravarty,Gabriele Keller;Optimising Embedded DSLs Using Template Haskell.;http://dx.doi.org/10.1007/978-3-540-30175-2_10;186-205;20;Staged Programming;
2004;Davide Ancona,Eugenio Moggi;A Fresh Calculus for Name Management.;http://dx.doi.org/10.1007/978-3-540-30175-2_11;206-224;19;Types of Meta-programming;
2004;Ryan Culpepper,Matthias Felleisen;Taming Macros.;http://dx.doi.org/10.1007/978-3-540-30175-2_12;225-243;19;Types of Meta-programming;
2004;Ulrik Pagh Schultz;A Unification of Inheritance and Automatic Program Specialization.;http://dx.doi.org/10.1007/978-3-540-30175-2_13;244-265;22;Types of Meta-programming;
2004;István Zólyomi,Zoltán Porkoláb;Towards a General Template Introspection Library.;http://dx.doi.org/10.1007/978-3-540-30175-2_14;266-282;17;Meta-programming;
2004;Vasian Cepa,Mira Mezini;Declaring and Enforcing Dependencies Between .NET Custom Attributes.;http://dx.doi.org/10.1007/978-3-540-30175-2_15;283-297;15;Meta-programming;
2004;Attila Vizhanyo,Aditya Agrawal,Feng Shi;Towards Generation of Efficient Transformations.;http://dx.doi.org/10.1007/978-3-540-30175-2_16;298-316;19;Meta-programming;
2004;Rainer Hauser,Jana Koehler;Compiling Process Graphs into Executable Code.;http://dx.doi.org/10.1007/978-3-540-30175-2_17;317-336;20;Model-Driven Approaches;
2004;George T. Edwards,Gan Deng,Douglas C. Schmidt,Aniruddha S. Gokhale,Balachandran Natarajan;Model-Driven Configuration and Deployment of Component Middleware Publish/Subscribe Services.;http://dx.doi.org/10.1007/978-3-540-30175-2_18;337-360;24;Model-Driven Approaches;
2004;Jeffrey G. Gray,Jing Zhang 0003,Yuehua Lin,Suman Roychoudhury,Hui Wu,Rajesh Sudarsan,Aniruddha S. Gokhale,Sandeep Neema,Feng Shi,Ted Bapty;Model-Driven Program Transformation of a Large Avionics Framework.;http://dx.doi.org/10.1007/978-3-540-30175-2_19;361-378;18;Model-Driven Approaches;
2004;Jia Liu,Don S. Batory;Automatic Remodularization and Optimized Synthesis of Product-Families.;http://dx.doi.org/10.1007/978-3-540-30175-2_20;379-395;17;Product Lines;
2004;Jernej Kovse,Christian Gebauer;VS-Gen: A Case Study of a Product Line for Versioning Systems.;http://dx.doi.org/10.1007/978-3-540-30175-2_21;396-415;20;Product Lines;
2004;Stéphane Bonnet,Olivier Potonniée,Raphaël Marvie,Jean-Marc Geib;A Model-Driven Approach for Smart Card Configuration.;http://dx.doi.org/10.1007/978-3-540-30175-2_22;416-435;20;Product Lines;
2004;Julia L. Lawall,Anne-Françoise Le Meur,Gilles Muller;On Designing a Target-Independent DSL for Safe OS Process-Scheduling Components.;http://dx.doi.org/10.1007/978-3-540-30175-2_23;436-455;20;Domain-Specific Languages and Generation;
2004;Liam Peyton,Arif Rajwani;A Generative Framework for Managed Services.;http://dx.doi.org/10.1007/978-3-540-30175-2_24;456-468;13;Domain-Specific Languages and Generation;
2004;Luca Padovani,Claudio Sacerdoti Coen,Stefano Zacchiroli;A Generative Approach to the Implementation of Language Bindings for the Document Object Model.;http://dx.doi.org/10.1007/978-3-540-30175-2_25;469-487;19;Domain-Specific Languages and Generation;
2003;Charles Consel,Hédi Hamdi,Laurent Réveillère,Lenin Singaravelu,Haiyan Yu,Calton Pu;Spidle: A DSL Approach to Specifying Streaming Applications.;http://dx.doi.org/10.1007/978-3-540-39815-8_1;1-17;17;Domain-Specific Languages;
2003;Daniel Kästner;TDL: A Hardware Description Language for Retargetable Postpass Optimizations and Analyses.;http://dx.doi.org/10.1007/978-3-540-39815-8_2;18-36;19;Domain-Specific Languages;
2003;Kevin Hammond,Greg Michaelson;Hume: A Domain-Specific Language for Real-Time Embedded Systems.;http://dx.doi.org/10.1007/978-3-540-39815-8_3;37-56;20;Domain-Specific Languages;
2003;Cristiano Calcagno,Walid Taha,Liwen Huang,Xavier Leroy;Implementing Multi-stage Languages Using ASTs, Gensym, and Reflection.;http://dx.doi.org/10.1007/978-3-540-39815-8_4;57-76;20;Staged Programming;
2003;Zhenghao Wang,Richard R. Muntz;On Stage Ordering in Staged Computation.;http://dx.doi.org/10.1007/978-3-540-39815-8_5;77-96;20;Staged Programming;
2003;Walid Taha,Patricia Johann;Staged Notational Definitions.;http://dx.doi.org/10.1007/978-3-540-39815-8_6;97-116;20;Staged Programming;
2003;Olivier Danvy;A Journey from Interpreters to Compilers and Virtual Machines.;http://dx.doi.org/10.1007/978-3-540-39815-8_7;117;1;Invited Talk;
2003;Mónica Pinto,Lidia Fuentes,José M. Troya;DAOP-ADL: An Architecture Description Language for Dynamic Component and Aspect-Based Development.;http://dx.doi.org/10.1007/978-3-540-39815-8_8;118-137;20;Modeling to Code;
2003;Steven Nordstrom,Shweta Shetty,Kumar Gaurav Chhokra,Jonathan Sprinkle,Brandon Eames,Ákos Lédeczi;ANEMIC: Automatic Interface Enabler for Model Integrated Computing.;http://dx.doi.org/10.1007/978-3-540-39815-8_9;138-150;13;Modeling to Code;
2003;Jeff Gray,Ted Bapty,Sandeep Neema,Douglas C. Schmidt,Aniruddha S. Gokhale,Balachandran Natarajan;An Approach for Supporting Aspect-Oriented Domain Modeling.;http://dx.doi.org/10.1007/978-3-540-39815-8_10;151-168;18;Aspect-Orientation;
2003;Mariano Cilia,Michael Haupt,Mira Mezini,Alejandro P. Buchmann;The Convergence of AOP and Active Databases: Towards Reactive Middleware.;http://dx.doi.org/10.1007/978-3-540-39815-8_11;169-188;20;Aspect-Orientation;
2003;Yoshiki Sato,Shigeru Chiba,Michiaki Tatsubori;A Selective, Just-in-Time Aspect Weaver.;http://dx.doi.org/10.1007/978-3-540-39815-8_12;189-208;20;Aspect-Orientation;
2003;István Zólyomi,Zoltán Porkoláb,Tamás Kozsik;An Extension to the Subtype Relationship in C++ Implemented with Template Metaprogramming.;http://dx.doi.org/10.1007/978-3-540-39815-8_13;209-227;19;Meta-programming and Language Extension;
2003;Jaakko Järvi,Jeremiah Willcock,Andrew Lumsdaine;Concept-Controlled Polymorphism.;http://dx.doi.org/10.1007/978-3-540-39815-8_14;228-244;17;Meta-programming and Language Extension;
2003;Thomas Cleenewerck;Component-Based DSL Development.;http://dx.doi.org/10.1007/978-3-540-39815-8_15;245-264;20;Meta-programming and Language Extension;
2003;Peri L. Tarr;Towards a More Piece-ful World.;http://dx.doi.org/10.1007/978-3-540-39815-8_16;265-266;2;Invited Talk;
2003;Vaclav Cechticky,Philippe Chevalley,Alessandro Pasetti,Walter Schaufelberger;A Genertative Approach to Framework Instantiation.;http://dx.doi.org/10.1007/978-3-540-39815-8_17;267-286;20;Automating Design-to-Code Transitions;
2003;Daniel von Dincklage;Making Patterns Explicit with Metaprogramming.;http://dx.doi.org/10.1007/978-3-540-39815-8_18;287-306;20;Automating Design-to-Code Transitions;
2003;João Saraiva,S. Doaitse Swierstra;Generating Spreadsheet-Like Tools from Strong Attribute Grammars.;http://dx.doi.org/10.1007/978-3-540-39815-8_19;307-323;17;Principled Domain-Specific Approaches;
2003;Reza Ziaei,Gul Agha;SynchNet: A Petri Net Based Coordination Language for Distributed Objects.;http://dx.doi.org/10.1007/978-3-540-39815-8_20;324-343;20;Principled Domain-Specific Approaches;
2003;Daniel Elphick,Michael Leuschel,Simon J. Cox;Partial Evaluation of MATLAB.;http://dx.doi.org/10.1007/978-3-540-39815-8_21;344-363;20;Principled Domain-Specific Approaches;
2003;Shigeru Chiba,Muga Nishizawa;An Easy-to-Use Toolkit for Efficient Java Bytecode Translators.;http://dx.doi.org/10.1007/978-3-540-39815-8_22;364-376;13;Generationn and Translation;
2003;Matthew J. Rutherford,Alexander L. Wolf;A Case for Test-Code Generation in Model-Driven Systems.;http://dx.doi.org/10.1007/978-3-540-39815-8_23;377-396;20;Generationn and Translation;
2002;Giuseppe Attardi,Antonio Cisternino;Self Reflection for Adaptive Programming.;http://dx.doi.org/10.1007/3-540-45821-2_3;50-65;16;Regular Papers;
2002;Godmar Back;DataScript - A Specification and Scripting Language for Binary Data.;http://dx.doi.org/10.1007/3-540-45821-2_4;66-77;12;Regular Papers;
2002;Vincent Balat,Olivier Danvy;Memoization in Type-Directed Partial Evaluation.;http://dx.doi.org/10.1007/3-540-45821-2_5;78-92;15;Regular Papers;
2002;Michel Barbeau,Francis Bordeleau;A Protocol Stack Development Tool Using Generative Programming.;http://dx.doi.org/10.1007/3-540-45821-2_6;93-109;17;Regular Papers;
2002;Johan Brichau,Kim Mens,Kris De Volder;Building Composable Aspect-Specific Languages with Logic Metaprogramming.;http://dx.doi.org/10.1007/3-540-45821-2_7;110-127;18;Regular Papers;
2002;Gregory Butler;Architectural Refactoring in Framework Evolution: A Case Study.;http://dx.doi.org/10.1007/3-540-45821-2_8;128-139;12;Regular Papers;
2002;Wei-Ngan Chin,Zhenjiang Hu;Towards a Modular Program Derivation via Fusion and Tupling.;http://dx.doi.org/10.1007/3-540-45821-2_9;140-155;16;Regular Papers;
2002;Krzysztof Czarnecki,Thomas Bednasch,Peter Unger,Ulrich W. Eisenecker;Generative Programming for Embedded Software: An Industrial Experience Report.;http://dx.doi.org/10.1007/3-540-45821-2_10;156-172;17;Regular Papers;
2002;Rémi Douence,Pascal Fradet,Mario Südholt;A Framework for the Detection and Resolution of Aspect Interactions.;http://dx.doi.org/10.1007/3-540-45821-2_11;173-188;16;Regular Papers;
2002;Tzilla Elrad,Omar Aldawud,Atef Bader;Aspect-Oriented Modeling: Bridging the Gap between Implementation and Design.;http://dx.doi.org/10.1007/3-540-45821-2_12;189-201;13;Regular Papers;
2002;Oleg Kiselyov;Macros That Compose: Systematic Macro Programming.;http://dx.doi.org/10.1007/3-540-45821-2_13;202-217;16;Regular Papers;
2002;Chin Soon Lee;Program Termination Analysis in Polynomial Time.;http://dx.doi.org/10.1007/3-540-45821-2_14;218-235;18;Regular Papers;
2002;Sandeep Neema,Ted Bapty,Jeff Gray,Aniruddha S. Gokhale;Generators for Synthesis of QoS Adaptation in Distributed Real-Time Embedded Systems.;http://dx.doi.org/10.1007/3-540-45821-2_15;236-251;16;Regular Papers;
2002;Markus L. Noga,Florian Krüper;Optimizing Content Management System Pipelines.;http://dx.doi.org/10.1007/3-540-45821-2_16;252-267;16;Regular Papers;
2002;João Saraiva;Component-Based Programming for Higher-Order Attribute Grammars.;http://dx.doi.org/10.1007/3-540-45821-2_17;268-282;15;Regular Papers;
2002;Éric Tanter,Marc Ségura-Devillechaise,Jacques Noyé,José M. Piquer;Altering Java Semantics via Bytecode Manipulation.;http://dx.doi.org/10.1007/3-540-45821-2_18;283-298;16;Regular Papers;
2002;Eelco Visser;Meta-programming with Concrete Object Syntax.;http://dx.doi.org/10.1007/3-540-45821-2_19;299-315;17;Regular Papers;
2002;Zhenghao Wang,Richard R. Muntz;Managing Dynamic Changes in Multi-stage Program Generation Systems.;http://dx.doi.org/10.1007/3-540-45821-2_20;316-334;19;Regular Papers;
