2016;Matthieu Jimenez,Mike Papadakis,Yves Le Traon;Vulnerability Prediction Models: A Case Study on the Linux Kernel.;http://dx.doi.org/10.1109/SCAM.2016.15;1-10;10;Software Security and Code Obfuscation;
2016;Alessio Viticchié,Leonardo Regano,Marco Torchiano,Cataldo Basile,Mariano Ceccato,Paolo Tonella,Roberto Tiella;Assessment of Source Code Obfuscation Techniques.;http://dx.doi.org/10.1109/SCAM.2016.17;11-20;10;Software Security and Code Obfuscation;
2016;Marco di Biase,Magiel Bruntink,Alberto Bacchelli;A Security Perspective on Code Review: The Case of Chromium.;http://dx.doi.org/10.1109/SCAM.2016.30;21-30;10;Software Security and Code Obfuscation;
2016;Xueliang Li 0002,John P. Gallagher;A Source-Level Energy Optimization Framework for Mobile Applications.;http://dx.doi.org/10.1109/SCAM.2016.12;31-40;10;Supporting Software Developers;
2016;Mauricio Finavaro Aniche,Christoph Treude,Andy Zaidman,Arie van Deursen,Marco Aurélio Gerosa;SATT: Tailoring Code Metric Thresholds for Different Software Architectures.;http://dx.doi.org/10.1109/SCAM.2016.19;41-50;10;Supporting Software Developers;
2016;Andrea Renika D'Souza,Di Yang,Cristina V. Lopes;Collective Intelligence for Smarter API Recommendations in Python.;http://dx.doi.org/10.1109/SCAM.2016.22;51-60;10;Supporting Software Developers;
2016;Jiang Ming,Dinghao Wu;BinCFP: Efficient Multi-threaded Binary Code Control Flow Profiling.;http://dx.doi.org/10.1109/SCAM.2016.21;61-66;6;Engineering Track Papers;
2016;Allan Blanchard,Nikolai Kosmatov,Matthieu Lemerre,Frédéric Loulergue;Conc2Seq: A Frama-C Plugin for Verification of Parallel Compositions of C Programs.;http://dx.doi.org/10.1109/SCAM.2016.18;67-72;6;Engineering Track Papers;
2016;Tushar Sharma,Girish Suryanarayana;Augur: Incorporating Hidden Dependencies and Variable Granularity in Change Impact Analysis.;http://dx.doi.org/10.1109/SCAM.2016.32;73-78;6;Engineering Track Papers;
2016;Benjamin Holland,Ganesh Ram Santhanam,Payas Awadhutkar,Suresh Kothari;Statically-Informed Dynamic Analysis Tools to Detect Algorithmic Complexity Vulnerabilities.;http://dx.doi.org/10.1109/SCAM.2016.23;79-84;6;Engineering Track Papers;
2016;Quentin Stievenart,Maarten Vandercammen,Wolfgang De Meuter,Coen De Roover;Scala-AM: A Modular Static Analysis Framework.;http://dx.doi.org/10.1109/SCAM.2016.14;85-90;6;Engineering Track Papers;
2016;Jochen Quante;A Program Interpreter Framework for Arbitrary Abstractions.;http://dx.doi.org/10.1109/SCAM.2016.29;91-96;6;Engineering Track Papers;
2016;Vincenzo Musco,Martin Monperrus,Philippe Preux;Mutation-Based Graph Inference for Fault Localization.;http://dx.doi.org/10.1109/SCAM.2016.24;97-106;10;Code Similarity and Fault Localization;
2016;Adriano Carvalho de Paula,Eduardo Guerra,Cristina V. Lopes,Hitesh Sajnani,Otávio Augusto Lazzarini Lemos;An Exploratory Study of Interface Redundancy in Code Repositories.;http://dx.doi.org/10.1109/SCAM.2016.31;107-116;10;Code Similarity and Fault Localization;
2016;Chaiyong Ragkhitwetsagul,Jens Krinke,David Clark;Similarity of Source Code in the Presence of Pervasive Modifications.;http://dx.doi.org/10.1109/SCAM.2016.13;117-126;10;Code Similarity and Fault Localization;
2016;Min Gao,Lei He,Rupak Majumdar,Zilong Wang;LLSPLAT: Improving Concolic Testing by Bounded Model Checking.;http://dx.doi.org/10.1109/SCAM.2016.26;127-136;10;Software Testing;
2016;Gergo Balogh,Tamás Gergely,Árpád Beszédes,Tibor Gyimóthy;Are My Unit Tests in the Right Package?;http://dx.doi.org/10.1109/SCAM.2016.10;137-146;10;Software Testing;
2016;Marinos Kintis,Mike Papadakis,Andreas Papadopoulos,Evangelos Valvis,Nicos Malevris;Analysing and Comparing the Effectiveness of Mutation Testing Tools: A Manual Study.;http://dx.doi.org/10.1109/SCAM.2016.28;147-156;10;Software Testing;
2016;Tukaram Muske,Alexander Serebrenik;Survey of Approaches for Handling Static Analysis Alarms.;http://dx.doi.org/10.1109/SCAM.2016.25;157-166;10;Code Transformation and Static Analysis;
2016;Nelson Lossing,Pierre Guillou,François Irigoin;Effects Dependence Graph: A Key Data Concept for C Source-to-Source Compilers.;http://dx.doi.org/10.1109/SCAM.2016.20;167-176;10;Code Transformation and Static Analysis;
2016;Gabor Antal,David Havas,István Siket,Árpád Beszédes,Rudolf Ferenc,József Mihalicza;Transforming C++11 Code to C++03 to Support Legacy Compilation Environments.;http://dx.doi.org/10.1109/SCAM.2016.11;177-186;10;Code Transformation and Static Analysis;
2016;David Binkley,Dawn J. Lawrie;A Case for Software Specific Natural Language Techniques.;http://dx.doi.org/10.1109/SCAM.2016.27;187-196;10;Empirical Studies;
2016;Stefan Fischer 0006,Lukas Linsbauer,Roberto E. Lopez-Herrejon,Alexander Egyed;A Source Level Empirical Study of Features and Their Interactions in Variable Software.;http://dx.doi.org/10.1109/SCAM.2016.16;197-206;10;Empirical Studies;
2016;Leon Moonen,Stefano Di Alesio,Thomas Rolfsnes,Dave W. Binkley;Exploring the Effects of History Length and Age on Mining Software Change Impact.;http://dx.doi.org/10.1109/SCAM.2016.9;207-216;10;Empirical Studies;
2015;David Binkley,Nicolas E. Gold,Mark Harman,Syed S. Islam,Jens Krinke,Shin Yoo;ORBS and the limits of static slicing.;http://dx.doi.org/10.1109/SCAM.2015.7335396;1-10;10;Empirical Studies I;
2015;Martin Brandtner,Philipp Leitner,Harald C. Gall;Intent, tests, and release dependencies: Pragmatic recipes for source code integration.;http://dx.doi.org/10.1109/SCAM.2015.7335397;11-20;10;Empirical Studies I;
2015;Rodrigo Bonifácio,Fausto Carvalho,Guilherme N. Ramos,Uirá Kulesza,Roberta Coelho;The use of C++ exception handling constructs: A comprehensive study.;http://dx.doi.org/10.1109/SCAM.2015.7335398;21-30;10;Empirical Studies I;
2015;Mohammed Sayagh,Bram Adams;Multi-layer software configuration: Empirical study on wordpress.;http://dx.doi.org/10.1109/SCAM.2015.7335399;31-40;10;Empirical Studies I;
2015;Otávio Augusto Lazzarini Lemos,Adriano Carvalho de Paula,Hitesh Sajnani,Cristina V. Lopes;Can the use of types and query expansion help improve large-scale code search?;http://dx.doi.org/10.1109/SCAM.2015.7335400;41-50;10;Code Search and Navigation;
2015;Muslim Chochlov,Michael English,Jim Buckley;Using changeset descriptions as a data source to assist feature location.;http://dx.doi.org/10.1109/SCAM.2015.7335401;51-60;10;Code Search and Navigation;
2015;Mohammad Ghafari,Carlo Ghezzi,Konstantin Rubinov;Automatically identifying focal methods under test in unit test cases.;http://dx.doi.org/10.1109/SCAM.2015.7335402;61-70;10;Code Search and Navigation;
2015;Dawn Lawrie,Dave Binkley;Navigating source code with words.;http://dx.doi.org/10.1109/SCAM.2015.7335403;71-80;10;Code Search and Navigation;
2015;Mohammad Masudur Rahman 0001,Chanchal K. Roy,Iman Keivanloo;Recommending insightful comments for source code using crowdsourced knowledge.;http://dx.doi.org/10.1109/SCAM.2015.7335404;81-90;10;Code Search and Navigation;
2015;Alexander Huck,Christian H. Bischof,Jean Utke;Checking C++ codes for compatibility with operator overloading.;http://dx.doi.org/10.1109/SCAM.2015.7335405;91-100;10;Static Analysis;
2015;Jens Nicolay,Carlos Noguera,Coen De Roover,Wolfgang De Meuter;Detecting function purity in JavaScript.;http://dx.doi.org/10.1109/SCAM.2015.7335406;101-110;10;Static Analysis;
2015;Sandrine Blazy,Stéphanie Riaud,Thomas Sirvent;Data tainting and obfuscation: Improving plausibility of incorrect taint.;http://dx.doi.org/10.1109/SCAM.2015.7335407;111-120;10;Static Analysis;
2015;Efthimia Aivaloglou,David Hoepelman,Felienne Hermans;A grammar for spreadsheet formulas evaluated on two large datasets.;http://dx.doi.org/10.1109/SCAM.2015.7335408;121-130;10;Static Analysis;
2015;Vincent Boisselle,Bram Adams;The impact of cross-distribution bug duplicates, empirical study on Debian and Ubuntu.;http://dx.doi.org/10.1109/SCAM.2015.7335409;131-140;10;Empirical Studies II;
2015;Csaba Faragó,Péter Hegedüs,Rudolf Ferenc;Cumulative code churn: Impact on maintainability.;http://dx.doi.org/10.1109/SCAM.2015.7335410;141-150;10;Empirical Studies II;
2015;Daniela Steidl,Florian Deissenboeck;How do Java methods grow?;http://dx.doi.org/10.1109/SCAM.2015.7335411;151-160;10;Empirical Studies II;
2015;Md. Sami Uddin,Varun Gaur,Carl Gutwin,Chanchal K. Roy;On the comprehension of code clone visualizations: A controlled study using eye tracking.;http://dx.doi.org/10.1109/SCAM.2015.7335412;161-170;10;(Code, Memory, Performance) Smells;
2015;Wolfram Fenske,Sandro Schulze,Daniel Meyer,Gunter Saake;When code smells twice as much: Metric-based detection of variability-aware code smells.;http://dx.doi.org/10.1109/SCAM.2015.7335413;171-180;10;(Code, Memory, Performance) Smells;
2015;Hengyang Yu,Xiaohua Shi,Wei Feng;LeakTracer: Tracing leaks along the way.;http://dx.doi.org/10.1109/SCAM.2015.7335414;181-190;10;(Code, Memory, Performance) Smells;
2015;Mohammadreza Ghanavati,Artur Andrzejak;Automated memory leak diagnosis by regression testing.;http://dx.doi.org/10.1109/SCAM.2015.7335415;191-200;10;(Code, Memory, Performance) Smells;
2015;Felipe Pinto,Uirá Kulesza,Christoph Treude;Automating the performance deviation analysis for multiple system releases: An evolutionary study.;http://dx.doi.org/10.1109/SCAM.2015.7335416;201-210;10;(Code, Memory, Performance) Smells;
2015;Dierk Lüdemann,Rainer Koschke;From preprocessor-constrained parse graphs to preprocessor-constrained control flow.;http://dx.doi.org/10.1109/SCAM.2015.7335417;211-220;10;Code and API Transformation;
2015;Gustavo Santos,Anne Etien,Nicolas Anquetil,Stéphane Ducasse,Marco Tulio Valente;Recording and replaying system specific, source code transformations.;http://dx.doi.org/10.1109/SCAM.2015.7335418;221-230;10;Code and API Transformation;
2015;Rahul Pandita,Raoul Praful Jetley,Sithu D. Sudarsan,Laurie A. Williams;Discovering likely mappings between APIs using text mining.;http://dx.doi.org/10.1109/SCAM.2015.7335419;231-240;10;Code and API Transformation;
2015;Eric J. Rapos,Andrew Stevenson,Manar H. Alalfi,James R. Cordy;SimNav: Simulink navigation of model clone classes.;http://dx.doi.org/10.1109/SCAM.2015.7335420;241-246;6;Tool Demos;
2015;Kunal Banerjee,Chittaranjan A. Mandal,Dipankar Sarkar;A translation validation framework for symbolic value propagation based equivalence checking of FSMDAs.;http://dx.doi.org/10.1109/SCAM.2015.7335421;247-252;6;Tool Demos;
2015;Gábor Szoke,Csaba Nagy,Lajos Jeno Fülöp,Rudolf Ferenc,Tibor Gyimóthy;FaultBuster: An automatic code smell refactoring toolset.;http://dx.doi.org/10.1109/SCAM.2015.7335422;253-258;6;Tool Demos;
2015;Stephan Renatus,Corrie Bartelheimer,Jörn Eichler;Improving prioritization of software weaknesses using security models with AVUS.;http://dx.doi.org/10.1109/SCAM.2015.7335423;259-264;6;Tool Demos;
2015;Luca Dariz,Massimiliano Ruggeri,Michele Selvatici;A static microcode analysis tool for programmable load drivers.;http://dx.doi.org/10.1109/SCAM.2015.7335424;265-270;6;Tool Demos;
2015;Gergo Balogh,Attila Szabolics,Árpád Beszédes;CodeMetropolis: Eclipse over the city of source code.;http://dx.doi.org/10.1109/SCAM.2015.7335425;271-276;6;Tool Demos;
2014;Saman Bazrafshan,Rainer Koschke;Effect of Clone Information on the Performance of Developers Fixing Cloned Bugs.;http://dx.doi.org/10.1109/SCAM.2014.10;1-10;10;Clones;
2014;Manishankar Mondal,Chanchal Kumar Roy,Kevin A. Schneider;Automatic Identification of Important Clones for Refactoring and Tracking.;http://dx.doi.org/10.1109/SCAM.2014.11;11-20;10;Clones;
2014;Hitesh Sajnani,Vaibhav Saini,Cristina Videira Lopes;A Comparative Study of Bug Patterns in Java Cloned and Non-cloned Code.;http://dx.doi.org/10.1109/SCAM.2014.12;21-30;10;Clones;
2014;Md. Saidur Rahman 0002,Chanchal K. Roy;A Change-Type Based Empirical Study on the Stability of Cloned Code.;http://dx.doi.org/10.1109/SCAM.2014.13;31-40;10;Clones;
2014;DeLesley Hutchins,Aaron Ballman,Dean Sutherland;C/C++ Thread Safety Analysis.;http://dx.doi.org/10.1109/SCAM.2014.34;41-46;6;Tools;
2014;David Tengeri,Árpád Beszédes,David Havas,Tibor Gyimóthy;Toolset and Program Repository for Code Coverage-Based Test Suite Analysis and Manipulation.;http://dx.doi.org/10.1109/SCAM.2014.38;47-52;6;Tools;
2014;Coen De Roover,Katsuro Inoue;The Ekeko/X Program Transformation Tool.;http://dx.doi.org/10.1109/SCAM.2014.32;53-58;6;Tools;
2014;David A. Kosower,Juan J. Lopez-Villarejo,Serguei A. Roubtsov;Flowgen: Flowchart-Based Documentation Framework for C++.;http://dx.doi.org/10.1109/SCAM.2014.35;59-64;6;Tools;
2014;Andrea Stocco,Maurizio Leotta,Filippo Ricca,Paolo Tonella;PESTO: A Tool for Migrating DOM-Based to Visual Web Tests.;http://dx.doi.org/10.1109/SCAM.2014.36;65-70;6;Tools;
2014;Andrea Caracciolo,Andrei Chis,Boris Spasojevic,Mircea Lungu;Pangea: A Workbench for Statically Analyzing Multi-language Software Corpora.;http://dx.doi.org/10.1109/SCAM.2014.39;71-76;6;Tools;
2014;Rudolf Ferenc,Laszlo Lango,István Siket,Tibor Gyimóthy,Tibor Bakota;Source Meter Sonar Qube Plug-in.;http://dx.doi.org/10.1109/SCAM.2014.31;77-82;6;Tools;
2014;Syed Shariyar Murtaza,Abdelwahab Hamou-Lhadj,Wael Khreich,Mario Couture;Total ADS: Automated Software Anomaly Detection System.;http://dx.doi.org/10.1109/SCAM.2014.37;83-88;6;Tools;
2014;Wei Wu,Bram Adams,Yann-Gaël Guéhéneuc,Giuliano Antoniol;ACUA: API Change and Usage Auditor.;http://dx.doi.org/10.1109/SCAM.2014.33;89-94;6;Tools;
2014;Gábor Szoke,Gabor Antal,Csaba Nagy,Rudolf Ferenc,Tibor Gyimóthy;Bulk Fixing Coding Issues and Its Effects on Software Quality: Is It Worth Refactoring?;http://dx.doi.org/10.1109/SCAM.2014.18;95-104;10;Software Quality;
2014;Guillaume Petiot,Bernard Botella,Jacques Julliand,Nikolai Kosmatov,Julien Signoles;Instrumentation of Annotated C Programs for Test Generation.;http://dx.doi.org/10.1109/SCAM.2014.19;105-114;10;Software Quality;
2014;Syrine Tlili,Jose M. Fernandez,Abdelfettah Belghith,Bilel Dridi,Soufien Hidouri;Scalable Security Verification of Software at Compile Time.;http://dx.doi.org/10.1109/SCAM.2014.20;115-124;10;Software Quality;
2014;Malin Kallen,Sverker Holmgren,Ebba Þóra Hvannberg;Impact of Code Refactoring Using Object-Oriented Methodology on a Scientific Computing Application.;http://dx.doi.org/10.1109/SCAM.2014.21;125-134;10;Software Quality;
2014;Chanseok Oh,Martin Schäf,Daniel Schwartz-Narbonne,Thomas Wies;Concolic Fault Localization.;http://dx.doi.org/10.1109/SCAM.2014.22;135-144;10;Software Quality;
2014;Siyuan Jiang,Raúl A. Santelices,Mark Grechanik,Haipeng Cai;On the Accuracy of Forward Dynamic Slicing and Its Effects on Software Maintenance.;http://dx.doi.org/10.1109/SCAM.2014.23;145-154;10;Slicing;
2014;Ulf Kargen,Nahid Shahmehri;Efficient Utilization of Secondary Storage for Scalable Dynamic Slicing.;http://dx.doi.org/10.1109/SCAM.2014.24;155-164;10;Slicing;
2014;Haipeng Cai,Siyuan Jiang,Raúl A. Santelices,Ying-Jie Zhang,Yiji Zhang;SENSA: Sensitivity Analysis for Quantitative Change-Impact Prediction.;http://dx.doi.org/10.1109/SCAM.2014.25;165-174;10;Slicing;
2014;Shin Yoo,David Binkley,Roger D. Eastman;Seeing Is Slicing: Observation Based Slicing of Picture Description Languages.;http://dx.doi.org/10.1109/SCAM.2014.26;175-184;10;Slicing;
2014;Angela Lozano,Carlos Noguera,Viviane Jonckers;Explaining Why Methods Change Together.;http://dx.doi.org/10.1109/SCAM.2014.27;185-194;10;Mining Software Repository;
2014;Cosmin Marsavina,Daniele Romano,Andy Zaidman;Studying Fine-Grained Co-evolution Patterns of Production and Test Code.;http://dx.doi.org/10.1109/SCAM.2014.28;195-204;10;Mining Software Repository;
2014;Le An,Foutse Khomh,Bram Adams;Supplementary Bug Fixes vs. Re-opened Bugs.;http://dx.doi.org/10.1109/SCAM.2014.29;205-214;10;Mining Software Repository;
2014;Steven Raemaekers,Arie van Deursen,Joost Visser;Semantic Versioning versus Breaking Changes: A Study of the Maven Repository.;http://dx.doi.org/10.1109/SCAM.2014.30;215-224;10;Mining Software Repository;
2014;Shuying Liang,Weibin Sun,Matthew Might;Fast Flow Analysis with Godel Hashes.;http://dx.doi.org/10.1109/SCAM.2014.40;225-234;10;Static Analysis;
2014;Aharon Abadi,Yishai A. Feldman;A Parallel On-Demand Algorithm for Computing Interprocedural Dominators.;http://dx.doi.org/10.1109/SCAM.2014.41;235-244;10;Static Analysis;
2014;Marwan Abi-Antoun,Sumukhi Chandrashekar,Radu Vanciu,Andrew Giang;Are Object Graphs Extracted Using Abstract Interpretation Significantly Different from the Code?;http://dx.doi.org/10.1109/SCAM.2014.42;245-254;10;Static Analysis;
2014;Babak Yadegari,Saumya Debray;Bit-Level Taint Analysis.;http://dx.doi.org/10.1109/SCAM.2014.43;255-264;10;Static Analysis;
2014;Shuying Liang,Weibin Sun,Matthew Might,Andrew W. Keep,David Van Horn;Pruning, Pushdown Exception-Flow Analysis.;http://dx.doi.org/10.1109/SCAM.2014.44;265-274;10;Static Analysis;
2014;Luis Fernando Cortes-Coy,Mario Linares Vásquez,Jairo Aponte,Denys Poshyvanyk;On Automatically Generating Commit Messages via Summarization of Source Code Changes.;http://dx.doi.org/10.1109/SCAM.2014.14;275-284;10;Recommendation Systems;
2014;Mohammad Masudur Rahman 0001,Chanchal K. Roy;On the Use of Context in Recommending Exception Handling Code Examples.;http://dx.doi.org/10.1109/SCAM.2014.15;285-294;10;Recommendation Systems;
2014;Atsushi Yoshida,Yoshinari Hachisu;A Pattern Search Method for Unpreprocessed C Programs Based on Tokenized Syntax Trees.;http://dx.doi.org/10.1109/SCAM.2014.16;295-304;10;Recommendation Systems;
2014;Naohiro Kawamitsu,Takashi Ishio,Tetsuya Kanda 0001,Raula Gaikovina Kula,Coen De Roover,Katsuro Inoue;Identifying Source Code Reuse across Repositories Using LCS-Based Source Code Similarity.;http://dx.doi.org/10.1109/SCAM.2014.17;305-314;10;Recommendation Systems;
2013;Árpád Beszédes,Lajos Schrettner,Béla Csaba,Tamás Gergely,Judit Jász,Tibor Gyimóthy;Empirical investigation of SEA-based dependence cluster properties.;http://dx.doi.org/10.1109/SCAM.2013.6648178;1-10;10;Session 1 - Dependency Analysis;
2013;Ahmad Jbara,Dror G. Feitelson;Characterization and assessment of the linux configuration complexity.;http://dx.doi.org/10.1109/SCAM.2013.6648179;11-20;10;Session 1 - Dependency Analysis;
2013;Tosin Daniel Oyetoyan,Reidar Conradi,Daniela S. Cruzes;Criticality of defects in cyclic dependent components.;http://dx.doi.org/10.1109/SCAM.2013.6648180;21-30;10;Session 1 - Dependency Analysis;
2013;K. M. Annervaz,Vikrant S. Kaulgud,Janardan Misra,Shubhashis Sengupta,Gary Titus,Azmat Munshi;Code clustering workbench.;http://dx.doi.org/10.1109/SCAM.2013.6648181;31-36;6;Session 1 - Dependency Analysis;
2013;Jeffrey Svajlenko,Chanchal K. Roy,Slawomir Duszynski;ForkSim: Generating software forks for evaluating cross-project similarity analysis tools.;http://dx.doi.org/10.1109/SCAM.2013.6648182;37-42;6;Session 1 - Dependency Analysis;
2013;Diego Mendez,Benoit Baudry,Martin Monperrus;Empirical evidence of large-scale diversity in API usage of object-oriented software.;http://dx.doi.org/10.1109/SCAM.2013.6648183;43-52;10;Session 2 - Static Source Code Analysis;
2013;Johan Fabry,Coen De Roover,Viviane Jonckers;Aspectual source code analysis with GASR.;http://dx.doi.org/10.1109/SCAM.2013.6648184;53-62;10;Session 2 - Static Source Code Analysis;
2013;Sven Mattsen,Pascal Cuoq,Sibylle Schupp;Driving a sound static software analyzer with branch-and-bound.;http://dx.doi.org/10.1109/SCAM.2013.6648185;63-68;6;Session 2 - Static Source Code Analysis;
2013;Sebastian Biallas,Mads Chr. Olesen,Franck Cassez,Ralf Huuck;PtrTracker: Pragmatic pointer analysis.;http://dx.doi.org/10.1109/SCAM.2013.6648186;69-73;5;Session 2 - Static Source Code Analysis;
2013;David Baca;Tracing with a minimal number of probes.;http://dx.doi.org/10.1109/SCAM.2013.6648187;74-83;10;Session 3 - Dynamic Analysis;
2013;Yan Wang,Min Feng,Rajiv Gupta,Iulian Neamtiu;A state alteration and inspection-based interactive debugger.;http://dx.doi.org/10.1109/SCAM.2013.6648188;84-93;10;Session 3 - Dynamic Analysis;
2013;Mike Papadakis,Márcio Eduardo Delamaro,Yves Le Traon;Proteum/FL: A tool for localizing faults using mutation analysis.;http://dx.doi.org/10.1109/SCAM.2013.6648189;94-99;6;Session 3 - Dynamic Analysis;
2013;Antoine Floch,Tomofumi Yuki,Ali El Moussawi,Antoine Morvan,Kevin Martin,Maxime Naullet,Mythri Alle,Ludovic L'Hours,Nicolas Simon,Steven Derrien,François Charot,Christophe Wolinski,Olivier Sentieys;GeCoS: A framework for prototyping custom hardware design flows.;http://dx.doi.org/10.1109/SCAM.2013.6648190;100-105;6;Session 3 - Dynamic Analysis;
2013;Tukaram B. Muske,Ankit Baid,Tushar Sanas;Review efforts reduction by partitioning of static analysis warnings.;http://dx.doi.org/10.1109/SCAM.2013.6648191;106-115;10;Session 4 - Source Code Metrics;
2013;Amin Milani Fard,Ali Mesbah 0001;JSNOSE: Detecting JavaScript Code Smells.;http://dx.doi.org/10.1109/SCAM.2013.6648192;116-125;10;Session 4 - Source Code Metrics;
2013;Jens Nicolay,Carlos Noguera,Coen De Roover,Wolfgang De Meuter;Determining dynamic coupling in JavaScript using object type inference.;http://dx.doi.org/10.1109/SCAM.2013.6648193;126-135;10;Session 4 - Source Code Metrics;
2013;Gergo Balogh,Árpád Beszédes;CodeMetropolis - code visualisation in MineCraft.;http://dx.doi.org/10.1109/SCAM.2013.6648194;136-141;6;Session 4 - Source Code Metrics;
2013;Francisco Zigmund Sokol,Mauricio Finavaro Aniche,Marco Aurélio Gerosa;MetricMiner: Supporting researchers in mining software repositories.;http://dx.doi.org/10.1109/SCAM.2013.6648195;142-146;5;Session 4 - Source Code Metrics;
2013;Martin Ward;Assembler restructuring in FermaT.;http://dx.doi.org/10.1109/SCAM.2013.6648196;147-156;10;Session 5 - Code Transformation;
2013;Luigi Cerulo,Michele Ceccarelli,Massimiliano Di Penta,Gerardo Canfora;A Hidden Markov Model to detect coded information islands in free text.;http://dx.doi.org/10.1109/SCAM.2013.6648197;157-166;10;Session 5 - Code Transformation;
2013;Vipin Balachandran;Fix-it: An extensible code auto-fix component in Review Bot.;http://dx.doi.org/10.1109/SCAM.2013.6648198;167-172;6;Session 5 - Code Transformation;
2013;Hagen Schink;sql-schema-comparer: Support of multi-language refactoring with relational databases.;http://dx.doi.org/10.1109/SCAM.2013.6648199;173-178;6;Session 5 - Code Transformation;
2013;Michaël Marcozzi,Wim Vanhoof,Jean-Luc Hainaut;A relational symbolic execution algorithm for constraint-based testing of database programs.;http://dx.doi.org/10.1109/SCAM.2013.6648200;179-188;10;Session 6 - Databases and Ontologies;
2013;Arvind W. Kiwelekar,Rushikesh K. Joshi;Ontological interpretation of object-oriented programming abstractions.;http://dx.doi.org/10.1109/SCAM.2013.6648201;189-198;10;Session 6 - Databases and Ontologies;
2012;Tao Xie;Cooperative Testing and Analysis: Human-Tool, Tool-Tool and Human-Human Cooperations to Get Work Done.;http://dx.doi.org/10.1109/SCAM.2012.31;1-3;3;SCAM;
2012;Tobias Gutzmann,Jonas Lundberg,Welf Löwe;Collections Frameworks for Points-To Analysis.;http://dx.doi.org/10.1109/SCAM.2012.24;4-13;10;SCAM;
2012;Edward Aftandilian,Raluca Sauciuc,Siddharth Priya,Sundaresan Krishnan;Building Useful Program Analysis Tools Using an Extensible Java Compiler.;http://dx.doi.org/10.1109/SCAM.2012.28;14-23;10;SCAM;
2012;Lajos Schrettner,Judit Jász,Tamás Gergely,Árpád Beszédes,Tibor Gyimóthy;Impact Analysis in the Presence of Dependence Clusters Using Static Execute after in WebKit.;http://dx.doi.org/10.1109/SCAM.2012.22;24-33;10;SCAM;
2012;Germán Vidal;Closed Symbolic Execution for Verifying Program Termination.;http://dx.doi.org/10.1109/SCAM.2012.13;34-43;10;SCAM;
2012;François Gauthier,Ettore Merlo;Alias-Aware Propagation of Simple Pattern-Based Properties in PHP Applications.;http://dx.doi.org/10.1109/SCAM.2012.19;44-53;10;SCAM;
2012;Jun Yuan,Rob Johnson;CAWDOR: Compiler Assisted Worm Defense.;http://dx.doi.org/10.1109/SCAM.2012.30;54-63;10;SCAM;
2012;Hiroaki Murakami,Keisuke Hotta,Yoshiki Higo,Hiroshi Igaki,Shinji Kusumoto;Folding Repeated Instructions for Improving Token-Based Code Clone Detection.;http://dx.doi.org/10.1109/SCAM.2012.21;64-73;10;SCAM;
2012;Saman Bazrafshan;Evolution of Near-Miss Clones.;http://dx.doi.org/10.1109/SCAM.2012.18;74-83;10;SCAM;
2012;Chris Wilcox,Michelle Mills Strout,James M. Bieman;Optimizing Expression Selection for Lookup Table Program Transformation.;http://dx.doi.org/10.1109/SCAM.2012.12;84-93;10;SCAM;
2012;Philip Mayer,Andreas Schroeder;Cross-Language Code Analysis and Refactoring.;http://dx.doi.org/10.1109/SCAM.2012.11;94-103;10;SCAM;
2012;Gabriele Bavota,Bernardino De Carluccio,Andrea De Lucia,Massimiliano Di Penta,Rocco Oliveto,Orazio Strollo;When Does a Refactoring Induce Bugs? An Empirical Study.;http://dx.doi.org/10.1109/SCAM.2012.20;104-113;10;SCAM;
2012;Andrea Zambon;Aucsmith-Like Obfuscation of Java Bytecode.;http://dx.doi.org/10.1109/SCAM.2012.14;114-119;6;SCAM;
2012;Christian Zoller,Axel Schmolitzky;AccessAnalysis: A Tool for Measuring the Appropriateness of Access Modifiers in Java Systems.;http://dx.doi.org/10.1109/SCAM.2012.23;120-125;6;SCAM;
2012;Mihai T. Lazarescu,Luciano Lavagno;Dynamic Trace-Based Data Dependency Analysis for Parallelization of C Programs.;http://dx.doi.org/10.1109/SCAM.2012.15;126-131;6;SCAM;
2012;Hariharan Thiagarajan,John Hatcliff,Jason Belt,Robby;Bakar Alir: Supporting Developers in Construction of Information Flow Contracts in SPARK.;http://dx.doi.org/10.1109/SCAM.2012.25;132-137;6;SCAM;
2012;Ulf Kargen,Nahid Shahmehri;InputTracer: A Data-Flow Analysis Tool for Manual Program Comprehension of x86 Binaries.;http://dx.doi.org/10.1109/SCAM.2012.16;138-143;6;SCAM;
2012;Malcom Gethers,Amir Aryani,Denys Poshyvanyk;Combining Conceptual and Domain-Based Couplings to Detect Database and Code Dependencies.;http://dx.doi.org/10.1109/SCAM.2012.27;144-153;10;SCAM;
2012;Jurgen J. Vinju,Michael W. Godfrey;What Does Control Flow Really Look Like? Eyeballing the Cyclomatic Complexity Metric.;http://dx.doi.org/10.1109/SCAM.2012.17;154-163;10;SCAM;
2012;John Businge,Alexander Serebrenik,Mark van den Brand;Compatibility Prediction of Eclipse Third-Party Plug-ins in New Eclipse Releases.;http://dx.doi.org/10.1109/SCAM.2012.10;164-173;10;SCAM;
2012;Nasir Ali,Aminata Sabane,Yann-Gaël Guéhéneuc,Giuliano Antoniol;Improving Bug Location Using Binary Class Relationships.;http://dx.doi.org/10.1109/SCAM.2012.26;174-183;10;SCAM;
2012;Emily Hill,Shivani Rao,Avinash C. Kak;On the Use of Stemming for Concern Location and Bug Localization in Java.;http://dx.doi.org/10.1109/SCAM.2012.29;184-193;10;SCAM;
2011;Eric Larson;Program Analysis Too Loopy? Set the Loops Aside.;http://dx.doi.org/10.1109/SCAM.2011.22;15-24;10;Static Analysis;
2011;Viktor Pavlu,Markus Schordan,Andreas Krall;Computation of Alias Sets from Shape Graphs for Comparison of Shape Analysis Precision.;http://dx.doi.org/10.1109/SCAM.2011.11;25-34;10;Static Analysis;
2011;Jason Sawin,Atanas Rountev;Assumption Hierarchy for a CHA Call Graph Construction Algorithm.;http://dx.doi.org/10.1109/SCAM.2011.20;35-44;10;Static Analysis;
2011;Steffen Keul;Tuning Static Data Race Analysis for Automotive Control Software.;http://dx.doi.org/10.1109/SCAM.2011.16;45-54;10;Embedded Systems and Mobile Platforms;
2011;Mark D. Syer,Bram Adams,Ying Zou,Ahmed E. Hassan;Exploring the Development of Micro-apps: A Case Study on the BlackBerry and Android Platforms.;http://dx.doi.org/10.1109/SCAM.2011.25;55-64;10;Embedded Systems and Mobile Platforms;
2011;Radu Marinescu 0001,Cristina Marinescu;Are the Clients of Flawed Classes (Also) Defect Prone?;http://dx.doi.org/10.1109/SCAM.2011.9;65-74;10;Defects and Security;
2011;Kevin Coogan,Saumya K. Debray;Equational Reasoning on x86 Assembly Code.;http://dx.doi.org/10.1109/SCAM.2011.15;75-84;10;Defects and Security;
2011;Andrea Avancini,Mariano Ceccato;Security Testing of Web Applications: A Search-Based Approach for Cross-Site Scripting Vulnerabilities.;http://dx.doi.org/10.1109/SCAM.2011.7;85-94;10;Defects and Security;
2011;Wei Wang 0001,Michael W. Godfrey;A Study of Cloning in the Linux SCSI Drivers.;http://dx.doi.org/10.1109/SCAM.2011.17;95-104;10;Clones;
2011;Minhaz F. Zibran,Chanchal K. Roy;A Constraint Programming Approach to Conflict-Aware Optimal Scheduling of Prioritized Code Clone Refactoring.;http://dx.doi.org/10.1109/SCAM.2011.21;105-114;10;Clones;
2011;Sandro Schulze,Elmar Jürgens,Janet Feigenspan;Analyzing the Effect of Preprocessor Annotations on Code Clones.;http://dx.doi.org/10.1109/SCAM.2011.12;115-124;10;Clones;
2011;Surafel Lemma Abebe,Sonia Haiduc,Paolo Tonella,Andrian Marcus;The Effect of Lexicon Bad Smells on Concept Location in Source Code.;http://dx.doi.org/10.1109/SCAM.2011.18;125-134;10;Search;
2011;Matthew B. Kelly,Jason S. Alexander,Bram Adams,Ahmed E. Hassan;Recovering a Balanced Overview of Topics in a Software Domain.;http://dx.doi.org/10.1109/SCAM.2011.23;135-144;10;Search;
2011;Tiago L. Alves,Jurriaan Hage,Peter Rademaker;A Comparative Study of Code Query Technologies.;http://dx.doi.org/10.1109/SCAM.2011.14;145-154;10;Search;
2011;Serguei A. Roubtsov,Alexander Serebrenik,Aurélien Mazoyer,Mark van den Brand;I2SD: Reverse Engineering Sequence Diagrams from Enterprise Java Beans with Interceptors.;http://dx.doi.org/10.1109/SCAM.2011.5;155-164;10;Tools;
2011;Michael Mehlich;CheckPointer - A C Memory Access Validator.;http://dx.doi.org/10.1109/SCAM.2011.8;165-172;8;Tools;
2011;Michael L. Collard,Michael John Decker,Jonathan I. Maletic;Lightweight Transformation and Fact Extraction with the srcML Toolkit.;http://dx.doi.org/10.1109/SCAM.2011.19;173-184;12;Tools;
2011;Jens Nicolay,Coen De Roover,Wolfgang De Meuter,Viviane Jonckers;Automatic Parallelization of Side-Effecting Higher-Order Scheme Programs.;http://dx.doi.org/10.1109/SCAM.2011.13;185-194;10;Transformation;
2011;Ahmed Sfayhi,Houari A. Sahraoui;What You See is What You Asked for: An Effort-Based Transformation of Code Analysis Tasks into Interactive Visualization Scenarios.;http://dx.doi.org/10.1109/SCAM.2011.6;195-203;9;Transformation;
2010;Amy Wheeler,Dave Binkley;Subclass Instantiation Distribution.;http://dx.doi.org/10.1109/SCAM.2010.12;23-32;10;Measurement;
2010;Bela Ujhazi,Rudolf Ferenc,Denys Poshyvanyk,Tibor Gyimóthy;New Conceptual Coupling and Cohesion Metrics for Object-Oriented Systems.;http://dx.doi.org/10.1109/SCAM.2010.14;33-42;10;Measurement;
2010;Simon Allier,Stéphane Vaucher,Bruno Dufour,Houari A. Sahraoui;Deriving Coupling Metrics from Call Graphs.;http://dx.doi.org/10.1109/SCAM.2010.25;43-52;10;Measurement;
2010;Stephen W. Thomas,Bram Adams,Ahmed E. Hassan,Dorothea Blostein;Validating the Use of Topic Models for Software Evolution.;http://dx.doi.org/10.1109/SCAM.2010.13;55-64;10;Concepts;
2010;Scott Grant,James R. Cordy;Estimating the Optimal Number of Latent Concepts in Source Code Analysis.;http://dx.doi.org/10.1109/SCAM.2010.22;65-74;10;Concepts;
2010;Romain Brixtel,Mathieu Fontaine,Boris Lesner,Cyril Bazin,Romain Robbes;Language-Independent Clone Detection Applied to Plagiarism Detection.;http://dx.doi.org/10.1109/SCAM.2010.19;77-86;10;Clones;
2010;Ripon K. Saha,Muhammad Asaduzzaman,Minhaz F. Zibran,Chanchal K. Roy,Kevin A. Schneider;Evaluating Code Clone Genealogies at Release Level: An Empirical Study.;http://dx.doi.org/10.1109/SCAM.2010.32;87-96;10;Clones;
2010;Michael Píse;The Fika Parser Generator.;http://dx.doi.org/10.1109/SCAM.2010.27;99-100;2;Demos;
2010;Bas Basten,Tijs van der Storm;AMBIDEXTER: Practical Ambiguity Detection.;http://dx.doi.org/10.1109/SCAM.2010.21;101-102;2;Demos;
2010;Jürgen Graf;Speeding Up Context-, Object- and Field-Sensitive SDG Generation.;http://dx.doi.org/10.1109/SCAM.2010.9;105-114;10;Static Analysis Using Graphs;
2010;Devin Kester,Martin Mwebesa,Jeremy S. Bradbury;How Good is Static Analysis at Finding Concurrency Bugs?;http://dx.doi.org/10.1109/SCAM.2010.26;115-124;10;Static Analysis Using Graphs;
2010;Marcus Edvinsson,Jonas Lundberg,Welf Löwe;Parallel Reachability and Escape Analyses.;http://dx.doi.org/10.1109/SCAM.2010.10;125-134;10;Static Analysis Using Graphs;
2010;Zhi Da Luo,Linda Hillis,Raja Das,Yao Qi;Effective Static Analysis to Find Concurrency Bugs in Java.;http://dx.doi.org/10.1109/SCAM.2010.20;135-144;10;Static Analysis Using Graphs;
2010;Lennart C. L. Kats,Eelco Visser;Encapsulating Software Platform Logic by Aspect-Oriented Programming: A Case Study in Using Aspects for Language Portability.;http://dx.doi.org/10.1109/SCAM.2010.11;147-156;10;Modularity;
2010;Huiqing Li,Simon J. Thompson;Refactoring Support for Modularity Maintenance in Erlang.;http://dx.doi.org/10.1109/SCAM.2010.17;157-166;10;Modularity;
2010;Zoltan Borok-Nagy,Viktor Majer,József Mihalicza,Norbert Pataki,Zoltán Porkoláb;Visualization of C++ Template Metaprograms.;http://dx.doi.org/10.1109/SCAM.2010.16;167-176;10;Modularity;
2010;Katerina Troshina,Yegor Derevenets,Alexander Chernov;Reconstruction of Composite Types for Decompilation.;http://dx.doi.org/10.1109/SCAM.2010.24;179-188;10;Data and Memory;
2010;Alain Ketterlin,Philippe Clauss;Recovering the Memory Behavior of Executable Programs.;http://dx.doi.org/10.1109/SCAM.2010.18;189-198;10;Data and Memory;
2010;Matthew S. Simpson,Rajeev Barua;MemSafe: Ensuring the Spatial and Temporal Memory Safety of C at Runtime.;http://dx.doi.org/10.1109/SCAM.2010.15;199-208;10;Data and Memory;
2009;Robert Charles Lange,Spiros Mancoridis;thr2csp: Toward Transforming Threads into Communicating Sequential Processes.;http://dx.doi.org/10.1109/SCAM.2009.10;3-12;10;Slicing & Concurrency;
2009;Dennis Giffhorn;Chopping Concurrent Programs.;http://dx.doi.org/10.1109/SCAM.2009.11;13-22;10;Slicing & Concurrency;
2009;Martin P. Ward;Properties of Slicing Definitions.;http://dx.doi.org/10.1109/SCAM.2009.12;23-32;10;Slicing & Concurrency;
2009;Ju Qian,Yuming Zhou,Baowen Xu;Improving Side-Effect Analysis with Lazy Access Path Resolving.;http://dx.doi.org/10.1109/SCAM.2009.13;35-44;10;Dependence Analysis;
2009;Tobias Gutzmann,Antonina Khairova,Jonas Lundberg,Welf Löwe;Towards Comparing and Combining Points-to Analyses.;http://dx.doi.org/10.1109/SCAM.2009.14;45-54;10;Dependence Analysis;
2009;Tiago L. Alves,Joost Visser;Static Estimation of Test Coverage.;http://dx.doi.org/10.1109/SCAM.2009.15;55-64;10;Dependence Analysis;
2009;Rebecca Tiarks,Rainer Koschke,Raimar Falke;An Assessment of Type-3 Clones as Detected by State-of-the-Art Tools.;http://dx.doi.org/10.1109/SCAM.2009.16;67-76;10;Clones;
2009;Nils Göde;Evolution of Type-1 Clones.;http://dx.doi.org/10.1109/SCAM.2009.17;77-86;10;Clones;
2009;David Binkley,Mark Harman;Identifying 'Linchpin Vertices' That Cause Large Dependence Clusters.;http://dx.doi.org/10.1109/SCAM.2009.18;89-98;10;Code Tracing;
2009;Jaime Spacco,Chadd C. Williams;Lightweight Techniques for Tracking Unique Program Statements.;http://dx.doi.org/10.1109/SCAM.2009.19;99-108;10;Code Tracing;
2009;Christian Prause;Maintaining Fine-Grained Code Metadata Regardless of Moving, Copying and Merging.;http://dx.doi.org/10.1109/SCAM.2009.20;109-118;10;Code Tracing;
2009;Tobias Gutzmann,Tamara Steijger;Backporting Java 5 Code.;http://dx.doi.org/10.1109/SCAM.2009.21;121-122;2;Tools Demos;
2009;Géraud Canet,Pascal Cuoq,Benjamin Monate;A Value Analysis for C Programs.;http://dx.doi.org/10.1109/SCAM.2009.22;123-124;2;Tools Demos;
2009;Martin P. Ward;The FermaT Maintenance Environment Tool Demonstration.;http://dx.doi.org/10.1109/SCAM.2009.23;125-126;2;Tools Demos;
2009;James Alexander George Hamilton,Sebastian Danicic;An Evaluation of Current Java Bytecode Decompilers.;http://dx.doi.org/10.1109/SCAM.2009.24;129-136;8;Abstraction & Reverse Engineering;
2009;Michael Achenbach,Klaus Ostermann;Engineering Abstractions in Model Checking and Testing.;http://dx.doi.org/10.1109/SCAM.2009.25;137-146;10;Abstraction & Reverse Engineering;
2009;Valentin David,Magne Haveraaen;Concepts as Syntactic Sugar.;http://dx.doi.org/10.1109/SCAM.2009.26;147-156;10;Abstraction & Reverse Engineering;
2009;El Hachemi Alikacem,Houari A. Sahraoui;A Metric Extraction Framework Based on a High-Level Description Language.;http://dx.doi.org/10.1109/SCAM.2009.27;159-167;9;Analysis Frameworks;
2009;Paul Klint,Tijs van der Storm,Jurgen J. Vinju;RASCAL: A Domain Specific Language for Source Code Analysis and Manipulation.;http://dx.doi.org/10.1109/SCAM.2009.28;168-177;10;Analysis Frameworks;
2009;Ralf Lämmel,Vadim Zaytsev;Recovering Grammar Relationships for the Java Language Specification.;http://dx.doi.org/10.1109/SCAM.2009.29;178-186;9;Analysis Frameworks;
2008;Paul Anderson;90% Perspiration: Engineering Static Analysis Techniques for Industrial Applications.;http://dx.doi.org/10.1109/SCAM.2008.11;3-12;10;SCAM;
2008;Ansgar Fehnker,Ralf Huuck,Felix Rauch,Sean Seefried;Some Assembly Required - Program Analysis of Embedded System Code.;http://dx.doi.org/10.1109/SCAM.2008.15;15-24;10;SCAM;
2008;Bernhard Scholz,Chenyi Zhang,Cristina Cifuentes;User-Input Dependence Analysis via Graph Reachability.;http://dx.doi.org/10.1109/SCAM.2008.22;25-34;10;SCAM;
2008;Katsuhiko Gondow,Hayato Kawashima,Takashi Imaizumi;TBCppA: A Tracer Approach for Automatic Accurate Analysis of C Preprocessor's Behaviors.;http://dx.doi.org/10.1109/SCAM.2008.13;35-44;10;SCAM;
2008;Cheng Wang,Daqing Hou;An Empirical Study of Function Overloading in C++.;http://dx.doi.org/10.1109/SCAM.2008.25;47-56;10;SCAM;
2008;Jens Krinke;Is Cloned Code More Stable than Non-cloned Code?;http://dx.doi.org/10.1109/SCAM.2008.14;57-66;10;SCAM;
2008;Jeremy Singer,Chris C. Kirkham;Exploiting the Correspondence between Micro Patterns and Class Names.;http://dx.doi.org/10.1109/SCAM.2008.23;67-76;10;SCAM;
2008;Cathal Boogerd,Leon Moonen;On the Use of Data Flow Analysis in Static Profiling.;http://dx.doi.org/10.1109/SCAM.2008.18;79-88;10;SCAM;
2008;Damiano Zanardini;The Semantics of Abstract Program Slicing.;http://dx.doi.org/10.1109/SCAM.2008.19;89-98;10;SCAM;
2008;Massimiliano Di Penta,Luigi Cerulo,Lerina Aversano;The Evolution and Decay of Statically Detected Source Code Vulnerabilities.;http://dx.doi.org/10.1109/SCAM.2008.20;101-110;10;SCAM;
2008;Abram Hindle,Michael W. Godfrey,Richard C. Holt;From Indentation Shapes to Code Structures.;http://dx.doi.org/10.1109/SCAM.2008.31;111-120;10;SCAM;
2008;David Binkley,Nicolas Gold,Mark Harman,Zheng Li,Kiarash Mahdavi;Evaluating Key Statements Analysis.;http://dx.doi.org/10.1109/SCAM.2008.40;121-130;10;SCAM;
2008;Jonas Lundberg,Tobias Gutzmann,Welf Löwe;Fast and Precise Points-to Analysis.;http://dx.doi.org/10.1109/SCAM.2008.26;133-142;10;SCAM;
2008;Qiang Sun,Jianjun Zhao;Aspect-Aware Points-to Analysis.;http://dx.doi.org/10.1109/SCAM.2008.30;143-152;10;SCAM;
2008;Andrew Stone,Michelle Strout,Shweta Behere;Automatic Determination of May/Must Set Usage in Data-Flow Analysis.;http://dx.doi.org/10.1109/SCAM.2008.28;153-162;10;SCAM;
2008;Lei Wang,Qiang Zhang,PengChao Zhao;Automated Detection of Code Vulnerabilities Based on Program Analysis and Model Checking.;http://dx.doi.org/10.1109/SCAM.2008.24;165-173;9;SCAM;
2008;Michael Gorbovitski,K. Tuncay Tekle,Tom Rothamel,Scott D. Stoller,Yanhong A. Liu;Analysis and Transformations for Efficient Query-Based Debugging.;http://dx.doi.org/10.1109/SCAM.2008.27;174-183;10;SCAM;
2008;Daniel M. Germán,Gregorio Robles,Ahmed E. Hassan;Change Impact Graphs: Determining the Impact of Prior Code Changes.;http://dx.doi.org/10.1109/SCAM.2008.33;184-193;10;SCAM;
2008;Mariano Ceccato,Thomas Roy Dean,Paolo Tonella;Using Program Transformations to Add Structure to a Legacy Data Model.;http://dx.doi.org/10.1109/SCAM.2008.9;197-206;10;SCAM;
2008;Petru Florin Mihancea;Type Highlighting: A Client-Driven Visual Approach for Class Hierarchies Reengineering.;http://dx.doi.org/10.1109/SCAM.2008.16;207-216;10;SCAM;
2008;Jason Chu,Thomas R. Dean;Automated Migration of List Based JSP Web Pages to AJAX.;http://dx.doi.org/10.1109/SCAM.2008.29;217-226;10;SCAM;
2008;Tony Clark,Paul Sammut,James S. Willans;Beyond Annotations: A Proposal for Extensible Java (XJ).;http://dx.doi.org/10.1109/SCAM.2008.34;229-238;10;SCAM;
2008;Miguel Gómez-Zamalloa,Elvira Albert,Germán Puebla;Modular Decompilation of Low-Level Code by Partial Evaluation.;http://dx.doi.org/10.1109/SCAM.2008.35;239-248;10;SCAM;
2008;Yue Jia,Mark Harman;Constructing Subtle Faults Using Higher Order Mutation Testing.;http://dx.doi.org/10.1109/SCAM.2008.36;249-258;10;SCAM;
2008;Raffi Khatchadourian,Awais Rashid;Rejuvenate Pointcut: A Tool for Pointcut Expression Recovery in Evolving Aspect-Oriented Software.;http://dx.doi.org/10.1109/SCAM.2008.32;261-262;2;SCAM;
2008;Cristina Cifuentes;Parfait - A Scalable Bug Checker for C Code.;http://dx.doi.org/10.1109/SCAM.2008.21;263-264;2;SCAM;
2008;Nuno F. Rodrigues,Luís Soares Barbosa;CoordInspector: A Tool for Extracting Coordination Data from Legacy Code.;http://dx.doi.org/10.1109/SCAM.2008.10;265-266;2;SCAM;
2008;Dennis Giffhorn,Christian Hammer 0001;Precise Analysis of Java Programs Using JOANA.;http://dx.doi.org/10.1109/SCAM.2008.17;267-268;2;SCAM;
2008;Zhao Hong Yang,Yun Zhan Gong,Xiao Qing,Wang Ya Wen;DTS - A Software Defects Testing System.;http://dx.doi.org/10.1109/SCAM.2008.12;269-270;2;SCAM;
2007;Oege de Moor,Mathieu Verbaere,Elnar Hajiyev,Pavel Avgustinov,Torbjörn Ekman,Neil Ongkingco,Damien Sereni,Julian Tibble;Keynote Address: .QL for Source Code Analysis.;http://dx.doi.org/10.1109/SCAM.2007.31;3-16;14;SCAM;
2007;Dennis Giffhorn,Christian Hammer 0001;An Evaluation of Slicing Algorithms for Concurrent Programs.;http://dx.doi.org/10.1109/SCAM.2007.9;17-26;10;SCAM;
2007;Mariano Ceccato,Mila Dalla Preda,Jasvir Nagra,Christian S. Collberg,Paolo Tonella;Barrier Slicing for Remote Software Trusting.;http://dx.doi.org/10.1109/SCAM.2007.27;27-36;10;SCAM;
2007;Jens Krinke;Statement-Level Cohesion Metrics and their Visualization.;http://dx.doi.org/10.1109/SCAM.2007.28;37-48;12;SCAM;
2007;Andreas Lochbihler,Gregor Snelting;On Temporal Path Conditions in Dependence Graphs.;http://dx.doi.org/10.1109/SCAM.2007.10;49-58;10;SCAM;
2007;Tobias Gutzmann,Jonas Lundberg,Welf Löwe;Towards Path-Sensitive Points-to Analysis.;http://dx.doi.org/10.1109/SCAM.2007.26;59-68;10;SCAM;
2007;Eva Magnusson,Torbjörn Ekman,Görel Hedin;Extending Attribute Grammars with Collection Attributes--Evaluation and Applications.;http://dx.doi.org/10.1109/SCAM.2007.13;69-80;12;SCAM;
2007;Nicolas Juillerat,Béat Hirsbrunner;"Toward an Implementation of the ""Form Template Method"" Refactoring.";http://dx.doi.org/10.1109/SCAM.2007.11;81-90;10;SCAM;
2007;Walter Binder,Jarle Hulaas,Philippe Moret;Reengineering Standard Java Runtime Systems through Dynamic Bytecode Instrumentation.;http://dx.doi.org/10.1109/SCAM.2007.20;91-100;10;SCAM;
2007;Marius Marin,Leon Moonen,Arie van Deursen;An Integrated Crosscutting Concern Migration Strategy and its Application to JHOTDRAW.;http://dx.doi.org/10.1109/SCAM.2007.25;101-110;10;SCAM;
2007;Arnoldo José Müller Molina,Takeshi Shinohara;Fast Approximate Matching of Programs for Protecting Libre/Open Source Software by Using Spatial Indexes.;http://dx.doi.org/10.1109/SCAM.2007.15;111-122;12;SCAM;
2007;Eric Larson;SUDS: An Infrastructure for Creating Bug Detection Tools.;http://dx.doi.org/10.1109/SCAM.2007.22;123-132;10;SCAM;
2007;Matthew Naylor,Colin Runciman;Finding Inputs that Reach a Target Expression.;http://dx.doi.org/10.1109/SCAM.2007.30;133-142;10;SCAM;
2007;Jason Sawin,Atanas Rountev;Improved Static Resolution of Dynamic Class Loading in Java.;http://dx.doi.org/10.1109/SCAM.2007.24;143-154;12;SCAM;
2007;Serguei A. Roubtsov,Alexandru Telea,Danny Holten;SQuAVisiT: A Software Quality Assessment and Visualisation Toolset.;http://dx.doi.org/10.1109/SCAM.2007.16;155-156;2;SCAM;
2007;Cristina Marinescu;DATES: Design Analysis Tool for Enterprise Systems.;http://dx.doi.org/10.1109/SCAM.2007.14;157-158;2;SCAM;
2007;Jendrik Johannes;Source Code Composition with the Reuseware Composition Framework.;http://dx.doi.org/10.1109/SCAM.2007.12;159-160;2;SCAM;
2007;Huib van den Brink,Rob van der Leek,Joost Visser;Quality Assessment for Embedded SQL.;http://dx.doi.org/10.1109/SCAM.2007.23;163-170;8;SCAM;
2007;Patricia L. Roden,Shamsnaz Virani,Letha H. Etzkorn,Sherri L. Messimer;An Empirical Study of the Relationship of Stability Metrics and the QMOOD Quality Models Over Software Developed Using Highly Iterative or Agile Software Processes.;http://dx.doi.org/10.1109/SCAM.2007.29;171-179;9;SCAM;
2007;Lerina Aversano,Luigi Cerulo,Massimiliano Di Penta;Relating the Evolution of Design Patterns and Crosscutting Concerns.;http://dx.doi.org/10.1109/SCAM.2007.21;180-192;13;SCAM;
2007;Einar W. Høst,Bjarte M. Østvold;The Programmer's Lexicon, Volume I: The Verbs.;http://dx.doi.org/10.1109/SCAM.2007.18;193-202;10;SCAM;
2007;Zhen Ming Jiang,Ahmed E. Hassan;A Framework for Studying Clones In Large Software Systems.;http://dx.doi.org/10.1109/SCAM.2007.19;203-212;10;SCAM;
2007;Dawn Lawrie,Henry Feild,David Binkley;Extracting Meaning from Abbreviated Identifiers.;http://dx.doi.org/10.1109/SCAM.2007.17;213-222;10;SCAM;
2006;Keith Gallagher,David Binkley,Mark Harman;Stop-List Slicing.;http://dx.doi.org/10.1109/SCAM.2006.30;11-20;10;Slicing;
2006;Árpád Beszédes,Tamás Gergely,Tibor Gyimóthy;Graph-Less Dynamic Dependence-Based Dynamic Slicing Algorithms.;http://dx.doi.org/10.1109/SCAM.2006.17;21-30;10;Slicing;
2006;Kai Pan,Sunghun Kim 0001,E. James Whitehead Jr.;Bug Classification Using Program Slicing Metrics.;http://dx.doi.org/10.1109/SCAM.2006.6;31-42;12;Slicing;
2006;David Binkley,Mark Harman,Jens Krinke;Characterising, Explaining, and Exploiting the Approximate Nature of Static Analysis through Animation.;http://dx.doi.org/10.1109/SCAM.2006.7;43-52;10;Static Analysis I;
2006;Jason Sawin,Atanas Rountev;Estimating the Run-Time Progress of a Call Graph Construction Algorithm53-62.;http://dx.doi.org/10.1109/SCAM.2006.12;53-62;10;Static Analysis I;
2006;Weilei Zhang,Barbara G. Ryder;Constructing Accurate Application Call Graphs For Java To Model Library Callbacks.;http://dx.doi.org/10.1109/SCAM.2006.9;63-74;12;Static Analysis I;
2006;Andrew Walenstein,Rachit Mathur,Mohamed R. Chouchane,Arun Lakhotia;Normalizing Metamorphic Malware Using Term Rewriting.;http://dx.doi.org/10.1109/SCAM.2006.20;75-84;10;Transformations;
2006;Michael W. Fagan,Laurent Hascoët,Jean Utke;Data Representation Alternatives in Semantically Augmented Numerical Models.;http://dx.doi.org/10.1109/SCAM.2006.11;85-94;10;Transformations;
2006;Matthew Jacobs,E. Christopher Lewis;SMART C: A Semantic Macro Replacement Translator for C.;http://dx.doi.org/10.1109/SCAM.2006.28;95-106;12;Transformations;
2006;Magiel Bruntink;Linking Analysis and Transformation Tools with Source-Based Mappings.;http://dx.doi.org/10.1109/SCAM.2006.18;107-116;10;Tools;
2006;Adrian D. Thurston,James R. Cordy;Evolving TXL.;http://dx.doi.org/10.1109/SCAM.2006.14;117-126;10;Tools;
2006;Lajos Jeno Fülöp,Tamas Gyovai,Rudolf Ferenc;Evaluating C++ Design Pattern Miner Tools.;http://dx.doi.org/10.1109/SCAM.2006.13;127-138;12;Tools;
2006;Dawn Lawrie,Henry Feild,David Binkley;Syntactic Identifier Conciseness and Consistency.;http://dx.doi.org/10.1109/SCAM.2006.31;139-148;10;Static Analysis II;
2006;Cathal Boogerd,Leon Moonen;Prioritizing Software Inspection Results using Static Profiling.;http://dx.doi.org/10.1109/SCAM.2006.22;149-160;12;Static Analysis II;
2006;Eric Van Wyk,Lijesh Krishnan,Derek Bodin,Eric Johnson,August Schwerdfeger,Phil Russell;Tool Demonstration: Silver Extensible Compiler Frameworks and Modular Language Extensions for Java and C.;http://dx.doi.org/10.1109/SCAM.2006.32;161;1;Tool Demonstrations;
2006;Carlos Noguera,Renaud Pawlak;AVal: an Extensible Attribute-Oriented Programming Validator for Java.;http://dx.doi.org/10.1109/SCAM.2006.5;175-183;9;Tool Demonstrations;
2006;Kim S. Henriksen,John P. Gallagher;Abstract Interpretation of PIC Programs through Logic Programming.;http://dx.doi.org/10.1109/SCAM.2006.1;184-196;13;Tool Demonstrations;
2006;Huiqing Li,Simon J. Thompson;Comparative Study of Refactoring Haskell and Erlang Programs.;http://dx.doi.org/10.1109/SCAM.2006.8;197-206;10;Refactoring;
2006;Dennis Strein,Hans Kratz,Welf Löwe;Cross-Language Program Analysis and Refactoring.;http://dx.doi.org/10.1109/SCAM.2006.10;207-216;10;Refactoring;
2006;Michael L. Collard,Huzefa H. Kagdi,Jonathan I. Maletic;Factoring Differences for Iterative Change Management.;http://dx.doi.org/10.1109/SCAM.2006.15;217-226;10;Refactoring;
2005;David Binkley,Mark Harman;Forward slices are smaller than backward slices.;http://dx.doi.org/10.1109/SCAM.2005.28;15-24;10;Slicing;
2005;Hyoung Seok Hong,Insup Lee,Oleg Sokolsky;Abstract Slicing: A New Approach to Program Slicing Based on Abstract Interpretation and Model Checking.;http://dx.doi.org/10.1109/SCAM.2005.2;25-34;10;Slicing;
2005;Attila Szegedi,Tibor Gyimóthy;Dynamic Slicing of Java Bytecode Programs.;http://dx.doi.org/10.1109/SCAM.2005.8;35-44;10;Slicing;
2005;David Binkley,Sebastian Danicic,Tibor Gyimóthy,Mark Harman,Ákos Kiss 0001,Bogdan Korel;Minimal Slicing and the Relationships Between Forms of Slicing.;http://dx.doi.org/10.1109/SCAM.2005.18;45-56;12;Slicing;
2005;Silvia Breu;Extending Dynamic Aspect Mining with Static Information.;http://dx.doi.org/10.1109/SCAM.2005.9;57-65;9;Concept Location;
2005;Beat Fluri,Harald C. Gall,Martin Pinzger;Fine-Grained Analysis of Change Couplings.;http://dx.doi.org/10.1109/SCAM.2005.14;66-74;9;Concept Location;
2005;Jeremy Singer;Concept Assignment as a Debugging Technique for Code Generators.;http://dx.doi.org/10.1109/SCAM.2005.4;75-86;12;Concept Location;
2005;Hongyu Zhang,Jeremy S. Bradbury,James R. Cordy,Jürgen Dingel;Implementation and Verification of Implicit-Invocation Systems Using Source Transformation.;http://dx.doi.org/10.1109/SCAM.2005.15;87-96;10;Program Transformations I;
2005;Markus Schordan,Daniel J. Quinlan;Specifying Transformation Sequences as Computation on Program Fragments with an Abstract Attribute Grammar.;http://dx.doi.org/10.1109/SCAM.2005.23;97-106;10;Program Transformations I;
2005;Nerina Bermudo,Andreas Krall,R. Nigel Horspool;Control Flow Graph Reconstruction for Assembly Language Programs with Delayed Instructions.;http://dx.doi.org/10.1109/SCAM.2005.6;107-118;12;Program Transformations I;
2005;Aiwu Shi,Gleb Naumovich;Static Analysis for Computing Escapability and Mutability for Java Components.;http://dx.doi.org/10.1109/SCAM.2005.24;119-128;10;Pointer Analysis;
2005;Richard E. Jones,Andy C. King;A Fast Analysis for Thread-Local Garbage Collection with Dynamic Class Loading.;http://dx.doi.org/10.1109/SCAM.2005.1;129-138;10;Pointer Analysis;
2005;Marcio Buss,Stephen A. Edwards,Bin Yao,Dan G. Waddington;Pointer Analysis for Source-to-Source Transformations.;http://dx.doi.org/10.1109/SCAM.2005.20;139-150;12;Pointer Analysis;
2005;Michael English,Jim Buckley,Tony Cahill,Kristian Lynch;Measuring the Impact of Friends on the Internal Attributes of Software Systems.;http://dx.doi.org/10.1109/SCAM.2005.16;151-160;10;Empirical Studies;
2005;Steve Counsell,Stephen Swift,Allan Tucker;Object-oriented cohesion as a surrogate of software comprehension: an empirical study.;http://dx.doi.org/10.1109/SCAM.2005.19;161-172;12;Empirical Studies;
2005;Shannon Xu,Thomas R. Dean;Transforming Embedded Java Code into Custom Tags.;http://dx.doi.org/10.1109/SCAM.2005.27;173-182;10;Program Transformations II;
2005;Bernadette Power,Geoff W. Hamilton;Declassification: Transforming Java Programs to Remove Intermediate Classes.;http://dx.doi.org/10.1109/SCAM.2005.7;183-192;10;Program Transformations II;
2005;Paul Anderson;The Performance Penalty of XML for Program Intermediate Representations.;http://dx.doi.org/10.1109/SCAM.2005.25;193-202;10;Program Transformations II;
2004;Gregg Rothermel;Using Source-Code Analysis to Help End-User Programmers Create Dependable Software.;http://dx.doi.org/10.1109/SCAM.2004.25;3;1;Keynote;
2004;Bogong Su,Jian Wang,Erh-Wen Hu,Joseph B. Manzano;Software De-Pipelining Technique.;http://dx.doi.org/10.1109/SCAM.2004.20;7-16;10;Decompilation;
2004;Arun Lakhotia,Eric Uday Kumar;Abstracting Stack to Detect Obfuscated Calls in Binaries.;http://dx.doi.org/10.1109/SCAM.2004.2;17-26;10;Decompilation;
2004;Jens Krinke;Context-Sensitivity Matters, But Context Does Not.;http://dx.doi.org/10.1109/SCAM.2004.8;29-35;7;Slicing;
2004;Keith Brian Gallagher;Some Notes on Interprocedural Program Slicing.;http://dx.doi.org/10.1109/SCAM.2004.21;36-42;7;Slicing;
2004;David Binkley,Sebastian Danicic,Tibor Gyimóthy,Mark Harman,Ákos Kiss 0001,Lahcen Ouarbya;Formalizing Executable Dynamic and Forward Slicing.;http://dx.doi.org/10.1109/SCAM.2004.13;43-52;10;Slicing;
2004;Uwe Naumann,Jean Utke,Andrew Lyons,Michael W. Fagan;Control Flow Reversal for Adjoint Code Generation.;http://dx.doi.org/10.1109/SCAM.2004.9;55-64;10;Restructuring;
2004;Deji Fatiregun,Mark Harman,Robert M. Hierons;Evolving Transformation Sequences using Genetic Algorithms.;http://dx.doi.org/10.1109/SCAM.2004.11;66-75;10;Restructuring;
2004;Xia Xu,Chung-Horng Lung,Marzia Zaman,Anand Srinivasan;Program Restructuring Through Clustering Techniques.;http://dx.doi.org/10.1109/SCAM.2004.18;75-84;10;Restructuring;
2004;Mark Harman,David Binkley,Ranjit Singh,Robert M. Hierons;Amorphous Procedure Extraction.;http://dx.doi.org/10.1109/SCAM.2004.4;85-94;10;Restructuring;
2004;Tom Tourwé,Kim Mens;Mining Aspectual Views using Formal Concept Analysis.;http://dx.doi.org/10.1109/SCAM.2004.15;97-106;10;Aspect-Oriented Programming ;
2004;Mariano Ceccato,Paolo Tonella;Adding Distribution to Existing Applications by Means of Aspect Oriented Programming.;http://dx.doi.org/10.1109/SCAM.2004.3;107-116;10;Aspect-Oriented Programming ;
2004;Daqing Hou,H. James Hoover,Piotr Rudnicki;Specifying the Law of Demeter and C++ Programming Guidelines with FCL.;http://dx.doi.org/10.1109/SCAM.2004.22;119-127;9;Maintenance;
2004;Vera Wahler,Dietmar Seipel,Jürgen Wolff von Gudenberg,Gregor Fischer;Clone Detection in Source Code by Frequent Itemset Techniques.;http://dx.doi.org/10.1109/SCAM.2004.6;128-135;8;Maintenance;
2004;Magiel Bruntink,Arie van Deursen;Predicting Class Testability using Object-Oriented Metrics.;http://dx.doi.org/10.1109/SCAM.2004.16;136-145;10;Maintenance;
2004;Gregorio Robles,Jesús M. González-Barahona;Executable Source Code and Non-Executable Source Code: Analysis and Relationships.;http://dx.doi.org/10.1109/SCAM.2004.12;149-157;9;Source Code;
2004;Katsuhisa Maruyama,Shinichiro Yamamoto;A CASE Tool Platform Using an XML Representation of Java Source Code.;http://dx.doi.org/10.1109/SCAM.2004.1;158-167;10;Source Code;
2003;David J. Pearce,Paul H. J. Kelly,Chris Hankin;Online Cycle Detection and Difference Propagation for Pointer Analysis.;http://dx.doi.org/10.1109/SCAM.2003.1238026;3-12;10;Static Analysis;
2003;Matthieu Martel;Improving the Static Analysis of Loops by Dynamic Partitioning Techniques.;http://dx.doi.org/10.1109/SCAM.2003.1238027;13-21;9;Static Analysis;
2003;Jean-Marie Favre;CPP Denotational Semantics.;http://dx.doi.org/10.1109/SCAM.2003.1238028;22-;1;Static Analysis;
2003;Michael English,Jim Buckley,Tony Cahill;Applying Meyer's Taxonomy to Object-Oriented Software Systems.;http://dx.doi.org/10.1109/SCAM.2003.1238029;35-44;10;Object Oriented Code;
2003;Richard Wheeldon,Steve Counsell;Power Law Distributions in Class Relationships.;http://dx.doi.org/10.1109/SCAM.2003.1238030;45-54;10;Object Oriented Code;
2003;Neil Walkinshaw,Marc Roper,Murray Wood;The Java System Dependence Graph.;http://dx.doi.org/10.1109/SCAM.2003.1238031;55-64;10;Object Oriented Code;
2003;Otto Skrove Bagge,Karl Trygve Kalleberg,Magne Haveraaen,Eelco Visser;Design of the CodeBoost Transformation System for Domain-Specific Optimisation of C++ Programs.;http://dx.doi.org/10.1109/SCAM.2003.1238032;65-;1;Object Oriented Code;
2003;Chris Verhoef;Managing Multi-Billion Dollar IT Budgets using Source Code Analysis.;http://dx.doi.org/10.1109/SCAM.2003.1238033;77-;1;Keynote;
2003;Jens Krinke;Barrier Slicing and Chopping.;http://dx.doi.org/10.1109/SCAM.2003.1238034;81-87;7;Slicing;
2003;Martin P. Ward;Slicing the SCAM Mug: A Case Study in Semantic Slicing.;http://dx.doi.org/10.1109/SCAM.2003.1238035;88-97;10;Slicing;
2003;Aditya Rajeev Kulkarni,S. Ramesh;Static Slicing of Reactive Programs.;http://dx.doi.org/10.1109/SCAM.2003.1238036;98-107;10;Slicing;
2003;Fumiaki Umemori,Kenji Konda,Reishi Yokomori,Katsuro Inoue;Design and Implementation of Bytecode-based Java Slicing System.;http://dx.doi.org/10.1109/SCAM.2003.1238037;108-117;10;Slicing;
2003;Ákos Kiss 0001,Judit Jász,Gábor Lehotai,Tibor Gyimóthy;Interprocedural Static Slicing of Binary Executables.;http://dx.doi.org/10.1109/SCAM.2003.1238038;118-;1;Slicing;
2003;Maxim Mossienko,Oleg Khaschansky,Dmitriy Antonov,Oleg Smirnov,Anton Gubanov;Towards managing environment dependence during legacy systems renovation and maintenance.;http://dx.doi.org/10.1109/SCAM.2003.1238039;131-140;10;Program Transformations;
2003;Karina Olmos,Eelco Visser;Turning Dynamic Typing into Static Typing by Program Specialization in a Compiler Front-end for Octave.;http://dx.doi.org/10.1109/SCAM.2003.1238040;141-150;10;Program Transformations;
2003;Xinping Guo,James R. Cordy,Thomas R. Dean;Unique Renaming of Java Using Source Transformation.;http://dx.doi.org/10.1109/SCAM.2003.1238041;151-160;10;Program Transformations;
2003;Jan Kort,Ralf Lämmel;Parse-Tree Annotations Meet Re-Engineering Concerns.;http://dx.doi.org/10.1109/SCAM.2003.1238042;161-;1;Program Transformations;
2003;Giuliano Antoniol,Massimiliano Di Penta,Gianluca Masone,Umberto Villano;XOgastan: XML-Oriented gcc AST Analysis and Transformations.;http://dx.doi.org/10.1109/SCAM.2003.1238043;173-182;10;Tools and Techniques;
2003;António Menezes Leitão;Detection of Redundant Code using R2D2.;http://dx.doi.org/10.1109/SCAM.2003.1238044;183-192;10;Tools and Techniques;
2003;Patrick Moseley,Saumya K. Debray,Gregory R. Andrews;Checking Program Profiles.;http://dx.doi.org/10.1109/SCAM.2003.1238045;193-202;10;Tools and Techniques;
2003;David Binkley,Mark Harman;Results from a Large-Scale Study of Performance Optimization Techniques for Source Code Analyses Based on Graph Reachability Algorithms.;http://dx.doi.org/10.1109/SCAM.2003.1238046;203-;1;Tools and Techniques;
2002;Ira D. Baxter;Parallel Support for Source Code Analysis and Modification.;http://dx.doi.org/10.1109/SCAM.2002.1134100;3-;1;Keynote Address;
2002;Sudipto Ghosh;Towards Measurement of Testability of Concurrent Object-Oriented Programs Using Fault Insertion: A Preliminary Investigation.;http://dx.doi.org/10.1109/SCAM.2002.1134101;17-25;9;Testing, Metrics, Maintenance;
2002;Terence J. Harmer,F. George Wilkie;An Extensible Metrics Extraction Environment for Object-Oriented Programming Languages.;http://dx.doi.org/10.1109/SCAM.2002.1134102;26-35;10;Testing, Metrics, Maintenance;
2002;Elizabeth Burd,John Oliver Bailey;Evaluating Clone Detection Tools for Use during Preventative Maintenance.;http://dx.doi.org/10.1109/SCAM.2002.1134103;36-43;8;Testing, Metrics, Maintenance;
2002;Frederick V. Ramsey,James J. Alpigini;A Simple Mathematically Based Framework for Rule Extraction Using Wide Spectrum Language.;http://dx.doi.org/10.1109/SCAM.2002.1134104;44-;1;Testing, Metrics, Maintenance;
2002;Mark Harman,Chris Fox,Robert M. Hierons,Lin Hu,Sebastian Danicic,Joachim Wegener;VADA: A Transformation-Based System for Variable Dependence Analysis.;http://dx.doi.org/10.1109/SCAM.2002.1134105;55-64;10;Source Transformation, Source Processing;
2002;Christian H. Bischof,H. Martin Bücker,Bruno Lang,Arno Rasch,Andre Vehreschild;Combining Source Transformation and Operator Overloading Techniques to Compute Derivatives for MATLAB Programs.;http://dx.doi.org/10.1109/SCAM.2002.1134106;65-72;8;Source Transformation, Source Processing;
2002;Xingyuan Zhang,Malcolm Munro,Mark Harman,Lin Hu;Mechanized Operational Semantics of WSL.;http://dx.doi.org/10.1109/SCAM.2002.1134107;73-82;10;Source Transformation, Source Processing;
2002;Lerina Aversano,Massimiliano Di Penta,Ira D. Baxter;Handling Preprocessor-Conditioned Declarations.;http://dx.doi.org/10.1109/SCAM.2002.1134108;83-92;10;Source Transformation, Source Processing;
2002;Thomas R. Dean,James R. Cordy,Andrew J. Malton,Kevin A. Schneider;Grammar Programming in TXL.;http://dx.doi.org/10.1109/SCAM.2002.1134109;93-;1;Source Transformation, Source Processing;
2002;Mark Harman,Lin Hu,Malcolm Munro,Xingyuan Zhang,Sebastian Danicic,Mohammed Daoudi,Lahcen Ouarbya;An Interprocedural Amorphous Slicer for WSL.;http://dx.doi.org/10.1109/SCAM.2002.1134110;105-114;10;Slicing;
2002;Baowen Xu,Zhenqiang Chen,Hongji Yang;Dynamic Slicing Object-Oriented Programs for Debugging.;http://dx.doi.org/10.1109/SCAM.2002.1134111;115-122;8;Slicing;
2002;Filippo Ricca,Paolo Tonella;Construction of the System Dependence Graph for Web Application Slicing.;http://dx.doi.org/10.1109/SCAM.2002.1134112;123-132;10;Slicing;
2002;Juergen Rilling,Hon Fung Li,Dhrubajyoti Goswami;Predicate-Based Dynamic Slicing of Message Passing Programs.;http://dx.doi.org/10.1109/SCAM.2002.1134113;133-;1;Slicing;
2002;Francoise Balmas;Using Dependence Graphs as a Support to Document Programs.;http://dx.doi.org/10.1109/SCAM.2002.1134114;145-154;10;Dependence Graphs, Static Analysis;
2002;Ana Milanova,Atanas Rountev,Barbara G. Ryder;Precise Call Graph Construction in the Presence of Function Pointers.;http://dx.doi.org/10.1109/SCAM.2002.1134115;155-162;8;Dependence Graphs, Static Analysis;
2002;Peter Bunus,Peter Fritzson;Semantics Guided Filtering of Combinatorial Graph Transformations in Declarative Equation-Based Languages.;http://dx.doi.org/10.1109/SCAM.2002.1134116;163-172;10;Dependence Graphs, Static Analysis;
2002;Byeong-Mo Chang,Jang-Wu Jo,Soon Hee Her;Visualization of Exception Propagation for Java Using Static Analysis.;http://dx.doi.org/10.1109/SCAM.2002.1134117;173-;1;Dependence Graphs, Static Analysis;
2001;Michael Weber,Viren Shah,Chris Ren;A Case Study in Detecting Software Security Vulnerabilities Using Constraint Optimization.;http://dx.doi.org/10.1109/SCAM.2001.972661;3-13;11;SCAM;
2001;Juergen Rilling,Bhaskar Karanth;A Hybrid Program Slicing Framework.;http://dx.doi.org/10.1109/SCAM.2001.972662;14-25;12;SCAM;
2001;Sandro Bartolini,Cosimo Antonio Prete;An Object Level Transformation Technique to Improve the Performance of Embedded Applications.;http://dx.doi.org/10.1109/SCAM.2001.972663;26-34;9;SCAM;
2001;Maurizio Rebaudengo,Matteo Sonza Reorda,Massimo Violante,Marco Torchiano;A Source-to-Source Compiler for Generating Dependable Software.;http://dx.doi.org/10.1109/SCAM.2001.972664;35-44;10;SCAM;
2001;Laurent Deruelle,Nordine Melab,Mourad Bouneffa,Henri Basson;Analysis and Manipulation of Distributed Multi-Language Software Code.;http://dx.doi.org/10.1109/SCAM.2001.972665;45-56;12;SCAM;
2001;Amit Sharma,Miriam A. M. Capretz;Application Maintenance Using Software Agents.;http://dx.doi.org/10.1109/SCAM.2001.972666;57-66;10;SCAM;
2001;Zhenqiang Chen,Baowen Xu,Hongji Yang;Detecting Dead Statements for Concurrent Programs.;http://dx.doi.org/10.1109/SCAM.2001.972667;67-74;8;SCAM;
2001;James M. Bieman,Vanessa Murdock;Finding Code on the World Wibe Web: A Preliminary Investigation.;http://dx.doi.org/10.1109/SCAM.2001.972668;75-80;6;SCAM;
2001;Paul Anderson,David Binkley,Genevieve Rosay,Tim Teitelbaum;Flow Insensitive Points-To Sets.;http://dx.doi.org/10.1109/SCAM.2001.972669;81-91;11;SCAM;
2001;Giuliano Antoniol,Umberto Villano,Massimiliano Di Penta,Gerardo Casazza,Ettore Merlo;Identifying Clones in the Linux Kernel.;http://doi.ieeecomputersociety.org/10.1109/SCAM.2001.10003;92-99;8;SCAM;
2001;Günter Kniesel,Pascal Costanza,Michael Austermann;Jmangler-A Framework for Load-Time Transformation of Java Class Files.;http://dx.doi.org/10.1109/SCAM.2001.972671;100-110;11;SCAM;
2001;Sibylle Schupp,Douglas P. Gregor,David R. Musser;Library Transformations.;http://dx.doi.org/10.1109/SCAM.2001.972672;111-123;13;SCAM;
2001;Jane Horgan,James F. Power,John Waldron;Measurement and Analysis of Runtime Profiling Data for Java Programs.;http://dx.doi.org/10.1109/SCAM.2001.972673;124-132;9;SCAM;
2001;Michael L. Van de Vanter;Preserving the Documentary Structure of Source Code in Language-Based Transformation Tools.;http://dx.doi.org/10.1109/SCAM.2001.972674;133-143;11;SCAM;
2001;Andrea De Lucia;Program Slicing: Methods and Applications.;http://dx.doi.org/10.1109/SCAM.2001.972675;144-151;8;SCAM;
2001;Filippo Ricca,Paolo Tonella,Ira D. Baxter;Restructuring Web Applications via Transformation Rules.;http://dx.doi.org/10.1109/SCAM.2001.972676;152-162;11;SCAM;
2001;Claire Knight;Smell the Coffee! Uncovering Java Analysis Issues.;http://dx.doi.org/10.1109/SCAM.2001.972677;163-169;7;SCAM;
2001;James R. Cordy,Thomas R. Dean,Andrew J. Malton,Kevin A. Schneider;Software Engineering by Source Transformation-Experience with TXL.;http://dx.doi.org/10.1109/SCAM.2001.972678;170-180;11;SCAM;
2001;David Byers,Mariam Kamkar;Static Slicing and Parametric Polymorphism.;http://dx.doi.org/10.1109/SCAM.2001.972679;181-186;6;SCAM;
2001;Martin P. Ward;The Formal Transformation Approach to Source Code Analysis and Manipulation.;http://dx.doi.org/10.1109/SCAM.2001.972680;187-195;9;SCAM;
2001;Amie L. Souter,Lori L. Pollock;Type Infeasible Call Chains.;http://dx.doi.org/10.1109/SCAM.2001.972681;196-205;10;SCAM;
2001;Liz Burd,Stephen Rank;Using Automated Source Code Analysis for Software Evolution.;http://dx.doi.org/10.1109/SCAM.2001.972682;206-212;7;SCAM;
2001;Paolo Maggi,Riccardo Sisto;Using Data Flow Analysis to Infer Type Information in Java Bytecode.;http://dx.doi.org/10.1109/SCAM.2001.972683;213-;1;SCAM;
