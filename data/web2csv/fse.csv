2015;Gabriel A. Moreno,Javier Cámara,David Garlan,Bradley R. Schmerl;Proactive self-adaptation under uncertainty: a probabilistic model checking approach.;1-12;12;Adaptive Systems;
2015;Antonio Filieri,Henry Hoffmann,Martina Maggio;Automated multi-objective control for self-adaptive software design.;13-24;12;Adaptive Systems;
2015;Gholamreza Safi,Arman Shahbazian,William G. J. Halfond,Nenad Medvidovic;Detecting event anomalies in event-based systems.;25-37;13;Adaptive Systems;
2015;Miltiadis Allamanis,Earl T. Barr,Christian Bird,Charles A. Sutton;Suggesting accurate method and class names.;38-49;12;Software Quality;
2015;Neil A. Ernst,Stephany Bellomo,Ipek Ozkaya,Robert L. Nord,Ian Gorton;Measure it? Manage it? Ignore it? software practitioners and technical debt.;50-60;11;Software Quality;
2015;Lucas Bang,Abdulbaki Aydin,Tevfik Bultan;Automatically computing path complexity of programs.;61-72;12;Software Quality;
2015;Ankush Desai,Shaz Qadeer,Sanjit A. Seshia;Systematic testing of asynchronous reactive systems.;73-83;11;Synthesis and Search-Based Approaches for Reactive Systems;
2015;Reza Matinnejad,Shiva Nejati,Lionel C. Briand,Thomas Bruckmann;Effective test suites for mixed discrete-continuous stateflow controllers.;84-95;12;Synthesis and Search-Based Approaches for Reactive Systems;
2015;Shahar Maoz,Jan Oliver Ringert;GR(1) synthesis for LTL specification patterns.;96-106;11;Synthesis and Search-Based Approaches for Reactive Systems;
2015;Ermira Daka,José Campos,Gordon Fraser,Jonathan Dorn,Westley Weimer;Modeling readability to improve unit tests.;107-118;12;Testing I;
2015;Paolo Arcaini,Angelo Gargantini,Elvinia Riccobene;Improving model-based test generation by model decomposition.;119-130;12;Testing I;
2015;Malavika Samak,Murali Krishna Ramanathan;Synthesizing tests for detecting atomicity violations.;131-142;12;Testing I;
2015;Mario Linares Vásquez,Gabriele Bavota,Carlos Eduardo Bernal-Cárdenas,Rocco Oliveto,Massimiliano Di Penta,Denys Poshyvanyk;Optimizing energy consumption of GUIs in Android apps: a multi-objective approach.;143-154;12;Search-Based Approaches to Testing, Repair, and Energy Optimisation;
2015;Andrea Arcuri,Gordon Fraser,Juan Pablo Galeotti;Generating TCP/UDP network data for automated unit test generation.;155-165;11;Search-Based Approaches to Testing, Repair, and Energy Optimisation;
2015;Fan Long,Martin Rinard;Staged program repair with condition synthesis.;166-178;13;Search-Based Approaches to Testing, Repair, and Energy Optimisation;
2015;Moritz Beller,Georgios Gousios,Annibale Panichella,Andy Zaidman;When, how, and why developers (do not) test in their IDEs.;179-190;12;Empirical Studies of Software Developers I;
2015;Caitlin Sadowski,Kathryn T. Stolee,Sebastian G. Elbaum;How developers search for code: a case study.;191-201;11;Empirical Studies of Software Developers I;
2015;Katja Kevic,Braden M. Walters,Timothy R. Shaffer,Bonita Sharif,David C. Shepherd,Thomas Fritz;Tracing software developers' eyes and interactions for change tasks.;202-213;12;Empirical Studies of Software Developers I;
2015;Yucheng Zhang,Ali Mesbah 0001;Assertions are strongly correlated with test suite effectiveness.;214-224;11;Testing II;
2015;Yang Feng,Zhenyu Chen,James A. Jones,Chunrong Fang,Baowen Xu;Test report prioritization to assist crowdsourced testing.;225-236;12;Testing II;
2015;August Shi,Tifany Yung,Alex Gyori,Darko Marinov;Comparing and combining test-suite reduction and regression test selection.;237-247;11;Testing II;
2015;Justin Smith,Brittany Johnson,Emerson R. Murphy-Hill,Bill Chu,Heather Richter Lipford;Questions developers ask while diagnosing potential security vulnerabilities with static analysis.;248-259;12;Security;
2015;Jim Witschey,Olga A. Zielinska,Allaire K. Welk,Emerson R. Murphy-Hill,Christopher B. Mayhorn,Thomas Zimmermann 0001;Quantifying developers' adoption of security tools.;260-271;12;Security;
2015;Inian Parameshwaran,Enrico Budianto,Shweta Shinde,Hung Dang,Atul Sadhu,Prateek Saxena;Auto-patching DOM-based XSS at scale.;272-283;12;Security;
2015;Norbert Siegmund,Alexander Grebhahn,Sven Apel,Christian Kästner;Performance-influence models for highly configurable systems.;284-294;11;Configurable Systems;
2015;Farnaz Behrang,Myra B. Cohen,Alessandro Orso;Users beware: preference inconsistencies ahead.;295-306;12;Configurable Systems;
2015;Tianyin Xu,Long Jin,Xuepeng Fan,Yuanyuan Zhou,Shankar Pasupathy,Rukma Talwadker;Hey, you have given me too many knobs!: understanding and dealing with over-designed configuration in system software.;307-319;13;Configurable Systems;
2015;Fuxiang Chen,Sunghun Kim;Crowd debugging.;320-332;13;Debugging;
2015;Mouna Hammoudi,Brian Burg,Gigon Bae,Gregg Rothermel;On the use of delta debugging to reduce recordings and facilitate debugging of web applications.;333-344;12;Debugging;
2015;Simon Holm Jensen,Manu Sridharan,Koushik Sen,Satish Chandra;MemInsight: platform-independent memory debugging for JavaScript.;345-356;12;Debugging;
2015;Liang Gong,Michael Pradel,Koushik Sen;JITProf: pinpointing JIT-unfriendly JavaScript code.;357-368;12;Web Applications;
2015;Hung Viet Nguyen,Christian Kästner,Tien N. Nguyen;Cross-language program slicing for dynamic web applications.;369-380;12;Web Applications;
2015;Erdal Mutlu,Serdar Tasiran,Benjamin Livshits;Detecting JavaScript races that matter.;381-392;12;Web Applications;
2015;Jürgen Cito,Philipp Leitner,Thomas Fritz,Harald C. Gall;The making of cloud applications: an empirical study on software development for the cloud.;393-403;11;Studies of Software Engineering Research and Practice;
2015;Meiyappan Nagappan,Romain Robbes,Yasutaka Kamei,Éric Tanter,Shane McIntosh,Audris Mockus,Ahmed E. Hassan;An empirical study of goto in C code from GitHub repositories.;404-414;11;Studies of Software Engineering Research and Practice;
2015;David Lo,Nachiappan Nagappan,Thomas Zimmermann 0001;How practitioners perceive the relevance of software engineering research.;415-425;11;Studies of Software Engineering Research and Practice;
2015;Rui Gu,Guoliang Jin,Linhai Song,Linjie Zhu,Shan Lu;What change history tells us about thread synchronization.;426-438;13;Concurrency;
2015;Jeff Huang 0001,Lawrence Rauchwerger;Finding schedule-sensitive branches.;439-449;11;Concurrency;
2015;Yan Cai,Lingwei Cao;Effective and precise dynamic detection of hidden races for Java programs.;450-461;12;Concurrency;
2015;Ravi Mangal,Xin Zhang,Aditya V. Nori,Mayur Naik;A user-guided approach to program analysis.;462-473;12;Program Analysis I;
2015;Michael Eichberg,Ben Hermann,Mira Mezini,Leonid Glanz;Hidden truths in dead software paths.;474-484;11;Program Analysis I;
2015;Mohammed Afraz,Diptikalyan Saha,Aditya Kanade;P3: partitioned path profiling.;485-495;11;Program Analysis I;
2015;Xiao-Yuan Jing,Fei Wu,Xiwei Dong,Fumin Qi,Baowen Xu;Heterogeneous cross-company defect prediction by unified metric representation and CCA-based transfer learning.;496-507;12;Prediction and Recommendation;
2015;Jaechang Nam,Sunghun Kim;Heterogeneous defect prediction.;508-519;12;Prediction and Recommendation;
2015;Yun Lin,Xin Peng,Zhenchang Xing,Diwen Zheng,Wenyun Zhao;Clone-based and interactive recommendation for modifying pasted code.;520-531;12;Prediction and Recommendation;
2015;Edward K. Smith,Earl T. Barr,Claire Le Goues,Yuriy Brun;Is the cure worse than the disease? overfitting in automated program repair.;532-543;12;Program Repair;
2015;Nishant Sinha,Rezwana Karim;Responsive designs in a snap.;544-554;11;Program Repair;
2015;Aritra Dhar,Rahul Purandare,Mohan Dhawan,Suresh Rangaswamy;CLOTHO: saving programs from malformed strings and incorrect string-handling.;555-566;12;Program Repair;
2015;Laura Moreno,Gabriele Bavota,Sonia Haiduc,Massimiliano Di Penta,Rocco Oliveto,Barbara Russo,Andrian Marcus;Query-based configuration of text retrieval solutions for software engineering tasks.;567-578;12;Information Retrieval;
2015;Tien-Duy B. Le,Richard Jayadi Oentaryo,David Lo;Information retrieval and spectrum based bug localization: better together.;579-590;12;Information Retrieval;
2015;Tuong Huan Nguyen,John C. Grundy,Mohamed Almorsy;Rule-based extraction of goal-use case models from text.;591-601;11;Information Retrieval;
2015;Pietro Braione,Giovanni Denaro,Mauro Pezzè;Symbolic execution of programs with heap inputs.;602-613;12;Program Analysis II;
2015;Yangchun Fu,Zhiqiang Lin,David Brumley;Automatically deriving pointer reference expressions from binary code for memory dump analysis.;614-624;11;Program Analysis II;
2015;Christoph Treude,Fernando Marques Figueira Filho,Uirá Kulesza;Summarizing and measuring development activity.;625-636;12;Measurement and Metric;
2015;Qimu Zheng,Audris Mockus,Minghui Zhou;A method to identify and correct problematic software activity data: exploiting capacity constraints and data redundancies.;637-648;12;Measurement and Metric;
2015;Christian R. Prause,Matthias Jarke;Gamification for enforcing coding conventions.;649-660;12;Patterns and Coding Convention;
2015;Ding Li,Yingjun Lyu,Mian Wan,William G. J. Halfond;String analysis for Java and Android applications.;661-672;12;Mobile Applications;
2015;Kevin Moran,Mario Linares Vásquez,Carlos Bernal-Cárdenas,Denys Poshyvanyk;Auto-completing bug reports for Android applications.;673-686;14;Mobile Applications;
2015;Yanick Fratantonio,Aravind Machiry,Antonio Bianchi,Christopher Kruegel,Giovanni Vigna;CLAPP: characterizing loops in Android applications.;687-697;11;Mobile Applications;
2015;Jun Sun 0001,Hao Xiao,Yang Liu,Shang-Wei Lin,Shengchao Qin;TLV: abstraction through testing, learning, and validation.;698-709;12;Search, Synthesis, and Verification;
2015;Stefan Heule,Manu Sridharan,Satish Chandra;Mimic: computing models for opaque code.;710-720;11;Search, Synthesis, and Verification;
2015;Dirk Beyer 0001,Matthias Dangl,Daniel Dietsch,Matthias Heizmann,Andreas Stahlbauer;Witness validation and stepwise testification across software verifiers.;721-733;13;Search, Synthesis, and Verification;
2015;Scott West,Sebastian Nanz,Bertrand Meyer;Efficient and reasonable object-oriented concurrency.;734-744;11;Java and Object-Oriented Programming;
2015;Jongse Park,Hadi Esmaeilzadeh,Xin Zhang,Mayur Naik,William Harris;FlexJava: language support for safe and modular approximate programming.;745-757;13;Java and Object-Oriented Programming;
2015;Ben Hermann,Michael Reif,Michael Eichberg,Mira Mezini;Getting to know you: towards a capability model for Java.;758-769;12;Java and Object-Oriented Programming;
2015;Jonathan Bell,Gail E. Kaiser,Eric Melski,Mohan Dattatreya;Efficient dependency detection for safe Java test acceleration.;770-781;12;Testing III;
2015;Ulf Kargen,Nahid Shahmehri;Turning programs against each other: high coverage fuzz-testing using binary-code mutation and dynamic slicing.;782-792;11;Testing III;
2015;Yuting Chen,Zhendong Su;Guided differential testing of certificate validation in SSL/TLS implementations.;793-804;12;Testing III;
2015;Bogdan Vasilescu,Yue Yu,Huaimin Wang,Premkumar T. Devanbu,Vladimir Filkov;Quality and productivity outcomes relating to continuous integration in GitHub.;805-816;12;Empirical Studies of Software Developers II;
2015;Casey Casalnuovo,Bogdan Vasilescu,Premkumar T. Devanbu,Vladimir Filkov;Developer onboarding in GitHub: the role of prior social links and language experience.;817-828;12;Empirical Studies of Software Developers II;
2015;Matthieu Foucault,Marc Palyart,Xavier Blanc,Gail C. Murphy,Jean-Rémy Falleri;Impact of developer turnover on quality in open-source software.;829-841;13;Empirical Studies of Software Developers II;
2015;Koushik Sen,George C. Necula,Liang Gong,Wontae Choi;MultiSE: multi-path symbolic execution using value summaries.;842-853;12;Symbolic Execution;
2015;Shengjian Guo,Markus Kusano,Chao Wang,Zijiang Yang,Aarti Gupta;Assertion guided symbolic execution of multithreaded programs.;854-865;12;Symbolic Execution;
2015;Mateus Borges,Antonio Filieri,Marcelo d'Amorim,Corina S. Pasareanu;Iterative distribution-aware sampling for probabilistic symbolic execution.;866-877;12;Symbolic Execution;
2015;Brittany Johnson,Rahul Pandita,Emerson R. Murphy-Hill,Sarah Heckman;Bespoke tools: adapted to the concepts developers know.;878-881;4;Human Aspects of Software Engineering;
2015;Titus Barik,Brittany Johnson,Emerson R. Murphy-Hill;I heart hacker news: expanding qualitative research findings by analyzing social news websites.;882-885;4;Human Aspects of Software Engineering;
2015;Kevin J. North,Shane Bolan,Anita Sarma,Myra B. Cohen;GitSonifier: using sound to portray developer conflict history.;886-889;4;Human Aspects of Software Engineering;
2015;Raphael Pham,Yauheni Stoliar,Kurt Schneider;Automatically recommending test code examples to inexperienced developers.;890-893;4;Human Aspects of Software Engineering;
2015;Han Xu,Stephan Krusche,Bernd Bruegge;Using software theater for the demonstration of innovative ubiquitous applications.;894-897;4;Human Aspects of Software Engineering;
2015;Nimrod Busany,Shahar Maoz;Behavioral log analysis with statistical guarantees.;898-901;4;Validation, Verification, and Testing;
2015;Yingfei Xiong,Dan Hao,Lu Zhang 0023,Tao Zhu,Muyao Zhu,Tian Lan;Inner oracles: input-specific assertions on internal states.;902-905;4;Validation, Verification, and Testing;
2015;Cristian Cadar;Targeted program transformations for symbolic execution.;906-909;4;Validation, Verification, and Testing;
2015;Jifeng Xuan,Xiaoyuan Xie,Martin Monperrus;Crash reproduction via test case mutation: let existing test cases help.;910-913;4;Validation, Verification, and Testing;
2015;Arun K. Rajagopalan,Jeff Huang 0001;RDIT: race detection from incomplete traces.;914-917;4;Validation, Verification, and Testing;
2015;Tingting Yu;TACO: test suite augmentation for concurrent programs.;918-921;4;Maintenance and Evolution;
2015;Apostolos V. Zarras,Theofanis Vartziotis,Panos Vassiliadis;Navigating through the archipelago of refactorings.;922-925;4;Maintenance and Evolution;
2015;Hung Viet Nguyen,My Huu Nguyen,Son Cuu Dang,Christian Kästner,Tien N. Nguyen;Detecting semantic merge conflicts with variability-aware execution.;926-929;4;Maintenance and Evolution;
2015;Mathieu Acher,Guillaume Bécan,Benoît Combemale,Benoit Baudry,Jean-Marc Jézéquel;Product lines can jeopardize their trade secrets.;930-933;4;Maintenance and Evolution;
2015;Jinseong Jeon,Xiaokang Qiu,Jeffrey S. Foster,Armando Solar-Lezama;JSketch: sketching for Java.;934-937;4;Tool Demonstrations;
2015;Pavel Dovgalyuk,Denis Dmitriev,Vladimir Makarov;Don't panic: reverse debugging of kernel drivers.;938-941;4;Tool Demonstrations;
2015;Chunhui Wang,Fabrizio Pastore,Arda Goknil,Lionel C. Briand,Muhammad Zohaib Z. Iqbal;UMTG: a toolset to automatically generate system test cases from use case specifications.;942-945;4;Tool Demonstrations;
2015;Inian Parameshwaran,Enrico Budianto,Shweta Shinde,Hung Dang,Atul Sadhu,Prateek Saxena;DexterJS: robust testing platform for DOM-based XSS vulnerabilities.;946-949;4;Tool Demonstrations;
2015;I. S. Wishnu B. Prasetya;T3i: a tool for generating and querying test suites for Java.;950-953;4;Tool Demonstrations;
2015;Timothy R. Shaffer,Jenna L. Wise,Braden M. Walters,Sebastian C. Müller,Michael Falcone,Bonita Sharif;iTrace: enabling eye tracking on software artifacts within the IDE to support software engineering tasks.;954-957;4;Tool Demonstrations;
2015;Ding Li,Angelica Huyen Tran,William G. J. Halfond;Nyx: a display energy optimizer for mobile web apps.;958-961;4;Tool Demonstrations;
2015;Chetan Arora 0002,Mehrdad Sabetzadeh,Arda Goknil,Lionel C. Briand,Frank Zimmer;NARCIA: an automated tool for change impact analysis in natural language requirements.;962-965;4;Tool Demonstrations;
2015;Christoffer Rosen,Ben Grawi,Emad Shihab;Commit guru: analytics and risk prediction of software commits.;966-969;4;Tool Demonstrations;
2015;Davide Di Ruscio,Dimitris S. Kolovos,Ioannis Korkontzelos,Nicholas Drivalos Matragkas,Jurgen J. Vinju;OSSMETER: a software measurement platform for automatically analysing open source software projects.;970-973;4;Tool Demonstrations;
2015;Paul Börding,Melanie Bruns,Marie Christin Platenius;Comprehensive service matching with MatchBox.;974-977;4;Tool Demonstrations;
2015;Larissa Leite,Christoph Treude,Fernando Marques Figueira Filho;UEDashboard: awareness of unusual events in commit histories.;978-981;4;Tool Demonstrations;
2015;Sana Ben Nasr,Guillaume Bécan,Mathieu Acher,João Bosco Ferreira Filho,Benoit Baudry,Nicolas Sannier,Jean-Marc Davril;MatrixMiner: a red pill to architect informal product descriptions in the matrix.;982-985;4;Tool Demonstrations;
2015;Pete Rotella,Sunita Chulani,Devesh Goyal;Predicting field reliability.;986-989;4;Quality;
2015;Mijung Kim,Jaechang Nam,Jaehyuk Yeon,Soonhwang Choi,Sunghun Kim;REMI: defect prediction for efficient API testing.;990-993;4;Quality;
2015;Muhammad Umar Janjua;OnSpot system: test impact visibility during code edits in real software.;994-997;4;Quality;
2015;Juliana Saraiva,Christian Bird,Thomas Zimmermann 0001;Products, developers, and milestones: how should I build my N-Gram language model.;998-1001;4;Software Process;
2015;Joel Greenyer,Max Haase,Jörg Marhenke,Rene Bellmer;Evaluating a formal scenario-based method for the requirements analysis in automotive software engineering.;1002-1005;4;Software Process;
2015;Mahshad M. Mahally,Miroslaw Staron,Jan Bosch;Barriers and enablers for shortening software development lead-time in mechatronics organizations: a case study.;1006-1009;4;Software Process;
2015;Chih-Hong Cheng,Tuncay Guelfirat,Christian Messinger,Johannes O. Schmitt,Matthias Schnelte,Peter Weber;Semantic degrees for Industrie 4.0 engineering: deciding on the degree of semantic formalization to select appropriate technologies.;1010-1013;4;Requirements and Specification;
2015;Smita Ghaisas,Manish Motwani,Balaji Balasubramaniam,Anjali Gajendragadkar,Rahul Kelkar,Harrick M. Vin;Towards automating the security compliance value chain.;1014-1017;4;Requirements and Specification;
2015;Aapo Koski,Tommi Mikkonen;Requirements, architecture, and quality in a mission critical system: 12 lessons learned.;1018-1021;4;Requirements and Specification;
2015;Luca Florio;Decentralized self-adaptation in large-scale distributed systems.;1022-1025;4;Doctoral Symposium;
2015;Sebastian Vöst;Vehicle level continuous integration in the automotive industry.;1026-1029;4;Doctoral Symposium;
2015;Lu Xiao;Quantifying architectural debts.;1030-1033;4;Doctoral Symposium;
2015;Denis Feth;User-centric security: optimization of the security-usability trade-off.;1034-1037;4;Doctoral Symposium;
2015;Sina Shamshiri;Automated unit test generation for evolving software.;1038-1041;4;Doctoral Symposium;
2015;Thomas White;Increasing the efficiency of search-based unit test generation using parameter control.;1042-1044;3;Student Research Competition;
2015;Kevin Moran;Enhancing Android application bug reporting.;1045-1047;3;Student Research Competition;
2015;Carlos Bernal-Cárdenas;Improving energy consumption in Android apps.;1048-1050;3;Student Research Competition;
2015;Shuktika Jain;Automated generation of programming language quizzes.;1051-1053;3;Student Research Competition;
2015;Venkatesh Vinayakarao;Spotting familiar code snippet structures for program comprehension.;1054-1056;3;Student Research Competition;
2015;Martin Konopka;Combining eye tracking with navigation paths for identification of cross-language code dependencies.;1057-1059;3;Student Research Competition;
2015;Oyindamola Olajubu;A textual domain specific language for requirement modelling.;1060-1062;3;Student Research Competition;
2015;Christopher Theisen;Automated attack surface approximation.;1063-1065;3;Student Research Competition;
2015;Erina Makihara;Pockets: a tool to support exploratory programming for novices and educators.;1066-1068;3;Student Research Competition;
2014;Thomas Fritz,David C. Shepherd,Katja Kevic,Will Snipes,Christoph Bräunlich;Developers' code context models for change tasks.;7-18;12;Helping and Understanding Developers;
2014;André N. Meyer,Thomas Fritz,Gail C. Murphy,Thomas Zimmermann 0001;Software developers' perceptions of productivity.;19-29;11;Helping and Understanding Developers;
2014;Raphael Pham,Stephan Kiesling,Olga Liskin,Leif Singer,Kurt Schneider;Enablers, inhibitors, and perceptions of testing in novice software teams.;30-40;11;Helping and Understanding Developers;
2014;Sumit Gulwani,Ivan Radicek,Florian Zuleger;Feedback generation for performance problems in introductory programming assignments.;41-51;11;Helping and Understanding Developers;
2014;Jifeng Xuan,Martin Monperrus;Test case purification for improving fault localization.;52-63;12;Debugging and Refactoring;
2014;Yida Tao,Jindae Kim,Sunghun Kim,Chang Xu;Automatically generated patches as debugging aids: a human study.;64-74;11;Debugging and Refactoring;
2014;Jeffrey L. Overbey,Farnaz Behrang,Munawar Hafiz;A foundation for refactoring C with macros.;75-85;11;Debugging and Refactoring;
2014;Narcisa Andreea Milea,Lingxiao Jiang,Siau-Cheng Khoo;Vector abstraction and concretization for scalable detection of refactorings.;86-97;12;Debugging and Refactoring;
2014;Johannes Lerch,Ben Hermann,Eric Bodden,Mira Mezini;FlowTwist: efficient context-sensitive inside-out taint analysis for large codebases.;98-108;11;Static Analysis;
2014;David Binkley,Nicolas Gold,Mark Harman,Syed S. Islam,Jens Krinke,Shin Yoo;ORBS: language-independent program slicing.;109-120;12;Static Analysis;
2014;Vineeth Kashyap,Kyle Dewey,Ethan A. Kuefner,John Wagner,Kevin Gibbons,John Sarracino,Ben Wiedermann,Ben Hardekopf;JSAI: a static analysis platform for JavaScript.;121-132;12;Static Analysis;
2014;Joxan Jaffar,Vijayaraghavan Murali;A path-sensitively sliced control flow graph.;133-143;11;Static Analysis;
2014;Jason Tsay,Laura Dabbish,James D. Herbsleb;Let's talk about it: evaluating contributions through discussion in GitHub.;144-154;11;Mining Software Repositories;
2014;Baishakhi Ray,Daryl Posnett,Vladimir Filkov,Premkumar T. Devanbu;A large scale study of programming languages and code quality in github.;155-165;11;Mining Software Repositories;
2014;Hoan Anh Nguyen,Robert Dyer 0001,Tien N. Nguyen,Hridesh Rajan;Mining preconditions of APIs in large-scale code corpus.;166-177;12;Mining Software Repositories;
2014;Ivo Krka,Yuriy Brun,Nenad Medvidovic;Automatic mining of specifications from invocation traces and method invariants.;178-189;12;Mining Software Repositories;
2014;Maxime Cordy,Patrick Heymans,Axel Legay,Pierre-Yves Schobbens,Bruno Dawagne,Martin Leucker;Counterexample guided abstraction refinement of product-line behavioural models.;190-201;12;Formal Methods and Verification;
2014;Akash Lal,Shaz Qadeer;Powering the static driver verifier using corral.;202-212;11;Formal Methods and Verification;
2014;Amirhossein Vakili,Nancy A. Day;Verifying CTL-live properties of infinite state models using an SMT solver.;213-223;11;Formal Methods and Verification;
2014;Richard Joiner,Thomas W. Reps,Somesh Jha,Mohan Dhawan,Vinod Ganapathy;Efficient runtime-enforcement techniques for policy weaving.;224-234;11;Formal Methods and Verification;
2014;Sebastian G. Elbaum,Gregg Rothermel,John Penix;Techniques for improving regression testing in continuous integration development environments.;235-245;11;Regression Testing;
2014;August Shi,Alex Gyori,Milos Gligoric,Andrey Zaytsev,Darko Marinov;Balancing trade-offs in test-suite reduction.;246-256;11;Regression Testing;
2014;Amiangshu Bosu,Jeffrey C. Carver,Munawar Hafiz,Patrick Hilley,Derek Janni;Identifying the characteristics of vulnerable code changes: an empirical study.;257-268;12;Regression Testing;
2014;Zhaopeng Tu,Zhendong Su,Premkumar T. Devanbu;On the localness of software.;269-280;12;Improving Recommender Systems;
2014;Miltiadis Allamanis,Earl T. Barr,Christian Bird,Charles A. Sutton;Learning natural coding conventions.;281-293;13;Improving Recommender Systems;
2014;Yoshiki Higo,Shinji Kusumoto;How should we measure functional sameness from program source code? an exploratory study on Java methods.;294-305;12;Improving Recommender Systems;
2014;Earl T. Barr,Yuriy Brun,Premkumar T. Devanbu,Mark Harman,Federica Sarro;The plastic surgery hypothesis.;306-317;12;Improving Recommender Systems;
2014;Peng Liu 0010,Omer Tripp,Charles Zhang;Grail: context-aware fixing of concurrency bugs.;318-329;12;Concurrency and Parallelism;
2014;Mingxing Zhang,Yongwei Wu,Shan Lu,Shanxiang Qi,Jinglei Ren,Weimin Zheng;AI: a lightweight system for tolerating concurrency bugs.;330-340;11;Concurrency and Parallelism;
2014;Yu Lin,Cosmin Radoi,Danny Dig;Retrofitting concurrency for Android applications through refactoring.;341-352;12;Concurrency and Parallelism;
2014;Mahdi Eslamimehr,Jens Palsberg;Sherlock: scalable deadlock detection for concurrent programs.;353-365;13;Concurrency and Parallelism;
2014;Alberto Goffi,Alessandra Gorla,Andrea Mattavelli,Mauro Pezzè,Paolo Tonella;Search-based synthesis of equivalent method sequences.;366-376;11;Self Adaptation and Repair / Program Analysis Applications;
2014;Jacob Swanson,Myra B. Cohen,Matthew B. Dwyer,Brady J. Garvin,Justin Firestone;Beyond the rainbow: self-adaptive failure avoidance in configurable systems.;377-388;12;Self Adaptation and Repair / Program Analysis Applications;
2014;Lannan Luo,Jiang Ming,Dinghao Wu,Peng Liu 0005,Sencun Zhu;Semantics-based obfuscation-resilient binary code similarity comparison with applications to software plagiarism detection.;389-400;12;Self Adaptation and Repair / Program Analysis Applications;
2014;Qi Xuan,Aaron Okano,Premkumar T. Devanbu,Vladimir Filkov;Focus-shifting patterns of OSS developers and their congruence with call graphs.;401-412;12;Self Adaptation and Repair / Program Analysis Applications;
2014;Hyunmin Seo,Sunghun Kim;How we get there: a context-guided search strategy in concolic testing.;413-424;12;Symbolic Execution;
2014;Peter Dinges,Gul A. Agha;Solving complex path conditions through heuristic search on induced polytopes.;425-436;12;Symbolic Execution;
2014;Antonio Filieri,Corina S. Pasareanu,Willem Visser,Jaco Geldenhuys;Statistical symbolic execution with informed sampling.;437-448;12;Symbolic Execution;
2014;Guodong Li,Esben Andreasen,Indradeep Ghosh;SymJS: automatic symbolic testing of JavaScript web applications.;449-459;11;Symbolic Execution;
2014;Annie T. T. Ying,Martin P. Robillard;Selection and presentation practices for code example summarization.;460-471;12;Software Documentation;
2014;Miltiadis Allamanis,Charles A. Sutton;Mining idioms from source code.;472-483;12;Software Documentation;
2014;Laura Moreno,Gabriele Bavota,Massimiliano Di Penta,Rocco Oliveto,Andrian Marcus,Gerardo Canfora;Automatic generation of release notes.;484-495;12;Software Documentation;
2014;Davood Mazinanian,Nikolaos Tsantalis,Ali Mesbah 0001;Discovering refactoring opportunities in cascading style sheets.;496-506;11;Web Apps;
2014;SungGyeong Bae,Hyunghun Cho,Inho Lim,Sukyoung Ryu;SAFEWAPI: web API misuse detector for web applications.;507-517;11;Web Apps;
2014;Hung Viet Nguyen,Christian Kästner,Tien N. Nguyen;Building call graphs for embedded client-side code in dynamic web applications.;518-529;12;Web Apps;
2014;Sebastian Baltes,Stephan Diehl 0001;Sketches and diagrams in practice.;530-541;12;Architecture and Design;
2014;Klaus-Benedikt Schultis,Christoph Elsner,Daniel Lohmann;Architecture challenges for internal software ecosystems: a large-scale industry case study.;542-552;11;Architecture and Design;
2014;Cecylia Bocovich,Joanne M. Atlee;Variable-specific resolutions for feature interactions.;553-563;11;Architecture and Design;
2014;Guido Salvaneschi,Sven Amann,Sebastian Proksch,Mira Mezini;An empirical study on program comprehension with reactive programming.;564-575;12;Architecture and Design;
2014;Yu Feng,Saswat Anand,Isil Dillig,Alex Aiken;Apposcopy: semantics-based detection of Android malware through static analysis.;576-587;12;Mobile Apps;
2014;Abhijeet Banerjee,Lee Kee Chong,Sudipta Chattopadhyay 0001,Abhik Roychoudhury;Detecting energy bugs and hotspots in mobile apps.;588-598;11;Mobile Apps;
2014;Riyadh Mahmood,Nariman Mirzaei,Sam Malek;EvoDroid: segmented evolutionary testing of Android apps.;599-609;11;Mobile Apps;
2014;Hammad Khalid,Meiyappan Nagappan,Emad Shihab,Ahmed E. Hassan;Prioritizing the devices to test your app on: a case study of Android game apps.;610-620;11;Mobile Apps;
2014;Chen Huo,James Clause;Improving oracle quality by detecting brittle assertions and unused inputs in tests.;621-631;11;Testing and Oracles;
2014;Marcel Böhme,Soumya Paul;On the efficiency of automated testing.;632-642;11;Testing and Oracles;
2014;Qingzhou Luo,Farah Hariri,Lamyaa Eloussi,Darko Marinov;An empirical analysis of flaky tests.;643-653;11;Testing and Oracles;
2014;René Just,Darioush Jalali,Laura Inozemtseva,Michael D. Ernst,Reid Holmes,Gordon Fraser;Are mutants a valid substitute for real faults in software testing?;654-665;12;Testing and Oracles;
2014;Olga Baysal,Reid Holmes,Michael W. Godfrey;No issue left behind: reducing information overload in issue tracking.;666-677;12;Evolution and Maintenance;
2014;Senthil Mani,Karthik Sankaranarayanan,Vibha Singhal Sinha,Premkumar T. Devanbu;Panning requirement nuggets in stream of software maintenance tickets.;678-688;11;Evolution and Maintenance;
2014;Xin Ye,Razvan C. Bunescu,Chang Liu;Learning to rank relevant files for bug reports using domain knowledge.;689-699;11;Evolution and Maintenance;
2014;Chengnian Sun,Haidong Zhang,Jian-Guang Lou,Hongyu Zhang,Qiang Wang,Dongmei Zhang,Siau-Cheng Khoo;Querying sequential software engineering data.;700-710;11;Evolution and Maintenance;
2014;Yu Jiang,Hehua Zhang,Huafeng Zhang,Xinyan Zhao,Han Liu,Chengnian Sun,Xiaoyu Song,Ming Gu,Jia-Guang Sun;Tsmart-GalsBlock: a toolkit for modeling, validation, and synthesis of multi-clocked embedded systems.;711-714;4;Tool Demonstrations;
2014;Stefan Dziwok,Christopher Gerking,Steffen Becker,Sebastian Thiele,Christian Heinzemann,Uwe Pohlmann;A tool suite for the model-driven software engineering of cyber-physical systems.;715-718;4;Tool Demonstrations;
2014;Nikolas Havrikov,Matthias Höschele,Juan Pablo Galeotti,Andreas Zeller;XMLMate: evolutionary XML test generation.;719-722;4;Tool Demonstrations;
2014;Marco Autili,Davide Di Ruscio,Amleto Di Salle,Alexander Perucci;CHOReOSynt: enforcing choreography realizability in the future internet.;723-726;4;Tool Demonstrations;
2014;Lin Gui 0002,Jun Sun 0001,Yang Liu 0003,Truong Khanh Nguyen,Jin Song Dong;RaPiD: a toolkit for reliability analysis of non-deterministic systems.;727-730;4;Tool Demonstrations;
2014;Jianwen Li,Yinbo Yao,Geguang Pu,Lijun Zhang 0001,Jifeng He;Aalta: an LTL satisfiability checker over Infinite/Finite traces.;731-734;4;Tool Demonstrations;
2014;Malavika Samak,Murali Krishna Ramanathan;Omen+: a precise dynamic deadlock detector for multithreaded Java libraries.;735-738;4;Tool Demonstrations;
2014;Mehdi Mirakhorli,Ahmed Fakhry,Artem Grechko,Mateusz Wieloch,Jane Cleland-Huang;Archie: a tool for detecting, monitoring, and preserving architecturally significant code.;739-742;4;Tool Demonstrations;
2014;Sebastian Baltes,Peter Schmitz,Stephan Diehl 0001;Linking sketches and diagrams to source code artifacts.;743-746;4;Tool Demonstrations;
2014;Felienne Hermans,Danny Dig;BumbleBee: a refactoring environment for spreadsheet formulas.;747-750;4;Tool Demonstrations;
2014;Everton L. G. Alves,Myoungkyu Song,Miryung Kim;RefDistiller: a refactoring aware code review tool for inspecting manual refactoring edits.;751-754;4;Tool Demonstrations;
2014;Tianyi Zhang,Myoungkyu Song,Miryung Kim;Critics: an interactive code review tool for searching and inspecting systematic changes.;755-758;4;Tool Demonstrations;
2014;Gillian J. Greene,Bernd Fischer 0002;ConceptCloud: a tagcloud browser for software archives.;759-762;4;Tool Demonstrations;
2014;Lu Xiao,Yuanfang Cai,Rick Kazman;Titan: a toolset that connects software architecture with quality analysis.;763-766;4;Tool Demonstrations;
2014;Ferdian Thung,Tien-Duy B. Le,Pavneet Singh Kochhar,David Lo;BugLocalizer: integrated tool support for bug localization.;767-770;4;Tool Demonstrations;
2014;Rongxin Wu;Diagnose crashing faults on production software.;771-774;4;Technical Presentations 1;
2014;Benjamin Behringer;Integrating approaches for feature implementation.;775-778;4;Technical Presentations 2;
2014;Zheng Gao;Numerical program analysis and testing.;779-782;4;Technical Presentations 2;
2014;Shuanglong Kan;Traceability and model checking to support safety requirement verification.;783-786;4;Technical Presentations 2;
2014;Yamilet R. Serrano Llerena;Dealing with uncertainty in verification of nondeterministic systems.;787-790;4;Technical Presentations 2;
2014;Abhijeet Banerjee;Static analysis driven performance and energy testing.;791-794;4;Technical Presentations 3;
2014;Marc Brünink;Autonomous compliance monitoring of non-functional properties.;795-798;4;Technical Presentations 3;
2014;Jonathan Bell;Detecting, isolating, and enforcing dependencies among and within test cases.;799-802;4;Technical Presentations 3;
2014;Raphael Pham;Improving the software testing skills of novices during onboarding through social transparency.;803-806;4;Technical Presentations 3;
2014;Bakhtiar Khan Kasi;Minimizing software conflicts through proactive detection of conflicts and task scheduling.;807-810;4;Technical Presentations 4;
2014;Lu Xiao;Detecting and preventing the architectural roots of bugs.;811-813;3;Student Research Competition Posters;
2014;Shuo Song;Estimating the effectiveness of spectrum-based fault localization.;814-816;3;Student Research Competition Posters;
2014;David Wille;Managing lots of models: the FaMine approach.;817-819;3;Student Research Competition Posters;
2014;Xin Yang;Social network analysis in open source software peer review.;820-822;3;Student Research Competition Posters;
2014;Diego Marmsoler;Towards a theory of architectural styles.;823-825;3;Student Research Competition Posters;
2014;Harry Raymond Joseph;Software programmer management: a machine learning and human computer interaction framework for optimal task assignment.;826-828;3;Student Research Competition Posters;
2014;Marian Petre,Daniela Damian;Methodology and culture: drivers of mediocrity in software engineering?;829-832;4;Visions and Challenges;
2014;Sebastian G. Elbaum,David S. Rosenblum;Known unknowns: testing in the presence of uncertainty.;833-836;4;Visions and Challenges;
2014;Marc Palyart,Gail C. Murphy,Emerson R. Murphy-Hill,Xavier Blanc;Speculative reprogramming.;837-840;4;Visions and Challenges;
2014;Xavier Devroey,Gilles Perrouin,Maxime Cordy,Mike Papadakis,Axel Legay,Pierre-Yves Schobbens;A variability perspective of mutation analysis.;841-844;4;Visions and Challenges;
2014;Minghui Zhou,Audris Mockus;Mining micro-practices from operational data.;845-848;4;Visions and Challenges;
2014;Jane Cleland-Huang,Mona Rahimi,Patrick Mäder;Achieving lightweight trustworthy traceability.;849-852;4;Visions and Challenges;
2014;Gustavo Villavicencio;Software maintenance like maintenance in other engineering disciplines.;853-856;4;Visions and Challenges;
2013;Justyna Petke,Shin Yoo,Myra B. Cohen,Mark Harman;Efficiency and early fault detection with lower and higher strength combinatorial interaction testing.;26-36;11;Testing I;
2013;Azadeh Farzan,Andreas Holzer,Niloofar Razavi,Helmut Veith;Con2colic testing.;37-47;11;Testing I;
2013;Joxan Jaffar,Vijayaraghavan Murali,Jorge A. Navas;Boosting concolic testing via interpolation.;48-58;11;Testing I;
2013;Antonia Bertolino,Eda Marchetti,Andrea Morichetta;Adequate monitoring of service compositions.;59-69;11;Dynamic and Variable Software;
2013;Marin Silic,Goran Delac,Sinisa Srbljic;Prediction of atomic web services reliability based on k-means clustering.;70-80;11;Dynamic and Variable Software;
2013;Jörg Liebig,Alexander von Rhein,Christian Kästner,Sven Apel,Jens Dörre,Christian Lengauer;Scalable analysis of variable software.;81-91;11;Dynamic and Variable Software;
2013;Guillaume Claret,Sriram K. Rajamani,Aditya V. Nori,Andrew D. Gordon,Johannes Borgström;Bayesian inference using data flow analysis.;92-102;11;Formal Reasoning;
2013;Kaituo Li,Christoph Reichenbach,Yannis Smaragdakis,Michal Young;Second-order constraints in dynamic invariant inference.;103-113;11;Formal Reasoning;
2013;Yunhui Zheng,Xiangyu Zhang,Vijay Ganesh;Z3-str: a z3-based string solver for web application analysis.;114-124;11;Formal Reasoning;
2013;Dong Qiu,Bixin Li,Zhendong Su;An empirical analysis of the co-evolution of schema and code in database applications.;125-135;11;Empirical Studies I;
2013;Cu D. Nguyen,Alessandro Marchetto,Paolo Tonella;Automated oracles: an empirical study on cost and effectiveness.;136-146;11;Empirical Studies I;
2013;Foyzur Rahman,Daryl Posnett,Israel Herraiz,Premkumar T. Devanbu;Sample size vs. bias in defect prediction.;147-157;11;Empirical Studies I;
2013;Peng Liu 0010,Julian Dolby,Charles Zhang;Finding incorrect compositions of atomicity.;158-168;11;Parallel, Concurrent, and Distributed Systems;
2013;Omer Tripp,Noam Rinetzky;Tightfit: adaptive parallelization with foresight.;169-179;11;Parallel, Concurrent, and Distributed Systems;
2013;Diptikalyan Saha,Pankaj Dhoolia,Gaurab Paul;Distributed program tracing.;180-190;11;Parallel, Concurrent, and Distributed Systems;
2013;Chris Hawblitzel,Shuvendu K. Lahiri,Kshama Pawar,Hammad Hashmi,Sedar Gokbulut,Lakshan Fernando,Dave Detlefs,Scott Wadsworth;Will you still compile me tomorrow? static cross-version compiler validation.;191-201;11;Software Development Activities;
2013;Peter C. Rigby,Christian Bird;Convergent contemporary software peer review practices.;202-212;11;Software Development Activities;
2013;Kelly Blincoe,Giuseppe Valetto,Daniela Damian;Do all task dependencies require coordination? the role of task properties in identifying critical coordination needs in software projects.;213-223;11;Software Development Activities;
2013;Aravind Machiry,Rohan Tahiliani,Mayur Naik;Dynodroid: an input generation system for Android apps.;224-234;11;Testing II;
2013;Paul Dan Marinescu,Cristian Cadar;KATCH: high-coverage testing of software patches.;235-245;11;Testing II;
2013;Aditya V. Nori,Rahul Sharma 0001;Termination proofs from tests.;246-256;11;Testing II;
2013;Chang Hwan Peter Kim,Darko Marinov,Sarfraz Khurshid,Don S. Batory,Sabrina Souto,Paulo Barros,Marcelo d'Amorim;SPLat: lightweight dynamic analysis for reducing combinatorics in testing configurable systems.;257-267;11;Dynamic Analysis;
2013;Khanh Nguyen,Guoqing (Harry) Xu;Cachetor: detecting cacheable data to remove bloat.;268-278;11;Dynamic Analysis;
2013;Jingyue Wu,Gang Hu,Yang Tang,Junfeng Yang;Effective dynamic detection of alias analysis errors.;279-289;11;Dynamic Analysis;
2013;Jean-Marc Davril,Edouard Delfosse,Negar Hariri,Mathieu Acher,Jane Cleland-Huang,Patrick Heymans;Feature model extraction from large collections of informal product descriptions.;290-300;11;Models and Features;
2013;Julia Rubin,Marsha Chechik;N-way model merging.;301-311;11;Models and Features;
2013;Nishant Sinha,Rezwana Karim;Compiling mockups to flexible UIs.;312-322;11;Models and Features;
2013;Kivanç Muslu,Yuriy Brun,Michael D. Ernst,David Notkin;Making offline analyses continuous.;323-333;11;Test and Analysis;
2013;Marcel Böhme,Bruno C. d. S. Oliveira,Abhik Roychoudhury;Regression tests to expose change interaction errors.;334-344;11;Test and Analysis;
2013;Shuvendu K. Lahiri,Kenneth L. McMillan,Rahul Sharma 0001,Chris Hawblitzel;Differential assertion checking.;345-355;11;Test and Analysis;
2013;Mark Grechanik,B. M. Mainul Hossain,Ugo Buy,Haisheng Wang;Preventing database deadlocks in applications.;356-366;11;Maintenance and Evolution;
2013;Joshua Garcia,Daniel Popescu,Gholamreza Safi,William G. J. Halfond,Nenad Medvidovic;Identifying message flow in distributed event-based systems.;367-377;11;Maintenance and Evolution;
2013;Sugandha Lohar,Sorawit Amornborvornwong,Andrea Zisman,Jane Cleland-Huang;Improving trace accuracy through data-driven configuration and composition of tracing features.;378-388;11;Maintenance and Evolution;
2013;Dirk Beyer 0001,Stefan Löwe,Evgeny Novikov,Andreas Stahlbauer,Philipp Wendler;Precision reuse for efficient regression verification.;389-399;11;Formal Verification;
2013;Fokion Zervoudakis,David S. Rosenblum,Sebastian G. Elbaum,Anthony Finkelstein;Cascading verification: an integrated method for domain-specific model checking.;400-410;11;Formal Verification;
2013;Pietro Braione,Giovanni Denaro,Mauro Pezzè;Enhancing symbolic execution with built-in term rewriting and constrained lazy initialization.;411-421;11;Formal Verification;
2013;Matthias Schur,Andreas Roth,Andreas Zeller;Mining behavior models from enterprise web applications.;422-432;11;Model Inference and Synthesis;
2013;Joel Greenyer,Christian Brenner,Maxime Cordy,Patrick Heymans,Erika Gressi;Incrementally synthesizing controllers from scenario-based product line specifications.;433-443;11;Model Inference and Synthesis;
2013;Shahar Maoz,Jan Oliver Ringert,Bernhard Rumpe;Synthesis of component and connector models from crosscutting structural views.;444-454;11;Model Inference and Synthesis;
2013;Tiantian Wang,Mark Harman,Yue Jia,Jens Krinke;Searching for better configurations: a rigorous approach to clone evaluation.;455-465;11;Empirical Studies II;
2013;Meiyappan Nagappan,Thomas Zimmermann 0001,Christian Bird;Diversity in software engineering research.;466-476;11;Empirical Studies II;
2013;Mario Linares Vásquez,Gabriele Bavota,Carlos Bernal-Cárdenas,Massimiliano Di Penta,Rocco Oliveto,Denys Poshyvanyk;API change and fault proneness: a threat to the success of Android apps.;477-487;11;Empirical Studies II;
2013;Koushik Sen,Swaroop Kalasapur,Tasneem G. Brutch,Simon Gibbs;Jalangi: a selective record-replay and dynamic analysis framework for JavaScript.;488-498;11;JavaScript;
2013;Magnus Madsen,Benjamin Livshits,Michael Fanning;Practical static analysis of JavaScript applications in the presence of frameworks and libraries.;499-509;11;JavaScript;
2013;Casper Svenning Jensen,Anders Møller,Zhendong Su;Server interface descriptions for automated testing of JavaScript web applications.;510-520;11;JavaScript;
2013;Martin Schäf,Daniel Schwartz-Narbonne,Thomas Wies;Explaining inconsistent code.;521-531;11;Source Code and Programming;
2013;Tung Thanh Nguyen,Anh Tuan Nguyen,Hoan Anh Nguyen,Tien N. Nguyen;A statistical semantic language model for source code.;532-542;11;Source Code and Programming;
2013;Alex Gyori,Lyle Franklin,Danny Dig,Jan Lahoda;Crossing the gap from imperative to functional programming through refactoring.;543-553;11;Source Code and Programming;
2013;Scott McPeak,Charles-Henri Gros,Murali Krishna Ramanathan;Scalable and incremental software bug detection.;554-564;11;Bug Detection;
2013;Guangtai Liang,Qianxiang Wang,Tao Xie,Hong Mei;Inferring project-specific bug patterns for detecting sibling bugs.;565-575;11;Bug Detection;
2013;Chengnian Sun,Siau-Cheng Khoo;Mining succinct predicated bug signatures.;576-586;11;Bug Detection;
2013;Fabio Calefato,Filippo Lanubile;SocialCDE: a social awareness tool for global software teams.;587-590;4;Tool Demonstrations I;
2013;B. M. Mainul Hossain,Mark Grechanik,Ugo Buy,Haisheng Wang;REDACT: preventing database deadlocks from application-based transactions.;591-594;4;Tool Demonstrations I;
2013;Elvira Albert,Puri Arenas,Miguel Gómez-Zamalloa,Peter Y. H. Wong;aPET: a test case generation tool for concurrent objects.;595-598;4;Tool Demonstrations I;
2013;Chetan Arora 0002,Mehrdad Sabetzadeh,Lionel C. Briand,Frank Zimmer,Raul Gnaga;RUBRIC: a flexible tool for automated checking of conformance to requirement boilerplates.;599-602;4;Tool Demonstrations II;
2013;Samaneh Navabpour,Yogi Joshi,Chun Wah Wallace Wu,Shay Berkovich,Ramy Medhat,Borzoo Bonakdarpour,Sebastian Fischmeister;RiTHM: a tool for enabling time-triggered runtime verification for C programs.;603-606;4;Tool Demonstrations II;
2013;Fu Song,Tayssir Touili;PoMMaDe: pushdown model-checking for malware detection.;607-610;4;Tool Demonstrations II;
2013;Tuan-Hung Pham,Michael W. Whalen;RADA: a tool for reasoning about algebraic data types with abstractions.;611-614;4;Tool Demonstrations II;
2013;Koushik Sen,Swaroop Kalasapur,Tasneem G. Brutch,Simon Gibbs;Jalangi: a tool framework for concolic testing, selective record-replay, and dynamic analysis of JavaScript.;615-618;4;Tool Demonstrations III;
2013;Andrew Diniz da Costa,Ricardo Venieris,Gustavo Robichez de Carvalho,Carlos José Pereira de Lucena;RSA-MBT: a test tool for generating test artifacts based on models.;619-622;4;Tool Demonstrations III;
2013;Shuang Liu,Yang Liu 0003,Jun Sun 0001,Manchun Zheng,Bimlesh Wadhwa,Jin Song Dong;USMMC: a self-contained model checker for UML state machines.;623-626;4;Tool Demonstrations III;
2013;Qi Wang,Jingyu Zhou,Yuting Chen,Yizhou Zhang,Jianjun Zhao;Extracting URLs from JavaScript via program analysis.;627-630;4;Analysis and Testing;
2013;Kivanç Muslu,Yuriy Brun,Alexandra Meliou;Data debugging with continuous testing.;631-634;4;Analysis and Testing;
2013;Alessio Gambi,Antonio Filieri,Schahram Dustdar;Iterative test suites refinement for elastic computing systems.;635-638;4;Analysis and Testing;
2013;Laura Inozemtseva,Hadi Hemmati,Reid Holmes;Using fault history to improve mutation reduction.;639-642;4;Analysis and Testing;
2013;Hongyu Zhang,S. C. Cheung;A cost-effectiveness criterion for applying software defect prediction models.;643-646;4;Hunting Bugs;
2013;Jiangtao Gong,Hongyu Zhang;BugMap: a topographic map of bugs.;647-650;4;Hunting Bugs;
2013;Anh Tuan Nguyen,Tung Thanh Nguyen,Tien N. Nguyen;Lexical statistical machine translation for language migration.;651-654;4;Hunting Bugs;
2013;Annie T. T. Ying,Martin P. Robillard;Code fragment summarization.;655-658;4;Hunting Bugs;
2013;Daniel J. Dubois,Giordano Tamburrelli;Understanding gamification mechanisms for software development.;659-662;4;Understanding Software Development;
2013;Ripon K. Saha,Avigit K. Saha,Dewayne E. Perry;Toward understanding the causes of unanswered questions in software information sites: a case study of stack overflow.;663-666;4;Understanding Software Development;
2013;Yael Dubinsky,Yishai A. Feldman,Maayan Goldstein;Where is the business logic?;667-670;4;Understanding Software Development;
2013;Emitza Guzman,Bernd Bruegge;Towards emotional awareness in software development teams.;671-674;4;Understanding Software Development;
2013;Shrawan Kumar,Bharti Chimdyalwar,Ulka Shrotri;Precise range analysis on large industry code.;675-678;4;Implementing Sound Software-Engineering Practices in Companies;
2013;Thijmen de Gooijer,Heiko Koziolek;Agreements for software reuse in corporations.;679-682;4;Implementing Sound Software-Engineering Practices in Companies;
2013;Andrey Terekhov;Good technology makes the difficult task easy.;683-686;4;Implementing Sound Software-Engineering Practices in Companies;
2013;Daniel J. Dubois,Yosuke Bando,Konosuke Watanabe,Henry Holtzman;ShAir: extensible middleware for mobile peer-to-peer resource sharing.;687-690;4;Approaches to Quality;
2013;Audris Mockus,Randy L. Hackbarth,John Douglas Palframan;Risky files: an approach to focus quality improvement effort.;691-694;4;Approaches to Quality;
2013;Yu Jiang,Hehua Zhang,Han Liu,Xiaoyu Song,William N. N. Hung,Ming Gu,Jiaguang Sun;System reliability calculation based on the run-time analysis of ladder program.;695-698;4;Approaches to Quality;
2013;Clément Escoffier,Philippe Lalanda,Nicolas Rempulsky;h-ubu: an industrial-strength service-oriented component framework for JavaScript applications.;699-702;4;Effective Industry Use of Software-Engineering Tools;
2013;Yu Jiang,Zonghui Li,Hehua Zhang,Yangdong Deng,Xiaoyu Song,Ming Gu,Jiaguang Sun;Design and optimization of multi-clocked embedded systems using formal technique.;703-706;4;Effective Industry Use of Software-Engineering Tools;
2013;Rahul Kumar,Aditya V. Nori;The economics of static analysis tools.;707-710;4;Effective Industry Use of Software-Engineering Tools;
2013;Nicholas DiGiuseppe;Automatically describing software faults.;711-714;4;Doctoral Papers 1;
2013;Marie Christin Platenius;Fuzzy service matching in on-the-fly computing.;715-718;4;Doctoral Papers 1;
2013;Oleg Nenashev;PHRT: a model and programmable tool for hardware reengineering automation.;719-722;4;Doctoral Papers 2;
2013;Nicolas Lopez;Using topic models to understand the evolution of a software ecosystem.;723-726;4;Doctoral Papers 2;
2013;Yanja Dajsuren;Automotive architecture description and its quality.;727-730;4;Doctoral Papers 3;
2013;Bahtijar Vogel;Towards open architecture system.;731-734;4;Doctoral Papers 3;
2013;Ulyana Tikhonova;A framework for defining the dynamic semantics of DSLs.;735-738;4;Doctoral Papers 4;
