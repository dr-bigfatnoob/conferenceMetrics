2015;Mihai Codoban,Sruti Srinivasa Ragavan,Danny Dig,Brian P. Bailey;Software history under the lens: A study on why and how developers examine it.;1-10;10;Developers;
2015;David Piorkowski,Scott D. Fleming,Christopher Scaffidi,Margaret M. Burnett,Irwin Kwan,Austin Z. Henley,Jamie Macbeth,Charles Hill,Amber Horvath;To fix or to learn? How production bias affects developers' information foraging during debugging.;11-20;10;Developers;
2015;Luciana Lourdes Silva,Marco Tulio Valente,Marcelo de Almeida Maia,Nicolas Anquetil;Developers' perception of co-change patterns: An empirical study.;21-30;10;Developers;
2015;Christopher Vendome,Mario Linares Vásquez,Gabriele Bavota,Massimiliano Di Penta,Daniel M. Germán,Denys Poshyvanyk;When and why developers adopt and change software licenses.;31-40;10;Developers;
2015;Simon Butler,Michel Wermelinger,Yijun Yu;Investigating naming convention adherence in Java references.;41-50;10;Program Comprehension;
2015;Xiaoran Wang,Lori L. Pollock,K. Vijay-Shanker;Developing a model of loop actions by mining loop characteristics from a large code corpus.;51-60;10;Program Comprehension;
2015;Naoya Nitta,Tomohiro Matsuoka;Delta extraction: An abstraction technique to comprehend why two objects could be related.;61-70;10;Program Comprehension;
2015;Christopher S. Corley,Kelly L. Kashuda,Nicholas A. Kraft;Modeling changeset topics for feature location.;71-80;10;Program Comprehension;
2015;Gabriele Bavota,Barbara Russo;Four eyes are better than two: On the impact of code reviews on software quality.;81-90;10;Software Quality;
2015;Manishankar Mondal,Chanchal K. Roy,Kevin A. Schneider;A comparative study on the bug-proneness of different types of code clones.;91-100;10;Software Quality;
2015;Arash Vahabzadeh,Amin Milani Fard,Ali Mesbah 0001;An empirical study of bugs in test code.;101-110;10;Software Quality;
2015;Oleksii Kononenko,Olga Baysal,Latifa Guerrouj,Yaxin Cao,Michael W. Godfrey;Investigating code review quality: Do people and participation matter?;111-120;10;Software Quality;
2015;Aiko Yamashita,Marco Zanoni,Francesca Arcelli Fontana,Bartosz Walter;Inter-smell relations in industrial and open source systems: A replication and comparative analysis.;121-130;10;Modularity;
2015;Jeffrey Svajlenko,Chanchal K. Roy;Evaluating clone detection tools with BigCloneBench.;131-140;10;Modularity;
2015;David Binkley,Árpád Beszédes,Syed S. Islam,Judit Jász,Bela Vancsics;Uncovering dependence clusters and linchpin functions.;141-150;10;Modularity;
2015;Stefan Stanciulescu,Sandro Schulze,Andrzej Wasowski;Forked and integrated variants in an open-source firmware project.;151-160;10;Modularity;
2015;Andrea De Lucia,Vincenzo Deufemia,Carmine Gravino,Michele Risi;Towards automating dynamic analysis for behavioral design pattern detection.;161-170;10;Program Analysis;
2015;Zhen Dong,Artur Andrzejak,Kun Shao;Practical and accurate pinpointing of configuration errors using static analysis.;171-180;10;Program Analysis;
2015;Sri Varun Poluri,Murali Krishna Ramanathan;Deterministic dynamic race detection across program versions.;181-190;10;Program Analysis;
2015;Raveendra Kumar Medicherla,Raghavan Komondoor,S. Narendran;Program specialization and verification using file format specifications.;191-200;10;Program Analysis;
2015;Ryan Hardt,Ethan V. Munson;An empirical evaluation of ant build maintenance using Formiga.;201-210;10;Refactoring;
2015;Jongwook Kim,Don S. Batory,Danny Dig;Scripting parametric refactorings in Java to retrofit design patterns.;211-220;10;Refactoring;
2015;Gustavo Santos,Nicolas Anquetil,Anne Etien,Stéphane Ducasse,Marco Tulio Valente;System specific, source code transformations.;221-230;10;Refactoring;
2015;Tosin Daniel Oyetoyan,Daniela Soares Cruzes,Christian Thurmann-Nielsen;A decision support system to refactor class cycles.;231-240;10;Refactoring;
2015;Dario Di Nucci,Fabio Palomba,Sandro Siravo,Gabriele Bavota,Rocco Oliveto,Andrea De Lucia;On the role of developer's scattered changes in bug prediction.;241-250;10;Code Mining and Recommendation;
2015;André C. Hora,Romain Robbes,Nicolas Anquetil,Anne Etien,Stéphane Ducasse,Marco Tulio Valente;How do developers react to API evolution? The Pharo ecosystem case.;251-260;10;Code Mining and Recommendation;
2015;Xin Xia,David Lo,Xinyu Wang,Xiaohu Yang;Who should review this change?: Putting text and file location analyses together for more accurate recommendations.;261-270;10;Code Mining and Recommendation;
2015;Muhammad Asaduzzaman,Chanchal K. Roy,Samiul Monir,Kevin A. Schneider;Exploring API method parameter recommendations.;271-280;10;Code Mining and Recommendation;
2015;Sebastiano Panichella,Andrea Di Sorbo,Emitza Guzman,Corrado Aaron Visaggio,Gerardo Canfora,Harald C. Gall;How can i improve my app? Classifying user reviews for software maintenance and evolution.;281-290;10;Mobile Applications;
2015;Fabio Palomba,Mario Linares Vásquez,Gabriele Bavota,Rocco Oliveto,Massimiliano Di Penta,Denys Poshyvanyk,Andrea De Lucia;User reviews matter! Tracking crowdsourced reviews to support evolution of successful apps.;291-300;10;Mobile Applications;
2015;Yuan Tian,Meiyappan Nagappan,David Lo,Ahmed E. Hassan;What are the characteristics of high-rated apps? A case study on free Android Applications.;301-310;10;Mobile Applications;
2015;Karan Aggarwal,Abram Hindle,Eleni Stroulia;GreenAdvisor: A tool for analyzing the impact of software evolution on energy consumption.;311-320;10;Mobile Applications;
2015;André C. Hora,Marco Tulio Valente;Apiwave: Keeping track of API popularity and migration.;321-323;3;Tool Demo Track;
2015;Andrea Ciani,Roberto Minelli,Andrea Mocci,Michele Lanza;UrbanIt: Visualizing repositories everywhere.;324-326;3;Tool Demo Track;
2015;Andrea De Lucia,Vincenzo Deufemia,Carmine Gravino,Michele Risi,Ciro Pirolli;ePadEvo: A tool for the detection of behavioral design patterns.;327-329;3;Tool Demo Track;
2015;Muhammad Asaduzzaman,Chanchal K. Roy,Kevin A. Schneider;PARC: Recommending API methods parameters.;330-332;3;Tool Demo Track;
2015;Yan Gao,Daqing Hou;ArchFLoc: Locating and explaining architectural features in running web applications.;333-335;3;Tool Demo Track;
2015;Marios Fokaefs,Mihai Oprescu,Eleni Stroulia;WSDarwin: A web application for the support of REST service evolution.;336-338;3;Tool Demo Track;
2015;Simone Romano 0001,Giuseppe Scanniello;DUM-Tool.;339-341;3;Tool Demo Track;
2015;Abdou Maiga,Abdelwahab Hamou-Lhadj,Mathieu Nayrolles,Korosh Koochekian Sabor,Alf Larsson;An empirical study on the handling of crash reports in a large software company: An experience report.;342-351;10;Industry Experience;
2015;Mario Linares Vásquez,Christopher Vendome,Qi Luo,Denys Poshyvanyk;How developers detect and fix performance bottlenecks in Android apps.;352-361;10;Industry Experience;
2015;Birgit Vogel-Heuser,Juliane Fischer,Susanne Rösch,Stefan Feldmann,Sebastian Ulewicz;Challenges for maintenance of PLC-software and its related hardware for automated production systems: Selected industrial Case Studies.;362-371;10;Industry Experience;
2015;Bas Jansen,Felienne Hermans;Code smells in spreadsheet formulas revisited on an industrial dataset.;372-380;9;Industry Experience;
2015;Christopher S. Corley,Federico Lois,Sebastian Quezada;Web usage patterns of developers.;381-390;10;Developer Studies;
2015;Gergo Balogh,Gabor Antal,Árpád Beszédes,László Vidács,Tibor Gyimóthy,Adam Zoltan Vegh;Identifying wasted effort in the field via developer interaction data.;391-400;10;Developer Studies;
2015;Timo Pawelka,Elmar Jürgens;Is this code written in English? A study of the natural language of comments and identifiers in practice.;401-410;10;Developer Studies;
2015;Henrik Plate,Serena Elisa Ponta,Antonino Sabetta;Impact assessment for vulnerabilities in open-source software libraries.;411-420;10;Developer Studies;
2015;Aiko Yamashita;Experiences from performing software quality evaluations via combining benchmark-based metrics analysis, software visualization, and expert assessment.;421-428;8;Software Quality;
2015;Gábor Szoke,Csaba Nagy,Péter Hegedüs,Rudolf Ferenc,Tibor Gyimóthy;Do automatic refactorings improve maintainability? An industrial case study.;429-438;10;Software Quality;
2015;Kiyotaka Kasubuchi,Shuji Morisaki,Akiko Yoshida,Chikako Ogawa;An empirical evaluation of the effectiveness of inspection scenarios developed from a defect repository.;439-448;10;Software Quality;
2015;Edward Dunn Ekelund,Emelie Engstrom;Efficient regression testing based on test history: An industrial evaluation.;449-457;9;Software Quality;
2015;Michael Wahler,Raphael Eidenbenz,Carsten Franke,Yvonne Anne Pignolet;Migrating legacy control software to multi-core hardware.;458-466;9;Software Reengineering;
2015;Vipin Balachandran;Query by example in large-scale code repositories.;467-476;10;Software Reengineering;
2015;Ravi Khadka,Prajan Shrestha,Bart Klein,Amir Saeidi,Jurriaan Hage,Slinger Jansen,Edwin van Dis,Magiel Bruntink;Does software modernization deliver what it aimed for? A post modernization analysis of five software modernization case studies.;477-486;10;Software Reengineering;
2015;Harry M. Sneed,Chris Verhoef;Reverse engineering a visual age application.;487-496;10;Software Reengineering;
2015;Bernhard Dorninger,Josef Pichler,Albin Kern;Using static analysis for knowledge extraction from industrial User Interfaces.;497-500;4;Software Reengineering;
2015;Tien-Duy B. Le,David Lo,Ming Li 0005;Constrained feature selection for localizing faults.;501-505;5;Defects and Refactoring;
2015;Ali Sajedi Badashian,Abram Hindle,Eleni Stroulia;Crowdsourced bug triaging.;506-510;5;Defects and Refactoring;
2015;Soichi Sumi,Yoshiki Higo,Keisuke Hotta,Shinji Kusumoto;Toward improving graftability on automated program repair.;511-515;5;Defects and Refactoring;
2015;Csaba Nagy,Anthony Cleve;Mining Stack Overflow for discovering error patterns in SQL queries.;516-520;5;Defects and Refactoring;
2015;Jiachen Yang,Keisuke Hotta,Yoshiki Higo,Shinji Kusumoto;Towards purity-guided refactoring in Java.;521-525;5;Defects and Refactoring;
2015;Spyros Kranas,Apostolos V. Zarras,Panos Vassiliadis;Fitness workout for fat interfaces: Be slim, clean, and flexible.;526-530;5;Defects and Refactoring;
2015;Robbert Jongeling,Subhajit Datta,Alexander Serebrenik;Choosing your weapons: On sentiment analysis tools for software engineering research.;531-535;5;Social and Developers;
2015;Jalerson Lima,Christoph Treude,Fernando Marques Figueira Filho,Uirá Kulesza;Assessing developer contribution with repository mining-based metrics.;536-540;5;Social and Developers;
2015;Abhishek Sharma,Yuan Tian,David Lo;What's hot in software engineering Twitter space?;541-545;5;Social and Developers;
2015;Paloma Oliveira,Marco Tulio Valente,Alexandre Bergel,Alexander Serebrenik;Validating metric thresholds with developers: An early result.;546-550;5;Social and Developers;
2015;Mathieu Goeminne,Tom Mens;Towards a survival analysis of database framework usage in Java projects.;551-555;5;Social and Developers;
2015;Christopher S. Corley,Kostadin Damevski,Nicholas A. Kraft;Exploring the use of deep learning for feature location.;556-560;5;Social and Developers;
2015;Nahla J. Abid,Natalia Dragan,Michael L. Collard,Jonathan I. Maletic;Using stereotypes in the automatic generation of natural language summaries for C++ methods.;561-565;5;Social and Developers;
2015;Liliane do Nascimento Vale,Marcelo de Almeida Maia;Keecle: Mining key architecturally relevant classes using dynamic analysis.;566-570;5;Social and Developers;
2015;Nikola Ilo,Johann Grabner,Thomas Artner,Mario Bernhart,Thomas Grechenig;Combining software interrelationship data across heterogeneous software repositories.;571-575;5;Social and Developers;
2015;Kazuki Nishikawa,Hironori Washizaki,Yoshiaki Fukazawa,Keishi Oshima,Ryota Mibe;Recovering transitive traceability links among software artifacts.;576-580;5;Social and Developers;
2015;Benjamin Biegel 0001,Benedikt Lesch,Stephan Diehl 0001;Live object exploration: Observing and manipulating behavior and state of Java objects.;581-585;5;Social and Developers;
2015;Sebastiano Panichella;Supporting newcomers in software development projects.;586-589;4;Post-Doctoral;
2015;Péter Hegedüs;Advances in software product quality measurement and its applications in software evolution.;590-593;4;Post-Doctoral;
2015;Yuriy Tymchuk;Treating software quality as a first-class entity.;594-597;4;Pre-Doctoral;
2015;Mauricio Finavaro Aniche;Detection strategies of smells in web software development.;598-601;4;Pre-Doctoral;
2015;Wolfram Fenske;Code smells in highly configurable software.;602-605;4;Pre-Doctoral;
2015;Ioana Verebi;A model-based approach to software refactoring.;606-609;4;Pre-Doctoral;
2014;Da Huo,Tao Ding,Collin McMillan,Malcom Gethers;An Empirical Study of the Effects of Expert Knowledge on Bug Reports.;1-10;10;Developer Knowledge;
2014;Pamela Bhattacharya,Iulian Neamtiu,Michalis Faloutsos;Determining Developers' Expertise and Role: A Graph Hierarchy-Based Approach.;11-20;10;Developer Knowledge;
2014;Weiyi Shang,Meiyappan Nagappan,Ahmed E. Hassan,Zhen Ming Jiang;Understanding Log Lines Using Development Knowledge.;21-30;10;Developer Knowledge;
2014;Nélio Cacho,Eiji Adachi Barbosa,Juliana Araujo,Frederico Pranto,Alessandro F. Garcia,Thiago César,Eliezio Soares,Arthur Cassio,Thomas Filipe,Israel García;How Does Exception Handling Behavior Evolve? An Exploratory Study in Java and C# Applications.;31-40;10;Developer Knowledge;
2014;Noureddine Kerzazi,Foutse Khomh,Bram Adams;Why Do Automated Builds Break? An Empirical Study.;41-50;10;Evolving Systems;
2014;Manishankar Mondal,Chanchal Kumar Roy,Kevin A. Schneider;A Fine-Grained Analysis on the Evolutionary Coupling of Cloned Code.;51-60;10;Evolving Systems;
2014;Katja Kevic,Thomas Fritz,David C. Shepherd;CoMoGen: An Approach to Locate Relevant Task Context by Combining Search and Navigation.;61-70;10;Developer Support;
2014;Muhammad Asaduzzaman,Chanchal Kumar Roy,Kevin A. Schneider,Daqing Hou;CSCC: Simple, Efficient, Context Sensitive Code Completion.;71-80;10;Developer Support;
2014;Hakam W. Alomari,Michael L. Collard,Jonathan I. Maletic;A Slice-Based Estimation Approach for Maintenance Effort.;81-90;10;Developer Support;
2014;Aniket Potdar,Emad Shihab;An Exploratory Study on Self-Admitted Technical Debt.;91-100;10;Technical Debt;
2014;Fabio Palomba,Gabriele Bavota,Massimiliano Di Penta,Rocco Oliveto,Andrea De Lucia;Do They Really Smell Bad? A Study on Developers' Perception of Bad Code Smells.;101-110;10;Technical Debt;
2014;Rui Abreu,Jácome Cunha,João Paulo Fernandes,Pedro Martins 0001,Alexandre Perez,João Saraiva;Smelling Faults in Spreadsheets.;111-120;10;Technical Debt;
2014;Ding Li,Shuai Hao,Jiaping Gui,William G. J. Halfond;An Empirical Study of the Energy Consumption of Android Applications.;121-130;10;Empirical Studies;
2014;Cagri Sahin,Philip Tornquist,Ryan Mckenna,Zachary Pearson,James Clause;How Does Code Obfuscation Impact Energy Usage?;131-140;10;Empirical Studies;
2014;Laurent Christophe,Reinout Stevens,Coen De Roover,Wolfgang De Meuter;Prevalence and Maintenance of Automated Functional Tests for Web Applications.;141-150;10;Empirical Studies;
2014;Laura Moreno,John Joseph Treadway,Andrian Marcus,Wuwei Shen;On the Use of Stack Traces to Improve Text Retrieval-Based Bug Localization.;151-160;10;Fault Localization 1;
2014;Ripon K. Saha,Julia Lawall,Sarfraz Khurshid,Dewayne E. Perry;On the Effectiveness of Information Retrieval Based Bug Localization for C Programs.;161-170;10;Fault Localization 1;
2014;Shaowei Wang,David Lo,Julia Lawall;Compositional Vector Space Models for Improved Bug Localization.;171-180;10;Fault Localization 1;
2014;Chu-Pan Wong,Yingfei Xiong,Hongyu Zhang,Dan Hao,Lu Zhang 0023,Hong Mei;Boosting Bug-Report-Oriented Fault Localization with Segmentation and Stack-Trace Analysis.;181-190;10;Fault Localization 2;
2014;Jifeng Xuan,Martin Monperrus;Learning to Combine Multiple Ranking Metrics for Fault Localization.;191-200;10;Fault Localization 2;
2014;Bo Liu,Zhengwei Qi,Bin Wang,Ruhui Ma;Pinso: Precise Isolation of Concurrency Bugs via Delta Triaging.;201-210;10;Fault Localization 2;
2014;Eric Bouwers,Arie van Deursen,Joost Visser;Quantifying the Encapsulation of Implemented Software Architectures.;211-220;10;Software Quality;
2014;Davy Landman,Alexander Serebrenik,Jurgen J. Vinju;Empirical Analysis of the Relationship between CC and SLOC in a Large Corpus of Java Methods.;221-230;10;Software Quality;
2014;Hitesh Sajnani,Vaibhav Saini,Joel Ossher,Cristina Videira Lopes;Is Popularity a Measure of Quality? An Analysis of Maven Components.;231-240;10;Software Quality;
2014;Shane McIntosh,Bram Adams,Meiyappan Nagappan,Ahmed E. Hassan;Mining Co-change Information to Understand When Build Changes Are Necessary.;241-250;10;Managing Change I;
2014;Sebastiano Panichella,Gabriele Bavota,Massimiliano Di Penta,Gerardo Canfora,Giuliano Antoniol;How Developers' Collaborations Identified from Different Sources Tell Us about Code Changes.;251-260;10;Managing Change I;
2014;Marco Biazzini,Martin Monperrus,Benoit Baudry;On Analyzing the Topology of Commit Histories in Decentralized Version Control Systems.;261-270;10;Patches;
2014;Yida Tao,DongGyun Han,Sunghun Kim;Writing Acceptable Patches: An Empirical Study of Open Source Project Patches.;271-280;10;Patches;
2014;Daniel Alencar da Costa,Surafel Lemma Abebe,Shane McIntosh,Uirá Kulesza,Ahmed E. Hassan;An Empirical Study of Delays in the Integration of Addressed Issues.;281-290;10;Patches;
2014;Shaowei Wang,David Lo,Bogdan Vasilescu,Alexander Serebrenik;EnTagRec: An Enhanced Tag Recommendation System for Software Information Sites.;291-300;10;Recommenders;
2014;Zixiao Zhu,Yanzhen Zou,Bing Xie,Yong Jin,Zeqi Lin,Lu Zhang 0023;Mining API Usage Examples from Test Code.;301-310;10;Recommenders;
2014;Yu Zhou,Yanxiang Tong,Ruihang Gu,Harald C. Gall;Combining Text Mining and Data Mining for Bug Report Classification.;311-320;10;Recommenders;
2014;Jeffrey Svajlenko,Chanchal Kumar Roy;Evaluating Modern Clone Detection Tools.;321-330;10;Clones;
2014;Wei Wang 0001,Michael W. Godfrey;Recommending Clones for Refactoring Using Design, Context, and History.;331-340;10;Clones;
2014;Yun Lin,Zhenchang Xing,Xin Peng,Yang Liu,Jun Sun 0001,Wenyun Zhao,Jin Song Dong;Clonepedia: Summarizing Code Clones by Common Syntactic Context for Software Maintenance.;341-350;10;Clones;
2014;Daniele Romano,Steven Raemaekers,Martin Pinzger;Refactoring Fat Interfaces Using a Genetic Algorithm.;351-360;10;Refactoring;
2014;Binxian Tao,Ju Qian;Refactoring Java Concurrent Programs Based on Synchronization Requirement Analysis.;361-370;10;Refactoring;
2014;Melina Mongiovi,Gustavo Mendes,Rohit Gheyi,Gustavo Soares,Márcio Ribeiro;Scaling Testing of Refactoring Engines.;371-380;10;Refactoring;
2014;Panos Kyriakakis,Alexander Chatzigeorgiou;Maintenance Patterns of Large-Scale PHP Web Applications.;381-390;10;Managing Change 2;
2014;Stefan Fischer 0006,Lukas Linsbauer,Roberto Erick Lopez-Herrejon,Alexander Egyed;Enhancing Clone-and-Own with Systematic Reuse for Developing Software Variants.;391-400;10;Managing Change 2;
2014;Bogdan Vasilescu,Stef van Schuylenburg,Jules Wulms,Alexander Serebrenik,Mark G. J. van den Brand;Continuous Integration in a Social-Coding World: Empirical Evidence from GitHub.;401-405;5;Commits & Visualization;
2014;Kenji Yamauchi,Jiachen Yang,Keisuke Hotta,Yoshiki Higo,Shinji Kusumoto;Clustering Commits for Understanding the Intents of Implementation.;406-410;5;Commits & Visualization;
2014;Benjamin Biegel 0001,Fabian Beck,Benedikt Lesch,Stephan Diehl 0001;Code Tagging as a Social Game.;411-415;5;Commits & Visualization;
2014;Roberto Minelli,Lorenzo Baracchi,Andrea Mocci,Michele Lanza;Visual Storytelling of Development Sessions.;416-420;5;Commits & Visualization;
2014;Shamima Yeasmin,Chanchal Kumar Roy,Kevin A. Schneider;Interactive Visualization of Bug Reports Using Topic Evolution and Extractive Summaries.;421-425;5;Commits & Visualization;
2014;Lukas Linsbauer,Florian Angerer,Paul Grünbacher,Daniela Lettner,Herbert Prähofer,Roberto E. Lopez-Herrejon,Alexander Egyed;Recovering Feature-to-Code Mappings in Mixed-Variability Software Systems.;426-430;5;Code & Traceability;
2014;Brian P. Eddy,Nicholas A. Kraft;Using Structured Queries for Source Code Search.;431-435;5;Code & Traceability;
2014;Steven P. Reiss;Towards Creating Test Cases Using Code Search.;436-440;5;Code & Traceability;
2014;David Binkley,Dawn J. Lawrie;Learning to Rank Improves IR in SE.;441-445;5;Code & Traceability;
2014;Sebastian Eder,Henning Femmer,Benedikt Hauptmann,Maximilian Junker;Which Features Do My Users (Not) Use?;446-450;5;Code & Traceability;
2014;Tien-Duy B. Le,Jooyong Yi,David Lo,Ferdian Thung,Abhik Roychoudhury;Dynamic Inference of Change Contracts.;451-455;5;Reengineering;
2014;Oscar Chaparro,Gabriele Bavota,Andrian Marcus,Massimiliano Di Penta;On the Impact of Refactoring Operations on Code Quality Metrics.;456-460;5;Reengineering;
2014;Loup Meurice,Francisco Javier Bermudez Ruiz,Jens H. Weber,Anthony Cleve;Establishing Referential Integrity in Legacy Information Systems - Reality Bites!;461-465;5;Reengineering;
2014;Mathew Hall,Muhammad Ali Khojaye,Neil Walkinshaw,Phil McMinn;Establishing the Source Code Disruption Caused by Automated Remodularisation Tools.;466-470;5;Reengineering;
2014;Yan Yan,Massimiliano Menarini,William G. Griswold;Mining Software Contracts for Software Evolution.;471-475;5;Reengineering;
2014;Jeffrey Svajlenko,Judith F. Islam,Iman Keivanloo,Chanchal Kumar Roy,Mohammad Mamun Mia;Towards a Big Data Curated Benchmark of Inter-project Code Clones.;476-480;5;Clones & Applications;
2014;Oleksii Kononenko,Cheng Zhang,Michael W. Godfrey;Compiling Clones: What Happens?;481-485;5;Clones & Applications;
2014;Manar H. Alalfi,Eric J. Rapos,Andrew Stevenson,Matthew Stephan,Thomas R. Dean,James R. Cordy;Semi-automatic Identification and Representation of Subsystem Variability in Simulink Models.;486-490;5;Clones & Applications;
2014;Veronika Bauer,Tobias Volke,Elmar Jürgens;A Novel Approach to Detect Unintentional Re-implementations.;491-495;5;Clones & Applications;
2014;Benjamin Klatt,Klaus Krogmann,Christoph Seidl;Program Dependency Analysis for Consolidating Customized Product Copies.;496-500;5;Clones & Applications;
2014;Frederik Kanning,Sandro Schulze;Program Slicing in the Presence of Preprocessor Variability.;501-505;5;Maintenance;
2014;François Gauthier,Ettore Merlo,Eleni Stroulia,David Turner;Supporting Maintenance and Evolution of Access Control Models in Web Applications.;506-510;5;Maintenance;
2014;Boris Spasojevic,Mircea Lungu,Oscar Nierstrasz;Overthrowing the Tyranny of Alphabetical Ordering in Documentation Systems.;511-515;5;Maintenance;
2014;Patrick Vanderveen,Michael Janzen,Andrew F. Tappenden;A Web Service Test Generator.;516-520;5;Maintenance;
2014;Andrws Vieira,Pedro Faustini,Érika F. Cota;Using Software Metrics to Estimate the Impact of Maintenance in the Performance of Embedded Software.;521-525;5;Maintenance;
2014;Jafar M. Al-Kofahi,Hung Viet Nguyen,Tien N. Nguyen;Fault Localization for Make-Based Build Crashes.;526-530;5;Bugs & Issues;
2014;Stefanie Beyer,Martin Pinzger;A Manual Categorization of Android App Development Issues on Stack Overflow.;531-535;5;Bugs & Issues;
2014;Yutaro Kashiwa,Hayato Yoshiyuki,Yusuke Kukita,Masao Ohira;A Pilot Study of Diversity in High Impact Bugs.;536-540;5;Bugs & Issues;
2014;Luca Ponzanelli,Andrea Mocci,Alberto Bacchelli,Michele Lanza,David Fullerton;Improving Low Quality Stack Overflow Post Detection.;541-544;4;Software Quality;
2014;Stephany Bellomo,Neil A. Ernst,Robert L. Nord,Ipek Ozkaya;Evolutionary Improvements of Cross-Cutting Concerns: Performance in Practice.;545-548;4;Software Quality;
2014;James J. Mulcahy,Shihong Huang;Autonomic Software Systems: Developing for Self-Managing Legacy Systems.;549-552;4;Software Quality;
2014;Martin Habringer,Michael Moser,Josef Pichler;Reverse Engineering PL/SQL Legacy Code: An Experience Report.;553-556;4;Software Quality;
2014;Muhammad Uzair Khan,Muhammad Zohaib Iqbal,Shaukat Ali;A Heuristic-Based Approach to Refactor Crosscutting Behaviors in UML State Machines.;557-560;4;Software Quality;
2014;Daniela Steidl,Florian Deissenboeck,Martin Poehlmann,Robert Heinke,Barbel Uhink-Mergenthaler;Continuous Software Quality Control in Practice.;561-564;4;Cross-Cutting Concerns;
2014;Matthieu Parizy,Koichiro Takayama,Yuji Kanazawa;Software Defect Prediction for LSI Designs.;565-568;4;Cross-Cutting Concerns;
2014;Tukaram Muske;Improving Review of Clustered-Code Analysis Warnings.;569-572;4;Cross-Cutting Concerns;
2014;Tiago L. Alves,Pedro Silva,Miguel Sales Dias;Applying ISO/IEC 25010 Standard to Prioritize and Solve Quality Issues of Automatic ETL Processes.;573-576;4;Cross-Cutting Concerns;
2014;Luca Ponzanelli,Gabriele Bavota,Massimiliano Di Penta,Rocco Oliveto,Michele Lanza;Prompter: A Self-Confident Recommender System.;577-580;4;Software Analyzers;
2014;Theodoros Chaikalis,Elvis Ligu,George Melas,Alexander Chatzigeorgiou;SEAgle: Effortless Software Evolution Analysis.;581-584;4;Software Analyzers;
2014;Reinout Stevens,Coen De Roover;Querying the History of Software Projects Using QWALKEKO.;585-588;4;Software Analyzers;
2014;Steven P. Reiss;Tool Demo: Browsing Software Repositories.;589-592;4;Software Analyzers;
2014;Chunyao Zou,Daqing Hou;LDA Analyzer: A Tool for Exploring Topic Models.;593-596;4;Software Analyzers;
2014;Maëlick Claes,Tom Mens,Philippe Grosjean;maintaineR: A Web-Based Dashboard for Maintainers of CRAN Packages.;597-600;4;Recommenders;
2014;Deli Zhang,Gilbert Hendry,Damian Dechev;Tools for Enabling Automatic Validation of Large-Scale Parallel Application Simulations.;601-604;4;Recommenders;
2014;Patanamon Thongtanunam,Xin Yang,Norihiro Yoshida,Raula Gaikovina Kula,Ana Erika Camargo Cruz,Kenji Fujiwara,Hajimu Iida;ReDA: A Web-Based Visualization Tool for Analyzing Modern Code Review Dataset.;605-608;4;Recommenders;
2014;Yue Yu,Huaimin Wang,Gang Yin,Charles X. Ling;Reviewer Recommender of Pull-Requests in GitHub.;609-612;4;Recommenders;
2014;Victor Guana,Kelsey Gaboriau,Eleni Stroulia;ChainTracker: Towards a Comprehensive Tool for Building Code-Generation Environments.;613-616;4;Recommenders;
2014;Mohammad Masudur Rahman,Chanchal K. Roy;SurfClipse: Context-Aware Meta-search in the IDE.;617-620;4;Context & Environments;
2014;Muhammad Asaduzzaman,Chanchal K. Roy,Kevin A. Schneider,Daqing Hou;Context-Sensitive Code Completion Tool for Better API Usability.;621-624;4;Context & Environments;
2014;Rui Abreu,Jácome Cunha,João Paulo Fernandes,Pedro Martins 0001,Alexandre Perez,João Saraiva;FaultySheet Detective: When Smells Meet Fault Localization.;625-628;4;Context & Environments;
2014;Paloma Oliveira,Fernando Paim Lima,Marco Tulio Valente,Alexander Serebrenik;RTTool: A Tool for Extracting Relative Thresholds for Source Code Metrics.;629-632;4;Context & Environments;
2014;Matthew Stephan;Model Clone Detector Evaluation Using Mutation Analysis.;633-638;6;Post-doctoral Papers;
2014;Emad Shihab;Practical Software Quality Prediction.;639-644;6;Post-doctoral Papers;
2014;Craig Anslow;Reflections on Collaborative Software Visualization in Co-located Environments.;645-650;6;Post-doctoral Papers;
2014;Nicolas Bettenburg;Studying the Impact of Developer Communication on the Quality and Evolution of a Software System: A Doctoral Dissertation Retrospective.;651-656;6;Post-doctoral Papers;
2014;Sonia Haiduc;Supporting Query Formulation for Text Retrieval Applications in Software Engineering.;657-662;6;Post-doctoral Papers;
2014;Eric James Rapos;Co-evolution of Model-Based Tests for Industrial Automotive Software.;663;1;Pre-doctoral Posters;
2014;Kuldeep Kumar;Detecting Collaborative Patterns in Programs.;664;1;Pre-doctoral Posters;
2014;Mark D. Syer;The Maintenance and Evolution of Field-Representative Performance Tests.;665;1;Pre-doctoral Posters;
2014;Roberto Minelli;Towards Self-Adaptive IDEs.;666;1;Pre-doctoral Posters;
2014;Mohammad Ghafari;Extracting Code Examples from Unit Test Cases.;667;1;Pre-doctoral Posters;
2014;Marios Fokaefs;WSDarwin: A Framework for the Support of Web Service Evolution.;668;1;Pre-doctoral Posters;
2014;Tommaso Dal Sasso;Managing Software Defects.;669;1;Pre-doctoral Posters;
2014;Francis Palma;Specification and Detection of SOA Antipatterns.;670;1;Pre-doctoral Posters;
2013;Amanda Schwartz,Hyunsook Do;A Fuzzy Expert System for Cost-Effective Regression Testing Strategies.;1-10;10;Testing;
2013;Tanja Toroi,Anu Raninen,Lauri Väätäinen;Identifying Process Improvement Targets in Test Processes: A Case Study.;11-19;9;Testing;
2013;Mika Mäntylä,Foutse Khomh,Bram Adams,Emelie Engström,Kai Petersen;On Rapid Releases and Software Testing.;20-29;10;Testing;
2013;Jan Harder;How Multiple Developers Affect the Evolution of Code Clones.;30-39;10;Code Cloning;
2013;Wenyi Qian,Xin Peng,Zhenchang Xing,Stan Jarzabek,Wenyun Zhao;Mining Logical Clones in Software: Revealing High-Level Business and Programming Rules.;40-49;10;Code Cloning;
2013;Saman Bazrafshan,Rainer Koschke;An Empirical Study of Clone Removals.;50-59;10;Code Cloning;
2013;Daqing Hou,Lingfeng Mo;Content Categorization of API Discussions.;60-69;10;APIs;
2013;Tyler McDonnell,Baishakhi Ray,Miryung Kim;An Empirical Study of API Stability and Adoption in the Android Ecosystem.;70-79;10;APIs;
2013;Hani Abdeen,Houari A. Sahraoui,Osama Shata;How We Design Interfaces, and How to Assess It.;80-89;10;APIs;
2013;Kapil Anand,Khaled Elwazeer,Aparna Kotha,Matthew Smithson,Rajeev Barua,Angelos D. Keromytis;An Accurate Stack Memory Abstraction and Symbolic Analysis Framework for Executables.;90-99;10;Runtime Analysis;
2013;Rui Xin,Zhengwei Qi,Shiqiu Huang,Chengcheng Xiang,Yudi Zheng,Yin Wang,Haibing Guan;An Automation-Assisted Empirical Study on Lock Usage for Concurrent Programs.;100-109;10;Runtime Analysis;
2013;Mark D. Syer,Zhen Ming Jiang,Meiyappan Nagappan,Ahmed E. Hassan,Mohamed N. Nasser,Parminder Flora;Leveraging Performance Counters and Execution Logs to Diagnose Memory-Related Performance Issues.;110-119;10;Runtime Analysis;
2013;Paul Klint,Davy Landman,Jurgen J. Vinju;Exploring the Limits of Domain Model Recovery.;120-129;10;Reverse Engineering;
2013;Yvan Labiche,Bojana Kolbah,Hossein Mehrfard;Combining Static and Dynamic Analyses to Reverse-Engineer Scenario Diagrams.;130-139;10;Reverse Engineering;
2013;Mohd Hafeez Osman,Michel R. V. Chaudron,Peter van der Putten;An Analysis of Machine Learning Algorithms for Condensing Reverse Engineered Class Diagrams.;140-149;10;Reverse Engineering;
2013;Hoan Anh Nguyen,Hung Viet Nguyen,Tung Thanh Nguyen,Tien N. Nguyen;Output-Oriented Refactoring in PHP-Based Dynamic Web Applications.;150-159;10;Refactoring;
2013;Syed Muhammad Ali Shah,Jens Dietrich,Catherine McCartin;On the Automation of Dependency-Breaking Refactorings in Java.;160-169;10;Refactoring;
2013;Young-Woo Kwon,Eli Tilevich;Reducing the Energy Consumption of Mobile Applications Behind the Scenes.;170-179;10;Refactoring;
2013;Yuhua Qi,Xiaoguang Mao,Yan Lei;Efficient Automated Program Repair through Fault-Recorded Testing Prioritization.;180-189;10;Fault and Defect Management;
2013;Giuseppe Scanniello,Michele Risi;Dealing with Faults in Source Code: Abbreviated vs. Full-Word Identifier Names.;190-199;10;Fault and Defect Management;
2013;Yuan Tian,David Lo,Chengnian Sun;DRONE: Predicting Priority of Reported Bugs by Multi-factor Analysis.;200-209;10;Fault and Defect Management;
2013;Gabriele Bavota,Gerardo Canfora,Massimiliano Di Penta,Rocco Oliveto,Sebastiano Panichella;An Empirical Investigation on Documentation Usage Patterns in Maintenance Tasks.;210-219;10;Software Comprehension;
2013;Leo Pruijt,Christian Köppe,Sjaak Brinkkemper;Architecture Compliance Checking of Semantically Rich Modular Architectures: A Comparative Study of Tool Support.;220-229;10;Software Comprehension;
2013;Muhammad Asaduzzaman,Chanchal K. Roy,Kevin A. Schneider,Massimiliano Di Penta;LHDiff: A Language-Independent Hybrid Approach for Tracking Source Code Lines.;230-239;10;Software Comprehension;
2013;Tao Wang,Huaimin Wang,Gang Yin,Charles X. Ling,Xiang Li,Peng Zou;Mining Software Profile across Multiple Repositories for Hierarchical Categorization.;240-249;10;Software Authorship;
2013;Xiaozhu Meng,Barton P. Miller,William R. Williams,Andrew R. Bernat;Mining Software Repositories for Accurate Authorship.;250-259;10;Software Authorship;
2013;Francesca Arcelli Fontana,Vincenzo Ferme,Alessandro Marino,Bartosz Walter,Pawel Martenka;Investigating the Impact of Code Smells on System's Quality: An Empirical Study on Systems of Different Application Domains.;260-269;10;Smells and Anti-patterns;
2013;Seyyed Ehsan Salamati Taba,Foutse Khomh,Ying Zou,Ahmed E. Hassan,Meiyappan Nagappan;Predicting Bugs Using Antipatterns.;270-279;10;Smells and Anti-patterns;
2013;Gabriele Bavota,Gerardo Canfora,Massimiliano Di Penta,Rocco Oliveto,Sebastiano Panichella;The Evolution of Project Inter-dependencies in a Software Ecosystem: The Case of Apache.;280-289;10;Dependencies;
2013;Sebastian C. Muller,Thomas Fritz;Stakeholders' Information Needs for Artifacts and Their Dependencies in a Real World Context.;290-299;10;Dependencies;
2013;Nouh Alhindawi,Natalia Dragan,Michael L. Collard,Jonathan I. Maletic;Improving Feature Location by Enhancing Source Code with Stereotypes.;300-309;10;Feature Location;
2013;Tien-Duy B. Le,David Lo;Will Fault Localization Work for These Failures? An Automated Approach to Predict Effectiveness of Fault Localization Tools.;310-319;10;Feature Location;
2013;Tathagata Dasgupta,Mark Grechanik,Evan Moritz,Bogdan Dit,Denys Poshyvanyk;Enhancing Software Traceability by Automatically Expanding Corpora with Relevant Documentation.;320-329;10;Traceability;
2013;Bogdan Dit,Evan Moritz,Mario Linares Vásquez,Denys Poshyvanyk;Supporting and Accelerating Reproducible Research in Software Maintenance Using TraceLab Component Library.;330-339;10;Traceability;
2013;Mohammad Gharehyazie,Daryl Posnett,Vladimir Filkov;Social Activities Rival Patch Submission for Prediction of Developer Initiation in OSS Projects.;340-349;10;Context;
2013;Feng Zhang 0001,Audris Mockus,Ying Zou,Foutse Khomh,Ahmed E. Hassan;How Does Context Affect the Distribution of Software Maintainability Metrics?;350-359;10;Context;
2013;Giri Panamoottil Krishnan,Nikolaos Tsantalis;Refactoring Clones: An Optimization Problem.;360-363;4;ERA;
2013;Tien-Duy B. Le,Shaowei Wang,David Lo;Multi-abstraction Concern Localization.;364-367;4;ERA;
2013;Daniele Romano,Martin Pinzger;Towards a Weighted Voting System for Q&A Sites.;368-371;4;ERA;
2013;Rahul Venkataramani,Allahbaksh M. Asadullah,Vasudev D. Bhat,Basavaraju Muddu;Latent Co-development Analysis Based Semantic Search for Large Code Repositories.;372-375;4;ERA;
2013;Emily Hill,David C. Shepherd,Lori L. Pollock,K. Vijay-Shanker;Differentiating Roles of Program Elements in Action-Oriented Concerns.;376-379;4;ERA;
2013;Tien-Duy B. Le,Ferdian Thung,David Lo;Theory and Practice, Do They Match? A Case with Spectrum-Based Fault Localization.;380-383;4;ERA;
2013;Quinten David Soetens,Javier Pérez,Serge Demeyer;An Initial Investigation into Change-Based Reconstruction of Floss-Refactorings.;384-387;4;ERA;
2013;Matias Martinez,Laurence Duchien,Martin Monperrus;Automatically Extracting Instances of Code Change Patterns with AST Analysis.;388-391;4;ERA;
2013;Elvis Ligu,Alexander Chatzigeorgiou,Theodoros Chaikalis,Nikolaos Ygeionomakis;Identification of Refused Bequest Code Smells.;392-395;4;ERA;
2013;Francesca Arcelli Fontana,Marco Zanoni,Alessandro Marino,Mika Mäntylä;Code Smell Detection: Towards a Machine Learning-Based Approach.;396-399;4;ERA;
2013;Robert L. Nord,Ipek Ozkaya,Raghvinder S. Sangwan,Julien Delange,Marco A. Gonzalez,Philippe Kruchten;Variations on Using Propagation Cost to Measure Architecture Modifiability Properties.;400-403;4;ERA;
2013;Roberto E. Lopez-Herrejon,Francisco Chicano,Javier Ferrer,Alexander Egyed,Enrique Alba;Multi-objective Optimal Test Suite Computation for Software Product Line Pairwise Testing.;404-407;4;ERA;
2013;Emily Hill,Alberto Bacchelli,Dave Binkley,Bogdan Dit,Dawn Lawrie,Rocco Oliveto;Which Feature Location Technique is Better?;408-411;4;ERA;
2013;Siim Karus;Automatic Means of Identifying Evolutionary Events in Software Development.;412-415;4;ERA;
2013;Omar Meqdadi,Nouh Alhindawi,Michael L. Collard,Jonathan I. Maletic;Towards Understanding Large-Scale Adaptive Changes from Version Histories.;416-419;4;ERA;
2013;Tosin Daniel Oyetoyan,Daniela S. Cruzes,Reidar Conradi;Can Refactoring Cyclic Dependent Components Reduce Defect-Proneness?;420-423;4;ERA;
2013;Aiko Fallas Yamashita,Leon Moonen;Towards a Taxonomy of Programming-Related Difficulties during Maintenance.;424-427;4;ERA;
2013;Maurizio Leotta,Filippo Ricca,Giuliano Antoniol,Vahid Garousi,Junji Zhi,Günther Ruhe;A Pilot Experiment to Quantify the Effect of Documentation Accuracy on Maintenance Tasks.;428-431;4;ERA;
2013;Dave Binkley,Dawn Lawrie,Emily Hill,Janet Burge,Ian Harris,Regina Hebig,Oliver Keszocze,Karl Reed,John Slankas;Task-Driven Software Summarization.;432-435;4;ERA;
2013;Patrick Francis,Laurie Williams;"Determining ""Grim Reaper"" Policies to Prevent Languishing Bugs.";436-439;4;ERA;
2013;Vaclav Rajlich,Jing Hua;Which Practices Are Suitable for an Academic Software Project?;440-443;4;ERA;
2013;Marios Fokaefs,Eleni Stroulia;WSDARWIN: A Decision-Support Tool for Web-Service Evolution.;444-447;4;ERA;
2013;Felipe Ebert,Fernando Castor;A Study on Developers' Perceptions about Exception Handling Bugs.;448-451;4;ERA;
2013;Laura Moreno,Wathsala Bandara,Sonia Haiduc,Andrian Marcus;On the Relationship between the Vocabulary of Bug Reports and Source Code.;452-455;4;ERA;
2013;Hung Viet Nguyen,Hoan Anh Nguyen,Tung Thanh Nguyen,Tien N. Nguyen;Database-Aware Fault Localization for Dynamic Web Applications.;456-459;4;ERA;
2013;Blerina Bazelli,Abram Hindle,Eleni Stroulia;On the Personality Traits of StackOverflow Users.;460-463;4;ERA;
2013;Tobias Roehm,Bernd Bruegge,Tom-Michael Hesse,Barbara Paech;Towards Identification of Software Improvements and Specification Updates by Comparing Monitored and Specified End-User Behavior.;464-467;4;ERA;
2013;Ana Erika Camargo Cruz,Hajimu Iida,Norbert Preining;An Empirical Illustration to Validate a FLOSS Development Model Using S-Shaped Curves.;468-471;4;ERA;
2013;Maxime Gobert,Jerome Maes,Anthony Cleve,Jens H. Weber;Understanding Schema Evolution as a Basis for Database Reengineering.;472-475;4;ERA;
2013;Roberto Minelli,Michele Lanza;SAMOA - A Visual Software Analytics Platform for Mobile Applications.;476-479;4;Tools;
2013;Louis M. Rose,Simon M. Poulding,Robert Feldt,Richard F. Paige;Towards a Scalable Cloud Platform for Search-Based Probabilistic Testing.;480-483;4;Tools;
2013;Muhammad Asaduzzaman,Chanchal K. Roy,Kevin A. Schneider,Massimiliano Di Penta;LHDiff: Tracking Source Code Lines to Support Software Maintenance Activities.;484-487;4;Tools;
2013;Ripon K. Saha,Chanchal K. Roy,Kevin A. Schneider;gCad: A Near-Miss Clone Genealogy Extractor to Support Clone Evolution Analysis.;488-491;4;Tools;
2013;Taimur Khan,Henning Barthel,Achim Ebert,Peter Liggesmeyer;eCITY: A Tool to Track Software Structural Changes Using an Evolving City.;492-495;4;Tools;
2013;Juan Carlos Castrejón,Genoveva Vargas-Solar,Christine Collet,Rafael Lozano;ExSchema: Discovering and Maintaining Schemas from Polyglot Persistence Applications.;496-499;4;Tools;
2013;Lukas Holy,Jaroslav Snajberk,Premek Brada,Kamil Jezek;A Visualization Tool for Reverse-Engineering of Complex Component Applications.;500-503;4;Tools;
2013;Eleni Stroulia,Isaac Matichuk,Fabio Rocha,Ken Bauer;Interactive Exploration of Collaborative Software-Development Data.;504-507;4;Tools;
2013;Renato Lima Novais,Camila Nunes,Alessandro Garcia,Manoel G. Mendonça;SourceMiner Evolution: A Tool for Supporting Feature Evolution Comprehension.;508-511;4;Tools;
2013;Manuel Roldan-Vega,Greg Mallet,Emily Hill,Jerry Alan Fails;CONQUER: A Tool for NL-Based Query Refinement and Contextualizing Code Search Results.;512-515;4;Tools;
2013;Michael L. Collard,Michael John Decker,Jonathan I. Maletic;srcML: An Infrastructure for the Exploration, Analysis, and Manipulation of Source Code: A Tool Demonstration.;516-519;4;Tools;
2013;Jeroen van den Bos,Tijs van der Storm;TRINITY: An IDE for the Matrix.;520-523;4;Tools;
2013;Allahbaksh M. Asadullah,Basavaraju M.,Nikita Jain 0001;E-Xplore: Enterprise API Explorer.;524-527;4;Industry;
2013;Nataliia Semenenko,Marlon Dumas,Tonis Saar;Browserbite: Accurate Cross-Browser Testing via Machine Learning over Image Features.;528-531;4;Industry;
2013;Ulas Yuksel,Hasan Sözer;Automated Classification of Static Code Analysis Alerts: A Case Study.;532-535;4;Industry;
2013;Alf Larsson,Abdelwahab Hamou-Lhadj;Mining Telecom System Logs to Facilitate Debugging Tasks.;536-539;4;Industry;
2013;Dusica Marijan,Arnaud Gotlieb,Sagar Sen;Test Case Prioritization for Continuous Regression Testing: An Industrial Case Study.;540-543;4;Industry;
2013;Vladimir Sor,Plumbr Ou,Tarvo Treier,Satish Narayana Srirama;Improving Statistical Approach for Memory Leak Detection Using Machine Learning.;544-547;4;Industry;
2013;Hyrum K. Wright,Daniel Jasper,Manuel Klimek,Chandler Carruth,Zhanyong Wan;Large-Scale Automated Refactoring Using ClangMR.;548-551;4;Industry;
2013;William L. Miller,Lawrence B. Compton,Bruce L. Woodmansee;Assuming Software Maintenance of a Large, Embedded Legacy System from the Original Developer.;552-555;4;Industry;
2013;Clauirton de Siebra,Angélica A. Mascaro,Fabio Q. B. da Silva,André L. M. Santos;The Adventure of Developing a Software Application on a Pre-release Platform: Features and Learned Lessons.;556-559;4;Industry;
2013;Fabian Beck;Analysis of Multi-dimensional Code Couplings.;560-565;6;Doctoral Symposium;
2013;Aiko Yamashita;How Good Are Code Smells for Evaluating Software Maintainability? Results from a Comparative Case Study.;566-571;6;Doctoral Symposium;
2013;Javier Perez;Refactoring Planning for Design Smell Correction: Summary, Opportunities and Lessons Learned.;572-577;6;Doctoral Symposium;
2013;Péter Hegedüs;Revealing the Effect of Coding Practices on Software Maintainability.;578-581;4;Doctoral Symposium;
2013;Young-Woo Kwon;Automated S/W Reengineering for Fault-Tolerant and Energy-Efficient Distributed Execution.;582-585;4;Doctoral Symposium;
2013;Ebrahim Khalil Abbasi;Reverse Engineering Web Sales Configurators.;586-589;4;Doctoral Symposium;
