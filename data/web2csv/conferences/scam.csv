2015;David Binkley,Nicolas E. Gold,Mark Harman,Syed S. Islam,Jens Krinke,Shin Yoo;ORBS and the limits of static slicing.;1-10;10;Empirical Studies I;
2015;Martin Brandtner,Philipp Leitner,Harald C. Gall;Intent, tests, and release dependencies: Pragmatic recipes for source code integration.;11-20;10;Empirical Studies I;
2015;Rodrigo Bonifácio,Fausto Carvalho,Guilherme N. Ramos,Uirá Kulesza,Roberta Coelho;The use of C++ exception handling constructs: A comprehensive study.;21-30;10;Empirical Studies I;
2015;Mohammed Sayagh,Bram Adams;Multi-layer software configuration: Empirical study on wordpress.;31-40;10;Empirical Studies I;
2015;Otávio Augusto Lazzarini Lemos,Adriano Carvalho de Paula,Hitesh Sajnani,Cristina V. Lopes;Can the use of types and query expansion help improve large-scale code search?;41-50;10;Code Search and Navigation;
2015;Muslim Chochlov,Michael English,Jim Buckley;Using changeset descriptions as a data source to assist feature location.;51-60;10;Code Search and Navigation;
2015;Mohammad Ghafari,Carlo Ghezzi,Konstantin Rubinov;Automatically identifying focal methods under test in unit test cases.;61-70;10;Code Search and Navigation;
2015;Dawn Lawrie,Dave Binkley;Navigating source code with words.;71-80;10;Code Search and Navigation;
2015;Mohammad Masudur Rahman,Chanchal K. Roy,Iman Keivanloo;Recommending insightful comments for source code using crowdsourced knowledge.;81-90;10;Code Search and Navigation;
2015;Alexander Huck,Christian Bischof,Jean Utke;Checking C++ codes for compatibility with operator overloading.;91-100;10;Static Analysis;
2015;Jens Nicolay,Carlos Noguera,Coen De Roover,Wolfgang De Meuter;Detecting function purity in JavaScript.;101-110;10;Static Analysis;
2015;Sandrine Blazy,Stéphanie Riaud,Thomas Sirvent;Data tainting and obfuscation: Improving plausibility of incorrect taint.;111-120;10;Static Analysis;
2015;Efthimia Aivaloglou,David Hoepelman,Felienne Hermans;A grammar for spreadsheet formulas evaluated on two large datasets.;121-130;10;Static Analysis;
2015;Vincent Boisselle,Bram Adams;The impact of cross-distribution bug duplicates, empirical study on Debian and Ubuntu.;131-140;10;Empirical Studies II;
2015;Csaba Faragó,Péter Hegedüs,Rudolf Ferenc;Cumulative code churn: Impact on maintainability.;141-150;10;Empirical Studies II;
2015;Daniela Steidl,Florian Deissenboeck;How do Java methods grow?;151-160;10;Empirical Studies II;
2015;Md. Sami Uddin,Varun Gaur,Carl Gutwin,Chanchal K. Roy;On the comprehension of code clone visualizations: A controlled study using eye tracking.;161-170;10;(Code, Memory, Performance) Smells;
2015;Wolfram Fenske,Sandro Schulze,Daniel Meyer,Gunter Saake;When code smells twice as much: Metric-based detection of variability-aware code smells.;171-180;10;(Code, Memory, Performance) Smells;
2015;Hengyang Yu,Xiaohua Shi,Wei Feng;LeakTracer: Tracing leaks along the way.;181-190;10;(Code, Memory, Performance) Smells;
2015;Mohammadreza Ghanavati,Artur Andrzejak;Automated memory leak diagnosis by regression testing.;191-200;10;(Code, Memory, Performance) Smells;
2015;Felipe Pinto,Uirá Kulesza,Christoph Treude;Automating the performance deviation analysis for multiple system releases: An evolutionary study.;201-210;10;(Code, Memory, Performance) Smells;
2015;Dierk Lüdemann,Rainer Koschke;From preprocessor-constrained parse graphs to preprocessor-constrained control flow.;211-220;10;Code and API Transformation;
2015;Gustavo Santos,Anne Etien,Nicolas Anquetil,Stéphane Ducasse,Marco Tulio Valente;Recording and replaying system specific, source code transformations.;221-230;10;Code and API Transformation;
2015;Rahul Pandita,Raoul Praful Jetley,Sithu D. Sudarsan,Laurie A. Williams;Discovering likely mappings between APIs using text mining.;231-240;10;Code and API Transformation;
2015;Eric J. Rapos,Andrew Stevenson,Manar H. Alalfi,James R. Cordy;SimNav: Simulink navigation of model clone classes.;241-246;6;Tool Demos;
2015;Kunal Banerjee,Chittaranjan A. Mandal,Dipankar Sarkar;A translation validation framework for symbolic value propagation based equivalence checking of FSMDAs.;247-252;6;Tool Demos;
2015;Gábor Szoke,Csaba Nagy,Lajos Jeno Fülöp,Rudolf Ferenc,Tibor Gyimóthy;FaultBuster: An automatic code smell refactoring toolset.;253-258;6;Tool Demos;
2015;Stephan Renatus,Corrie Bartelheimer,Jörn Eichler;Improving prioritization of software weaknesses using security models with AVUS.;259-264;6;Tool Demos;
2015;Luca Dariz,Massimiliano Ruggeri,Michele Selvatici;A static microcode analysis tool for programmable load drivers.;265-270;6;Tool Demos;
2015;Gergo Balogh,Attila Szabolics,Árpád Beszédes;CodeMetropolis: Eclipse over the city of source code.;271-276;6;Tool Demos;
2014;Saman Bazrafshan,Rainer Koschke;Effect of Clone Information on the Performance of Developers Fixing Cloned Bugs.;1-10;10;Clones;
2014;Manishankar Mondal,Chanchal Kumar Roy,Kevin A. Schneider;Automatic Identification of Important Clones for Refactoring and Tracking.;11-20;10;Clones;
2014;Hitesh Sajnani,Vaibhav Saini,Cristina Videira Lopes;A Comparative Study of Bug Patterns in Java Cloned and Non-cloned Code.;21-30;10;Clones;
2014;Md. Saidur Rahman 0002,Chanchal K. Roy;A Change-Type Based Empirical Study on the Stability of Cloned Code.;31-40;10;Clones;
2014;DeLesley Hutchins,Aaron Ballman,Dean Sutherland;C/C++ Thread Safety Analysis.;41-46;6;Tools;
2014;David Tengeri,Árpád Beszédes,David Havas,Tibor Gyimóthy;Toolset and Program Repository for Code Coverage-Based Test Suite Analysis and Manipulation.;47-52;6;Tools;
2014;Coen De Roover,Katsuro Inoue;The Ekeko/X Program Transformation Tool.;53-58;6;Tools;
2014;David A. Kosower,Juan J. Lopez-Villarejo,Serguei A. Roubtsov;Flowgen: Flowchart-Based Documentation Framework for C++.;59-64;6;Tools;
2014;Andrea Stocco,Maurizio Leotta,Filippo Ricca,Paolo Tonella;PESTO: A Tool for Migrating DOM-Based to Visual Web Tests.;65-70;6;Tools;
2014;Andrea Caracciolo,Andrei Chis,Boris Spasojevic,Mircea Lungu;Pangea: A Workbench for Statically Analyzing Multi-language Software Corpora.;71-76;6;Tools;
2014;Rudolf Ferenc,Laszlo Lango,István Siket,Tibor Gyimóthy,Tibor Bakota;Source Meter Sonar Qube Plug-in.;77-82;6;Tools;
2014;Syed Shariyar Murtaza,Abdelwahab Hamou-Lhadj,Wael Khreich,Mario Couture;Total ADS: Automated Software Anomaly Detection System.;83-88;6;Tools;
2014;Wei Wu,Bram Adams,Yann-Gaël Guéhéneuc,Giuliano Antoniol;ACUA: API Change and Usage Auditor.;89-94;6;Tools;
2014;Gábor Szoke,Gabor Antal,Csaba Nagy,Rudolf Ferenc,Tibor Gyimóthy;Bulk Fixing Coding Issues and Its Effects on Software Quality: Is It Worth Refactoring?;95-104;10;Software Quality;
2014;Guillaume Petiot,Bernard Botella,Jacques Julliand,Nikolai Kosmatov,Julien Signoles;Instrumentation of Annotated C Programs for Test Generation.;105-114;10;Software Quality;
2014;Syrine Tlili,Jose M. Fernandez,Abdelfettah Belghith,Bilel Dridi,Soufien Hidouri;Scalable Security Verification of Software at Compile Time.;115-124;10;Software Quality;
2014;Malin Kallen,Sverker Holmgren,Ebba Þóra Hvannberg;Impact of Code Refactoring Using Object-Oriented Methodology on a Scientific Computing Application.;125-134;10;Software Quality;
2014;Chanseok Oh,Martin Schäf,Daniel Schwartz-Narbonne,Thomas Wies;Concolic Fault Localization.;135-144;10;Software Quality;
2014;Siyuan Jiang,Raúl A. Santelices,Mark Grechanik,Haipeng Cai;On the Accuracy of Forward Dynamic Slicing and Its Effects on Software Maintenance.;145-154;10;Slicing;
2014;Ulf Kargen,Nahid Shahmehri;Efficient Utilization of Secondary Storage for Scalable Dynamic Slicing.;155-164;10;Slicing;
2014;Haipeng Cai,Siyuan Jiang,Raúl A. Santelices,Ying-Jie Zhang,Yiji Zhang;SENSA: Sensitivity Analysis for Quantitative Change-Impact Prediction.;165-174;10;Slicing;
2014;Shin Yoo,David Binkley,Roger D. Eastman;Seeing Is Slicing: Observation Based Slicing of Picture Description Languages.;175-184;10;Slicing;
2014;Angela Lozano,Carlos Noguera,Viviane Jonckers;Explaining Why Methods Change Together.;185-194;10;Mining Software Repository;
2014;Cosmin Marsavina,Daniele Romano,Andy Zaidman;Studying Fine-Grained Co-evolution Patterns of Production and Test Code.;195-204;10;Mining Software Repository;
2014;Le An,Foutse Khomh,Bram Adams;Supplementary Bug Fixes vs. Re-opened Bugs.;205-214;10;Mining Software Repository;
2014;Steven Raemaekers,Arie van Deursen,Joost Visser;Semantic Versioning versus Breaking Changes: A Study of the Maven Repository.;215-224;10;Mining Software Repository;
2014;Shuying Liang,Weibin Sun,Matthew Might;Fast Flow Analysis with Godel Hashes.;225-234;10;Static Analysis;
2014;Aharon Abadi,Yishai A. Feldman;A Parallel On-Demand Algorithm for Computing Interprocedural Dominators.;235-244;10;Static Analysis;
2014;Marwan Abi-Antoun,Sumukhi Chandrashekar,Radu Vanciu,Andrew Giang;Are Object Graphs Extracted Using Abstract Interpretation Significantly Different from the Code?;245-254;10;Static Analysis;
2014;Babak Yadegari,Saumya Debray;Bit-Level Taint Analysis.;255-264;10;Static Analysis;
2014;Shuying Liang,Weibin Sun,Matthew Might,Andrew W. Keep,David Van Horn;Pruning, Pushdown Exception-Flow Analysis.;265-274;10;Static Analysis;
2014;Luis Fernando Cortes-Coy,Mario Linares Vásquez,Jairo Aponte,Denys Poshyvanyk;On Automatically Generating Commit Messages via Summarization of Source Code Changes.;275-284;10;Recommendation Systems;
2014;Mohammad Masudur Rahman,Chanchal K. Roy;On the Use of Context in Recommending Exception Handling Code Examples.;285-294;10;Recommendation Systems;
2014;Atsushi Yoshida,Yoshinari Hachisu;A Pattern Search Method for Unpreprocessed C Programs Based on Tokenized Syntax Trees.;295-304;10;Recommendation Systems;
2014;Naohiro Kawamitsu,Takashi Ishio,Tetsuya Kanda,Raula Gaikovina Kula,Coen De Roover,Katsuro Inoue;Identifying Source Code Reuse across Repositories Using LCS-Based Source Code Similarity.;305-314;10;Recommendation Systems;
2013;Árpád Beszédes,Lajos Schrettner,Béla Csaba,Tamás Gergely,Judit Jász,Tibor Gyimóthy;Empirical investigation of SEA-based dependence cluster properties.;1-10;10;Session 1 - Dependency Analysis;
2013;Ahmad Jbara,Dror G. Feitelson;Characterization and assessment of the linux configuration complexity.;11-20;10;Session 1 - Dependency Analysis;
2013;Tosin Daniel Oyetoyan,Reidar Conradi,Daniela S. Cruzes;Criticality of defects in cyclic dependent components.;21-30;10;Session 1 - Dependency Analysis;
2013;K. M. Annervaz,Vikrant S. Kaulgud,Janardan Misra,Shubhashis Sengupta,Gary Titus,Azmat Munshi;Code clustering workbench.;31-36;6;Session 1 - Dependency Analysis;
2013;Jeffrey Svajlenko,Chanchal K. Roy,Slawomir Duszynski;ForkSim: Generating software forks for evaluating cross-project similarity analysis tools.;37-42;6;Session 1 - Dependency Analysis;
2013;Diego Mendez,Benoit Baudry,Martin Monperrus;Empirical evidence of large-scale diversity in API usage of object-oriented software.;43-52;10;Session 2 - Static Source Code Analysis;
2013;Johan Fabry,Coen De Roover,Viviane Jonckers;Aspectual source code analysis with GASR.;53-62;10;Session 2 - Static Source Code Analysis;
2013;Sven Mattsen,Pascal Cuoq,Sibylle Schupp;Driving a sound static software analyzer with branch-and-bound.;63-68;6;Session 2 - Static Source Code Analysis;
2013;Sebastian Biallas,Mads Chr. Olesen,Franck Cassez,Ralf Huuck;PtrTracker: Pragmatic pointer analysis.;69-73;5;Session 2 - Static Source Code Analysis;
2013;David Baca;Tracing with a minimal number of probes.;74-83;10;Session 3 - Dynamic Analysis;
2013;Yan Wang,Min Feng,Rajiv Gupta,Iulian Neamtiu;A state alteration and inspection-based interactive debugger.;84-93;10;Session 3 - Dynamic Analysis;
2013;Mike Papadakis,Márcio Eduardo Delamaro,Yves Le Traon;Proteum/FL: A tool for localizing faults using mutation analysis.;94-99;6;Session 3 - Dynamic Analysis;
2013;Antoine Floch,Tomofumi Yuki,Ali El Moussawi,Antoine Morvan,Kevin Martin,Maxime Naullet,Mythri Alle,Ludovic L'Hours,Nicolas Simon,Steven Derrien,François Charot,Christophe Wolinski,Olivier Sentieys;GeCoS: A framework for prototyping custom hardware design flows.;100-105;6;Session 3 - Dynamic Analysis;
2013;Tukaram B. Muske,Ankit Baid,Tushar Sanas;Review efforts reduction by partitioning of static analysis warnings.;106-115;10;Session 4 - Source Code Metrics;
2013;Amin Milani Fard,Ali Mesbah 0001;JSNOSE: Detecting JavaScript Code Smells.;116-125;10;Session 4 - Source Code Metrics;
2013;Jens Nicolay,Carlos Noguera,Coen De Roover,Wolfgang De Meuter;Determining dynamic coupling in JavaScript using object type inference.;126-135;10;Session 4 - Source Code Metrics;
2013;Gergo Balogh,Árpád Beszédes;CodeMetropolis - code visualisation in MineCraft.;136-141;6;Session 4 - Source Code Metrics;
2013;Francisco Zigmund Sokol,Mauricio Finavaro Aniche,Marco Aurélio Gerosa;MetricMiner: Supporting researchers in mining software repositories.;142-146;5;Session 4 - Source Code Metrics;
2013;Martin Ward;Assembler restructuring in FermaT.;147-156;10;Session 5 - Code Transformation;
2013;Luigi Cerulo,Michele Ceccarelli,Massimiliano Di Penta,Gerardo Canfora;A Hidden Markov Model to detect coded information islands in free text.;157-166;10;Session 5 - Code Transformation;
2013;Vipin Balachandran;Fix-it: An extensible code auto-fix component in Review Bot.;167-172;6;Session 5 - Code Transformation;
2013;Hagen Schink;sql-schema-comparer: Support of multi-language refactoring with relational databases.;173-178;6;Session 5 - Code Transformation;
2013;Michaël Marcozzi,Wim Vanhoof,Jean-Luc Hainaut;A relational symbolic execution algorithm for constraint-based testing of database programs.;179-188;10;Session 6 - Databases and Ontologies;
2013;Arvind W. Kiwelekar,Rushikesh K. Joshi;Ontological interpretation of object-oriented programming abstractions.;189-198;10;Session 6 - Databases and Ontologies;
