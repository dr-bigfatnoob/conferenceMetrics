2016;Tarek M. Ahmed,Cor-Paul Bezemer,Tse-Hsun Chen,Ahmed E. Hassan,Weiyi Shang;Studying the effectiveness of application performance management (APM) tools for detecting performance regressions for web applications: an experience report.;1-12;12;What's fast, green, and sounds like a robot?;
2016;María Gómez,Romain Rouvoy,Bram Adams,Lionel Seinturier;Mining test repositories for automatic detection of UI performance regressions in Android apps.;13-24;12;What's fast, green, and sounds like a robot?;
2016;Qi Luo,Denys Poshyvanyk,Mark Grechanik;Mining performance regression inducing code changes in evolving software.;25-36;12;What's fast, green, and sounds like a robot?;
2016;Lingfeng Bao,David Lo,Xin Xia,Xinyu Wang,Cong Tian;How android app developers manage power consumption?: an empirical study by mining power management commits.;37-48;12;What's fast, green, and sounds like a robot?;
2016;Shaiful Alam Chowdhury,Abram Hindle;GreenOracle: estimating software energy consumption with energy measurement corpora.;49-60;12;What's fast, green, and sounds like a robot?;
2016;Patrick Kreutzer,Georg Dotzler,Matthias Ring,Björn M. Eskofier,Michael Philippsen;Automatic clustering of code changes.;61-72;12;Plus ça change ...;
2016;Thomas Rolfsnes,Leon Moonen,Stefano Di Alesio,Razieh Behjati,Dave Binkley;Improving change recommendation using aggregated association rules.;73-84;12;Plus ça change ...;
2016;Nicolas Dintzner,Arie van Deursen,Martin Pinzger;FEVER: extracting feature-oriented changes from commits.;85-96;12;Plus ça change ...;
2016;Fabian Trautsch,Steffen Herbold,Philip Makedonski,Jens Grabowski;Adressing problems with external validity of repository mining studies through a smart data platform.;97-108;12;Tools of the trade;
2016;Daniel Rozenberg,Ivan Beschastnikh,Fabian Kosmale,Valerie Poser,Heiko Becker,Marc Palyart,Gail C. Murphy;Comparing repositories visually with repograms.;109-120;12;Tools of the trade;
2016;Ahmed E. Hassan;Raising MSR researchers: an experience report on teaching a graduate seminar course in mining software repositories (MSR).;121-125;5;Orphans (read:novel!);
2016;Kostadin Damevski,Hui Chen,David C. Shepherd,Lori L. Pollock;Interactive exploration of developer interaction traces using a hidden markov model.;126-136;11;Orphans (read:novel!);
2016;Valerio Cosentino,Javier Luis Cánovas Izquierdo,Jordi Cabot;Findings from GitHub: methods, datasets and limitations.;137-141;5;Orphans (read:novel!);
2016;Jin Guo 0004,Mona Rahimi,Jane Cleland-Huang,Alexander Rasin,Jane Huffman Hayes,Michael Vierhauser;Cold-start software analytics.;142-153;12;Orphans (read:novel!);
2016;Suhas Kabinna,Cor-Paul Bezemer,Weiyi Shang,Ahmed E. Hassan;Logging library migrations: a case study for the apache software foundation projects.;154-164;11;Orphans (read:novel!);
2016;Tse-Hsun Chen,Weiyi Shang,Jinqiu Yang,Ahmed E. Hassan,Michael W. Godfrey,Mohamed N. Nasser,Parminder Flora;An empirical study on the practice of maintaining object-relational mapping code in Java systems.;165-176;12;The devil is in the details (source code mining);
2016;Waqar Ahmad,Christian Kästner,Joshua Sunshine,Jonathan Aldrich;Inter-app communication in Android: developer challenges.;177-188;12;The devil is in the details (source code mining);
2016;Tushar Sharma,Marios Fragkoulis,Diomidis Spinellis;Does your configuration code smell?;189-200;12;The devil is in the details (source code mining);
2016;Md Tajmilur Rahman,Louis-Philippe Querel,Peter C. Rigby,Bram Adams;Feature toggles: practitioner practices and a case study.;201-211;11;The devil is in the details (source code mining);
2016;Demóstenes Sena,Roberta Coelho,Uirá Kulesza,Rodrigo Bonifácio;Understanding the exception handling strategies of Java libraries: an empirical study.;212-222;11;The devil is in the details (source code mining);
2016;Daniel Avery,Hoa Khanh Dam,Bastin Tony Roy Savarimuthu,Aditya K. Ghose;Externalization of software behavior by the mining of norms.;223-234;12;Text mining:norms, feelings, youtube, and crashes;
2016;Cássio Castaldi Araujo Blaz,Karin Becker;Sentiment analysis in tickets for IT support.;235-246;12;Text mining:norms, feelings, youtube, and crashes;
2016;Mika Mäntylä,Bram Adams,Giuseppe Destefanis,Daniel Graziotin,Marco Ortu;Mining valence, arousal, and dominance: possibilities for detecting burnout and productivity?;247-258;12;Text mining:norms, feelings, youtube, and crashes;
2016;Parisa Moslehi,Bram Adams,Juergen Rilling;On mining crowd-based speech documentation.;259-268;10;Text mining:norms, feelings, youtube, and crashes;
2016;Joshua Charles Campbell,Eddie Antonio Santos,Abram Hindle;The unreasonable effectiveness of traditional information retrieval in crash report deduplication.;269-280;12;Text mining:norms, feelings, youtube, and crashes;
2016;C. Albert Thompson,Gail C. Murphy,Marc Palyart,Marko Gasparic;How software developers use work breakdown relationships in issue repositories.;281-285;5;I've got issues ... and debt;
2016;Tezcan Dilshener,Michel Wermelinger,Yijun Yu;Locating bugs without looking back.;286-290;5;I've got issues ... and debt;
2016;Riivo Kikas,Marlon Dumas,Dietmar Pfahl;Using dynamic and contextual features to predict issue lifetime in GitHub projects.;291-302;12;I've got issues ... and debt;
2016;Lucas Layman,Allen P. Nikora,Joshua Meek,Tim Menzies;Topic modeling of NASA space system problem reports: research in practice.;303-314;12;I've got issues ... and debt;
2016;Gabriele Bavota,Barbara Russo;A large-scale empirical study on self-admitted technical debt.;315-326;12;I've got issues ... and debt;
2016;Stephany Bellomo,Robert L. Nord,Ipek Ozkaya,Mary Popeck;Got technical debt?: surfacing elusive technical debt in issue trackers.;327-338;12;I've got issues ... and debt;
2016;Takashi Ishio,Raula Gaikovina Kula,Tetsuya Kanda,Daniel M. Germán,Katsuro Inoue;Software ingredients: detection of third-party component reuse in Java software release.;339-350;12;Yuuuge! mining;
2016;Erik Wittern,Philippe Suter,Shriram Rajagopalan;A look at the dynamics of the JavaScript package ecosystem.;351-361;11;Yuuuge! mining;
2016;Anh Tuan Nguyen,Hoan Anh Nguyen,Tien N. Nguyen;A large-scale study on repetitiveness, containment, and composability of routines in open-source projects.;362-373;12;Yuuuge! mining;
2016;Daniel Alencar da Costa,Shane McIntosh,Uirá Kulesza,Ahmed E. Hassan;The impact of switching to a rapid release cycle on the integration delay of addressed issues: an empirical study of the mozilla firefox project.;374-385;12;Process improvement;
2016;Daniel Izquierdo-Cortazar,Lars Kurth,Jesús M. González-Barahona,Santiago Dueñas,Nelson Sekitoleko;Characterization of the Xen project code review process: an experience report.;386-390;5;Process improvement;
2016;Di Yang,Aftab Hussain,Cristina Videira Lopes;From query to usable code: an analysis of stack overflow code snippets.;391-402;12;This session's gonna overflow;
2016;Muhammad Ahasanuzzaman,Muhammad Asaduzzaman,Chanchal K. Roy,Kevin A. Schneider;Mining duplicate questions in stack overflow.;402-412;11;This session's gonna overflow;
2016;Bowen Xu,Zhenchang Xing,Xin Xia,David Lo,Qingye Wang,Shanping Li;Domain-specific cross-language relevant question retrieval.;413-424;12;This session's gonna overflow;
2016;Bin Lin 0008,Alexander Serebrenik;Recognizing gender of stack overflow users.;425-429;5;This session's gonna overflow;
2016;Stefanie Beyer,Martin Pinzger;Grouping android tag synonyms on stack overflow.;430-440;11;This session's gonna overflow;
2016;Alexey Zagalsky,Carlos Gómez Teshima,Daniel M. Germán,Margaret-Anne D. Storey,Germán Poo-Caamaño;How the R community creates and curates knowledge: a comparative study of stack overflow and mailing lists.;441-451;11;This session's gonna overflow;
2016;Megan Squire;Data sets: the circle of life in ruby hosting, 2003-2015.;452-459;8;Data showcase;
2016;Xin Yang,Raula Gaikovina Kula,Norihiro Yoshida,Hajimu Iida;Mining the modern code review repositories: a dataset of people, process and product.;460-463;4;Data showcase;
2016;Sven Amann,Sarah Nadi,Hoan A. Nguyen,Tien N. Nguyen,Mira Mezini;MUBench: a benchmark for API-misuse detectors.;464-467;4;Data showcase;
2016;Kevin Allix,Tegawendé F. Bissyandé,Jacques Klein,Yves Le Traon;AndroZoo: collecting millions of Android apps for the research community.;468-471;4;Data showcase;
2016;Jiaxin Zhu,Minghui Zhou,Hong Mei;Multi-extract and multi-level dataset of mozilla issue tracking history.;472-475;4;Data showcase;
2016;Sebastian Proksch,Sven Amann,Sarah Nadi,Mira Mezini;A dataset of simplified syntax trees for C#.;476-479;4;Data showcase;
2016;Marco Ortu,Alessandro Murgia,Giuseppe Destefanis,Parastou Tourani,Roberto Tonelli,Michele Marchesi,Bram Adams;The emotional side of software developers in JIRA.;480-483;4;Data showcase;
2016;Mary Beth Kery,Claire Le Goues,Brad A. Myers;Examining programmer practices for locally handling exceptions.;484-487;4;Challenge;
2016;Themistoklis G. Diamantopoulos,Klearchos Thomopoulos,Andreas L. Symeonidis;QualBoa: reusability-aware recommendations of source code components.;488-491;4;Challenge;
2016;Casimir Désarmeaux,Andrea Pecatikov,Shane McIntosh;The dispersion of build maintenance activity across maven lifecycle phases.;492-495;4;Challenge;
2016;Jacob G. Barnett,Charles K. Gathuru,Luke S. Soldano,Shane McIntosh;The relationship between commit message detail and defect proneness in Java projects on GitHub.;496-499;4;Challenge;
2016;Suman Nakshatri,Maithri Hegde,Sahithi Thandra;Analysis of exception handling patterns in Java projects: an empirical study.;500-503;4;Challenge;
2016;Eddie Antonio Santos,Abram Hindle;Judging a commit by its cover: correlating commit message entropy with build status on travis-CI.;504-507;4;Challenge;
2016;Shaiful Alam Chowdhury,Abram Hindle;Characterizing energy-aware software projects: are they different?;508-511;4;Challenge;
2016;Mauricio Soto,Ferdian Thung,Chu-Pan Wong,Claire Le Goues,David Lo;A deeper look into bug fixes: patterns, replacements, deletions, and additions.;512-515;4;Challenge;
2016;Muhammad Asaduzzaman,Muhammad Ahasanuzzaman,Chanchal K. Roy,Kevin A. Schneider;How developers use exception handling in Java?;516-519;4;Challenge;
2016;Vinayak Sinha,Alina Lazar,Bonita Sharif;Analyzing developer sentiment in commit logs.;520-523;4;Challenge;
2015;Radu Marinescu;Confessions of a Worldly Software Miner.;1;1;Keynote;
2015;Michaela Greiler,Kim Herzig,Jacek Czerwonka;Code Ownership and Software Quality: A Replication Study.;2-12;11;Practice Papers (Reports from the Trenches);
2015;Masatomo Hashimoto,Masaaki Terai,Toshiyuki Maeda,Kazuo Minami;Extracting Facts from Performance Tuning History of Scientific Applications for Predicting Effective Optimization Patterns.;13-23;11;Practice Papers (Reports from the Trenches);
2015;Pietro Abate,Roberto Di Cosmo,Louis Gesbert,Fabrice Le Fessant,Ralf Treinen,Stefano Zacchiroli;Mining Component Repositories for Installability Issues.;24-33;10;Practice Papers (Reports from the Trenches);
2015;Baishakhi Ray,Meiyappan Nagappan,Christian Bird,Nachiappan Nagappan,Thomas Zimmermann 0001;The Uniqueness of Changes: Characteristics and Applications.;34-44;11;Everything Changes (Or Stays the Same);
2015;Yujuan Jiang,Bram Adams;Co-evolution of Infrastructure and Source Code - An Empirical Study.;45-55;11;Everything Changes (Or Stays the Same);
2015;Irineu Moura,Gustavo Pinto,Felipe Ebert,Fernando Castor;Mining Energy-Aware Commits.;56-67;12;Everything Changes (Or Stays the Same);
2015;Zhongpeng Lin,Jim Whitehead;Why Power Laws? An Explanation from Fine-Grained Code Changes.;68-75;8;Everything Changes (Or Stays the Same);
2015;Lee Martie,André van der Hoek;Sameness: An Experiment in Code Search.;76-87;12;Everything Changes (Or Stays the Same);
2015;Motahareh Bahrami Zanjani,Huzefa H. Kagdi,Christian Bird;Using Developer-Interaction Trails to Triage Change Requests.;88-98;11;Interaction Data and App Mining;
2015;Tarek M. Ahmed,Weiyi Shang,Ahmed E. Hassan;An Empirical Study of the Copy and Paste Behavior during Development.;99-110;12;Interaction Data and App Mining;
2015;Mario Linares Vásquez,Martin White,Carlos Bernal-Cárdenas,Kevin Moran,Denys Poshyvanyk;Mining Android App Usages for Generating Actionable GUI-Based Execution Scenarios.;111-122;12;Interaction Data and App Mining;
2015;William Martin,Mark Harman,Yue Jia,Federica Sarro,Yuanyuan Zhang;The App Sampling Problem for App Store Mining.;123-133;11;Interaction Data and App Mining;
2015;Roberta Coelho,Lucas Almeida,Georgios Gousios,Arie van Deursen;Unveiling Exception Handling Bug Hazards in Android Based on GitHub and Google Code Issues.;134-145;12;Interaction Data and App Mining;
2015;Amiangshu Bosu,Michaela Greiler,Christian Bird;Characteristics of Useful Code Reviews: An Empirical Study at Microsoft.;146-156;11;Code Review (That Passed Peer Review);
2015;Vincent Hellendoorn,Premkumar T. Devanbu,Alberto Bacchelli;Will They Like This? Evaluating Code Contributions with Language Models.;157-167;11;Code Review (That Passed Peer Review);
2015;Patanamon Thongtanunam,Shane McIntosh,Ahmed E. Hassan,Hajimu Iida;Investigating Code Review Practices in Defective Files: An Empirical Study of the Qt System.;168-179;12;Code Review (That Passed Peer Review);
2015;Yida Tao,Sunghun Kim;Partitioning Composite Code Changes to Facilitate Code Review.;180-190;11;Code Review (That Passed Peer Review);
2015;Christian Bird,Trevor Carnahan,Michaela Greiler;Lessons Learned from Building and Deploying a Code Review Analytics Platform.;191-201;11;Code Review (That Passed Peer Review);
2015;Kelly Blincoe,Francis Harrison,Daniela Damian;Ecosystems in GitHub and a Method for Ecosystem Identification Using Reference Coupling.;202-211;10;Ecosystems, APIs, and Architecture;
2015;Maëlick Claes,Tom Mens,Roberto Di Cosmo,Jérôme Vouillon;A Historical Analysis of Debian Package Incompatibilities.;212-223;12;Ecosystems, APIs, and Architecture;
2015;Wei Wang 0001,Haroon Malik,Michael W. Godfrey;Recommending Posts concerning API Issues in Developer Q&A Sites.;224-234;11;Ecosystems, APIs, and Architecture;
2015;Duc Minh Le,Pooyan Behnamghader,Joshua Garcia,Daniel Link,Arman Shahbazian,Nenad Medvidovic;An Empirical Study of Architectural Change in Open-Source Software Systems.;235-245;11;Ecosystems, APIs, and Architecture;
2015;Ehsan Kouroshfar,Mehdi Mirakhorli,Hamid Bagheri,Lu Xiao,Sam Malek,Yuanfang Cai;A Study on the Role of Software Architecture in the Evolution and Quality of Software.;246-257;12;Ecosystems, APIs, and Architecture;
2015;Ripon K. Saha,Julia Lawall,Sarfraz Khurshid,Dewayne E. Perry;"Are These Bugs Really ""Normal""?";258-268;11;Scary Stuff:Bugs, Risks, and Vulnerabilities;
2015;Felivel Camilo,Andrew Meneely,Meiyappan Nagappan;Do Bugs Foreshadow Vulnerabilities? A Study of the Chromium Project.;269-279;11;Scary Stuff:Bugs, Risks, and Vulnerabilities;
2015;Morakot Choetkiertikul,Hoa Khanh Dam,Truyen Tran,Aditya Ghose;Characterization and Prediction of Issue-Related Risks in Software Projects.;280-291;12;Scary Stuff:Bugs, Risks, and Vulnerabilities;
2015;Gregory Burlet,Abram Hindle;An Empirical Study of End-User Programmers in the Computer Music Community.;292-302;11;Computer Musicians Bullied for Using Gists;
2015;Marco Ortu,Bram Adams,Giuseppe Destefanis,Parastou Tourani,Michele Marchesi,Roberto Tonelli;Are Bullies More Productive? Empirical Study of Affectiveness vs. Issue Fixing Time.;303-313;11;Computer Musicians Bullied for Using Gists;
2015;Weiliang Wang,Germán Poo-Caamaño,Evan Wilde,Daniel M. Germán;What Is the Gist? Understanding the Use of Public Gists on GitHub.;314-323;10;Computer Musicians Bullied for Using Gists;
2015;Yuhao Wu,Yuki Manabe,Tetsuya Kanda,Daniel M. Germán,Katsuro Inoue;A Method to Detect License Inconsistencies in Large-Scale Open Source Projects.;324-333;10;Licenses, Deep Learning, and Process Mining;
2015;Martin White,Christopher Vendome,Mario Linares Vásquez,Denys Poshyvanyk;Toward Deep Learning Software Repositories.;334-345;12;Licenses, Deep Learning, and Process Mining;
2015;Monika Gupta 0003,Ashish Sureka,Srinivas Padmanabhuni,Allahbaksh M. Asadullah;Identifying Software Process Management Challenges: Survey of Practitioners in a Large Global IT Company.;346-356;11;Licenses, Deep Learning, and Process Mining;
2015;Erik van der Veen,Georgios Gousios,Andy Zaidman;Automatically Prioritizing Pull Requests.;357-361;5;Short Papers;
2015;Claudia Hauff,Georgios Gousios;Matching GitHub Developer Profiles to Job Advertisements.;362-366;5;Short Papers;
2015;Yue Yu,Huaimin Wang,Vladimir Filkov,Premkumar T. Devanbu,Bogdan Vasilescu;Wait for It: Determinants of Pull Request Evaluation Latency on GitHub.;367-371;5;Short Papers;
2015;Yoshiki Higo,Akio Ohtani,Shinpei Hayashi,Hideaki Hata,Shinji Kusumoto;Toward Reusing Code Changes.;372-376;5;Short Papers;
2015;Mehdi Mirakhorli,Jane Cleland-Huang;Modifications, Tweaks, and Bug Fixes in Architectural Tactics.;377-380;4;Short Papers;
2015;Adriaan Labuschagne,Reid Holmes;Do Onboarding Programs Work?;381-385;5;Short Papers;
2015;Marcus Schumacher,Colin Atkinson;An Enhanced Graph-Based Infrastructure for Software Search Engines.;386-390;5;Short Papers;
2015;Samuel M. Donadelli,Yue Cai Zhu,Peter C. Rigby;Organizational Volatility and Post-release Defects: A Replication Case Study Using Data from Google Chrome.;391-395;5;Short Papers;
2015;Vibha Singhal Sinha,Diptikalyan Saha,Pankaj Dhoolia,Rohan Padhye,Senthil Mani;Detecting and Mitigating Secret-Key Leaks in Source Code Repositories.;396-400;5;Short Papers;
2015;Luca Ponzanelli,Andrea Mocci,Michele Lanza;Summarizing Complex Development Artifacts by Mining Heterogeneous Data.;401-405;5;Short Papers;
2015;Neelamadhav Gantayat,Pankaj Dhoolia,Rohan Padhye,Senthil Mani,Vibha Singhal Sinha;The Synergy between Voting and Acceptance of Answers on StackOverflow - Or the Lack Thereof.;406-409;4;Mining Challenge;
2015;Maarten Duijn,Adam Kucera,Alberto Bacchelli;Quality Questions Need Quality Code: Classifying Code Fragments on Stack Overflow.;410-413;4;Mining Challenge;
2015;Jeffrey Goderie,Brynjolfur Mar Georgsson,Bastiaan van Graafeiland,Alberto Bacchelli;ETA: Estimated Time of Answer Predicting Response Time in Stack Overflow.;414-417;4;Mining Challenge;
2015;Haroon Malik,Peng Zhao,Michael W. Godfrey;Going Green: An Exploratory Analysis of Energy-Related Questions.;418-421;4;Mining Challenge;
2015;Shaiful Alam Chowdhury,Abram Hindle;Mining StackOverflow to Filter Out Off-Topic IRC Discussion.;422-425;4;Mining Challenge;
2015;Mohammad Masudur Rahman,Chanchal K. Roy;An Insight into the Unresolved Questions at Stack Overflow.;426-429;4;Mining Challenge;
2015;Fabio Calefato,Filippo Lanubile,Maria Concetta Marasciulo,Nicole Novielli;Mining Successful Answers in Stack Overflow.;430-433;4;Mining Challenge;
2015;Yong Jin,Xin Yang,Raula Gaikovina Kula,Eunjong Choi,Katsuro Inoue,Hajimu Iida;Quick Trigger on Stack Overflow: A Study of Gamification-Influenced Member Tendencies.;434-437;4;Mining Challenge;
2015;Verena Honsel,Steffen Herbold,Jens Grabowski;Intuition vs. Truth: Evaluation of Common Myths about StackOverflow Posts.;438-441;4;Mining Challenge;
2015;Selman Ercan,Quinten Stokkink,Alberto Bacchelli;Automatic Assessments of Code Explanations: Predicting Answering Times on Stack Overflow.;442-445;4;Mining Challenge;
2015;Jie Zou,Ling Xu,Weikang Guo,Meng Yan,Dan Yang,Xiaohong Zhang;Which Non-functional Requirements Do Developers Focus On? An Empirical Study on Stack Overflow Using Topic Analysis.;446-449;4;Mining Challenge;
2015;Andrew Marder;Stack Overflow Badges and User Behavior: An Econometric Approach.;450-453;4;Mining Challenge;
2015;Themistoklis G. Diamantopoulos,Andreas L. Symeonidis;Employing Source Code Information to Improve Question-Answering in Stack Overflow.;454-457;4;Mining Challenge;
2015;Rogier Slag,Mike de Waard,Alberto Bacchelli;One-Day Flies on StackOverflow - Why the Vast Majority of StackOverflow Users Only Posts Once.;458-461;4;Mining Challenge;
2015;Diomidis Spinellis;A Repository with 44 Years of Unix Evolution.;462-465;4;Data Showcase;
2015;Stefano Zacchiroli;The Debsources Dataset: Two Decades of Debian Source Code Metadata.;466-469;4;Data Showcase;
2015;Daniel M. Germán,Bram Adams,Ahmed E. Hassan;A Dataset of the Activity of the Git Super-repository of Linux in 2012.;470-473;4;Data Showcase;
2015;Luca Ponzanelli,Andrea Mocci,Michele Lanza;StORMeD: Stack Overflow Ready Made Data.;474-477;4;Data Showcase;
2015;Jesús M. González-Barahona,Gregorio Robles,Daniel Izquierdo-Cortazar;The MetricsGrimoire Database Collection.;478-481;4;Data Showcase;
2015;Fabio Palomba,Dario Di Nucci,Michele Tufano,Gabriele Bavota,Rocco Oliveto,Denys Poshyvanyk,Andrea De Lucia;Landfill: An Open Dataset of Code Smells with Public Evaluation.;482-485;4;Data Showcase;
2015;Titus Barik,Kevin Lubick,Justin Smith,John Slankas,Emerson R. Murphy-Hill;Fuse: A Reproducible, Extendable, Internet-Scale Corpus of Spreadsheets.;486-489;4;Data Showcase;
2015;Andreas Mauczka,Florian Brosch,Christian Schanes,Thomas Grechenig;Dataset of Developer-Labeled Commit Messages.;490-493;4;Data Showcase;
2015;Harald Altinger,Sebastian Siegl,Yanja Dajsuren,Franz Wotawa;A Novel Industry Grade Dataset for Fault Prediction Based on Model-Driven Developed Automotive Embedded Software.;494-497;4;Data Showcase;
2015;Mayy Habayeb,Andriy V. Miranskyy,Syed Shariyar Murtaza,Leotis Buchanan,Ayse Bener;The Firefox Temporal Defect Dataset.;498-501;4;Data Showcase;
2015;Michel Wermelinger,Yijun Yu;An Architectural Evolution Dataset.;502-505;4;Data Showcase;
2015;Anand Ashok Sawant,Alberto Bacchelli;A Dataset for API Usage.;506-509;4;Data Showcase;
2015;Vassilios Karakoidas,Dimitrios Mitropoulos,Panos Louridas,Georgios Gousios,Diomidis Spinellis;Generating the Blueprints of the Java Ecosystem.;510-513;4;Data Showcase;
2015;Bogdan Vasilescu,Alexander Serebrenik,Vladimir Filkov;A Data Set for Social Diversity Studies of GitHub Teams.;514-517;4;Data Showcase;
2015;Masao Ohira,Yutaro Kashiwa,Yosuke Yamatani,Hayato Yoshiyuki,Yoshiya Maeda,Nachai Limsettho,Keisuke Fujino,Hideaki Hata,Akinori Ihara,Ken-ichi Matsumoto;A Dataset of High Impact Bugs: Manually-Classified Issue Reports.;518-521;4;Data Showcase;
2015;Daniel E. Krutz,Mehdi Mirakhorli,Samuel A. Malachowsky,Andres Ruiz,Jacob Peterson,Andrew Filipski,Jared Smith;A Dataset of Open-Source Android Applications.;522-525;4;Data Showcase;
2014;Audris Mockus;Is mining software repositories data science? (keynote).;1;1;Keynote;
2014;Mario Linares Vásquez,Gabriele Bavota,Carlos Bernal-Cárdenas,Rocco Oliveto,Massimiliano Di Penta,Denys Poshyvanyk;Mining energy-greedy API usage patterns in Android apps: an empirical study.;2-11;10;Green Mining;
2014;Abram Hindle,Alex Wilson,Kent Rasmussen,E. Jed Barlow,Joshua Charles Campbell,Stephen Romansky;GreenMiner: a hardware based mining software repositories software energy consumption framework.;12-21;10;Green Mining;
2014;Gustavo Pinto,Fernando Castor,Yu David Liu;Mining questions about software energy consumption.;22-31;10;Green Mining;
2014;Manishankar Mondal,Chanchal K. Roy,Kevin A. Schneider;Prediction and ranking of co-change candidates for clones.;32-41;10;Code Clones and Origin Analysis;
2014;Daniela Steidl,Benjamin Hummel,Elmar Jürgens;Incremental origin analysis of source code files.;42-51;10;Code Clones and Origin Analysis;
2014;Lisong Guo,Julia L. Lawall,Gilles Muller;Oops! where did that code snippet come from?;52-61;10;Code Clones and Origin Analysis;
2014;Mona Erfani Joorabchi,Mehdi MirzaAghaei,Ali Mesbah 0001;Works for me! characterizing non-reproducible bug reports.;62-71;10;Bug Characterizing;
2014;Harold Valdivia Garcia,Emad Shihab;Characterizing and predicting blocking bugs in open source projects.;72-81;10;Bug Characterizing;
2014;Tse-Hsun Chen,Meiyappan Nagappan,Emad Shihab,Ahmed E. Hassan;An empirical study of dormant bugs.;82-91;10;Bug Characterizing;
2014;Eirini Kalliamvakou,Georgios Gousios,Kelly Blincoe,Leif Singer,Daniel M. Germán,Daniela Damian;The promises and perils of mining GitHub.;92-101;10;Mining Repos and QA Sites;
2014;Luca Ponzanelli,Gabriele Bavota,Massimiliano Di Penta,Rocco Oliveto,Michele Lanza;Mining StackOverflow to turn the IDE into a self-confident programming prompter.;102-111;10;Mining Repos and QA Sites;
2014;Kartik Bajaj,Karthik Pattabiraman,Ali Mesbah 0001;Mining questions asked by web developers.;112-121;10;Mining Repos and QA Sites;
2014;Monika Gupta 0003,Ashish Sureka,Srinivas Padmanabhuni;Process mining multiple repositories for software defect resolution from control and organizational perspective.;122-131;10;Mining Repos and QA Sites;
2014;Varun Tulsian,Aditya Kanade,Rahul Kumar,Akash Lal,Aditya V. Nori;MUX: algorithm selection for software model checkers.;132-141;10;Mining Applications;
2014;Jeff Anderson,Saeed Salem,Hyunsook Do;Improving the effectiveness of test suite through mining historical data.;142-151;10;Mining Applications;
2014;Quinn Hanam,Lin Tan,Reid Holmes,Patrick Lam;Finding patterns in static analysis alerts: improving actionable alert ranking.;152-161;10;Mining Applications;
2014;Motahareh Bahrami Zanjani,George Swartzendruber,Huzefa H. Kagdi;Impact analysis of change requests on source code based on interaction and commit histories.;162-171;10;Mining Applications;
2014;Takafumi Fukushima,Yasutaka Kamei,Shane McIntosh,Kazuhiro Yamashita,Naoyasu Ubayashi;An empirical study of just-in-time defect prediction using cross-project models.;172-181;10;Defect Prediction;
2014;Feng Zhang 0001,Audris Mockus,Iman Keivanloo,Ying Zou;Towards building a universal defect prediction model.;182-191;10;Defect Prediction;
2014;Shane McIntosh,Yasutaka Kamei,Bram Adams,Ahmed E. Hassan;The impact of code review coverage and code review participation on software quality: a case study of the qt, VTK, and ITK projects.;192-201;10;Code Review and Code Search;
2014;Moritz Beller,Alberto Bacchelli,Andy Zaidman,Elmar Jürgens;Modern code reviews in open-source projects: which problems do they fix?;202-211;10;Code Review and Code Search;
2014;Otávio Augusto Lazzarini Lemos,Adriano Carvalho de Paula,Felipe Capodifoglio Zanichelli,Cristina Videira Lopes;Thesaurus-based automatic query expansion for interface-driven code search.;212-221;10;Code Review and Code Search;
2014;Gregorio Robles,Jesús M. González-Barahona,Carlos Cervigón,Andrea Capiluppi,Daniel Izquierdo-Cortazar;Estimating development effort in Free/Open source software projects by mining software repositories: a case study of OpenStack.;222-231;10;Effort Estimation and Reuse;
2014;Thanh H. D. Nguyen,Meiyappan Nagappan,Ahmed E. Hassan,Mohamed N. Nasser,Parminder Flora;An industrial case study of automatically identifying performance regression-causes.;232-241;10;Effort Estimation and Reuse;
2014;Mario Linares Vásquez,Andrew Holtzhauer,Carlos Bernal-Cárdenas,Denys Poshyvanyk;Revisiting Android reuse studies in the context of code obfuscation and library usages.;242-251;10;Effort Estimation and Reuse;
2014;Joshua Charles Campbell,Abram Hindle,José Nelson Amaral;Syntax errors just aren't natural: improving error reporting with language models.;252-261;10;Mining Mix;
2014;Alessandro Murgia,Parastou Tourani,Bram Adams,Marco Ortu;Do developers feel emotions? an exploratory analysis of emotions in software artifacts.;262-271;10;Mining Mix;
2014;Rebecca Tiarks,Walid Maalej;How does a typical tutorial for mobile development look like?;272-281;10;Mining Mix;
2014;Ghazaleh Khodabandelou,Charlotte Hug,Rébecca Deneckère,Camille Salinesi;Unsupervised discovery of intentional process models from event logs.;282-291;10;Mining Mix;
2014;Beatrice Åkerblom,Jonathan Stendahl,Mattias Tumlin,Tobias Wrigstad;Tracing dynamic features in python programs.;292-295;4;Short Research/Practice Papers;
2014;Pavneet Singh Kochhar,Tien-Duy B. Le,David Lo;It's not a bug, it's a feature: does misclassification affect bug localization?;296-299;4;Short Research/Practice Papers;
2014;Thorsten Merten,Bastian Mager,Simone Bürsner,Barbara Paech;Classifying unstructured data into natural language text and technical information.;300-303;4;Short Research/Practice Papers;
2014;Yuriy Tymchuk,Andrea Mocci,Michele Lanza;Collaboration in open-source projects: myth or reality?;304-307;4;Short Research/Practice Papers;
2014;Alina Lazar,Sarah Ritchey,Bonita Sharif;Improving the accuracy of duplicate bug report detection using textual similarity measures.;308-311;4;Short Research/Practice Papers;
2014;Maria Kechagia,Diomidis Spinellis;Undocumented and unchecked: exceptions that spell trouble.;312-315;4;Short Research/Practice Papers;
2014;Remco Bloemen,Chintan Amrit,Stefan Kuhlmann,Gonzalo Ordóñez-Matamoros;Innovation diffusion in open source software: preliminary analysis of dependency changes in the gentoo portage package database.;316-319;4;Short Research/Practice Papers;
2014;Katja Kevic,Thomas Fritz;A dictionary to translate change tasks to source code.;320-323;4;Short Research/Practice Papers;
2014;Nathan Klein,Christopher S. Corley,Nicholas A. Kraft;New features for duplicate bug detection.;324-327;4;Short Research/Practice Papers;
2014;Oleksii Kononenko,Olga Baysal,Reid Holmes,Michael W. Godfrey;Mining modern repositories with elasticsearch.;328-331;4;Short Research/Practice Papers;
2014;Rohan Padhye,Senthil Mani,Vibha Singhal Sinha;A study of external community contribution to open-source projects on GitHub.;332-335;4;Mining Challenge;
2014;Jyoti Sheoran,Kelly Blincoe,Eirini Kalliamvakou,Daniela Damian,Jordan Ell;"Understanding ""watchers"" on GitHub.";336-339;4;Mining Challenge;
2014;João Brunet,Gail C. Murphy,Ricardo Terra,Jorge C. A. de Figueiredo,Dalton Serey Guerrero;Do developers discuss design?;340-343;4;Mining Challenge;
2014;Kazuhiro Yamashita,Shane McIntosh,Yasutaka Kamei,Naoyasu Ubayashi;Magnet or sticky? an OSS project-by-project typology.;344-347;4;Mining Challenge;
2014;Daniel Pletea,Bogdan Vasilescu,Alexander Serebrenik;Security and emotion: sentiment analysis of security discussions on GitHub.;348-351;4;Mining Challenge;
2014;Emitza Guzman,David Azócar,Yang Li;Sentiment analysis of commit comments in GitHub: an empirical study.;352-355;4;Mining Challenge;
2014;Nicholas Drivalos Matragkas,James R. Williams,Dimitris S. Kolovos,Richard F. Paige;Analysing the 'biodiversity' of open source ecosystems: the GitHub case.;356-359;4;Mining Challenge;
2014;Karan Aggarwal,Abram Hindle,Eleni Stroulia;Co-evolution of project documentation and popularity within github.;360-363;4;Mining Challenge;
2014;Mohammad Masudur Rahman,Chanchal K. Roy;An insight into the pull requests of GitHub.;364-367;4;Mining Challenge;
2014;Georgios Gousios,Andy Zaidman;A dataset for pull-based development research.;368-371;4;Data Showcase;
2014;Dimitris Mitropoulos,Vassilios Karakoidas,Panos Louridas,Georgios Gousios,Diomidis Spinellis;The bug catalog of the maven ecosystem.;372-375;4;Data Showcase;
2014;Leonardo Teixeira Passos,Krzysztof Czarnecki;A dataset of feature additions and feature removals from the Linux kernel.;376-379;4;Data Showcase;
2014;Kenji Fujiwara,Hideaki Hata,Erina Makihara,Yusuke Fujihara,Naoki Nakayama,Hajimu Iida,Ken-ichi Matsumoto;Kataribe: a hosting service of historage repositories.;380-383;4;Data Showcase;
2014;Georgios Gousios,Bogdan Vasilescu,Alexander Serebrenik,Andy Zaidman;Lean GHTorrent: GitHub data on demand.;384-387;4;Data Showcase;
2014;Daniel E. Krutz,Wei Le;A code clone oracle.;388-391;4;Data Showcase;
2014;Alina Lazar,Sarah Ritchey,Bonita Sharif;Generating duplicate bug datasets.;392-395;4;Data Showcase;
2014;Gregorio Robles,Laura Arjona Reina,Alexander Serebrenik,Bogdan Vasilescu,Jesús M. González-Barahona;FLOSS 2013: a survey dataset about free software contributors: challenges for curating, sharing, and combining.;396-399;4;Data Showcase;
2014;Chenlei Zhang,Abram Hindle;A green miner's dataset: mining the impact of software change on energy consumption.;400-403;4;Data Showcase;
2014;Remco Bloemen,Chintan Amrit,Stefan Kuhlmann,Gonzalo Ordóñez-Matamoros;Gentoo package dependencies over time.;404-407;4;Data Showcase;
2014;James R. Williams,Davide Di Ruscio,Nicholas Drivalos Matragkas,Juri Di Rocco,Dimitris S. Kolovos;Models of OSS project meta-information: a dataset of three forges.;408-411;4;Data Showcase;
2014;Hiroaki Murakami,Yoshiki Higo,Shinji Kusumoto;A dataset of clone references with gaps.;412-415;4;Data Showcase;
2014;Vaibhav Saini,Hitesh Sajnani,Joel Ossher,Cristina Videira Lopes;A dataset for maven artifacts and bug patterns found in them.;416-419;4;Data Showcase;
2014;Gabriel Farah,Juan Sebastian Tejada,Darío Correal;OpenHub: a scalable architecture for the analysis of software quality attributes.;420-423;4;Data Showcase;
2014;Boris Baldassari,Philippe Preux;Understanding software evolution: the maisqual ant data set.;424-427;4;Data Showcase;
2013;Gail C. Murphy;What is software development productivity, anyway? (keynote).;1;1;Keynote;
2013;Ramin Shokripour,John Anvik,Zarinah Mohd Kasirun,Sima Zamani;Why so complicated? simple term filtering and weighting for location-based bug report assignment recommendation.;2-11;10;Bug Triaging;
2013;Debdoot Mukherjee,Malika Garg;Which work-item updates need your response?;12-21;10;Bug Triaging;
2013;Hoda Naguib,Nitesh Narayan,Bernd Brügge,Dina Helal;Bug report assignee recommendation using activity profiles.;22-30;9;Bug Triaging;
2013;Ryan Stevens,Jonathan Ganz,Vladimir Filkov,Premkumar T. Devanbu,Hao Chen 0003;Asking for (and about) permissions used by Android apps.;31-40;10;MSR Goes Mobile;
2013;Claudia Iacob,Rachel Harrison;Retrieving and analyzing mobile apps feature requests from online reviews.;41-44;4;MSR Goes Mobile;
2013;Murtuza Mukadam,Christian Bird,Peter C. Rigby;Gerrit software code review data from Android.;45-48;4;MSR Goes Mobile;
2013;Kazuki Hamasaki,Raula Gaikovina Kula,Norihiro Yoshida,Ana Erika Camargo Cruz,Kenji Fujiwara,Hajimu Iida;Who does what during a code review? datasets of OSS peer review repositories.;49-52;4;MSR Goes Mobile;
2013;Miltiadis Allamanis,Charles A. Sutton;Why, when, and what: analyzing stack overflow questions by topic, type, and code.;53-56;4;MSR Challenge;
2013;Joshua Charles Campbell,Chenlei Zhang,Zhen Xu,Abram Hindle,James Miller;Deficient documentation detection: a methodology to locate deficient project documentation using topic analysis.;57-60;4;MSR Challenge;
2013;Wei Wang 0001,Michael W. Godfrey;Detecting API usage obstacles: a study of iOS and Android developer questions.;61-64;4;MSR Challenge;
2013;Scott Grant,Buddy Betts;Encouraging user behaviour with achievements: an empirical study.;65-68;4;MSR Challenge;
2013;Patrick Morrison,Emerson R. Murphy-Hill;Is programming knowledge related to age? an exploration of stack overflow.;69-72;4;MSR Challenge;
2013;Avigit K. Saha,Ripon K. Saha,Kevin A. Schneider;A discriminative model approach for suggesting tags automatically for stack overflow questions.;73-76;4;MSR Challenge;
2013;Vibha Singhal Sinha,Senthil Mani,Monika Gupta 0002;Exploring activeness of users in QA forums.;77-80;4;MSR Challenge;
2013;Carlos Gómez Teshima,Brendan Cleary,Leif Singer;A study of innovation diffusion through link sharing on stack overflow.;81-84;4;MSR Challenge;
2013;Siddharth Subramanian,Reid Holmes;Making sense of online code snippets.;85-88;4;MSR Challenge;
2013;Amiangshu Bosu,Christopher S. Corley,Dustin Heaton,Debarshi Chatterji,Jeffrey C. Carver,Nicholas A. Kraft;Building reputation in StackOverflow: an empirical investigation.;89-92;4;MSR Challenge;
2013;Mario Linares Vásquez,Bogdan Dit,Denys Poshyvanyk;An exploratory analysis of mobile development issues using stack overflow.;93-96;4;MSR Challenge;
2013;Muhammad Asaduzzaman,Ahmed Shah Mashiyat,Chanchal K. Roy,Kevin A. Schneider;Answering questions about unanswered questions of stack overflow.;97-100;4;MSR Challenge;
2013;Yujuan Jiang,Bram Adams,Daniel M. Germán;Will my patch make it? and how fast?: case study on the Linux kernel.;101-110;10;Changes and Fixes;
2013;Sarah Nadi,Christian Dietrich 0001,Reinhard Tartler,Richard C. Holt,Daniel Lohmann;Linux variability anomalies: what causes them and how do they get fixed?;111-120;10;Changes and Fixes;
2013;Kim Herzig,Andreas Zeller;The impact of tangled code changes.;121-130;10;Changes and Fixes;
2013;Bogdan Dit,Andrew Holtzhauer,Denys Poshyvanyk,Huzefa H. Kagdi;A dataset from change history to support evaluation of software maintenance tasks.;131-134;4;Changes and Fixes;
2013;Alexander C. MacLean,Charles D. Knutson;Apache commits: social network dataset.;135-138;4;Changes and Fixes;
2013;Ripon K. Saha,Chanchal K. Roy,Kevin A. Schneider,Dewayne E. Perry;Understanding the evolution of type-3 clones: an exploratory study.;139-148;10;Software Evolution;
2013;Shuai Xie,Foutse Khomh,Ying Zou;An empirical study of the fault-proneness of clone mutation and clone migration.;149-158;10;Software Evolution;
2013;Santiago Gala-Pérez,Gregorio Robles,Jesús M. González-Barahona,Israel Herraiz;Intensive metrics for the study of the evolution of open source projects: case studies from apache software foundation projects.;159-168;10;Software Evolution;
2013;Abdulkareem Alali,Brian Bartman,Christian D. Newman,Jonathan I. Maletic;A preliminary investigation of using age and distance measures in the detection of evolutionary couplings.;169-172;4;Software Evolution;
2013;Mehdi Amoui,Nilam Kaushik,Abraham Al-Dabbagh,Ladan Tahvildari,Shimin Li,Weining Liu;Search-based duplicate defect detection: an industrial experience.;173-182;10;Analysis of Bug Reports;
2013;Anahita Alipour,Abram Hindle,Eleni Stroulia;A contextual approach towards more accurate duplicate bug report detection.;183-192;10;Analysis of Bug Reports;
2013;Senthil Mani,Seema Nagar,Debdoot Mukherjee,Ramasuri Narayanam,Vibha Singhal Sinha,Amit Anil Nanavati;Bug resolution catalysts: identifying essential non-committers from bug repositories.;193-202;10;Analysis of Bug Reports;
2013;Ahmed Lamkanfi,Javier Pérez,Serge Demeyer;The eclipse and mozilla defect tracking dataset: a genuine dataset for mining bug information.;203-206;4;Analysis of Bug Reports;
2013;Miltiadis Allamanis,Charles A. Sutton;Mining source code repositories at massive scale using language modeling.;207-216;10;Software Ecosystems, Big Data;
2013;Lucas Batista Leite de Souza,Marcelo de Almeida Maia;Do software categories impact coupling metrics?;217-220;4;Software Ecosystems, Big Data;
2013;Steven Raemaekers,Arie van Deursen,Joost Visser;The maven repository dataset of metrics, changes, and dependencies.;221-224;4;Software Ecosystems, Big Data;
2013;Mathieu Goeminne,Maëlick Claes,Tom Mens;A historical dataset for the gnome ecosystem.;225-228;4;Software Ecosystems, Big Data;
2013;Patrick Wagstrom,Corey Jergensen,Anita Sarma;A network of rails: a graph dataset of ruby on rails and associated projects.;229-232;4;Software Ecosystems, Big Data;
2013;Georgios Gousios;The GHTorent dataset and tool suite.;233-236;4;Software Ecosystems, Big Data;
2013;Adrian Nistor,Tian Jiang,Lin Tan;Discovering, reporting, and fixing performance bugs.;237-246;10;Bug/Change Classification and Localization;
2013;Shaohua Wang,Foutse Khomh,Ying Zou;Improving bug localization using correlations in crash reports.;247-256;10;Bug/Change Classification and Localization;
2013;Steven Raemaekers,Gabriela F. Nane,Arie van Deursen,Joost Visser;Testing principles, current practices, and effects of change localization.;257-266;10;Bug/Change Classification and Localization;
2013;Kevin Dullemond,Ben van Gameren,Margaret-Anne D. Storey,Arie van Deursen;Fixing the 'out of sight out of mind' problem: one year of mood-based microblogging in a distributed software team.;267-276;10;Social Mining;
2013;Anja Guzzi,Alberto Bacchelli,Michele Lanza,Martin Pinzger,Arie van Deursen;Communication in open source software development mailing lists.;277-286;10;Social Mining;
2013;Xin Xia,David Lo,Xinyu Wang,Bo Zhou;Tag recommendation in software information sites.;287-296;10;Social Mining;
2013;Romain Robbes,David Röthlisberger;Using developer interaction data to compare expertise metrics.;297-300;4;Social Mining;
2013;Megan Squire;Project roles in the apache software foundation: a dataset.;301-304;4;Social Mining;
2013;Megan Squire;Apache-affiliated twitter screen names: a dataset.;305-308;4;Social Mining;
2013;Bunyamin Sisman,Avinash C. Kak;Assisting code search with automatic query reformulation for bug localization.;309-318;10;Search-Driven Development;
2013;Jue Wang,Yingnong Dang,Hongyu Zhang,Kai Chen,Tao Xie,Dongmei Zhang;Mining succinct and high-coverage API usage patterns from source code.;319-328;10;Search-Driven Development;
2013;Wei Ming Khoo,Alan Mycroft,Ross J. Anderson;Rendezvous: a search engine for binary code.;329-338;10;Search-Driven Development;
2013;Werner Janjic,Oliver Hummel,Marcus Schumacher,Colin Atkinson;An unabridged source code dataset for research in software reuse.;339-342;4;Search-Driven Development;
2013;Hadi Hemmati,Sarah Nadi,Olga Baysal,Oleksii Kononenko,Wei Wang 0001,Reid Holmes,Michael W. Godfrey;The MSR cookbook: mining a decade of research.;343-352;10;10 Years of MSR;
2013;Serge Demeyer,Alessandro Murgia,Kevin Wyckmans,Ahmed Lamkanfi;Happy birthday! a trend analysis on past MSR papers.;353-362;10;10 Years of MSR;
2013;Giacomo Ghezzi,Harald C. Gall;Replicating mining studies with SOFAS.;363-372;10;10 Years of MSR;
2013;Bogdan Vasilescu,Alexander Serebrenik,Tom Mens;A historical dataset of software engineering conferences.;373-376;4;10 Years of MSR;
2013;Matthew J. Howard,Samir Gupta,Lori L. Pollock,K. Vijay-Shanker;Automatically mining software-based, semantically-similar words from comment-code mappings.;377-386;10;Mining Unstructured Data;
2013;Michaela Greiler,Andy Zaidman,Arie van Deursen,Margaret-Anne D. Storey;Strategies for avoiding text fixture smells during software evolution.;387-396;10;Mining Unstructured Data;
2013;Qiang Fu,Jian-Guang Lou,Qingwei Lin,Rui Ding,Dongmei Zhang,Tao Xie;Contextual analysis of program logs for understanding system behaviors.;397-400;4;Mining Unstructured Data;
2013;David Binkley,Dawn Lawrie,Lori L. Pollock,Emily Hill,K. Vijay-Shanker;A dataset for evaluating identifier splitters.;401-404;4;Mining Unstructured Data;
2013;Simon Butler,Michel Wermelinger,Yijun Yu,Helen Sharp;INVocD: identifier name vocabulary dataset.;405-408;4;Mining Unstructured Data;
2013;Fayola Peters,Tim Menzies,Andrian Marcus;Better cross company defect prediction.;409-418;10;Predictor Models;
2013;Wei Hu,Kenny Wong;Using citation influence to predict software defects.;419-428;10;Predictor Models;
2013;Masateru Tsunoda,Koji Toda,Kyohei Fushida,Yasutaka Kamei,Meiyappan Nagappan,Naoyasu Ubayashi;Revisiting software development effort estimation based on early phase development activities.;429-438;10;Predictor Models;
