2015;Manchun Zheng,Michael S. Rogers,Ziqing Luo,Matthew B. Dwyer,Stephen F. Siegel;CIVL: Formal Verification of Parallel Programs.;830-835;6;Session:Tool Demonstration II;
2015;Yu Lin,Danny Dig;Refactorings for Android Asynchronous Programming.;836-841;6;Session:Tool Demonstration II;
2015;Lei Ma,Cyrille Artho,Cheng Zhang,Hiroyuki Sato,Johannes Gmeiner,Rudolf Ramler;GRT: An Automated Test Generator Using Orchestrated Program Analysis.;842-847;6;Session:Tool Demonstration II;
2015;Kartik Bajaj,Karthik Pattabiraman,Ali Mesbah 0001;LED: Tool for Synthesizing Web Element Locators.;848-851;4;Session:Tool Demonstration III;
2015;Christopher Pietsch,Timo Kehrer,Udo Kelter,Dennis Reuling,Manuel Ohrndorf;SiPL - A Delta-Based Modeling Framework for Software Product Line Engineering.;852-857;6;Session:Tool Demonstration III;
2015;Cyrille Artho,Martina Seidl,Quentin Gros,Eun-Hye Choi,Takashi Kitamura,Akira Mori,Rudolf Ramler,Yoriyuki Yamagata;Model-Based Testing of Stateful APIs with Modbat.;858-863;6;Session:Tool Demonstration III;
2015;Lingfeng Bao,Deheng Ye,Zhenchang Xing,Xin Xia,Xinyu Wang;ActivitySpace: A Remembrance Framework to Support Interapplication Information Needs.;864-869;6;Session:Tool Demonstration III;
2015;Caroline Lemieux,Ivan Beschastnikh;Investigating Program Behavior Using the Texada LTL Specifications Miner.;870-875;6;Session:Tool Demonstration III;
2015;Ines Coimbra Morgado,Ana C. R. Paiva;The iMPAcT Tool: Testing UI Patterns on Mobile Applications.;876-881;6;Session:Tool Demonstration III;
2015;Johannes Braeuer;Measuring Object-Oriented Design Principles.;882-885;4;Doctoral Symposium;
2015;Maria Salama;Stability of Self-Adaptive Software Architectures.;886-889;4;Doctoral Symposium;
2015;Ana-Maria Sutii;MetaMod: A Modeling Formalism with Modularity at Its Core.;890-893;4;Doctoral Symposium;
2015;Gillian J. Greene;A Generic Framework for Concept-Based Exploration of Semi-Structured Software Engineering Data.;894-897;4;Doctoral Symposium;
2015;Semih Okur;Understanding, Refactoring, and Fixing Concurrency in C#.;898-901;4;Doctoral Symposium;
2015;Eric Shing-Suan Wang,Zhe Dang;A Message-Passing Architecture without Public Ids Using Send-to-Behavior.;902-905;4;Doctoral Symposium;
2014;Alexander Tarvo,Steven P. Reiss;Automated analysis of multithreaded programs for performance modeling.;7-18;12;Program understanding;
2014;Tony Ohmann,Michael Herzberg,Sebastian Fiss,Armand Halbert,Marc Palyart,Ivan Beschastnikh,Yuriy Brun;Behavioral resource-aware model inference.;19-30;12;Program understanding;
2014;Peter Dinges,Gul A. Agha;Targeted test input generation using symbolic-concrete backward execution.;31-36;6;Program understanding;
2014;Vijay Krishna Palepu,James A. Jones;Discriminating influences among instructions in a dynamic slice.;37-42;6;Program understanding;
2014;Kartik Bajaj,Karthik Pattabiraman,Ali Mesbah 0001;Dompletion: DOM-aware JavaScript code completion.;43-54;12;Program understanding;
2014;José Carlos Medeiros de Campos,Andrea Arcuri,Gordon Fraser,Rui Filipe Lima Maranhão de Abreu;Continuous test generation: enhancing continuous integration with automated test generation.;55-66;12;Testing I;
2014;Amin Milani Fard,Mehdi MirzaAghaei,Ali Mesbah 0001;Leveraging existing tests in automated test generation for web applications.;67-78;12;Testing I;
2014;Andrea Arcuri,Gordon Fraser,Juan Pablo Galeotti;Automated unit test generation for classes with environment dependencies.;79-90;12;Testing I;
2014;Sonal Mahajan,William G. J. Halfond;Finding HTML presentation failures using image comparison techniques.;91-96;6;Testing I;
2014;Ajitha Rajan,Subodh Sharma,Peter Schrammel,Daniel Kroening;Accelerated test execution using GPUs.;97-102;6;Testing I;
2014;Steven P. Reiss;Seeking the user interface.;103-114;12;Data mining I;
2014;Ting Ye,Bing Xie,Yanzhen Zou,Xiuzhao Chen;Interrogative-guided re-ranking for question-oriented software text retrieval.;115-120;6;Data mining I;
2014;Jihun Park,Miryung Kim,Doo-Hwan Bae;An empirical study on reducing omission errors in practice.;121-126;6;Data mining I;
2014;Lucia,David Lo,Xin Xia;Fusion fault localizers.;127-138;12;Data mining I;
2014;Sergio Segura,Ana B. Sánchez,Antonio Ruiz Cortés;Automated variability analysis and testing of an E-commerce site.: an experience report.;139-150;12;Variability and configuration;
2014;Dongpu Jin,Myra B. Cohen,Xiao Qu,Brian Robinson;PrefFinder: getting the right preference in configurable software systems.;151-162;12;Variability and configuration;
2014;Reza Matinnejad,Shiva Nejati,Lionel C. Briand,Thomas Bruckmann;MiL testing of highly configurable continuous controllers: scalable search using surrogate models.;163-174;12;Variability and configuration;
2014;Markus Kusano,Chao Wang;Assertion guided abstraction: a cooperative optimization for dynamic partial order reduction.;175-186;12;Abstraction;
2014;Yueqi Li,Shing-Chi Cheung;Symbolic state validation through runtime data.;187-198;12;Abstraction;
2014;Wenhua Yang,Chang Xu,Yepang Liu,Chun Cao,Xiaoxing Ma,Jian Lu;Verifying self-adaptive applications suffering uncertainty.;199-210;12;Abstraction;
2014;Roberto Di Cosmo,Michael Lienhardt,Ralf Treinen,Stefano Zacchiroli,Jakub Zwolakowski,Antoine Eiche,Alexis Agahi;Automated synthesis and deployment of cloud applications.;211-222;12;Components;
2014;Erik Österlund,Welf Löwe;Concurrent transformation components using contention context sensors.;223-234;12;Components;
2014;Ernest Wozniak,Marco Di Natale,Haibo Zeng,Chokri Mraidha,Sara Tucci Piergiovanni,Sébastien Gérard;Assigning time budgets to component functions in the design of time-critical automotive systems.;235-246;12;Components;
2014;Anthony Romano,Dawson R. Engler;symMMU: symbolically executed runtime libraries for symbolic memory access.;247-258;12;Symbolic execution I;
2014;Scott Kausler,Elena Sherman;Evaluation of string constraint solvers in the context of symbolic execution.;259-270;12;Symbolic execution I;
2014;Sarmad Makhdoom,Muhammad Adeel Khan,Junaid Haroon Siddiqui;Incremental symbolic execution for automated test suite maintenance.;271-276;6;Symbolic execution I;
2014;Julian James Stephen,Savvas Savvides,Russell Seidel,Patrick Th. Eugster;Program analysis for secure big data processing.;277-288;12;Transformations I;
2014;Hani Abdeen,Dániel Varró,Houari A. Sahraoui,András Szabolcs Nagy,Csaba Debreceni,Ábel Hegedüs,Ákos Horváth;Multi-objective optimization in rule-based design space exploration.;289-300;12;Transformations I;
2014;Bryan Marker,Don S. Batory,Robert A. van de Geijn;Understanding performance stairs: elucidating heuristics.;301-312;12;Transformations I;
2014;Jean-Rémy Falleri,Floréal Morandat,Xavier Blanc,Matias Martinez,Martin Monperrus;Fine-grained and accurate source code differencing.;313-324;12;Change management;
2014;Yguaratã Cerqueira Cavalcanti,Ivan do Carmo Machado,Paulo Anselmo da Mota Silveira Neto,Eduardo Santana de Almeida,Silvio Romero de Lemos Meira;Combining rule-based and information retrieval techniques to assign software change requests.;325-330;6;Change management;
2014;Mohamed Wiem Mkaouer,Marouane Kessentini,Slim Bechikh,Kalyanmoy Deb,Mel Ó Cinnéide;Recommendation system for software refactoring using innovization and interactive dynamic optimization.;331-336;6;Change management;
2014;Gabriele Bavota,Sebastiano Panichella,Nikolaos Tsantalis,Massimiliano Di Penta,Rocco Oliveto,Gerardo Canfora;Recommending refactorings based on team co-maintenance patterns.;337-342;6;Change management;
2014;Haipeng Cai,Raúl A. Santelices;Diver: precise dynamic impact analysis using dependence-based trace pruning.;343-348;6;Change management;
2014;Dennis Felsing,Sarah Grebing,Vladimir Klebanov,Philipp Rümmer,Mattias Ulbrich;Automating regression verification.;349-360;12;Change management;
2014;Milos Gligoric,Stas Negara,Owolabi Legunsen,Darko Marinov;An empirical evaluation and comparison of manual and automated test selection.;361-372;12;Testing II;
2014;Dimitra Giannakopoulou,Falk Howar,Malte Isberner,Todd Lauderdale,Zvonimir Rakamaric,Vishwanath Raman;Taming test inputs for separation assurance.;373-384;12;Testing II;
2014;Nikolai Tillmann,Jonathan de Halleux,Tao Xie;Transferring an automated test generation tool to practice: from pex to fakes and code digger.;385-396;12;Testing II;
2014;Mark Harman,Yue Jia,Pedro Reales Mateo,Macario Polo;Angels and monsters: an empirical investigation of potential test effectiveness and efficiency improvement from strongly subsuming higher order mutation.;397-408;12;Testing II;
2014;Jianmei Guo,Edward Zulkoski,Rafael Olaechea,Derek Rayside,Krzysztof Czarnecki,Sven Apel,Joanne M. Atlee;Scaling exact multi-objective combinatorial optimization by parallelization.;409-420;12;Product lines;
2014;Iago Abal,Claus Brabrand,Andrzej Wasowski;42 variability bugs in the linux kernel: a qualitative analysis.;421-432;12;Product lines;
2014;Guillaume Bécan,Nicolas Sannier,Mathieu Acher,Olivier Barais,Arnaud Blouin,Benoit Baudry;Automating the formalization of product comparison matrices.;433-444;12;Product lines;
2014;Max Lillack,Christian Kästner,Eric Bodden;Tracking load-time configuration options.;445-456;12;Product lines;
2014;Anh Tuan Nguyen,Hoan Anh Nguyen,Tung Thanh Nguyen,Tien N. Nguyen;Statistical learning approach for mining API usage mappings for code migration.;457-468;12;Data mining II;
2014;Venkatesh-Prasad Ranganath,Pradip Vallathol,Pankaj Gupta;Compatibility testing using patterns-based trace comparison.;469-478;10;Data mining II;
2014;Mona Rahimi,Jane Cleland-Huang;Personas in the middle: automated support for creating personas as focal points in feature gathering forums.;479-484;6;Data mining II;
2014;Saeideh Hamidi,Periklis Andritsos,Sotirios Liaskos;Constructing adaptive configuration dialogs using crowd data.;485-490;6;Data mining II;
2014;Yuta Maezawa,Kazuki Nishiura,Hironori Washizaki,Shinichi Honiden;Validating ajax applications using a delay-based mutation technique.;491-502;12;Analysis of web applications;
2014;Mark Hills 0001,Paul Klint,Jurgen J. Vinju;Static, lightweight includes resolution for PHP.;503-514;12;Analysis of web applications;
2014;Feng Shen,Namita Vishnubhotla,Chirag Todarka,Mohit Arora,Babu Dhandapani,Eric John Lehner,Steven Y. Ko,Lukasz Ziarek;Information flows as a permission mechanism.;515-526;12;Analysis of web applications;
2014;Gregory Gay,Sanjai Rayadurgam,Mats Per Erik Heimdahl;Improving the accuracy of oracle verdicts through automated model steering.;527-538;12;Model-driven engineering;
2014;Zaur Molotnikov,Markus Völter,Daniel Ratiu;Automated domain-specific C verification with mbeddr.;539-550;12;Model-driven engineering;
2014;Tobias Kuschke,Patrick Mäder;Pattern-based auto-completion of UML modeling activities.;551-556;6;Model-driven engineering;
2014;Naoyasu Ubayashi,Di Ai,Peiyuan Li,Yu Ning Li,Shintaro Hosoai,Yasutaka Kamei;Abstraction-aware verifying compiler for yet another MDD.;557-562;6;Model-driven engineering;
2014;Tomasz Kuchta,Cristian Cadar,Miguel Castro,Manuel Costa;Docovery: toward generic automatic document recovery.;563-574;12;Symbolic execution II;
2014;Kasper Søe Luckow,Corina S. Pasareanu,Matthew B. Dwyer,Antonio Filieri,Willem Visser;Exact and approximate probabilistic symbolic execution for nondeterministic programs.;575-586;12;Symbolic execution II;
2014;Joseph P. Near,Daniel Jackson;Derailer: interactive security analysis for web applications.;587-598;12;Symbolic execution II;
2014;Johanna Schneider;Tracking down root causes of defects in simulink models.;599-604;6;Specification and debugging;
2014;Hila Cohen,Shahar Maoz;The confidence in our k-tails.;605-610;6;Specification and debugging;
2014;Wenwen Wang,Zhenjiang Wang,Chenggang Wu,Pen-Chung Yew,Xipeng Shen,Xiang Yuan,Jianjun Li,Xiaobing Feng,Yong Guan;Localization of concurrency bugs using shared memory access pairs.;611-622;12;Specification and debugging;
2014;Tanzirul Azim,Iulian Neamtiu,Lisa M. Marvel;Towards self-healing smartphone software via automated patching.;623-628;6;Specification and debugging;
2014;Shigeki Hagihara,Naoki Egawa,Masaya Shimakawa,Naoki Yonezaki;Minimal strongly unsatisfiable subsets of reactive system specifications.;629-634;6;Specification and debugging;
2014;Chuangang Ren,Kai Chen 0012,Peng Liu 0005;Droidmarking: resilient software watermarking for impeding android application repackaging.;635-646;12;Transformations II;
2014;Alexander Bergmayr,Javier Troya,Manuel Wimmer;From out-place transformation evolution to in-place model patching.;647-652;6;Transformations II;
2014;Rainer Lutz,Stephan Diehl 0001;Using visual dataflow programming for interactive model comparison.;653-664;12;Human factors;
2014;Rohan Padhye,Senthil Mani,Vibha Singhal Sinha;NeedFeed: taming change notifications by modeling code relevance.;665-676;12;Human factors;
2014;Shaowei Wang,David Lo,Lingxiao Jiang;Active code search: incorporating user feedback to improve code search relevance.;677-682;6;Human factors;
2014;Heidar Pirzadeh,Sara Shanian;Resilient user interface level tests.;683-688;6;Human factors;
2014;Jun Lin,Han Yu,Zhiqi Shen,Chunyan Miao;Studying task allocation decisions of novice agile teams with data from agile project management tools.;689-694;6;Human factors;
2014;Xiao Liu,Dinghao Wu;PiE: programming in eliza.;695-700;6;Human factors;
2014;Jie Zhang,Junjie Chen,Dan Hao,Yingfei Xiong,Bing Xie,Lu Zhang 0023,Hong Mei;Search-based inference of polynomial metamorphic relations.;701-712;12;Verification;
2014;Girish Maskeri Rama,Raghavan Komondoor;A dynamic analysis to support object-sharing code refactorings.;713-724;12;Verification;
2014;Kyle Dewey,Jared Roesch,Ben Hardekopf;Language fuzzing using constraint logic programming.;725-730;6;Verification;
2014;Sander van der Burg,Eelco Dolstra,Shane McIntosh,Julius Davies,Daniel M. Germán,Armijn Hemel;Tracing software build processes to uncover license compliance inconsistencies.;731-742;12;Verification;
2014;Samik Basu,Tevfik Bultan;Automatic verification of interactions in asynchronous systems with unbounded buffers.;743-754;12;Verification;
2014;Jin Guo 0004,Natawut Monaikul,Cody Plepel,Jane Cleland-Huang;Towards an intelligent domain-specific traceability solution.;755-766;12;Requirements engineering;
2014;Samuel J. Ellis,Eric R. Henderson,Titus H. Klinge,James I. Lathrop,Jack H. Lutz,Robyn R. Lutz,Divita Mathur,Andrew S. Miner;Automated requirements analysis for a molecular watchdog timer.;767-778;12;Requirements engineering;
2014;Kushal Ahmed,M. A. Hakim Newton,Lian Wen,Abdul Sattar;Formalisation of the integration of behavior trees.;779-784;6;Requirements engineering;
2014;Shuang Liu,Jun Sun 0001,Yang Liu 0003,Yue Zhang,Bimlesh Wadhwa,Jin Song Dong,Xinyu Wang;Automatic early defects detection in use case documents.;785-790;6;Requirements engineering;
2015;Yanzhen Zou,Ting Ye,Yangyang Lu,John Mylopoulos,Lu Zhang 0023;Learning to Rank for Question-Oriented Software Text Retrieval (T).;1-11;11;Session:Automated Development Support I;
2015;Andrea Di Sorbo,Sebastiano Panichella,Corrado Aaron Visaggio,Massimiliano Di Penta,Gerardo Canfora,Harald C. Gall;Development Emails Content Analyzer: Intention Mining in Developer Discussions (T).;12-23;12;Session:Automated Development Support I;
2015;Lee Martie,Thomas D. LaToza,André van der Hoek;CodeExchange: Supporting Reformulation of Internet-Scale Code Queries in Context (T).;24-35;12;Session:Automated Development Support I;
2015;Mario Linares Vásquez,Boyang Li,Christopher Vendome,Denys Poshyvanyk;How do Developers Document Database Usages in Source Code? (N).;36-41;6;Session:Automated Development Support I;
2015;Ivan Bocic,Tevfik Bultan;Efficient Data Model Verification with Many-Sorted Logic (T).;42-52;11;Session:Formal Verification and Proofs;
2015;Hong-Yi Chen,Cristina David,Daniel Kroening,Peter Schrammel,Björn Wachter;Synthesising Interprocedural Bit-Precise Termination Proofs (T).;53-64;12;Session:Formal Verification and Proofs;
2015;Shang-Wei Lin,Jun Sun 0001,Truong Khanh Nguyen,Yang Liu,Jin Song Dong;Interpolation Guided Compositional Verification (T).;65-74;10;Session:Formal Verification and Proofs;
2015;John Toman,Stuart Pernsteiner,Emina Torlak;Crust: A Bounded Verifier for Rust (N).;75-80;6;Session:Formal Verification and Proofs;
2015;Caroline Lemieux,Dennis Park,Ivan Beschastnikh;General LTL Specification Mining (T).;81-92;12;Session:Specification Mining;
2015;Hila Cohen,Shahar Maoz;Have We Seen Enough Traces? (T).;93-103;11;Session:Specification Mining;
2015;Abdullah M. Alshanqiti,Reiko Heckel;Extracting Visual Contracts from Java Programs (T).;104-114;11;Session:Specification Mining;
2015;Tien-Duy B. Le,Xuan-Bach D. Le,David Lo,Ivan Beschastnikh;Synergizing Specification Miners through Model Fissions and Fusions (T).;115-125;11;Session:Specification Mining;
2015;Daniel Di Nardo,Fabrizio Pastore,Andrea Arcuri,Lionel C. Briand;Evolutionary Robustness Testing of Data Processing Systems Using Models and Data Mutation (T).;126-137;12;Session:Search-Based Software Testing;
2015;Santo Carino,James H. Andrews;Dynamically Testing GUIs Using Ant Colony Optimization (T).;138-148;11;Session:Search-Based Software Testing;
2015;Matias Waterloo,Suzette Person,Sebastian G. Elbaum;Test Analysis: Searching for Faults in Tests (N).;149-154;6;Session:Search-Based Software Testing;
2015;James R. Wilcox,Parker Finch,Cormac Flanagan,Stephen N. Freund;Array Shadow State Compression for Precise Dynamic Race Detection (T).;155-165;11;Session:Concurrency Bugs and Analysis;
2015;Pantazis Deligiannis,Alastair F. Donaldson,Zvonimir Rakamaric;Fast and Precise Symbolic Analysis of Concurrency Bugs in Device Drivers (T).;166-177;12;Session:Concurrency Bugs and Analysis;
2015;Ziyi Lin,Darko Marinov,Hao Zhong,Yuting Chen,Jianjun Zhao;JaConTeBe: A Benchmark Suite of Real-World Java Concurrency Bugs (T).;178-189;12;Session:Concurrency Bugs and Analysis;
2015;Amin Milani Fard,Ali Mesbah 0001,Eric Wohlstadter;Generating Fixtures for JavaScript Unit Testing (T).;190-200;11;Session:Automatic Test Generation;
2015;Sina Shamshiri,René Just,José Miguel Rojas,Gordon Fraser,Phil McMinn,Andrea Arcuri;Do Automatically Generated Unit Tests Find Real Faults? An Empirical Study of Effectiveness and Challenges (T).;201-211;11;Session:Automatic Test Generation;
2015;Lei Ma,Cyrille Artho,Cheng Zhang,Hiroyuki Sato,Johannes Gmeiner,Rudolf Ramler;GRT: Program-Analysis-Guided Random Testing (T).;212-223;12;Session:Automatic Test Generation;
2015;Yu Lin,Semih Okur,Danny Dig;Study and Refactoring of Android Asynchronous Programming (T).;224-235;12;Session:Mobile Applications I;
2015;Geoffrey Hecht,Omar Benomar,Romain Rouvoy,Naouel Moha,Laurence Duchien;Tracking the Software Quality of Android Applications Along Their Evolution (T).;236-247;12;Session:Mobile Applications I;
2015;Tuan Anh Nguyen,Christoph Csallner;Reverse Engineering Mobile Application User Interfaces with REMAUI (T).;248-259;12;Session:Mobile Applications I;
2015;Fei Lv,Hongyu Zhang,Jian-Guang Lou,Shaowei Wang,Dongmei Zhang,Jianjun Zhao;CodeHow: Effective Code Search Based on API Understanding and Extended Boolean Model (E).;260-270;11;Session:Automated Development Support II;
2015;S. M. Sohan,Craig Anslow,Frank Maurer;SpyREST: Automated RESTful API Documentation Using an HTTP Proxy Server (N).;271-276;6;Session:Automated Development Support II;
2015;Lingfeng Bao,Zhenchang Xing,Xinyu Wang,Bo Zhou;Tracking and Analyzing Cross-Cutting Activities in Developers' Daily Work (N).;277-282;6;Session:Automated Development Support II;
2015;Kurtis Zimmerman,Chandan Raj Rupakheti;An Automated Framework for Recommending Program Elements to Novices (N).;283-288;6;Session:Automated Development Support II;
2015;Santiago Vargas-Baldrich,Mario Linares Vásquez,Denys Poshyvanyk;Automated Tagging of Software Projects Using Bytecode and Dependencies (N).;289-294;6;Session:Automated Development Support II;
2015;Yalin Ke,Kathryn T. Stolee,Claire Le Goues,Yuriy Brun;Repairing Programs with Semantic Code Search (T).;295-306;12;Session:Program Repair and Synthesis;
2015;Qing Gao,Hansheng Zhang,Jie Wang,Yingfei Xiong,Lu Zhang 0023,Hong Mei;Fixing Recurring Crash Bugs via Analyzing Q&A Sites (T).;307-318;12;Session:Program Repair and Synthesis;
2015;Simos Gerasimou,Giordano Tamburrelli,Radu Calinescu;Search-Based Synthesis of Probabilistic Models for Quality-of-Service Software Engineering (T).;319-330;12;Session:Program Repair and Synthesis;
2015;Kartik Bajaj,Karthik Pattabiraman,Ali Mesbah 0001;Synthesizing Web Element Locators (T).;331-341;11;Session:Program Repair and Synthesis;
2015;Atri Sarkar,Jianmei Guo,Norbert Siegmund,Sven Apel,Krzysztof Czarnecki;Cost-Efficient Sampling for Performance Prediction of Configurable Systems (T).;342-352;11;Session:Software Performance;
2015;Morakot Choetkiertikul,Hoa Khanh Dam,Truyen Tran,Aditya Ghose;Predicting Delays in Software Projects Using Networked Classification (T).;353-364;12;Session:Software Performance;
2015;Yi Zhang,Jianmei Guo,Eric Blais,Krzysztof Czarnecki;Performance Prediction of Configurable Software Systems by Fourier Learning (T).;365-373;9;Session:Software Performance;
2015;Uwe Pohlmann,Marcus Huwe;Model-Driven Allocation Engineering (T).;374-384;11;Session:Software Performance;
2015;Florian Angerer,Andreas Grimmer,Herbert Prähofer,Paul Grünbacher;Configuration-Aware Change Impact Analysis (T).;385-395;11;Session:Product Lines and Configurable Software Systems;
2015;Jabier Martinez,Tewfik Ziadi,Tegawendé F. Bissyandé,Jacques Klein,Yves Le Traon;Automating the Extraction of Model-Based Software Product Lines from Model Variants (T).;396-406;11;Session:Product Lines and Configurable Software Systems;
2015;Matthias Kowal,Max Tschaikowski,Mirco Tribastone,Ina Schaefer;Scaling Size and Parameter Spaces in Variability-Aware Software Performance Models (T).;407-417;11;Session:Product Lines and Configurable Software Systems;
2015;Dongjiang You,Sanjai Rayadurgam,Mats Per Erik Heimdahl,John Komp,BaekGyu Kim,Oleg Sokolsky;Executing Model-Based Tests on Platform-Specific Implementations (T).;418-428;11;Session:Testing I;
2015;Shauvik Roy Choudhary,Alessandra Gorla,Alessandro Orso;Automated Test Input Generation for Android: Are We There Yet? (E).;429-440;12;Session:Testing I;
2015;Nader Boushehrinejadmoradi,Vinod Ganapathy,Santosh Nagarakatte,Liviu Iftode;Testing Cross-Platform Mobile App Development Frameworks (T).;441-451;11;Session:Testing I;
2015;Jaechang Nam,Sunghun Kim;CLAMI: Defect Prediction on Unlabeled Datasets (T).;452-463;12;Session:Defect Prediction and Debugging;
2015;Shin Hong,Byeongcheol Lee,Taehoon Kwak,Yiru Jeon,Bongsuk Ko,Yunho Kim,Moonzoo Kim;Mutation-Based Fault Localization for Real-World Multilingual Programs (T).;464-475;12;Session:Defect Prediction and Debugging;
2015;An Ngoc Lam,Anh Tuan Nguyen,Hoan Anh Nguyen,Tien N. Nguyen;Combining Deep Learning with Information Retrieval to Localize Buggy Files for Bug Reports (N).;476-481;6;Session:Defect Prediction and Debugging;
2015;Kyle Dewey,Jared Roesch,Ben Hardekopf;Fuzzing the Rust Typechecker Using CLP (T).;482-493;12;Session:Testing II;
2015;Jinkun Lin,Chuan Luo,Shaowei Cai,Kaile Su,Dan Hao,Lu Zhang 0023;TCA: An Efficient Two-Mode Meta-Heuristic Algorithm for Combinatorial Test Generation (T).;494-505;12;Session:Testing II;
2015;Benwen Zhang,Emily Hill,James Clause;Automatically Generating Test Templates from Test Names (N).;506-511;6;Session:Testing II;
2015;Alexandros Tzannes,Stephen T. Heumann,Lamyaa Eloussi,Mohsen Vakilian,Vikram S. Adve,Michael Han;Region and Effect Inference for Safe Parallelism (T).;512-523;12;Session:Concurrent/Parallel Programming;
2015;Yanyan Jiang 0001,Du Li,Chang Xu,Xiaoxing Ma,Jian Lu;Optimistic Shared Memory Dependence Tracing (T).;524-534;11;Session:Concurrent/Parallel Programming;
2015;Eric G. Mercer,Peter Anderson,Nick Vrvilo,Vivek Sarkar;Model Checking Task Parallel Programs Using Gradual Permissions (N).;535-540;6;Session:Concurrent/Parallel Programming;
2015;Yoonseok Ko,Hongki Lee,Julian Dolby,Sukyoung Ryu;Practically Tunable Static Analysis Framework for Large-Scale JavaScript Applications (T).;541-551;11;Session:Program Analysis I;
2015;Changhee Park,Sooncheol Won,Joonho Jin,Sukyoung Ryu;Static Analysis of JavaScript Web Applications in the Wild via Practical DOM Modeling (T).;552-562;11;Session:Program Analysis I;
2015;Mark Hills 0001;Variable Feature Usage Patterns in PHP (T).;563-573;11;Session:Program Analysis I;
2015;Yusuke Oda,Hiroyuki Fudaba,Graham Neubig,Hideaki Hata,Sakriani Sakti,Tomoki Toda,Satoshi Nakamura;Learning to Generate Pseudo-Code from Source Code Using Statistical Machine Translation (T).;574-584;11;Session:Program Translations;
2015;Anh Tuan Nguyen,Tung Thanh Nguyen,Tien N. Nguyen;Divide-and-Conquer Approach for Multi-phase Statistical Migration for Source Code (T).;585-596;12;Session:Program Translations;
2015;Alexandru F. Iosif-Lazar,Ahmad Salim Al-Sibahi,Aleksandar S. Dimovski,Juha Erik Savolainen,Krzysztof Sierszecki,Andrzej Wasowski;Experiences from Designing and Validating a Software Modernization Transformation (E).;597-607;11;Session:Program Translations;
2015;Elena Sherman,Matthew B. Dwyer;Exploiting Domain and Program Structure to Synthesize Efficient and Precise Data Flow Analyses (T).;608-618;11;Session:Program Analysis II;
2015;Johannes Lerch,Johannes Späth,Eric Bodden,Mira Mezini;Access-Path Abstraction: Scaling Field-Sensitive Data-Flow Analysis with Unbounded Access Paths (T).;619-629;11;Session:Program Analysis II;
2015;Krishna Narasimhan,Christoph Reichenbach;Copy and Paste Redeemed (T).;630-640;11;Session:Program Analysis II;
2015;Raffi Khatchadourian,Awais Rashid,Hidehiko Masuhara,Takuya Watanabe;Detecting Broken Pointcuts Using Structural Commonality and Degree of Interest (N).;641-646;6;Session:Program Analysis II;
2015;Julia Rubin,Michael I. Gordon,Nguyen Nguyen,Martin C. Rinard;Covert Communication in Mobile Applications (T).;647-657;11;Session:Mobile Applications II;
2015;Shengqian Yang,Hailong Zhang,Haowei Wu,Yan Wang,Dacong Yan,Atanas Rountev;Static Window Transition Graphs for Android (T).;658-668;11;Session:Mobile Applications II;
2015;Paulo Barros,René Just,Suzanne Millstein,Paul Vines,Werner Dietl,Marcelo d'Amorim,Michael D. Ernst;Static Analysis of Implicit Control Flow: Resolving Java Reflection and Android Intents (T).;669-679;11;Session:Mobile Applications II;
2015;Justin Del Vecchio,Feng Shen,Kenny M. Yee,Boyu Wang,Steven Y. Ko,Lukasz Ziarek;String Analysis of Android Applications (N).;680-685;6;Session:Mobile Applications II;
2015;Yi Li,Julia Rubin,Marsha Chechik;Semantic Slicing of Software Version Histories (T).;686-696;11;Session:Software Evolution;
2015;Kivanç Muslu,Luke Swart,Yuriy Brun,Michael D. Ernst;Development History Granularity Transformations (N).;697-702;6;Session:Software Evolution;
2015;Antonio Filieri,Corina S. Pasareanu,Guowei Yang;Quantification of Software Changes through Probabilistic Symbolic Execution (N).;703-708;6;Session:Software Evolution;
2015;Thomas A. Walsh,Phil McMinn,Gregory M. Kapfhammer;Automatic Detection of Potential Layout Faults Following Changes to Responsive Web Pages (N).;709-714;6;Session:Software Evolution;
2015;Michael Vierhauser,Rick Rabiser,Paul Grünbacher,Alexander Egyed;Developing a DSL-Based Approach for Event-Based Monitoring of Systems of Systems: Experiences and Lessons Learned (E).;715-725;11;Session:Evaluating Automated Approaches;
2015;Andreas Wölfl,Norbert Siegmund,Sven Apel,Harald Kosch,Johann Krautlager,Guillermo Weber-Urbina;Generating Qualifiable Avionics Software: An Experience Report (E).;726-736;11;Session:Evaluating Automated Approaches;
2015;Alex Groce,Iftekhar Ahmed,Carlos Jensen,Paul E. McKenney;How Verified is My Code? Falsification-Driven Verification (T).;737-748;12;Session:Evaluating Automated Approaches;
2015;Phong Minh Vu,Tam The Nguyen,Hung Viet Pham,Tung Thanh Nguyen;Mining User Opinions in Mobile App Reviews: A Keyword-Based Approach (T).;749-759;11;Session:Data Mining:User Feedback;
2015;Xiaodong Gu,Sunghun Kim;"""What Parts of Your Apps are Loved by Users?"" (T).";760-770;11;Session:Data Mining:User Feedback;
2015;Emitza Guzman,Muhammad El-Haliby,Bernd Bruegge;Ensemble Methods for App Review Classification: An Approach for Software Evolution (N).;771-776;6;Session:Data Mining:User Feedback;
2015;Michael Vierhauser,Rick Rabiser,Paul Grünbacher,Jurgen Thanhofer-Pilisch;The ReMinds Tool Suite for Runtime Monitoring of Systems of Systems.;777-782;6;Session:Tool Demonstrations I;
2015;Nuno Flores,Ademar Aguiar;DRIVER - A Platform for Collaborative Framework Understanding.;783-788;6;Session:Tool Demonstrations I;
2015;Phong Minh Vu,Hung Viet Pham,Tam The Nguyen,Tung Thanh Nguyen;Tool Support for Analyzing Mobile App Reviews.;789-794;6;Session:Tool Demonstrations I;
2015;Tam The Nguyen,Hung Viet Pham,Phong Minh Vu,Tung Thanh Nguyen;Recommending API Usages for Mobile Apps with Hidden Markov Model.;795-800;6;Session:Tool Demonstrations I;
2015;Darko Bozhinoski,Davide Di Ruscio,Ivano Malavolta,Patrizio Pelliccione,Massimo Tivoli;FLYAQ: Enabling Non-expert Users to Specify and Generate Missions of Autonomous Multicopters.;801-806;6;Session:Tool Demonstrations I;
2015;Omar Inverso,Truc L. Nguyen,Bernd Fischer 0002,Salvatore La Torre,Gennaro Parlato;Lazy-CSeq: A Context-Bounded Model Checking Tool for Multi-threaded C-Programs.;807-812;6;Session:Tool Demonstrations I;
2015;S. M. Sohan,Craig Anslow,Frank Maurer;SpyREST in Action: An Automated RESTful API Documentation Tool.;813-818;6;Session:Tool Demonstration II;
2015;Krishna Narasimhan;Clone Merge - An Eclipse Plugin to Abstract Near-Clone C++ Methods.;819-823;5;Session:Tool Demonstration II;
2015;Hiroyuki Fudaba,Yusuke Oda,Koichi Akabe,Graham Neubig,Hideaki Hata,Sakriani Sakti,Tomoki Toda,Satoshi Nakamura;Pseudogen: A Tool to Automatically Generate Pseudo-Code from Source Code.;824-829;6;Session:Tool Demonstration II;
2014;Yu Cao,Hongyu Zhang,Sun Ding;SymCrash: selective recording for reproducing crashes.;791-802;12;Bug localization;
2014;Pavneet Singh Kochhar,Yuan Tian,David Lo;Potential biases in bug localization: do they matter?;803-814;12;Bug localization;
2014;Daniele Zuddas,Wei Jin,Fabrizio Pastore,Leonardo Mariani,Alessandro Orso;MIMIC: locating and understanding bugs by analyzing mimicked executions.;815-826;12;Bug localization;
2014;Timo Kehrer,Udo Kelter,Dennis Reuling;Workspace updates of visual models.;827-830;4;Tool demonstration;
2014;Jesús J. López-Fernández,Esther Guerra,Juan de Lara;Meta-Model validation and verification with MetaBest.;831-834;4;Tool demonstration;
2014;Zhiyi Ma,Chih-Yi Yeh,Huihong He,Hongjie Chen;A web based UML modeling tool with touch screens.;835-838;4;Tool demonstration;
2014;Svetlana Arifulina,Sven Walther,Matthias Becker,Marie Christin Platenius;SeSAME: modeling and analyzing high-quality service compositions.;839-842;4;Tool demonstration;
2014;Yoshiki Higo,Shinji Kusumoto;MPAnalyzer: a tool for finding unintended inconsistencies in program source code.;843-846;4;Tool demonstration;
2014;Josip Maras,Maja Stula,Jan Carlson;Firecrow: a tool for web application analysis and reus.;847-850;4;Tool demonstration;
2014;Leo J. Pruijt,Christian Köppe,Jan Martijn van der Werf,Sjaak Brinkkemper;HUSACCT: architecture compliance checking with rich sets of module and rule types.;851-854;4;Tool demonstration;
2014;Reza Matinnejad,Shiva Nejati,Lionel C. Briand,Thomas Bruckmann;CoCoTest: a tool for model-in-the-loop testing of continuous controllers.;855-858;4;Tool demonstration;
2014;Dominik Holling,Alexander Pretschner,Matthias Gemmar;8Cage: lightweight fault-based test generation for simulink.;859-862;4;Tool demonstration;
2014;Rodrigo M. L. M. Moreira,Ana C. R. Paiva;PBGT tool: an integrated modeling and testing environment for pattern-based GUI testing.;863-866;4;Tool demonstration;
2014;Maxime Turenne,Ali Kanso,Abdelouahed Gherbi,Samer Razzook;A tool chain for generating the description files of highly available software.;867-870;4;Tool demonstration;
2014;Ferdian Thung,Pavneet Singh Kochhar,David Lo;DupFinder: integrated tool support for duplicate bug report detection.;871-874;4;Tool demonstration;
2014;Johanna Schneider;Determining the most probable root causes of run-time errors in simulink models.;875-878;4;Doctoral symposium;
2014;Joseph T. Burke;Utilizing feature location techniques for feature addition and feature enhancement.;879-882;4;Doctoral symposium;
2014;Markus Kleffmann;AugIR: the conceptual design and evaluation of an augmented interaction room.;883-886;4;Doctoral symposium;
2014;Michael Vierhauser;A requirements monitoring infrastructure for systems of systems.;887-890;4;Doctoral symposium;
2014;Markus Borg;Embrace your issues: compassing the software engineering landscape using bug reports.;891-894;4;Doctoral symposium;
2014;Felix Mohr;Issues of automated software composition in AI planning.;895-898;4;Doctoral symposium;
2014;Breno Miranda;A proposal for revisiting coverage testing metrics.;899-902;4;Doctoral symposium;
2014;Florian Angerer;Variability-aware change impact analysis of multi-language product lines.;903-906;4;Doctoral symposium;
2014;Maria Kechagia;Improvement of applications' stability through robust APIs.;907-910;4;Doctoral symposium;
2014;Dennis Priefer;Model-driven development of content management systems based on Joomla.;911-914;4;Doctoral symposium;
2013;Lu Zhang,Arijit Chattopadhyay,Chao Wang;Round-up: Runtime checking quasi linearizability of concurrent data structures.;4-14;11;Concurrency;
2013;Shao Jie Zhang,Jun Sun 0001,Chengnian Sun,Yang Liu 0003,Junwei Ma,Jin Song Dong;Constraint-based automatic symmetry detection.;15-25;11;Concurrency;
2013;Yu Huang,Eric Mercer,Jay McCarthy;Proving MCAPI executions are correct using SMT.;26-36;11;Concurrency;
2013;Malay K. Ganai;Efficient data race prediction with incremental reasoning on time-stamped lock history.;37-47;11;Concurrency;
2013;Yonghwi Kwon,Xiangyu Zhang,Dongyan Xu;PIEtrace: Platform independent executable trace.;48-58;11;Dynamic Analysis;
2013;Vijay Krishna Palepu,Guoqing (Harry) Xu,James A. Jones;Improving efficiency of dynamic analysis with dynamic dependence summaries.;59-69;11;Dynamic Analysis;
2013;Patrick O'Neil Meredith,Grigore Rosu;Efficient parametric runtime verification with deterministic string rewriting.;70-80;11;Dynamic Analysis;
2013;William N. Sumner,Xiangyu Zhang;Identifying execution points for dynamic analyses.;81-91;11;Dynamic Analysis;
2013;Lingming Zhang,Milos Gligoric,Darko Marinov,Sarfraz Khurshid;Operator-based and random mutant selection: Better together.;92-102;11;Testing;
2013;Zhihong Xu,Martin Hirzel,Gregg Rothermel,Kun-Lung Wu;Testing properties of dataflow program operators.;103-113;11;Testing;
2013;Samira Tasharofi,Michael Pradel,Yu Lin,Ralph E. Johnson;Bita: Coverage-guided, automatic testing of actor programs.;114-124;11;Testing;
2013;Domenico Cotroneo,Domenico Di Leo,Francesco Fucci,Roberto Natella;SABRINE: State-based robustness testing of operating systems.;125-135;11;Testing;
2013;Chia Yuan Cho,Vijay D'Silva,Dawn Song;BLITZ: Compositional bounded model checking for real-world programs.;136-146;11;Verification;
2013;Nicolás Rosner,Junaid Haroon Siddiqui,Nazareno Aguirre,Sarfraz Khurshid,Marcelo F. Frias;Ranger: Parallel analysis of alloy models by range partitioning.;147-157;11;Verification;
2013;Yuta Maezawa,Hironori Washizaki,Yoshinori Tanabe,Shinichi Honiden;Automated verification of pattern-based interaction invariants in Ajax applications.;158-168;11;Verification;
2013;Cyrille Artho,Masami Hagiya,Richard Potter,Yoshinori Tanabe,Franz Weitl,Mitsuharu Yamamoto;Software model checking for distributed systems with selector-based, non-blocking communication.;169-179;11;Verification;
2013;Hoan Anh Nguyen,Anh Tuan Nguyen,Tung Thanh Nguyen,Tien N. Nguyen,Hridesh Rajan;A study of repetitiveness of code changes in software evolution.;180-190;11;Evolution;
2013;Timo Kehrer,Udo Kelter,Gabriele Taentzer;Consistency-preserving edit scripts in model versioning.;191-201;11;Evolution;
2013;Nicholas Chen,Ralph E. Johnson;JFlow: Practical refactorings for flow-based parallelism.;202-212;11;Evolution;
2013;Jeffrey M. Barnes,Ashutosh Pandey 0002,David Garlan;Automated planning for software architecture evolution.;213-223;11;Evolution;
2013;Sai Zhang,Yuyin Sun;Automatically synthesizing SQL queries from input-output examples.;224-234;11;Generation and Synthesis;
2013;Kaituo Li,Christoph Reichenbach,Yannis Smaragdakis,Yanlei Diao,Christoph Csallner;SEDGE: Symbolic example data generation for dataflow programs.;235-245;11;Generation and Synthesis;
2013;Xusheng Xiao,Sihan Li,Tao Xie,Nikolai Tillmann;Characteristic studies of loop problems for structural test generation via symbolic execution.;246-256;11;Generation and Synthesis;
2013;José Campos,Rui Abreu,Gordon Fraser,Marcelo d'Amorim;Entropy-based test generation for improved fault localization.;257-267;11;Generation and Synthesis;
2013;Fabio Palomba,Gabriele Bavota,Massimiliano Di Penta,Rocco Oliveto,Andrea De Lucia,Denys Poshyvanyk;Detecting bad smells in source code using change history information.;268-278;11;Recommendations;
2013;Tian Jiang,Lin Tan,Sunghun Kim;Personalized defect prediction.;279-289;11;Recommendations;
2013;Ferdian Thung,Shaowei Wang,David Lo,Julia L. Lawall;Automatic recommendation of API methods from feature requests.;290-300;11;Recommendations;
2013;Jianmei Guo,Krzysztof Czarnecki,Sven Apel,Norbert Siegmund,Andrzej Wasowski;Variability-aware performance prediction: A statistical learning approach.;301-311;11;Recommendations;
2013;Mahinthan Chandramohan,Hee Beng Kuan Tan,Lionel C. Briand,Lwin Khin Shar,Bindu Madhavi Padmanabhuni;A scalable approach for malware detection through bounded feature space behavior modeling.;312-322;11;Security;
2013;Yongzheng Wu,Jun Sun 0001,Yang Liu 0003,Jin Song Dong;Automatically partition software into least privilege components using dynamic data dependency analysis.;323-333;11;Security;
2013;Radu Vanciu,Marwan Abi-Antoun;Finding architectural flaws using constraints.;334-344;11;Security;
2013;Ripon K. Saha,Matthew Lease,Sarfraz Khurshid,Dewayne E. Perry;Improving bug localization using structured information retrieval.;345-355;11;Debugging;
2013;Westley Weimer,Zachary P. Fry,Stephanie Forrest;Leveraging program equivalence for adaptive program repair: Models and first results.;356-366;11;Debugging;
2013;Baishakhi Ray,Miryung Kim,Suzette Person,Neha Rungta;Detecting and characterizing semantic inconsistencies in ported code.;367-377;11;Debugging;
2013;Peter Ohmann,Ben Liblit;Lightweight control-flow instrumentation and postmortem analysis in support of debugging.;378-388;11;Debugging;
2013;Chaorong Guo,Jian Zhang 0001,Jun Yan,Zhiqiang Zhang,Yanli Zhang;Characterizing and detecting resource leaks in Android applications.;389-398;10;Resources;
2013;Hung Viet Nguyen,Hoan Anh Nguyen,Tung Thanh Nguyen,Anh Tuan Nguyen,Tien N. Nguyen;Dangling references in multi-configuration and dynamic PHP-based Web applications.;399-409;11;Resources;
2013;Erik Österlund,Welf Löwe;Dynamically transforming data structures.;410-420;11;Resources;
2013;Benedek Izsó,Zoltán Szatmári,Gábor Bergmann,Ákos Horváth,István Ráth;Towards precise metrics for predicting graph query performance.;421-431;11;Resources;
2013;Hao Xiao,Jun Sun 0001,Yang Liu 0003,Shang-Wei Lin,Chengnian Sun;TzuYu: Learning stateful typestates.;432-442;11;Specification Mining;
2013;Dirk Fahland,David Lo,Shahar Maoz;Mining branching-time scenarios.;443-453;11;Specification Mining;
2013;Richard Pohl,Vanessa Stricker,Klaus Pohl;Measuring the structural complexity of feature models.;454-464;11;Models and Complexity;
2013;Abdel Salam Sayyad,Joseph Ingram,Tim Menzies,Hany Ammar;Scalable product line configuration: A straw to break the camel's back.;465-474;10;Models and Complexity;
2013;Jian-Guang Lou,Qingwei Lin,Rui Ding,Qiang Fu,Dongmei Zhang,Tao Xie;Software analytics for incident management of online services: An experience report.;475-485;11;Experience:Software Analysis;
2013;Joshua Garcia,Igor Ivkovic,Nenad Medvidovic;A comparative analysis of software architecture recovery techniques.;486-496;11;Experience:Software Analysis;
2013;Gang Zhang,Xin Peng,Zhenchang Xing,Shihai Jiang,Hai Wang,Wenyun Zhao;Towards contextual and on-demand code clone management by continuous monitoring.;497-507;11;Experience:Software Analysis;
2013;Andreas Simburger,Sven Apel,Armin Größlinger,Christian Lengauer;The potential of polyhedral optimization: An empirical study.;508-518;11;Experience:Software Analysis;
2013;Yunho Kim,Youil Kim,Taeksu Kim,Gunwoo Lee,Yoonkyu Jang,Moonzoo Kim;Automated unit testing of large industrial embedded software using concolic testing.;519-528;10;Experience:Testing and Verification;
2013;Shiva Nejati,Morayo Adedjouma,Lionel C. Briand,Jonathan Hellebaut,Julien Begey,Yves Clement;Minimizing CPU time shortage risks in integrated embedded software.;529-539;11;Experience:Testing and Verification;
2013;Daniel Di Nardo,Nadia Alshahwan,Lionel C. Briand,Elizabeta Fourneret,Tomislav Nakic-Alfirevic,Vincent Masquelier;Model based test validation and oracles for data acquisition systems.;540-550;11;Experience:Testing and Verification;
2013;Deepak Dhungana,Ching Hoo Tang,Christoph Weidenbach,Patrick Wischnewski;Automated verification of interactive rule-based configuration systems.;551-561;11;Experience:Testing and Verification;
2013;Edmund Wong,Jinqiu Yang,Lin Tan;AutoComment: Mining question and answer sites for automatic comment generation.;562-567;6;New Ideas:Adaptation and Transformation;
2013;Smita Ghaisas,Manish Motwani,Preethu Rose Anish;Detecting system use cases and validations from documents.;568-573;6;New Ideas:Adaptation and Transformation;
2013;Jesús García-Galán,Pablo Trinidad,Antonio Ruiz Cortés;Multi-user variability configuration: A game theoretic approach.;574-579;6;New Ideas:Adaptation and Transformation;
2013;Nicolas Sannier,Mathieu Acher,Benoit Baudry;From comparison matrix to Variability Model: The Wikipedia case study.;580-585;6;New Ideas:Adaptation and Transformation;
2013;Timothy Dietrich,Jane Cleland-Huang,Yonghee Shin;Learning effective query transformations for enhanced requirements trace retrieval.;586-591;6;New Ideas:Adaptation and Transformation;
2013;Chang Xu,Wenhua Yang,Xiaoxing Ma,Chun Cao,Jian Lu;Environment rematching: Toward dependability improvement for self-adaptive applications.;592-597;6;New Ideas:Adaptation and Transformation;
2013;Ethan Holder,Eeshan Shah,Mohammed Davoodi,Eli Tilevich;Cloud Twin: Native execution of android applications on the Windows Phone.;598-603;6;New Ideas:Adaptation and Transformation;
2013;Fitsum Meshesha Kifetew,Wei Jin,Roberto Tiella,Alessandro Orso,Paolo Tonella;SBFR: A search based approach for reproducing failures of programs with grammar based input.;604-609;6;New Ideas:Adaptation and Transformation;
2013;Shabnam Mirshokraie,Ali Mesbah 0001,Karthik Pattabiraman;PYTHIA: Generating test cases with oracles for JavaScript applications.;610-615;6;New Ideas:Testing and Debugging;
2013;Nupul Kukreja,William G. J. Halfond,Milind Tambe;Randomizing regression tests using game theory.;616-621;6;New Ideas:Testing and Debugging;
2013;Duy Cu Nguyen,Paolo Tonella;Automated inference of classifications and dependencies for combinatorial testing.;622-627;6;New Ideas:Testing and Debugging;
2013;Higor Amario de Souza,Marcos Lordello Chaim;Adding context to fault localization with integration coverage.;628-633;6;New Ideas:Testing and Debugging;
2013;Parth Sagdeo,Nicholas Ewalt,Debjit Pal,Shobha Vasudevan;Using automatically generated invariants for regression testing and bug localization.;634-639;6;New Ideas:Testing and Debugging;
2013;Giuseppe Scanniello,Carmine Gravino,Andrian Marcus,Tim Menzies;Class level fault prediction using software clustering.;640-645;6;New Ideas:Testing and Debugging;
2013;Evan Moritz,Mario Linares Vásquez,Denys Poshyvanyk,Mark Grechanik,Collin McMillan,Malcom Gethers;ExPort: Detecting and visualizing API usages in large source code repositories.;646-651;6;New Ideas:Testing and Debugging;
2013;Shashank Holavanalli,Don Manuel,Vishwas Nanjundaswamy,Brian Rosenberg,Feng Shen,Steven Y. Ko,Lukasz Ziarek;Flow Permissions for Android.;652-657;6;New Ideas:Testing and Debugging;
2013;Giles Reger,Howard Barringer,David E. Rydeheard;A pattern-based approach to parametric specification mining.;658-663;6;New Ideas:Models and Requirements;
2013;Dustin Wüest,Norbert Seyff,Martin Glinz;Semi-automatic generation of metamodels from model sketches.;664-669;6;New Ideas:Models and Requirements;
2013;Varsha Veerappa,Rachel Harrison;Assessing the maturity of requirements through argumentation: A good enough approach.;670-675;6;New Ideas:Models and Requirements;
2013;K. M. Annervaz,Vikrant S. Kaulgud,Shubhashis Sengupta,Milind Savagaonkar;Natural language requirements quality analysis based on business domain models.;676-681;6;New Ideas:Models and Requirements;
2013;Jens von Pilgrim,Bastian Ulke,Andreas Thies,Friedrich Steimann;Model/code co-refactoring: An MDE approach.;682-687;6;New Ideas:Models and Requirements;
2013;Hajer Saada,Marianne Huchard,Clémentine Nebut,Houari A. Sahraoui;Recovering model transformation traces using multi-objective optimization.;688-693;6;New Ideas:Models and Requirements;
2013;Nuno Macedo,Tiago Guimarães,Alcino Cunha;Model repair and transformation with Echo.;694-697;4;Tool Demonstrations;
2013;Mohan Baruwal Chhetri,Sergei Chichin,Quoc Bao Vo,Ryszard Kowalczyk;Smart Cloud Broker: Finding your home in the clouds.;698-701;4;Tool Demonstrations;
2013;Alessandro Cimatti,Michele Dorigatti,Stefano Tonetta;OCRA: A tool for checking the refinement of temporal contracts.;702-705;4;Tool Demonstrations;
2013;Stephan Falke 0001,Florian Merz,Carsten Sinz;The bounded model checker LLBMC.;706-709;4;Tool Demonstrations;
2013;Bernd Fischer 0002,Omar Inverso,Gennaro Parlato;CSeq: A concurrency pre-processor for sequential C verification tools.;710-713;4;Tool Demonstrations;
2013;Alessio Gambi,Waldemar Hummer,Schahram Dustdar;Automated testing of cloud-based elastic systems with AUToCLES.;714-717;4;Tool Demonstrations;
2013;Iman Avazpour,John Grundy,Lars Grunske;Tool support for automatic model transformation specification using concrete visualisations.;718-721;4;Tool Demonstrations;
2013;Markus Kusano,Chao Wang;CCmutator: A mutation generator for concurrency constructs in multithreaded C/C++ applications.;722-725;4;Tool Demonstrations;
2013;Christopher Schaefer,Hyunsook Do,Brian M. Slator;Crushinator: A framework towards game-independent testing.;726-729;4;Tool Demonstrations;
2013;Nikolai Tillmann,Jonathan de Halleux,Tao Xie,Judith Bishop;Pex4Fun: A web-based environment for educational gaming via automated test generation.;730-733;4;Tool Demonstrations;
2013;Radu Calinescu,Kenneth Johnson,Yasmin Rafiq;Developing self-verifying service-based systems.;734-737;4;Tool Demonstrations;
2013;Keletso Letsholo,Liping Zhao,Erol-Valeriu Chioasca;TRAM: A tool for transforming textual requirements into analysis models.;738-741;4;Tool Demonstrations;
2013;Nipun Arora,Hui Zhang 0002,Junghwan Rhee,Kenji Yoshihira,Guofei Jiang;iProbe: A lightweight user-level dynamic instrumentation tool.;742-745;4;Tool Demonstrations;
2013;Fatemeh Hendijani Fard;Detecting and fixing emergent behaviors in Distributed Software Systems using a message content independent method.;746-749;4;Doctoral Symposium;
2013;Ramiro Demasi;Synthesizing fault-tolerant programs from deontic logic specifications.;750-753;4;Doctoral Symposium;
2013;Francisco Servant;Supporting bug investigation using history analysis.;754-757;4;Doctoral Symposium;
2013;Jun Lin;Context-aware task allocation for distributed agile team.;758-761;4;Doctoral Symposium;
2013;Mehdi Mirakhorli;Preventing erosion of architectural tactics through their strategic implementation, preservation, and visualization.;762-765;4;Doctoral Symposium;
