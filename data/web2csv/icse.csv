2016;Xuan Lu,Xuanzhe Liu,Huoran Li,Tao Xie,Qiaozhu Mei,Dan Hao,Gang Huang 0001,Feng Feng;PRADA: prioritizing android devices for apps by mining large-scale usage data.;3-13;11;Android;
2016;Lorenzo Villarroel,Gabriele Bavota,Barbara Russo,Rocco Oliveto,Massimiliano Di Penta;Release planning of mobile apps based on user reviews.;14-24;11;Android;
2016;Rocky Slavin,Xiaoyin Wang,Mitra Bokaei Hosseini,James Hester,Ram Krishnan,Jaspreet Bhatia,Travis D. Breaux,Jianwei Niu;Toward a framework for detecting privacy policy violations in android application code.;25-36;12;Android;
2016;Konrad Jamrozik,Philipp von Styp-Rekowsky,Andreas Zeller;Mining sandboxes.;37-48;12;Android;
2016;Bihuan Chen,Yang Liu,Wei Le;Generating performance distributions via probabilistic symbolic execution.;49-60;12;Performance;
2016;Marija Selakovic,Michael Pradel;Performance issues and optimizations in JavaScript: an empirical study.;61-72;12;Performance;
2016;Guoxin Su,David S. Rosenblum,Giordano Tamburrelli;Reliability of Run-Time Quality-of-Service evaluation using parametric model checking.;73-84;12;Performance;
2016;Tian Huat Tan,Manman Chen,Jun Sun 0001,Yang Liu,Étienne André,Yinxing Xue,Jin Song Dong;Optimizing selection of competing services with probabilistic hierarchical refinement.;85-95;11;Performance;
2016;Miryung Kim,Thomas Zimmermann 0001,Robert DeLine,Andrew Begel;The emerging role of data scientists on software development teams.;96-107;12;Empirical;
2016;Premkumar T. Devanbu,Thomas Zimmermann 0001,Christian Bird;Belief & evidence in empirical software engineering.;108-119;12;Empirical;
2016;Klaas-Jan Stol,Paul Ralph,Brian Fitzgerald;Grounded theory in software engineering research: a critical review and guidelines.;120-131;12;Empirical;
2016;Eric F. Rizzi,Sebastian G. Elbaum,Matthew B. Dwyer;On the techniques we create, the tools we build, and their misalignments: a study of KLEE.;132-143;12;Symbolic execution;
2016;Maria Christakis,Peter Müller 0001,Valentin Wüstholz;Guiding dynamic symbolic execution toward unverified program executions.;144-155;12;Symbolic execution;
2016;Jinseong Jeon,Xiaokang Qiu,Jonathan Fetter-Degges,Jeffrey S. Foster,Armando Solar-Lezama;Synthesizing framework models for symbolic execution.;156-167;12;Symbolic execution;
2016;Monika Dhok,Murali Krishna Ramanathan,Nishant Sinha;Type-aware concolic testing of JavaScript programs.;168-179;12;Symbolic execution;
2016;Junjie Chen,Wenxiang Hu,Dan Hao,Yingfei Xiong,Hongyu Zhang,Lu Zhang 0023,Bing Xie;An empirical comparison of compiler testing techniques.;180-190;11;Compilers and emerging trends;
2016;David Menendez,Santosh Nagarakatte;Termination-checking for LLVM peephole optimizations.;191-202;12;Compilers and emerging trends;
2016;Chengnian Sun,Vu Le,Zhendong Su;Finding and analyzing compiler warning defects.;203-213;11;Compilers and emerging trends;
2016;Qingwei Lin,Jian-Guang Lou,Hongyu Zhang,Dongmei Zhang;iDice: problem identification for emerging issues.;214-224;11;Compilers and emerging trends;
2016;Samir Hasan,Zachary King,Munawar Hafiz,Mohammed Sayagh,Bram Adams,Abram Hindle;Energy profiles of Java collections classes.;225-236;12;Energy and videos;
2016;Irene Manotas,Christian Bird,Rui Zhang,David C. Shepherd,Ciera Jaspan,Caitlin Sadowski,Lori L. Pollock,James Clause;An empirical study of practitioners' perspectives on green software engineering.;237-248;12;Energy and videos;
2016;Ding Li,Yingjun Lyu,Jiaping Gui,William G. J. Halfond;Automated energy optimization of HTTP requests for mobile applications.;249-260;12;Energy and videos;
2016;Luca Ponzanelli,Gabriele Bavota,Andrea Mocci,Massimiliano Di Penta,Rocco Oliveto,Mir Anamul Hasan,Barbara Russo,Sonia Haiduc,Michele Lanza;"Too long; didn't watch!: extracting relevant fragments from software development video tutorials.";261-272;12;Energy and videos;
2016;Igor Steinmacher,Tayana Uchôa Conte,Christoph Treude,Marco Aurélio Gerosa;Overcoming open source project entry barriers with a portal for newcomers.;273-284;12;Open source;
2016;Georgios Gousios,Margaret-Anne D. Storey,Alberto Bacchelli;Work practices and challenges in pull-based development: the contributor's perspective.;285-296;12;Open source;
2016;Song Wang,Taiyue Liu,Lin Tan;Automatically learning semantic features for defect prediction.;297-308;12;Defect prediction;
2016;Feng Zhang 0001,Quan Zheng,Ying Zou,Ahmed E. Hassan;Cross-project defect prediction using a connectivity-based unsupervised classifier.;309-320;12;Defect prediction;
2016;Chakkrit Tantithamthavorn,Shane McIntosh,Ahmed E. Hassan,Kenichi Matsumoto;Automated parameter optimization of classification techniques for defect prediction models.;321-332;12;Defect prediction;
2016;Bin Liang,Pan Bian,Yan Zhang,Wenchang Shi,Wei You,Yan Cai;AntMiner: mining more bugs by reducing noise interference.;333-344;12;Defect prediction;
2016;Aditya Desai,Sumit Gulwani,Vineet Hingorani,Nidhi Jain,Amey Karkare,Mark Marron,Sailesh R,Subhajit Roy;Program synthesis using natural language.;345-356;12;Synthesis;
2016;Mukund Raghothaman,Yi Wei,Youssef Hamadi;SWIM: synthesizing what i mean: code search and idiomatic snippet synthesis.;357-367;11;Synthesis;
2016;Adi Omari,Sharon Shoham,Eran Yahav;Cross-supervised synthesis of web-crawlers.;368-379;12;Synthesis;
2016;Juan Zhai,Jianjun Huang,Shiqing Ma,Xiangyu Zhang,Lin Tan,Jianhua Zhao,Feng Qin;Automatic model generation from documentation for Java API functions.;380-391;12;Synthesis;
2016;Christoph Treude,Martin P. Robillard;Augmenting API documentation with insights from stack overflow.;392-403;12;API;
2016;Xin Ye,Hui Shen,Xiao Ma,Razvan C. Bunescu,Chang Liu;From word embeddings to document similarities for improved information retrieval in software engineering.;404-415;12;API;
2016;Tam The Nguyen,Hung Viet Pham,Phong Minh Vu,Tung Thanh Nguyen;Learning API usages from bytecode: a statistical approach.;416-427;12;API;
2016;Baishakhi Ray,Vincent Hellendoorn,Saheel Godhane,Zhaopeng Tu,Alberto Bacchelli,Premkumar T. Devanbu;"On the ""naturalness"" of buggy code.";428-439;12;Code smells;
2016;Willian Nalepa Oizumi,Alessandro F. Garcia,Leonardo da Silva Sousa,Bruno Barbieri Pontes Cafeo,Yixue Zhao;Code anomalies flock together: exploring code anomaly agglomerations for locating design problems.;440-451;12;Code smells;
2016;Sebastian C. Müller,Thomas Fritz;Using (bio)metrics to predict code quality online.;452-463;12;Code smells;
2016;Shing-Chi Cheung,Wanjun Chen,Yepang Liu,Chang Xu;CUSTODES: automatic spreadsheet cell clustering and smell detection using strong and weak features.;464-475;12;Code smells;
2016;Martin P. Robillard,Nenad Medvidovic;"Disseminating architectural knowledge on open-source projects: a case study of the book ""architecture of open-source applications"".";476-487;12;Architecture;
2016;Lu Xiao,Yuanfang Cai,Rick Kazman,Ran Mo,Qiong Feng;Identifying and quantifying architectural debt.;488-498;11;Architecture;
2016;Ran Mo,Yuanfang Cai,Rick Kazman,Lu Xiao,Qiong Feng;Decoupling level: a new metric for architectural maintenance complexity.;499-510;12;Architecture;
2016;Rahul Gopinath,Mohammad Amin Alipour,Iftekhar Ahmed,Carlos Jensen,Alex Groce;On the limits of mutation reduction strategies.;511-522;12;Testing 1;
2016;Christopher Henard,Mike Papadakis,Mark Harman,Yue Jia,Yves Le Traon;Comparing white-box and black-box test prioritization.;523-534;12;Testing 1;
2016;Yafeng Lu,Yiling Lou,Shiyang Cheng,Lingming Zhang,Dan Hao,Yangfan Zhou,Lu Zhang 0023;How does regression test prioritization perform in real-world software evolution?;535-546;12;Testing 1;
2016;Sebastiano Panichella,Annibale Panichella,Moritz Beller,Andy Zaidman,Harald C. Gall;The impact of test case summaries on bug fixing performance: an empirical investigation.;547-558;12;Testing 1;
2016;Nariman Mirzaei,Joshua Garcia,Hamid Bagheri,Alireza Sadeghi,Sam Malek;Reducing combinatorics in GUI testing of android applications.;559-570;12;Testing 2;
2016;Zhengrui Qin,Yutao Tang,Edmund Novak,Qun Li;MobiPlay: a remote execution based record-and-replay tool for mobile applications.;571-582;12;Testing 2;
2016;Tingting Yu,Xiao Qu,Myra B. Cohen;VDTest: an automated framework to support testing for virtual devices.;583-594;12;Testing 2;
2016;Reza Matinnejad,Shiva Nejati,Lionel C. Briand,Thomas Bruckmann;Automated test suite generation for time-continuous simulink models.;595-606;12;Testing 2;
2016;Xiao-Yuan Jing,Fumin Qi,Fei Wu,Baowen Xu;Missing data imputation based on low-rank recovery and semi-supervised regression for software effort estimation.;607-618;12;Effort estimation and search;
2016;Federica Sarro,Alessio Petrozziello,Mark Harman;Multi-objective software effort estimation.;619-630;12;Effort estimation and search;
2016;Shuai Wang,Shaukat Ali,Tao Yue,Yan Li,Marius Liaaen;A practical guide to select quality indicators for assessing pareto-based search algorithms in search-based software engineering.;631-642;12;Effort estimation and search;
2016;Flávio Medeiros,Christian Kästner,Márcio Ribeiro,Rohit Gheyi,Sven Apel;A comparison of 10 sampling algorithms for configurable systems.;643-654;12;Product lines;
2016;Xavier Devroey,Gilles Perrouin,Mike Papadakis,Axel Legay,Pierre-Yves Schobbens,Patrick Heymans;Featured model-based mutation analysis.;655-666;12;Product lines;
2016;Reimar Schröter,Sebastian Krieter,Thomas Thüm,Fabian Benduhn,Gunter Saake;Feature-model interfaces: the highway to compositional analyses of highly-configurable systems.;667-678;12;Product lines;
2016;Jean Melo,Claus Brabrand,Andrzej Wasowski;How does the degree of variability affect bug finding?;679-690;12;Product lines;
2016;Sergey Mechtaev,Jooyong Yi,Abhik Roychoudhury;Angelix: scalable multiline program patch synthesis via symbolic analysis.;691-701;11;Repair and model synthesis;
2016;Fan Long,Martin C. Rinard;An analysis of the search spaces for generate and validate patch generation systems.;702-713;12;Repair and model synthesis;
2016;Yu-Fang Chen,Chiao Hsieh,Ondrej Lengál,Tsung-Ju Lii,Ming-Hsien Tsai,Bow-Yaw Wang,Farn Wang;PAC learning-based verification and model synthesis.;714-724;11;Repair and model synthesis;
2016;Steven Arzt,Eric Bodden;StubDroid: automatic inference of precise data-flow summaries for the android framework.;725-735;11;Repair and model synthesis;
2016;Michael J. Coblenz,Joshua Sunshine,Jonathan Aldrich,Brad A. Myers,Sam Weber,Forrest Shull;Exploring language support for immutability.;736-747;12;Languages;
2016;Diomidis Spinellis,Panos Louridas,Maria Kechagia;The evolution of C programming practices: a study of the Unix operating system 1973-2015.;748-759;12;Languages;
2016;Phillip Merlin Uesbeck,Andreas Stefik,Stefan Hanenberg,Jan Pedersen,Patrick Daleiden;An empirical study on the impact of C++ lambdas and programmer experience.;760-771;12;Languages;
2016;Nawrin Sultana,Justin Middleton,Jeffrey Overbey,Munawar Hafiz;Understanding and fixing multiple language interoperability issues: the C/Fortran case.;772-783;12;Languages;
2016;Muhammad Ali Gulzar,Matteo Interlandi,Seunghyun Yoo,Sai Deep Tetali,Tyson Condie,Todd D. Millstein,Miryung Kim;BigDebug: debugging primitives for interactive big data processing in spark.;784-795;12;Debugging;
2016;Guido Salvaneschi,Mira Mezini;Debugging for reactive programming.;796-807;12;Debugging;
2016;Xiaoyuan Xie,Zicong Liu,Shuo Song,Zhenyu Chen,Jifeng Xuan,Baowen Xu;Revisit of automatic debugging via human focus-tracking analysis.;808-819;12;Debugging;
2016;Weidong Cui,Marcus Peinado,Sang Kil Cha,Yanick Fratantonio,Vasileios P. Kemerlis;RETracer: triaging crashes by reverse execution from partial memory dumps.;820-831;12;Debugging;
2016;Jonas Eckhardt,Andreas Vogelsang,Daniel Méndez Fernández;"Are ""non-functional"" requirements really non-functional?: an investigation of non-functional requirements in practice.";832-842;11;Requirements;
2016;Preethu Rose Anish,Balaji Balasubramaniam,Abhishek Sainani,Jane Cleland-Huang,Maya Daneva,Roel J. Wieringa,Smita Ghaisas;Probing for requirements knowledge to stimulate architectural thinking.;843-854;12;Requirements;
2016;Dalal Alrajeh,Axel van Lamsweerde,Jeff Kramer,Alessandra Russo,Sebastián Uchitel;Risk-driven revision of requirements models.;855-865;11;Requirements;
2016;Awais Rashid,Syed Asad Ali Naqvi,Rajiv Ramdhany,Matthew John Edwards,Ruzanna Chitchyan,M. Ali Babar;"Discovering ""unknown known"" security requirements.";866-876;11;Requirements;
2016;Nimrod Busany,Shahar Maoz;Behavioral log analysis with statistical guarantees.;877-887;11;Dynamic analysis;
2016;Marcello M. Bersani,Domenico Bianculli,Carlo Ghezzi,Srdan Krstic,Pierluigi San Pietro;Efficient large-scale trace checking using mapreduce.;888-898;11;Dynamic analysis;
2016;Magnus Madsen,Frank Tip,Esben Andreasen,Koushik Sen,Anders Møller;Feedback-directed instrumentation for deployed JavaScript applications.;899-910;12;Dynamic analysis;
2016;Tongping Liu,Charlie Curtsinger,Emery D. Berger;DoubleTake: fast and precise error detection via evidence-based dynamic analysis.;911-922;12;Dynamic analysis;
2016;Konstantin Rubinov,Lucia Rosculete,Tulika Mitra,Abhik Roychoudhury;Automated partitioning of android applications for trusted execution environments.;923-934;12;Security;
2016;Sarah Nadi,Stefan Krüger,Mira Mezini,Eric Bodden;Jumping through hoops: why do Java developers struggle with cryptography APIs?;935-946;12;Security;
2016;Joseph P. Near,Daniel Jackson;Finding security bugs in web applications using a catalog of access control patterns.;947-958;12;Security;
2016;Wei You,Bin Liang,Wenchang Shi,Shuyang Zhu,Peng Wang,Sikefu Xie,Xiangyu Zhang;Reference hijacking: patching, protecting and analyzing on unmodified and non-rooted android devices.;959-970;12;Security;
2016;Ronnie E. S. Santos,Fabio Q. B. da Silva,Cleyton V. C. de Magalhães,Cleviton V. F. Monteiro;Building a theory of job rotation in software engineering from an instrumental case study.;971-981;11;Collaborative;
2016;Julia Rubin,Martin Rinard;The challenges of staying together while moving fast: an exploratory study.;982-993;12;Collaborative;
2016;Bogdan Vasilescu,Kelly Blincoe,Qi Xuan,Casey Casalnuovo,Daniela E. Damian,Premkumar T. Devanbu,Vladimir Filkov;The sky is not the limit: multitasking across GitHub projects.;994-1005;12;Collaborative;
2016;Peter C. Rigby,Yue Cai Zhu,Samuel M. Donadelli,Audris Mockus;Quantifying and mitigating turnover-induced knowledge loss: case studies of chrome and a project at avaya.;1006-1016;11;Collaborative;
2016;Lutz Prechelt,Holger Schmeisky,Franz Zieris;Quality experience: a grounded theory of successful agile projects without dedicated testers.;1017-1027;11;Software quality;
2016;Oleksii Kononenko,Olga Baysal,Michael W. Godfrey;Code review quality: how developers see it.;1028-1038;11;Software quality;
2016;Patanamon Thongtanunam,Shane McIntosh,Ahmed E. Hassan,Hajimu Iida;Revisiting code ownership and its relationship with software quality in the scope of modern code review.;1039-1050;12;Software quality;
2016;Hao Sun,Xiangyu Zhang,Yunhui Zheng,Qingkai Zeng;IntEQ: recognizing benign integer overflows via equivalence checking across multiple precisions.;1051-1062;12;Program analysis;
2016;Hui Liu,Qiurong Liu,Cristian-Alexandru Staicu,Michael Pradel,Yue Luo;Nomen est omen: exploring and exploiting similarities between argument and parameter names.;1063-1073;11;Program analysis;
2016;Cindy Rubio-González,Cuong Nguyen 0001,Benjamin Mehne,Koushik Sen,James Demmel,William Kahan,Costin Iancu,Wim Lavrijsen,David H. Bailey,David Hough;Floating-point precision tuning using blame analysis.;1074-1085;12;Program analysis;
2016;Daniel Fava,Dan Shapiro,Joseph C. Osborn,Martin Schäf,E. James Whitehead Jr.;Crowdsourcing program preconditions via a classification game.;1086-1096;11;Program analysis;
2016;Jeff Huang 0001;Scalable thread sharing analysis.;1097-1108;12;Concurrency;
2016;Yan Cai,Lingwei Cao;Fixing deadlocks via lock pre-acquisitions.;1109-1120;12;Concurrency;
2016;Valerio Terragni,Shing-Chi Cheung;Coverage-driven test code generation for concurrent classes.;1121-1132;12;Concurrency;
2016;Michael D. Ernst,Alberto Lovato,Damiano Macedonio,Fausto Spoto,Javier Thaine;Locking discipline inference and checking.;1133-1144;12;Concurrency;
2016;Jongwook Kim,Don S. Batory,Danny Dig,Maider Azanza;Improving refactoring speed by 10X.;1145-1156;12;Maintenance;
2016;Hitesh Sajnani,Vaibhav Saini,Jeffrey Svajlenko,Chanchal K. Roy,Cristina V. Lopes;SourcererCC: scaling code clone detection to big-code.;1157-1168;12;Maintenance;
2016;Saba Alimadadi,Ali Mesbah 0001,Karthik Pattabiraman;Understanding asynchronous interactions in full-stack JavaScript.;1169-1180;12;Maintenance;
2016;Hristina Palikareva,Tomasz Kuchta,Cristian Cadar;Shadow of a doubt: testing for divergences between software versions.;1181-1192;12;Maintenance;
2016;Hamed Esfahani,Jonas Fietz,Qi Ke,Alexei Kolomiets,Erica Lan,Erik Mavrinac,Wolfram Schulte,Newton Sanches,Srikanth Kandula;CloudBuild: Microsoft's distributed and caching build service.;11-20;10;Software engineering in practice (SEIP):infrastructure support;
2016;Tony Savor,Mitchell Douglas,Michael Gentili,Laurie Williams,Kent Beck,Michael Stumm;Continuous deployment at Facebook and OANDA.;21-30;10;Software engineering in practice (SEIP):infrastructure support;
2016;Antonio Martini,Jan Bosch;An empirically developed method to aid decisions on architectural technical debt refactoring: AnaConDebt.;31-40;10;Software engineering in practice (SEIP):infrastructure support;
2016;Anurag Dwarakanath,N. C. Shrikanth,Kumar Abhinav,Alex Kass;Trustworthiness in enterprise crowdsourcing: a taxonomy & evidence from data.;41-50;10;Software engineering in practice (SEIP):infrastructure support;
2016;Paulo Salem;Practical programming, validation and verification with finite-state machines: a library and its industrial application.;51-60;10;Software engineering in practice (SEIP):static analysis;
2016;Joonyoung Park,Inho Lim,Sukyoung Ryu;Battles with false positives in static analysis of JavaScript web applications in the wild.;61-70;10;Software engineering in practice (SEIP):static analysis;
2016;Tse-Hsun Chen,Weiyi Shang,Ahmed E. Hassan,Mohamed N. Nasser,Parminder Flora;Detecting problems in the database access code of large scale systems: an industrial experience report.;71-80;10;Software engineering in practice (SEIP):static analysis;
2016;Brian Anderson,Lars Bergstrom,Manish Goregaokar,Josh Matthews,Keegan McAllister,Jack Moffitt,Simon Sapin;Engineering the servo web browser engine using Rust.;81-89;9;Software engineering in practice (SEIP):static analysis;
2016;Lorin Hochstein,Casey Rosenthal;Chaos engineering panel.;90-91;2;Software engineering in practice (SEIP):panel discussion;
2016;Titus Barik,Robert DeLine,Steven M. Drucker,Danyel Fisher;The bones of the system: a case study of logging and telemetry at Microsoft.;92-101;10;Software engineering in practice (SEIP):monitoring;
2016;Qingwei Lin,Hongyu Zhang,Jian-Guang Lou,Yu Zhang,Xuewei Chen;Log clustering based problem identification for online service systems.;102-111;10;Software engineering in practice (SEIP):monitoring;
2016;Yu Jiang,Han Liu,Hui Kong,Rui Wang,Mohammad Hosseini,Jia-Guang Sun,Lui Sha;Use runtime verification to improve the quality of medical care practice.;112-121;10;Software engineering in practice (SEIP):monitoring;
2016;Rick Rabiser,Michael Vierhauser,Paul Grünbacher;Assessing the usefulness of a requirements monitoring tool: a study involving industrial software engineers.;122-131;10;Software engineering in practice (SEIP):monitoring;
2016;Thomas Reschenhofer,Manoj Bhat,Adrian Hernandez-Mendez,Florian Matthes;Lessons learned in aligning data and model evolution in collaborative information systems.;132-141;10;Software engineering in practice (SEIP):evolution;
2016;Shreya Kumar,Charles Wallace,Michael Young;Mentoring trajectories in an evolving agile workplace.;142-151;10;Software engineering in practice (SEIP):evolution;
2016;Shinobu Saito,Yukako Iimura,Hirokazu Tashiro,Aaron K. Massey,Annie I. Antón;Visualizing the effects of requirements evolution.;152-161;10;Software engineering in practice (SEIP):evolution;
2016;Wensheng Dou,Liang Xu,Shing-Chi Cheung,Chushu Gao,Jun Wei,Tao Huang;VEnron: a versioned spreadsheet corpus and related evolution analysis.;162-171;10;Software engineering in practice (SEIP):evolution;
2016;Paolo Salvaneschi;System testing of repository-style software: an experience report.;172-181;10;Software engineering in practice (SEIP):dynamic analysis;
2016;Shuai Wang,Shaukat Ali,Tao Yue,Øyvind Bakkeli,Marius Liaaen;Enhancing test case prioritization in an industrial setting with resource awareness and multi-objective search.;182-191;10;Software engineering in practice (SEIP):dynamic analysis;
2016;Manuel Quintela-Pumares,Bruno Cabral,Daniel Fernández Lanvin,Alberto Manuel Fernández Álvarez;Integrating automatic backward error recovery in asynchronous rich clients.;192-201;10;Software engineering in practice (SEIP):dynamic analysis;
2016;Steven Versteeg,Miao Du,Jean-Guy Schneider,John Grundy,Jun Han,Menka Goyal;Opaque service virtualisation: a practical tool for emulating endpoint systems.;202-211;10;Software engineering in practice (SEIP):dynamic analysis;
2016;Junji Shimagaki,Yasutaka Kamei,Shane McIntosh,Ahmed E. Hassan,Naoyasu Ubayashi;A study of the quality-impacting practices of modern code review at Sony mobile.;212-221;10;Software engineering in practice (SEIP):development support;
2016;Mohammad Masudur Rahman,Chanchal K. Roy,Jason A. Collins;CoRReCT: code reviewer recommendation in GitHub based on cross-project and technology experience.;222-231;10;Software engineering in practice (SEIP):development support;
2016;Martin F. Krafft,Klaas-Jan Stol,Brian Fitzgerald;How do free/open source developers pick their tools?: a Delphi study of the Debian project.;232-241;10;Software engineering in practice (SEIP):development support;
2016;Franz Zieris,Lutz Prechelt;Observations on knowledge transfer of professional software developers during pair programming.;242-250;9;Software engineering in practice (SEIP):development support;
2016;Vladimir Ivanov,Manuel Mazzara,Witold Pedrycz,Alberto Sillitti,Giancarlo Succi;Assessing the process of an Eastern European software SME using systemic analysis, GQM, and reliability growth models: a case study.;251-259;9;Software engineering in practice (SEIP):process;
2016;Vinay Kulkarni;Model driven development of business applications: a practitioner's perspective.;260-269;10;Software engineering in practice (SEIP):process;
2016;Daniel Ståhl,Jan Bosch;Industry application of continuous integration modeling: a multiple-case study.;270-279;10;Software engineering in practice (SEIP):process;
2016;Michael Washburn Jr.,Pavithra Sathiyanarayanan,Meiyappan Nagappan,Thomas Zimmermann 0001,Christian Bird;What went right and what went wrong: an analysis of 155 postmortems from game development.;280-289;10;Software engineering in practice (SEIP):process;
2016;Marcello Missiroli,Daniel Russo 0002,Paolo Ciancarini;Learning Agile software development in high school: an investigation.;293-302;10;Software engineering education and training (SEET):agile;
2016;Jan-Philipp Steghöfer,Eric Knauss,Emil Alégroth,Imed Hammouda,Håkan Burden,Morgan Ericsson;Teaching Agile: addressing the conflict between project delivery and application of Agile methods.;303-312;10;Software engineering education and training (SEET):agile;
2016;Christoph Matthies,Thomas Kowark,Keven Richly,Matthias Uflacker,Hasso Plattner;How surveys, tutors, and software help to assess Scrum adoption in a classroom software engineering project.;313-322;10;Software engineering education and training (SEET):agile;
2016;Lukas Alperowitz,Dora Dzvonyar,Bernd Bruegge;Metrics in Agile project courses.;323-326;4;Software engineering education and training (SEET):agile;
2016;Humberto Cervantes,Serge Haziyev,Olha Hrytsay,Rick Kazman;Smart decisions: an architectural design game.;327-335;9;Software engineering education and training (SEET):architecture and collaboration;
2016;Andrew Cain,Muhammad Ali Babar;Reflections on applying constructive alignment with formative feedback for teaching introductory programming and software architecture.;336-345;10;Software engineering education and training (SEET):architecture and collaboration;
2016;Christopher Theisen,Laurie Williams,Kevin Oliver,Emerson R. Murphy-Hill;Software security education at scale.;346-355;10;Software engineering education and training (SEET):architecture and collaboration;
2016;Matthias Galster,Samuil Angelov;What makes teaching software architecture difficult?;356-359;4;Software engineering education and training (SEET):architecture and collaboration;
2016;Collin McMillan,Amanda Rodda-Tyler;Collaborative software engineering education between college seniors and blind high school students.;360-363;4;Software engineering education and training (SEET):architecture and collaboration;
2016;Guoping Rong,He Zhang,Qi Shan,Dong Shao;Can software engineering students program defect-free?: an educational approach.;364-373;10;Software engineering education and training (SEET):verification and test;
2016;Omar S. Gómez,Sira Vegas,Natalia Juristo;Impact of CS programs on the quality of test cases generation: an empirical study.;374-383;10;Software engineering education and training (SEET):verification and test;
2016;Stephan Krusche,Mjellma Berisha,Bernd Bruegge;Teaching code review management using branch based workflows.;384-393;10;Software engineering education and training (SEET):verification and test;
2016;Suresh Kothari,Ahmed Tamrawi,Jeremias Sauceda,Jon Mathews;Let's verify Linux: accelerated learning of analytical reasoning through automation and collaboration.;394-403;10;Software engineering education and training (SEET):verification and test;
2016;Ana María Moreno,Maria Isabel Sánchez Segura,Fuensanta Medina-Domínguez,Lawrence Peters,Jonathan Araujo;Enriching traditional software engineering curricula with software project management knowledge.;404-411;8;Software engineering education and training (SEET):team projects;
2016;Marco Kuhrmann,Jürgen Münch;When teams go crazy: an environment to experience group dynamics in software project management courses.;412-421;10;Software engineering education and training (SEET):team projects;
2016;Joseph Feliciano,Margaret-Anne D. Storey,Alexey Zagalsky;Student experiences using GitHub in software engineering courses: a case study.;422-431;10;Software engineering education and training (SEET):team projects;
2016;Otto Seppälä,Tapio Auvinen,Ville Karavirta,Arto Vihavainen,Petri Ihantola;What communication tools students use in software projects and how do different tools suit different parts of project work?;432-435;4;Software engineering education and training (SEET):team projects;
2016;Peng Zhang,Jules White,Douglas C. Schmidt;HoliCoW: automatically breaking team-based software projects to motivate student testing.;436-439;4;Software engineering education and training (SEET):team projects;
2016;Jouni Lappalainen,Nirnaya Tripathi,Jouni Similä;Teaching a global software development course: student experiences using onsite exercise simulation.;440-450;11;Software engineering education and training (SEET):software development;
2016;Claudia Susie C. Rodrigues,Cláudia Maria Lima Werner,Luiz Landau;VisAr3D: an innovative 3D visualization of UML models.;451-460;10;Software engineering education and training (SEET):software development;
2016;Roxana Lisette Quintanilla Portugal,Priscila Engiel,Joanna Pivatelli,Julio Cesar Sampaio do Prado Leite;Facing the challenges of teaching requirements engineering.;461-470;10;Software engineering education and training (SEET):software development;
2016;Ville T. Heikkilä,Maria Paasivaara,Casper Lassenius;Teaching university students Kanban with a collaborative board game.;471-480;10;Software engineering education and training (SEET):software development;
2016;Lannan Luo,Qiang Zeng;SolMiner: mining distinct solutions in programs.;481-490;10;Software engineering education and training (SEET):tools and toys;
2016;Sebastian Pape,Julian Flake,Andreas Beckmann,Jan Jürjens;STAGE: a software tool for automatic grading of testing exercises: case study paper.;491-500;10;Software engineering education and training (SEET):tools and toys;
2016;Sihan Li,Xusheng Xiao,Blake Bassett,Tao Xie,Nikolai Tillmann;Measuring code behavioral similarity for programming and software engineering education.;501-510;10;Software engineering education and training (SEET):tools and toys;
2016;Linda Laird,Ye Yang;Engaging software estimation education using LEGOs: a case study.;511-517;7;Software engineering education and training (SEET):tools and toys;
2016;Anthony Finkelstein;Software engineering and policy.;521-522;2;Software engineering in society (SEIS):keynotes;
2016;Erik A. Jagroep,Jan Martijn van der Werf,Sjaak Brinkkemper,Giuseppe Procaccianti,Patricia Lago,Leen Blom,Rob van Vliet;Software energy profiling: comparing releases of a software product.;523-532;10;Software engineering in society (SEIS):sustainable software design;
2016;Ruzanna Chitchyan,Christoph Becker,Stefanie Betz,Leticia Duboc,Birgit Penzenstadler,Norbert Seyff,Colin C. Venters;Sustainability design in requirements engineering: state of practice.;533-542;10;Software engineering in society (SEIS):sustainable software design;
2016;Bendra Ojameruaye,Rami Bahsoon,Leticia Duboc;Sustainability debt: a portfolio-based approach for evaluating sustainability requirements in architectures.;543-552;10;Software engineering in society (SEIS):sustainable software design;
2016;Maria Angela Ferrario,William Simm,Stephen Forshaw,Adrian Gradinar,Marcia Tavares Smith,Ian Smith;Values-first SE: research principles in practice.;553-562;10;Software engineering in society (SEIS):values in software engineering;
2016;Paolo Ciancarini,Daniel Russo 0002,Alberto Sillitti,Giancarlo Succi;A guided tour of the legal implications of software cloning.;563-572;10;Software engineering in society (SEIS):values in software engineering;
2016;James Holston,Valérie Issarny,Cristhian Parra;Engineering software assemblies for participatory democracy: the participatory budgeting use case.;573-582;10;Software engineering in society (SEIS):values in software engineering;
2016;Reza Matinnejad,Shiva Nejati,Lionel C. Briand,Thomas Bruckmann;SimCoTest: a test suite generation tool for simulink/stateflow controllers.;585-588;4;Demonstrations:verification and validation (1);
2016;Montgomery Carter,Shaobo He,Jonathan Whitaker,Zvonimir Rakamaric,Michael Emmi;SMACK software verification toolchain.;589-592;4;Demonstrations:verification and validation (1);
2016;Qi Luo,Denys Poshyvanyk,Aswathy Nair,Mark Grechanik;FOREPOST: a tool for detecting performance problems with feedback-driven learning software testing.;593-596;4;Demonstrations:verification and validation (1);
2016;Vaibhav Saini,Hitesh Sajnani,Jaewoo Kim,Cristina V. Lopes;SourcererCC and SourcererCC-I: tools to detect clones in batch mode and during software development.;597-600;4;Demonstrations:verification and validation (2);
2016;Tony Ohmann,Ryan Stanley,Ivan Beschastnikh,Yuriy Brun;Visually reasoning about system and resource behavior.;601-604;4;Demonstrations:verification and validation (2);
2016;Yung-Pin Cheng,Chiu-Yu Ku,Wei-Chen Pan,Chuan Yang,Ting-Shu Lin;Toward arbitrary mapping for debugging visualizations.;605-608;4;Demonstrations:verification and validation (2);
2016;Kevin Moran,Mario Linares Vásquez,Carlos Bernal-Cárdenas,Denys Poshyvanyk;FUSION: a tool for facilitating and augmenting android bug reporting.;609-612;4;Demonstrations:verification and validation (2);
2016;Davood Mazinanian,Nikolaos Tsantalis,Raphael Stein,Zackary Valenta;JDeodorant: clone refactoring.;613-616;4;Demonstrations:analysis and refactoring;
2016;Djamel Eddine Khelladi,Reda Bendraou,Marie-Pierre Gervais;AD-ROOM: a tool for automatic detection of refactorings in object-oriented models.;617-620;4;Demonstrations:analysis and refactoring;
2016;Christian D. Newman,Tessandra Sage,Michael L. Collard,Hakam W. Alomari,Jonathan I. Maletic;srcSlice: a tool for efficient static forward slicing.;621-624;4;Demonstrations:analysis and refactoring;
2016;Shiva Krishna Imminni,Mir Anamul Hasan,Michael Duckett,Puneet Sachdeva,Sudipta Karmakar,Piyush Kumar,Sonia Haiduc;SPYSE: a semantic search engine for python packages and modules.;625-628;4;Demonstrations:trending technologies;
2016;Jens Meinicke,Thomas Thüm,Reimar Schröter,Sebastian Krieter,Fabian Benduhn,Gunter Saake,Thomas Leich;FeatureIDE: taming the preprocessor wilderness.;629-632;4;Demonstrations:trending technologies;
2016;Dennis Priefer,Peter Kneisel,Gabriele Taentzer;JooMDD: a model-driven development environment for web content management system extensions.;633-636;4;Demonstrations:trending technologies;
2016;Thomas Ball,Jonathan Protzenko,Judith Bishop,Michal Moskal,Jonathan de Halleux,Michael Braun,Steve Hodges,Clare Riley;Microsoft touch develop and the BBC micro: bit.;637-640;4;Demonstrations:trending technologies;
2016;Andrea Di Sorbo,Sebastiano Panichella,Corrado Aaron Visaggio,Massimiliano Di Penta,Gerardo Canfora,Harald C. Gall;DECA: development emails content analyzer.;641-644;4;Demonstrations:program understanding;
2016;Luca Ponzanelli,Gabriele Bavota,Andrea Mocci,Massimiliano Di Penta,Rocco Oliveto,Barbara Russo,Sonia Haiduc,Michele Lanza;CodeTube: extracting relevant fragments from software development video tutorials.;645-648;4;Demonstrations:program understanding;
2016;Jaroslav M. Fowkes,Pankajan Chanthirasegaran,Razvan Ranca,Miltiadis Allamanis,Mirella Lapata,Charles A. Sutton;TASSAL: autofolding for source code summarization.;649-652;4;Demonstrations:program understanding;
2016;Ziang Ma,Haoyu Wang,Yao Guo,Xiangqun Chen;LibRadar: fast and accurate detection of third-party libraries in Android apps.;653-656;4;Demonstrations:program understanding;
2016;William Martin;Causal impact for app store analysis.;659-661;3;ACM student research competition;
2016;Justin Smith;Identifying successful strategies for resolving static analysis notifications.;662-664;3;ACM student research competition;
2016;Ayushi Rastogi;Do biases related to geographical location influence work-related decisions in GitHub?;665-667;3;ACM student research competition;
2016;Flávio Medeiros;Safely evolving preprocessor-based configurable systems.;668-670;3;ACM student research competition;
2016;Paige Rodeghero,Collin McMillan;Discovering important source code terms.;671-673;3;ACM student research competition;
2016;Melina Mongiovi;Scaling testing of refactoring engines.;674-676;3;ACM student research competition;
2016;Arun K. Rajagopalan;RDIT: race detection from incomplete traces.;677-679;3;ACM student research competition;
2016;Han Liu;Towards better program obfuscation: optimization via language models.;680-682;3;ACM student research competition;
2016;Ameer Armaly,Collin McMillan;An empirical study of blindness and program comprehension.;683-685;3;ACM student research competition;
2016;Alan Huang;Maximally stateless model checking for concurrent bugs under relaxed memory models.;686-688;3;ACM student research competition;
2016;Ting Su;FSMdroid: guided GUI testing of android apps.;689-691;3;ACM student research competition;
2016;Shanshan Li;Instantaneous performance bug detection in IDE.;692-694;3;ACM student research competition;
2016;Bowen Cai;Code parallelization through sequential code search.;695-697;3;ACM student research competition;
2016;Hadil Abukwaik,Mohammed Abujayyab,Shah Rukh Humayoun,H. Dieter Rombach;Extracting conceptual interoperability constraints from API documentation using machine learning.;701-703;3;Posters;
2016;Zadia Codabux,Byron J. Williams;Technical debt prioritization using predictive analytics.;704-706;3;Posters;
2016;Hui Yang,Xiaobing Sun,Bin Li,Jiajun Hu;Recommending developers with supplementary information for issue request resolution.;707-709;3;Posters;
2016;Néstor Ruben Barraza;A new homogeneous pure birth process based software reliability model.;710-712;3;Posters;
2016;Minhaz F. Zibran;On the effectiveness of labeled latent dirichlet allocation in automatic bug-report categorization.;713-715;3;Posters;
2016;Oscar Chaparro,Andrian Marcus;On the reduction of verbose queries in text retrieval based software maintenance.;716-718;3;Posters;
2016;Shahab Bayati;Security expert recommender in software engineering.;719-721;3;Posters;
2016;Abdullah Aldaeej,Omar Badreddin;Towards promoting design and UML modeling practices in the open source community.;722-724;3;Posters;
2016;Luigi Benedicenti,Franco Raffaele Cotugno,Paolo Ciancarini,Angelo Messina,Witold Pedrycz,Alberto Sillitti,Giancarlo Succi;Applying scrum to the army: a case study.;725-727;3;Posters;
2016;Guido Salvaneschi,Mira Mezini;Debugging reactive programming with reactive inspector.;728-730;3;Posters;
2016;Esteban Parra,Sonia Haiduc,Rebecca James;Making a difference: an overview of humanitarian free open source systems.;731-733;3;Posters;
2016;Zhenzhou Tian,Ting Liu,Qinghua Zheng,Feifei Tong,Ming Fan,Zijiang Yang;A new thread-aware birthmark for plagiarism detection of multithreaded programs.;734-736;3;Posters;
2016;Zeheng Li,LiGuo Huang;When to release in open source project?;737-739;3;Posters;
2016;Rahul Gopinath,Carlos Jensen,Alex Groce;Topsy-Turvy: a smarter and faster parallelization of mutation analysis.;740-743;4;Posters;
2016;Francesco Mercaldo,Corrado Aaron Visaggio,Gerardo Canfora,Aniello Cimitile;Mobile malware detection in the real world.;744-746;3;Posters;
2016;Patrick Rempel,Patrick Mäder;Continuous assessment of software traceability.;747-748;2;Posters;
2016;Thanh Van Nguyen,Anh Tuan Nguyen,Tien N. Nguyen;Characterizing API elements in software documentation with vector representation.;749-751;3;Posters;
2016;Xin Zhang,Zhenyu Chen,Chunrong Fang,Zicong Liu;Guiding the crowds for Android testing.;752-753;2;Posters;
2016;Kai Mindermann,Jan-Peter Ostberg,Stefan Wagner 0001;Assessing iterative practical software engineering courses with play money.;754-755;2;Posters;
2016;Trong Duc Nguyen,Anh Tuan Nguyen,Tien N. Nguyen;Mapping API elements for code migration with vector representations.;756-758;3;Posters;
2016;Nitin M. Tiwari,Ganesha Upadhyaya,Hridesh Rajan;Candoia: a platform and ecosystem for mining software repositories tools.;759-764;6;Posters;
2016;Cristian Cadar,Alastair F. Donaldson;Analysing the program analyser.;765-768;4;Visions of 2025 and beyond (V2025);
2016;Mark Staples,Liming Zhu,John C. Grundy;Continuous validation for data analytics systems.;769-772;4;Visions of 2025 and beyond (V2025);
2016;Danny Dig,Ralph E. Johnson,Darko Marinov,Brian P. Bailey,Don S. Batory;COPE: vision for a change-oriented programming environment.;773-776;4;Visions of 2025 and beyond (V2025);
2016;Erika S. Mesh,David M. Tolar,J. Scott Hawker;Exploring process improvement decisions to support a rapidly evolving developer base.;777-780;4;Visions of 2025 and beyond (V2025);
2016;Ravi Chugh;Prodirect manipulation: bidirectional programming for the masses.;781-784;4;Visions of 2025 and beyond (V2025);
2016;Mithun P. Acharya,Chris Parnin,Nicholas A. Kraft,Aldo Dagnino,Xiao Qu;Code drones.;785-788;4;Visions of 2025 and beyond (V2025);
2016;Lionel C. Briand,Shiva Nejati,Mehrdad Sabetzadeh,Domenico Bianculli;Testing the untestable: model testing of complex software-intensive systems.;789-792;4;Visions of 2025 and beyond (V2025);
2016;Pamela Zave;Theories of everything.;793-796;4;Visions of 2025 and beyond (V2025);
2016;David Socha,Robin Adams,Kelly Franznick,Wolff-Michael Roth,Kevin Sullivan,Josh Tenenberg,Skip Walter;Wide-field ethnography: studying software engineering in 2025 and beyond.;797-802;6;Visions of 2025 and beyond (V2025);
2016;Lukas Linsbauer,Alexander Egyed,Roberto Erick Lopez-Herrejon;A variability aware configuration management and revision control platform.;803-806;4;Doctoral symposium;
2016;Duc Minh Le,Nenad Medvidovic;Architectural-based speculative analysis to predict bugs in a software system.;807-810;4;Doctoral symposium;
2016;Christopher Vendome,Denys Poshyvanyk;Assisting developers with license compliance.;811-814;4;Doctoral symposium;
2016;Simon Schwichtenberg,Gregor Engels;Automatized derivation of comprehensive specifications for black-box services.;815-818;4;Doctoral symposium;
2016;Li Li;Boosting static analysis of Android apps through code instrumentation.;819-822;4;Doctoral symposium;
2016;Iflaah Salman;Cognitive biases in software quality and testing.;823-826;4;Doctoral symposium;
2016;Diego Cedrim;Context-sensitive identification of refactoring opportunities.;827-830;4;Doctoral symposium;
2016;Kevin Moran,Denys Poshyvanyk;Fixing bug reporting for mobile and GUI-based applications.;831-834;4;Doctoral symposium;
2016;Rahul Mohanani;Implications of requirements engineering on software design: a cognitive insight.;835-838;4;Doctoral symposium;
2016;Fabian Rojas Blum;Mining software process lines.;839-842;4;Doctoral symposium;
2016;Jin Guo,Jane-Cleland Huang;Ontology learning and its application in software-intensive projects.;843-846;4;Doctoral symposium;
2016;Ali Sajedi Badashian;Realistic bug triaging.;847-850;4;Doctoral symposium;
2016;Katja Kevic;Recognizing relevant code elements during change task navigation.;851-854;4;Doctoral symposium;
2016;Stefan Fischer;Reducing the test effort of variability-rich systems by using feature interaction knowledge and variability-aware source code analysis.;855-858;4;Doctoral symposium;
2016;Christopher Theisen;Reusing stack traces: automated attack surface approximation.;859-862;4;Doctoral symposium;
2016;Leonardo da Silva Sousa;Spotting design problems with smell agglomerations.;863-866;4;Doctoral symposium;
2016;Chakkrit Tantithamthavorn;Towards a better understanding of the impact of experimental components on defect prediction modelling.;867-870;4;Doctoral symposium;
2016;Mona Rahimi;Trace link evolution across multiple software versions in safety-critical systems.;871-874;4;Doctoral symposium;
2016;Gabriella Castro Barbosa Costa;Using data provenance to improve software process enactment, monitoring and analysis.;875-878;4;Doctoral symposium;
2016;Roberto Oliveira;When more heads are better than one?: understanding and improving collaborative identification of code smells.;879-882;4;Doctoral symposium;
2016;Suresh Kothari,Ahmed Tamrawi,Jon Mathews;Rethinking verification: accuracy, efficiency and scalability through human-machine collaboration.;885-886;2;Technical briefings;
2016;Tim Menzies;How not to do it: anti-patterns for data science in software engineering.;887;1;Technical briefings;
2016;Robyn R. Lutz,Jack H. Lutz;Software engineering for molecular programming.;888-889;2;Technical briefings;
2016;Barry W. Boehm;Improving and balancing software qualities.;890-891;2;Technical briefings;
2016;Dalal Alrajeh,Alessandra Russo,Sebastián Uchitel,Jeff Kramer;Logic-based learning in software engineering.;892-893;2;Technical briefings;
2016;Xavier Franch,Guenther Ruhe;Software release planning.;894-895;2;Technical briefings;
2016;Xavier Franch,Angelo Susi;Risk assessment in open source systems.;896-897;2;Technical briefings;
2016;Sonia Haiduc,Venera Arnaoudova,Andrian Marcus,Giuliano Antoniol;The use of text retrieval and natural language processing in software engineering.;898-899;2;Technical briefings;
2016;Natalia Juristo,Sira Vegas;Analyzing software engineering experiments: everything you always wanted to know but were afraid to ask.;900-901;2;Technical briefings;
2016;Latifa Guerrouj,Olga Baysal,David Lo,Foutse Khomh;Software analytics: challenges and opportunities.;902-903;2;Technical briefings;
2016;Tao Xie,Nikolai Tillmann,Pratap Lakshman;Advances in unit testing: theory and practice.;904-905;2;Technical briefings;
2016;Jürgen Cito,Harald C. Gall;Using docker containers to improve reproducibility in software engineering research.;906-907;2;Technical briefings;
2016;Antonio Filieri,Martina Maggio;Control theory for software engineering: technical briefing.;908-910;3;Technical briefings;
2015;Janet Siegmund,Norbert Siegmund,Sven Apel;Views on Internal and External Validity in Empirical Software Engineering.;9-19;11;Reflections and Studies on Methodologies and Practices I;
2015;Paul Ralph;Developing and Evaluating Software Engineering Process Theories.;20-31;12;Reflections and Studies on Methodologies and Practices I;
2015;Kyle Dewey,Lawton Nichols,Ben Hardekopf;Automated Data Structure Generation: Refuting Common Wisdom.;32-43;12;Reflections and Studies on Methodologies and Practices I;
2015;Rahulkrishna Yandrapally,Giriprasad Sridhara,Saurabh Sinha;Automated Modularization of GUI Test Cases.;44-54;11;Testing I;
2015;Zebao Gao,Yalan Liang,Myra B. Cohen,Atif M. Memon,Zhen Wang;Making System User Interactive Tests Repeatable: When and What Should We Control?;55-65;11;Testing I;
2015;Fabrizio Pastore,Leonardo Mariani;ZoomIn: Discovering Failures by Detecting Wrong Assertions.;66-76;11;Testing I;
2015;Damien Octeau,Daniel Luchaup,Matthew Dering,Somesh Jha,Patrick McDaniel;Composite Constant Propagation: Application to Android Inter-Component Communication Analysis.;77-88;12;Mobile Applications;
2015;Shengqian Yang,Dacong Yan,Haowei Wu,Yan Wang,Atanas Rountev;Static Control-Flow Analysis of User-Driven Callbacks in Android Applications.;89-99;11;Mobile Applications;
2015;Jiaping Gui,Stuart McIlroy,Meiyappan Nagappan,William G. J. Halfond;Truth in Advertising: The Hidden Cost of Mobile Ads for Software Developers.;100-110;11;Mobile Applications;
2015;Tianyi Zhang,Myoungkyu Song,Joseph Pinedo,Miryung Kim;Interactive Code Review for Systematic Changes.;111-122;12;Evolution and Maintenance;
2015;Mohsen Vakilian,Raluca Sauciuc,J. David Morgenthaler,Vahab S. Mirrokni;Automated Decomposition of Build Targets.;123-133;11;Evolution and Maintenance;
2015;Mike Barnett,Christian Bird,João Brunet,Shuvendu K. Lahiri;Helping Developers Help Themselves: Automatic Decomposition of Code Review Changesets.;134-144;11;Evolution and Maintenance;
2015;Denis Gopan,Evan Driscoll,Ducson Nguyen,Dimitri Naydich,Alexey Loginov,David Melski;Data-Delineation in Software Binaries and its Application to Buffer-Overrun Discovery.;145-155;11;Analysis I;
2015;Antonio Carzaniga,Andrea Mattavelli,Mauro Pezzè;Measuring Software Redundancy.;156-166;11;Analysis I;
2015;Yao Pan,Jules White,Yu Sun 0002,Jeff Gray;Gray Computing: An Analysis of Computing with Background JavaScript Tasks.;167-177;11;Analysis I;
2015;Alexander von Rhein,Alexander Grebhahn,Sven Apel,Norbert Siegmund,Dirk Beyer 0001,Thorsten Berger;Presence-Condition Simplification in Highly Configurable Systems.;178-188;11;Highly Configurable and Adaptive Systems;
2015;Shoham Ben-David,Baruch Sterin,Joanne M. Atlee,Sandy Beidu;Symbolic Model Checking of Product-Line Requirements Using SAT-Based Methods.;189-199;11;Highly Configurable and Adaptive Systems;
2015;Antonio Filieri,Lars Grunske,Alberto Leva;Lightweight Adaptive Filtering for Efficient Learning and Updating of Probabilistic Models.;200-211;12;Highly Configurable and Adaptive Systems;
2015;Yun Young Lee,Darko Marinov,Ralph E. Johnson;Tempura: Temporal Dimension for IDEs.;212-222;11;Tools and Environments;
2015;YoungSeok Yoon,Brad A. Myers;Supporting Selective Undo in a Code Editor.;223-233;11;Tools and Environments;
2015;Mohsen Vakilian,Amarin Phaosawasdi,Michael D. Ernst,Ralph E. Johnson;Cascade: A Universal Programmer-Assisted Type Qualifier Inference Tool.;234-245;12;Tools and Environments;
2015;Valerio Terragni,Shing-Chi Cheung,Charles Zhang;RECONTEST: Effective Regression Testing of Concurrent Programs.;246-256;11;Regression Testing;
2015;Qiuping Yi,Zijiang Yang,Jian Liu,Chen Zhao,Chao Wang;A Synergistic Analysis Method for Explaining Failed Regression Tests.;257-267;11;Regression Testing;
2015;Ripon K. Saha,Lingming Zhang,Sarfraz Khurshid,Dewayne E. Perry;An Information Retrieval Approach for Regression Test Prioritization Based on Program Changes.;268-279;12;Regression Testing;
2015;Li Li 0029,Alexandre Bartel,Tegawendé F. Bissyandé,Jacques Klein,Yves Le Traon,Steven Arzt,Siegfried Rasthofer,Eric Bodden,Damien Octeau,Patrick McDaniel;IccTA: Detecting Inter-Component Privacy Leaks in Android Apps.;280-291;12;Security and Privacy;
2015;Koen Yskout,Riccardo Scandariato,Wouter Joosen;Do Security Patterns Really Help Designers?;292-302;11;Security and Privacy;
2015;Wei Yang,Xusheng Xiao,Benjamin Andow,Sihan Li,Tao Xie,William Enck;AppContext: Differentiating Malicious and Benign Mobile App Behaviors Using Context.;303-313;11;Security and Privacy;
2015;Michael Pradel,Parker Schuh,Koushik Sen;TypeDevil: Dynamic Type Inconsistency Analysis for JavaScript.;314-324;11;Analysis II;
2015;Frolin S. Ocariza Jr.,Karthik Pattabiraman,Ali Mesbah 0001;Detecting Inconsistencies in JavaScript MVC Applications.;325-335;11;Analysis II;
2015;Mattia Fazzini,Prateek Saxena,Alessandro Orso;AutoCSP: Automatically Retrofitting CSP to Web Applications.;336-346;11;Analysis II;
2015;Michael Waterman,James Noble,George Allan;How Much Up-Front? A Grounded theory of Agile Architecture.;347-357;11;Reflections and Studies on Methodologies and Practices II;
2015;Georgios Gousios,Andy Zaidman,Margaret-Anne D. Storey,Arie van Deursen;Work Practices and Challenges in Pull-Based Development: The Integrator's Perspective.;358-368;11;Reflections and Studies on Methodologies and Practices II;
2015;Edward K. Smith,Christian Bird,Thomas Zimmermann 0001;Build It Yourself! Homegrown Tools in a Large Software Company.;369-379;11;Reflections and Studies on Methodologies and Practices II;
2015;Jörg Liebig,Andreas Janker,Florian Garbe,Sven Apel,Christian Lengauer;Morpheus: Variability-Aware Refactoring in the Wild.;380-391;12;Refactoring;
2015;Na Meng,Lisa Hua,Miryung Kim,Kathryn S. McKinley;Does Automated Refactoring Obviate Systematic Editing?;392-402;11;Refactoring;
2015;Michele Tufano,Fabio Palomba,Gabriele Bavota,Rocco Oliveto,Massimiliano Di Penta,Andrea De Lucia,Denys Poshyvanyk;When and Why Your Code Starts to Smell Bad.;403-414;12;Refactoring;
2015;Jieming Zhu,Pinjia He,Qiang Fu,Hongyu Zhang,Michael R. Lyu,Dongmei Zhang;Learning to Log: Helping Developers Make Informed Logging Decisions.;415-425;11;Mining;
2015;Vitalii Avdiienko,Konstantin Kuznetsov,Alessandra Gorla,Andreas Zeller,Steven Arzt,Siegfried Rasthofer,Eric Bodden;Mining Apps for Abnormal Usage of Sensitive Data.;426-436;11;Mining;
2015;Pavel Avgustinov,Arthur I. Baars,Anders S. Henriksen,R. Greg Lavender,Galen Menzel,Oege de Moor,Max Schäfer,Julian Tibble;Tracking Static Analysis Violations over Time to Capture Developer Characteristics.;437-447;11;Mining;
2015;Sergey Mechtaev,Jooyong Yi,Abhik Roychoudhury;DirectFix: Looking for Simple Program Repairs.;448-458;11;Patching and Fixing I;
2015;Qing Gao,Yingfei Xiong,Yaqing Mi,Lu Zhang 0023,Weikun Yang,Zhaoping Zhou,Bing Xie,Hong Mei;Safe Memory-Leak Fixing for C Programs.;459-470;12;Patching and Fixing I;
2015;Shin Hwei Tan,Abhik Roychoudhury;relifix: Automated Repair of Software Regressions.;471-482;12;Patching and Fixing I;
2015;Kim Herzig,Michaela Greiler,Jacek Czerwonka,Brendan Murphy;The Art of Testing Less without Sacrificing Quality.;483-493;11;Testing II;
2015;Stefan Winter,Oliver Schwahn,Roberto Natella,Neeraj Suri,Domenico Cotroneo;No PAIN, No Gain? The Utility of PArallel Fault INjections.;494-505;12;Testing II;
2015;Michael W. Whalen,Suzette Person,Neha Rungta,Matt Staats,Daniela Grijincu;A Flexible and Non-intrusive Approach for Computing Complex Structural Coverage Metrics.;506-516;11;Testing II;
2015;Christopher Henard,Mike Papadakis,Mark Harman,Yves Le Traon;Combining Multi-Objective Search and Constraint Solving for Configuring Large Software Product Lines.;517-528;12;Search-Based;
2015;Daming Zou,Ran Wang,Yingfei Xiong,Lu Zhang 0023,Zhendong Su,Hong Mei;A Genetic Algorithm for Detecting Significant Floating-Point Inaccuracies.;529-539;11;Search-Based;
2015;Yue Jia,Myra B. Cohen,Mark Harman,Justyna Petke;Learning Combinatorial Interaction Test Generation Strategies Using Hyperheuristic Search.;540-550;11;Search-Based;
2015;Thomas D. LaToza,Micky Chen,Luxi Jiang,Mengyao Zhao,André van der Hoek;Borrowing from the Crowd: A Study of Recombination in Software Design Competitions.;551-562;12;Collaboration and Coordination;
2015;Mitchell Joblin,Wolfgang Mauerer,Sven Apel,Janet Siegmund,Dirk Riehle;From Developer Networks to Verified Communities: A Fine-Grained Approach.;563-573;11;Collaboration and Coordination;
2015;Eirini Kalliamvakou,Daniela E. Damian,Kelly Blincoe,Leif Singer,Daniel M. Germán;Open Source-Style Collaborative Development Practices in Commercial Projects Using GitHub.;574-585;12;Collaboration and Coordination;
2015;Cathrin Weiss,Cindy Rubio-González,Ben Liblit;Database-Backed Program Analysis for Scalable Error Propagation.;586-597;12;Analysis Infrastructure;
2015;Caitlin Sadowski,Jeffrey van Gogh,Ciera Jaspan,Emma Söderberg,Collin Winter;Tricorder: Building a Program Analysis Ecosystem.;598-608;11;Analysis Infrastructure;
2015;Aleksandar Milicevic,Joseph P. Near,Eunsuk Kang,Daniel Jackson;Alloy*: A General-Purpose Higher-Order Relational Constraint Solver.;609-619;11;Analysis Infrastructure;
2015;Edmund Wong,Lei Zhang,Song Wang,Taiyue Liu,Lin Tan;DASE: Document-Assisted Symbolic Execution for Improving Automated Software Testing.;620-631;12;Symbolic Execution;
2015;Rui Qiu,Guowei Yang,Corina S. Pasareanu,Sarfraz Khurshid;Compositional Symbolic Execution with Memoized Replay.;632-642;11;Symbolic Execution;
2015;Yufeng Zhang,Zhenbang Chen,Ji Wang,Wei Dong,Zhiming Liu 0001;Regular Property Guided Dynamic Symbolic Execution.;643-653;11;Symbolic Execution;
2015;Ting Su,Zhoulai Fu,Geguang Pu,Jifeng He,Zhendong Su;Combining Symbolic Execution and Model Checking for Data Flow Testing.;654-665;12;Symbolic Execution;
2015;Iflaah Salman,Ayse Tosun Misirli,Natalia Juristo Juzgado;Are Students Representatives of Professionals in Software Engineering Experiments?;666-676;11;Organizational and Human Factors;
2015;Mathieu Lavallée,Pierre N. Robillard;Why Good Developers Write Bad Code: An Observational Case Study of the Impacts of Organizational Factors on Software Quality.;677-687;11;Organizational and Human Factors;
2015;Sebastian C. Müller,Thomas Fritz;Stuck and Frustrated or in Flow and Happy: Sensing Developers' Emotions and Progress.;688-699;12;Organizational and Human Factors;
2015;Paul Luo Li,Andrew J. Ko,Jiamin Zhu;What Makes a Great Software Engineer?;700-710;11;Organizational and Human Factors;
2015;Luciano Baresi,Mohammad Mehdi Pourhashem Kallehbasti,Matteo Rossi;Efficient Scalable Verification of LTL Specifications.;711-721;11;Specification and Verification;
2015;Daniel Matichuk,Toby C. Murray,June Andronick,D. Ross Jeffery,Gerwin Klein,Mark Staples;Empirical Study Towards a Leading Indicator for Cost of Formal Software Verification.;722-732;11;Specification and Verification;
2015;Germán Regis,Renzo Degiovanni,Nicolás D'Ippolito,Nazareno Aguirre;Specifying Event-Based Systems with a Counting Fluent Temporal Logic.;733-743;11;Specification and Verification;
2015;Ivan Bocic,Tevfik Bultan;Coexecutability for Efficient Verification of Data Model Updates.;744-754;11;Specification and Verification;
2015;Casey Casalnuovo,Premkumar T. Devanbu,Abilio Oliveira,Vladimir Filkov,Baishakhi Ray;Assert Use in GitHub Projects.;755-766;12;Programming;
2015;Haitao Steve Zhu,Chaoren Lin,Yu David Liu;A Programming Model for Sustainable Software.;767-777;11;Programming;
2015;Sebastian Nanz,Carlo A. Furia;A Comparative Study of Programming Languages in Rosetta Code.;778-788;11;Programming;
2015;Baljinder Ghotra,Shane McIntosh,Ahmed E. Hassan;Revisiting the Impact of Classification Techniques on the Performance of Defect Prediction Models.;789-800;12;Prediction Models;
2015;Fayola Peters,Tim Menzies,Lucas Layman;LACE2: Better Privacy-Preserving Data Sharing for Cross Project Defect Prediction.;801-811;11;Prediction Models;
2015;Chakkrit Tantithamthavorn,Shane McIntosh,Ahmed E. Hassan,Akinori Ihara,Ken-ichi Matsumoto;The Impact of Mislabelling on the Performance and Interpretation of Defect Prediction Models.;812-823;12;Prediction Models;
2015;Xiang Yuan,Chenggang Wu,Zhenjiang Wang,Jianjun Li,Pen-Chung Yew,Jeff Huang 0001,Xiaobing Feng,Yanyan Lan,Yunji Chen,Yong Guan;ReCBuLC: Reproducing Concurrency Bugs Using Local Clocks.;824-834;11;Analysis III;
2015;Markus Kusano,Arijit Chattopadhyay,Chao Wang;Dynamic Generation of Likely Invariants for Multithreaded Programs.;835-846;12;Analysis III;
2015;Jeff Huang 0001,Qingzhou Luo,Grigore Rosu;GPredict: Generic Predictive Concurrency Analysis.;847-857;11;Analysis III;
2015;Anh Tuan Nguyen,Tien N. Nguyen;Graph-Based Statistical Language Model for Code.;858-868;11;Working with APIs;
2015;Gayane Petrosyan,Martin P. Robillard,Renato De Mori;Discovering Information Explaining API Types Using Text Classification.;869-879;11;Working with APIs;
2015;Laura Moreno,Gabriele Bavota,Massimiliano Di Penta,Rocco Oliveto,Andrian Marcus;How Can I Use This Method?;880-890;11;Working with APIs;
2015;Van-Thuan Pham,Wei Boon Ng,Konstantin Rubinov,Abhik Roychoudhury;Hercules: Reproducing Crashes in Real-World Application Binaries.;891-901;11;Patching and Fixing II;
2015;Adrian Nistor,Po-Chun Chang,Cosmin Radoi,Shan Lu;CARAMEL: Detecting and Fixing Performance Problems That Have Non-Intrusive Fixes.;902-912;11;Patching and Fixing II;
2015;Hao Zhong,Zhendong Su;An Empirical Study on Real Bug Fixes.;913-923;11;Patching and Fixing II;
2015;Zhongxing Yu,Chenggang Bai,Kai-Yuan Cai;Does the Failing Test Execute a Single or Multiple Faults? An Approach to Classifying Failing Tests.;924-935;12;Testing III;
2015;Mike Papadakis,Yue Jia,Mark Harman,Yves Le Traon;Trivial Compiler Equivalence: A Large Scale Empirical Study of a Simple, Fast and Effective Equivalent Mutant Detection Technique.;936-946;11;Testing III;
2015;Giovanni Denaro,Alessandro Margara,Mauro Pezzè,Mattia Vivanti;Dynamic Data Flow Testing of Object Oriented Systems.;947-958;12;Testing III;
2015;Felienne Hermans,Emerson R. Murphy-Hill;Enron's Spreadsheets and Related Emails: A Dataset and Analysis.;7-16;10;Empirical I;
2015;Hucheng Zhou,Jian-Guang Lou,Hongyu Zhang,Haibo Lin,Haoxiang Lin,Tingting Qin;An Empirical Study on Quality Issues of Production Big Data Platform.;17-26;10;Empirical I;
2015;Jacek Czerwonka,Michaela Greiler,Jack Tilford;Code Reviews Do Not Find Bugs. How the Current Code Review Best Practice Slows Us Down.;27-28;2;Empirical I;
2015;Yongbae Park,Shin Hong,Moonzoo Kim,Dongju Lee,Junhee Cho;Systematic Testing of Reactive Software with Non-Deterministic Events: A Case Study on LG Electric Oven.;29-38;10;Testing;
2015;Kim Herzig,Nachiappan Nagappan;Empirically Detecting False Test Alarms Using Association Rules.;39-48;10;Testing;
2015;Jeff Anderson,Saeed Salem,Hyunsook Do;Striving for Failure: An Industrial Case Study about Test Failure Prediction.;49-58;10;Testing;
2015;Maayan Goldstein,Itai Segall;Automatic and Continuous Software Architecture Validation.;59-68;10;Architecture I;
2015;Thibaud Lutellier,Devin Chollak,Joshua Garcia,Lin Tan,Derek Rayside,Nenad Medvidovic,Robert Kroeger;Comparing Software Architecture Recovery Techniques Using Accurate Dependencies.;69-78;10;Architecture I;
2015;Luciano Baresi,Laurent-Walter Goix,Sam Guinea,Valerio Panzica La Manna,Jacopo Aliprandi,Dario Archetti;SPF: A Middleware for Social Interaction in Mobile Proximity Environments.;79-88;10;Architecture I;
2015;Bora Caglayan,Burak Turhan,Ayse Basar Bener,Mayy Habayeb,Andriy Miransky,Enzo Cialini;Merits of Organizational Metrics in Defect Prediction: An Industrial Replication.;89-98;10;Quality;
2015;Ming Tan,Lin Tan,Sashank Dara,Caleb Mayeux;Online Defect Prediction for Imbalanced Data.;99-108;10;Quality;
2015;Joel Cox,Eric Bouwers,Marko C. J. D. van Eekelen,Joost Visser;Measuring Dependency Freshness in Software Systems.;109-118;10;Quality;
2015;Michael Kläs,Thomas Bauer,Andreas Dereani,Thomas Soderqvist,Philipp Helle;A Large-Scale Technology Evaluation Study: Effects of Model-based Analysis and Testing.;119-128;10;Model-Based;
2015;Mikael Lindvall,Dharmalingam Ganesan,Ragnar Ardal,Robert E. Wiegand;Metamorphic Model-Based Testing Applied on NASA DAT - An Experience Report.;129-138;10;Model-Based;
2015;Jean-Frederic Etienne,Manuel Maarek,Florent Anseaume,Veronique Delebarre;Improving Predictability, Efficiency and Trust of Model-Based Proof Activity.;139-148;10;Model-Based;
2015;David Maplesden,Karl von Randow,Ewan D. Tempero,John G. Hosking,John C. Grundy;Performance Analysis Using Subsuming Methods: An Industrial Case Study.;149-158;10;Performance and Logging;
2015;King Chun Foo,Zhen Ming Jiang,Bram Adams,Ahmed E. Hassan,Ying Zou,Parminder Flora;An Industrial Case Study on the Automated Detection of Performance Regressions in Heterogeneous Environments.;159-168;10;Performance and Logging;
2015;Antonio Pecchia,Marcello Cinque,Gabriella Carrozza,Domenico Cotroneo;Industry Practices and Event Logging: Assessment of a Critical Software Development Process.;169-178;10;Performance and Logging;
2015;Rick Kazman,Yuanfang Cai,Ran Mo,Qiong Feng,Lu Xiao,Serge Haziyev,Volodymyr Fedak,Andriy Shapochka;A Case Study in Locating the Architectural Roots of Technical Debt.;179-188;10;Architecture II and Security;
2015;Jan Schroeder,Daniela Holzner,Christian Berger 0001,Carl-Johan Hoel,Leo Laine,Anders Magnusson;Design and Evaluation of a Customizable Multi-Domain Reference Architecture on Top of Product Lines of Self-Driving Heavy Vehicles - An Industrial Case Study.;189-198;10;Architecture II and Security;
2015;Christopher Theisen,Kim Herzig,Patrick Morrison,Brendan Murphy,Laurie A. Williams;Approximating Attack Surfaces with Stack Traces.;199-208;10;Architecture II and Security;
2015;Damien Doligez,Christèle Faure,Thérèse Hardin,Manuel Maarek;Avoiding Security Pitfalls with Functional Programming: A Report on the Development of a Secure XML Validator.;209-218;10;Architecture II and Security;
2015;Megan Squire;"""Should We Move to Stack Overflow?"" Measuring the Utility of Social Media for Developer Support.";219-228;10;Empirical II;
2015;Vinay Augustine,Patrick Francis,Xiao Qu,David C. Shepherd,Will Snipes,Christoph Bräunlich,Thomas Fritz;A Field Study on Fostering Structural Navigation with Prodet.;229-238;10;Empirical II;
2015;David C. Shepherd,Kostadin Damevski,Lori L. Pollock;How and When to Transfer Software Engineering Research via Extensions.;239-240;2;Empirical II;
2015;Katrina E. Falkner,Claudia Szabo,Rebecca Vivian,Nickolas J. G. Falkner;Evolution of Software Development Strategies.;243-252;10;Developing Students' SE Skills;
2015;Thomas V. Wilkins,John C. Georgas;Drawing Insight from Student Perceptions of Reflective Design Learning.;253-262;10;Developing Students' SE Skills;
2015;Farshid Anvari,Deborah Richards,Michael Hitchens,Muhammad Ali Babar;Effectiveness of Persona with Personality Traits on Conceptual Design.;263-272;10;Developing Students' SE Skills;
2015;Nancy R. Mead;Industry/University Collaboration in Software Engineering Education: Refreshing and Retuning Our Strategies.;273-275;3;Panel - Industry/University Collaboration;
2015;Claudia Szabo;Novice Code Understanding Strategies during a Software Maintenance Assignment.;276-284;9;SE Management and Processes, and Short Papers;
2015;Maria Paasivaara,Kelly Blincoe,Casper Lassenius,Daniela E. Damian,Jyoti Sheoran,Francis Harrison,Prashant Chhabra,Aminah Yussuf,Veikko Isotalo;Learning Global Agile Software Engineering Using Same-Site and Cross-Site Teams.;285-294;10;SE Management and Processes, and Short Papers;
2015;Joseph Sant;Code Repurposing as an Assessment Tool.;295-298;4;SE Management and Processes, and Short Papers;
2015;Kristina Marasovic,Michael Lutz;Remote Development and Distance Delivery of Innovative Courses: Challenges and Opportunities.;299-302;4;SE Management and Processes, and Short Papers;
2015;Christian Köppe,Marko C. J. D. van Eekelen,Stijn Hoppenbrouwers;Improving Student Group Work with Collaboration Patterns: A Case Study.;303-306;4;SE Management and Processes, and Short Papers;
2015;Michel Wermelinger,Jon G. Hall,Lucia Rapanotti,Leonor Barroca,Magnus Ramage,Arosha K. Bandara;Teaching Software Systems Thinking at The Open University.;307-310;4;SE Management and Processes, and Short Papers;
2015;Jon G. Hall,Lucia Rapanotti;Masters-Level Software Engineering Education and the Enriched Student Context.;311-314;4;SE Management and Processes, and Short Papers;
2015;Mehdi Jazayeri;Combining Mastery Learning with Project-Based Learning in a First Programming Course: An Experience Report.;315-318;4;SE Management and Processes, and Short Papers;
2015;Neelam Soundarajan,Swaroop Joshi,Rajiv Ramnath;Collaborative and Cooperative-Learning in Software Engineering Courses.;319-322;4;SE Management and Processes, and Short Papers;
2015;Lucia Camilloni,Diego Vallespir,Mark A. Ardis;Using GSwE2009 for the Evaluation of a Master Degree in Software Engineering in the Universidad de la República.;323-332;10;Case Studies;
2015;Barry W. Boehm,Supannika Koolmanojwong Mobasser;System Thinking: Educating T-Shaped Software Engineers.;333-342;10;Case Studies;
2015;Elizabeth Suescun Monsalve,Julio Cesar Sampaio do Prado Leite,Vera Maria Benjamim Werneck;Transparently Teaching in the Context of Game-based Learning: the Case of SimulES-W.;343-352;10;Case Studies;
2015;Lawrence Peters,Ana M. Moreno;Educating Software Engineering Managers - Revisited What Software Project Managers Need to Know Today.;353-359;7;Specialised Domains in SE Education;
2015;Noriko Hanakawa;Contest Based Learning with Blending Software Engineering and Business Management: For Students' High Motivation and High Practice Ability.;360-369;10;Specialised Domains in SE Education;
2015;Jiwon Shin,Andrey Rusakov,Bertrand Meyer;Concurrent Software Engineering and Robotics Education.;370-379;10;Specialised Domains in SE Education;
2015;Rebecca Vivian,Hamid Tarmazdi,Katrina E. Falkner,Nickolas J. G. Falkner,Claudia Szabo;The Development of a Dashboard Tool for Visualising Online Teamwork Discussions.;380-388;9;Infrastructure Support in SE Education;
2015;Jaejoon Lee,Gerald Kotonya,Jon Whittle,Christopher Bull 0001;Software Design Studio: A Practical Example.;389-397;9;Infrastructure Support in SE Education;
2015;Judith Bishop,R. Nigel Horspool,Tao Xie,Nikolai Tillmann,Jonathan de Halleux;Code Hunt: Experience with Coding Contests at Scale.;398-407;10;Infrastructure Support in SE Education;
2015;Erica Janke,Philipp Brune,Stefan Wagner;Does Outside-In Teaching Improve the Learning of Object-Oriented Programming?;408-417;10;SE Teaching Methods and Technologies;
2015;Yvonne Sedelmaier,Dieter Landes;Active and Inductive Learning in Software Engineering Education.;418-427;10;SE Teaching Methods and Technologies;
2015;Lassi Haaranen,Petri Ihantola,Juha Sorva,Arto Vihavainen;In Search of the Emotional Design Effect in Programming.;428-434;7;SE Teaching Methods and Technologies;
2015;Andrew C. Simpson,Andrew P. Martin,Cas J. F. Cremers,Ivan Flechais,Ivan Martinovic,Kasper Bonne Rasmussen;Experiences in Developing and Delivering a Programme of Part-Time Education in Software and Systems Security.;435-444;10;Experiences and Experiments;
2015;Chandan Raj Rupakheti,Stephen V. Chenoweth;Teaching Software Architecture to Undergraduate Students: An Experience Report.;445-454;10;Experiences and Experiments;
2015;Paul V. Anderson,Sarah Heckman,Mladen A. Vouk,David Wright,Michael Carter,Janet E. Burge,Gerald C. Gannod;CS/SE Instructors Can Improve Student Writing without Reducing Class Time Devoted to Technical Content: Experimental Results.;455-464;10;Experiences and Experiments;
2015;Christoph Becker,Ruzanna Chitchyan,Leticia Duboc,Steve Easterbrook,Birgit Penzenstadler,Norbert Seyff,Colin C. Venters;Sustainability Design and Software: The Karlskrona Manifesto.;467-476;10;Panel: Software Systems and Sustainability - Principles and Commitments;
2015;Harun Baraki,Kurt Geihs,Christian Voigtmann,Axel Hoffmann,Romy Kniewel,Bjorn-Elmar Macek,Julia Zirfas;Interdisciplinary Design Patterns for Socially Aware Computing.;477-486;10;Values and Concerns in Society;
2015;Peter Newman,Maria Angela Ferrario,William Simm,Stephen Forshaw,Adrian Friday,Jon Whittle;The Role of Design Thinking and Physical Prototyping in Social Software Engineering.;487-496;10;Values and Concerns in Society;
2015;Balbir S. Barn,Ravinder Barn,Franco Raimondi;On the Role of Value Sensitive Concerns in Software Engineering Practice.;497-500;4;Values and Concerns in Society;
2015;Ruzanna Chitchyan,Walter Cazzola,Awais Rashid;Engineering Sustainability Through Language.;501-504;4;SE Techniques as Enablers of Sustainability;
2015;Javier Luis Cánovas Izquierdo,Jordi Cabot;Enabling the Definition and Enforcement of Governance Rules in Open Source Systems.;505-514;10;SE Techniques as Enablers of Sustainability;
2015;Animesh Pathak,Valérie Issarny,James Holston;AppCivist - A Service-Oriented Software Platform for Socially Sustainable Activism.;515-518;4;SE Techniques as Enablers of Sustainability;
2015;Kelly Lyons,Christie Oh;SOA4DM: Applying an SOA Paradigm to Coordination in Humanitarian Disaster Response.;519-522;4;SE Techniques as Enablers of Sustainability;
2015;Awais Rashid,Karenza Moore,Corinne May-Chahal,Ruzanna Chitchyan;Managing Emergent Ethical Concerns for Software Engineering in Society.;523-526;4;SE Impact on Users;
2015;Pete Sawyer,Alistair Sutcliffe,Paul Rayson,Chris Bull;Dementia and Social Sustainability: Challenges for Software Engineering.;527-530;4;SE Impact on Users;
2015;Marcus Jagemar,Gordana Dodig-Crnkovic;Cognitively Sustainable ICT with Ubiquitous Mobile Services - Challenges and Opportunities.;531-540;10;SE Impact on Users;
2015;Premkumar T. Devanbu;New Initiative: The Naturalness of Software.;543-546;4;New Dimensions;
2015;Anthony Elliott,Brian Peiris,Chris Parnin;Virtual Reality in Software Engineering: Affordances, Applications, and Challenges.;547-550;4;New Dimensions;
2015;Rui Abreu,Hakan Erdogmus,Alexandre Perez;CodeAware: Sensor-Based Fine-Grained Monitoring and Management of Software Artifacts.;551-554;4;New Dimensions;
2015;Roberto Minelli,Andrea Mocci,Michele Lanza;Free Hugs - Praising Developers for Their Actions.;555-558;4;New Dimensions;
2015;Moritz Beller,Georgios Gousios,Andy Zaidman;How (Much) Do Developers Test?;559-562;4;New Dimensions;
2015;Thomas D. LaToza,André van der Hoek;A Vision of Crowd Development.;563-566;4;Human and Crowd;
2015;María Gómez,Matias Martinez,Martin Monperrus,Romain Rouvoy;When App Stores Listen to the Crowd to Fight Bugs in the Wild.;567-570;4;Human and Crowd;
2015;Shihong Huang,Pedro Miranda;Incorporating Human Intention into Self-Adaptive Systems.;571-574;4;Human and Crowd;
2015;Francisco Gomes de Oliveira Neto,Richard Torkar,Patrícia D. L. Machado;An Initiative to Improve Reproducibility and Empirical Evaluation of Software Testing Techniques.;575-578;4;Human and Crowd;
2015;Hridesh Rajan,Tien N. Nguyen,Gary T. Leavens,Robert Dyer 0001;Inferring Behavioral Specifications from Large-scale Repositories by Leveraging Collective Intelligence.;579-582;4;Human and Crowd;
2015;Antonio Vetro,Saahil Ognawala,Daniel Méndez Fernández,Stefan Wagner 0001;Fast Feedback Cycles in Empirical Software Engineering Research.;583-586;4;Human and Crowd;
2015;Ewen Denney,Ganesh J. Pai,Ibrahim Habli;Dynamic Safety Cases for Through-Life Safety Assurance.;587-590;4;New Formalisms;
2015;Nafi Diallo,Wided Ghardallou,Ali Mili;Correctness and Relative Correctness.;591-594;4;New Formalisms;
2015;Hui Song,Amal Elgammal,Vivek Nallur,Franck Chauvel,Franck Fleurey,Siobhán Clarke;On Architectural Diversity of Dynamic Adaptive Systems.;595-598;4;New Formalisms;
2015;David Clark,Robert Feldt,Simon M. Poulding,Shin Yoo;Information Transformation: An Underpinning Theory for Software Engineering.;599-602;4;New Formalisms;
2015;Omar Benomar,Houari A. Sahraoui,Pierre Poulin;A Unified Framework for the Comprehension of Software's Time.;603-606;4;Novel Programming;
2015;Rohan Padhye,Pankaj Dhoolia,Senthil Mani,Vibha Singhal Sinha;Smart Programming Playgrounds.;607-610;4;Novel Programming;
2015;Hridesh Rajan;Capsule-Oriented Programming.;611-614;4;Novel Programming;
2015;Owolabi Legunsen,Darko Marinov,Grigore Rosu;Evolution-Aware Monitoring-Oriented Programming.;615-618;4;Novel Programming;
2015;K. R. Jayaram;Towards Explicitly Elastic Programming Frameworks.;619-622;4;Novel Programming;
2015;Adel Noureddine,Ajitha Rajan;Optimising Energy Consumption of Design Patterns.;623-626;4;Novel Programming;
2015;Hoa Khanh Dam,Bastin Tony Roy Savarimuthu,Daniel Avery,Aditya K. Ghose;Mining Software Repositories for Social Norms.;627-630;4;Commits and Repositories;
2015;Titus Barik,Kevin Lubick,Emerson R. Murphy-Hill;Commit Bubbles.;631-634;4;Commits and Repositories;
2015;Carol V. Alexandru,Harald C. Gall;Rapid Multi-Purpose, Multi-Commit Code Analysis.;635-638;4;Commits and Repositories;
2015;Latifa Guerrouj,David Bourque,Peter C. Rigby;Leveraging Informal Documentation to Summarize Classes and Methods in Context.;639-642;4;Commits and Repositories;
2015;Tim McCarthy,Philipp Rümmer,Martin Schäf;Bixie: Finding and Understanding Inconsistent Code.;645-648;4;Assistance;
2015;Christoph Treude,Mathieu Sicard,Marc Klocke,Martin P. Robillard;TaskNav: Task-Based Navigation of Software Documentation.;649-652;4;Assistance;
2015;Yuriy Tymchuk,Andrea Mocci,Michele Lanza;ViDI: The Visual Design Inspector.;653-656;4;Assistance;
2015;Scott Barnett,Rajesh Vasa,John Grundy;Bootstrapping Mobile App Development.;657-660;4;Assistance;
2015;Huascar Sanchez,Jim Whitehead;Source Code Curation on StackOverflow: The Vesperin System.;661-664;4;Assistance;
2015;Stefan Fischer 0006,Lukas Linsbauer,Roberto E. Lopez-Herrejon,Alexander Egyed;The ECCO Tool: Extraction and Composition for Clone-and-Own.;665-668;4;Assistance;
2015;Fabio Palomba,Michele Tufano,Gabriele Bavota,Rocco Oliveto,Andrian Marcus,Denys Poshyvanyk,Andrea De Lucia;Extract Package Refactoring in ARIES.;669-672;4;Assistance;
2015;Lingfeng Bao,Jing Li,Zhenchang Xing,Xinyu Wang,Bo Zhou;scvRipper: Video Scraping Tool for Modeling Developers' Behavior Using Interaction Data.;673-676;4;Assistance;
2015;Iman I. Yusuf,Ian E. Thomas,Maria Spichkova,Steve G. Androulakis,Grischa R. Meyer,Daniel W. Drumm,George Opletal,Salvy P. Russo,Ashley M. Buckle,Heinz W. Schmidt;Chiminey: Reliable Computing and Data Management Platform in the Cloud.;677-680;4;Assistance;
2015;Yu Pei 0001,Carlo A. Furia,Martín Nordio,Bertrand Meyer;Automated Program Repair in an Integrated Development Environment.;681-684;4;Authoring and Synthesis;
2015;Dustin Wüest,Norbert Seyff,Martin Glinz;FLEXISKETCH TEAM: Collaborative Sketching and Notation Creation on the Fly.;685-688;4;Authoring and Synthesis;
2015;Tihomir Gvero,Viktor Kuncak;Interactive Synthesis Using Free-Form Queries.;689-692;4;Authoring and Synthesis;
2015;Hung Viet Nguyen,Christian Kästner,Tien N. Nguyen;Varis: IDE Support for Embedded Client Code in PHP Web Applications.;693-696;4;Authoring and Synthesis;
2015;Michalis Famelis,Naama Ben-David,Alessio Di Sandro,Rick Salay,Marsha Chechik;MU-MMINT: An IDE for Model Uncertainty.;697-700;4;Authoring and Synthesis;
2015;Sumit Gulwani,Mikaël Mayer,Filip Niksic,Ruzica Piskac;StriSynth: Synthesis for Live Programming.;701-704;4;Authoring and Synthesis;
2015;Christine Franks,Zhaopeng Tu,Premkumar T. Devanbu,Vincent Hellendoorn;CACHECA: A Cache Language Model Based Code Suggestion Tool.;705-708;4;Authoring and Synthesis;
2015;Mario Linares Vásquez,Luis Fernando Cortes-Coy,Jairo Aponte,Denys Poshyvanyk;ChangeScribe: A Tool for Automatically Generating Commit Messages.;709-712;4;Authoring and Synthesis;
2015;Milos Gligoric,Lamyaa Eloussi,Darko Marinov;Ekstazi: Lightweight Test Selection.;713-716;4;Test and Analysis;
2015;Haruto Tanno,Xiaojing Zhang,Takashi Hoshino,Koushik Sen;TesMa and CATG: Automated Test Generation Tools for Models of Enterprise Applications.;717-720;4;Test and Analysis;
2015;Feifei Chen,John C. Grundy,Jean-Guy Schneider,Yun Yang,Qiang He;StressCloud: A Tool for Analysing Performance and Energy Consumption of Cloud Applications.;721-724;4;Test and Analysis;
2015;Alireza Sadeghi,Hamid Bagheri,Sam Malek;Analysis of Android Inter-App Security Vulnerabilities Using COVERT.;725-728;4;Test and Analysis;
2015;Christos Tsigkanos,Liliana Pasquale,Carlo Ghezzi,Bashar Nuseibeh;Ariadne: Topology Aware Adaptive Security for Cyber-Physical Systems.;729-732;4;Test and Analysis;
2015;Benjamin Holland,Tom Deering,Suresh Kothari,Jon Mathews,Nikhil Ranade;Security Toolbox for Detecting Novel and Sophisticated Android Malware.;733-736;4;Test and Analysis;
2015;Daniel Schwartz-Narbonne,Chanseok Oh,Martin Schäf,Thomas Wies;VERMEER: A Tool for Tracing and Explaining Faulty C Programs.;737-740;4;Test and Analysis;
2015;Rein Raudjärv,Allan Raundahl Gregersen;JRebel.Android: Runtime Class- and Resource Reloading for Android.;741-744;4;Test and Analysis;
2015;Rahul Dixit,Christof Lutteroth,Gerald Weber;FormTester: Effective Integration of Model-Based and Manually Specified Test Cases.;745-748;4;Test and Analysis;
2015;Caroline Lemieux;Mining Temporal Properties of Data Invariants.;751-753;3;ACM Student Research Competition;
2015;Ronie Salgado;Profiling Kernels Behavior to Improve CPU / GPU Interactions.;754-756;3;ACM Student Research Competition;
2015;Pascal Roos;Fast and Precise Statistical Code Completion.;757-759;3;ACM Student Research Competition;
2015;Gennaro Imparato;A Combined Technique of GUI Ripping and Input Perturbation Testing for Android Apps.;760-762;3;ACM Student Research Competition;
2015;Mario Linares Vásquez;Enabling Testing of Android Apps.;763-765;3;ACM Student Research Competition;
2015;Geoffrey Hecht;An Approach to Detect Android Antipatterns.;766-768;3;ACM Student Research Competition;
2015;Fabio Palomba;Textual Analysis for Code Smell Detection.;769-771;3;ACM Student Research Competition;
2015;Christopher Vendome;A Large Scale Study of License Usage on GitHub.;772-774;3;ACM Student Research Competition;
2015;Paola R. G. Accioly;Understanding Conflicts Arising from Collaborative Development.;775-777;3;ACM Student Research Competition;
2015;Martin White;Deep Representations for Software Engineering.;781-783;3;ACM Student Research Competition;
2015;Javier Escobar-Avila;Automatic Categorization of Software Libraries Using Bytecode.;784-786;3;ACM Student Research Competition;
2015;Abhishek Bichhawat;Post-Dominator Analysis for Precisely Handling Implicit Flows.;787-789;3;ACM Student Research Competition;
2015;Benoit Cornu;Casper: Using Ghosts to Debug Null Deferences with Dynamic Causality Traces.;790-791;2;ACM Student Research Competition;
2015;Jafar M. Al-Kofahi,Lisong Guo,Hung Viet Nguyen,Hoan Anh Nguyen,Tien N. Nguyen;Poster: Static Detection of Configuration-Dependent Bugs in Configurable Software.;795-796;2;Posters;
2015;Alessio Gambi,Rostyslav Zabolotnyi,Schahram Dustdar;Poster: Improving Cloud-Based Continuous Integration Environments.;797-798;2;Posters;
2015;Ryo Suzuki;Poster: Interactive and Collaborative Source Code Annotation.;799-800;2;Posters;
2015;Martin Konopka,Pavol Návrat,Mária Bieliková;Poster: Discovering Code Dependencies by Harnessing Developer's Activity.;801-802;2;Posters;
2015;Francesca Arcelli Fontana,Vincenzo Ferme,Marco Zanoni;Poster: Filtering Code Smells Detection Results.;803-804;2;Posters;
2015;Huai Liu,Pak-Lok Poon,Tsong Yueh Chen;Poster: Enhancing Partition Testing through Output Variation.;805-806;2;Posters;
2015;Jingwen Zhou,Zhenbang Chen,Ji Wang;Poster: Segmentation Based Online Performance Problem Diagnosis.;807-808;2;Posters;
2015;Xianjin Fu,Zhenbang Chen,Hengbiao Yu,Chun Huang,Wei Dong,Ji Wang;Poster: Symbolic Execution of MPI Programs.;809-810;2;Posters;
2015;Marija Selakovic,Michael Pradel;Poster: Automatically Fixing Real-World JavaScript Performance Bugs.;811-812;2;Posters;
2015;Laurent Christophe,Coen De Roover,Wolfgang De Meuter;Poster: Dynamic Analysis Using JavaScript Proxies.;813-814;2;Posters;
2015;Andrea Borg,Chris Porter,Mark Micallef;Poster: Is Carmen Better than George? Testing the Exploratory Tester Using HCI Techniques.;815-816;2;Posters;
2015;Xavier Devroey,Gilles Perrouin,Pierre-Yves Schobbens,Patrick Heymans;Poster: VIBeS, Transition System Mutation Made Easy.;817-818;2;Posters;
2015;Sebastian Weigelt,Walter F. Tichy;Poster: ProNat: An Agent-Based System Design for Programming in Spoken Natural Language.;819-820;2;Posters;
2015;Quentin Stievenart,Jens Nicolay,Wolfgang De Meuter,Coen De Roover;Poster: Static Analysis of Concurrent Higher-Order Programs.;821-822;2;Posters;
2015;Takuya Fukamachi,Naoyasu Ubayashi,Shintaro Hosoai,Yasutaka Kamei;Poster: Conquering Uncertainty in Java Programming.;823-824;2;Posters;
2015;Tianshi Wang,Aadithya V. Karthik,Bichen Wu,Jaijeet Roychowdhury;Poster: MAPP: The Berkeley Model and Algorithm Prototyping Platform.;825-826;2;Posters;
2015;Soumyadip Bandyopadhyay,Dipankar Sarkar,Chittaranjan A. Mandal;Poster: An Efficient Equivalence Checking Method for Petri Net Based Models of Programs.;827-828;2;Posters;
2015;Luca Gherardi,Nico Hochgeschwender;Poster: Model-based Run-time Variability Resolution for Robotic Applications.;829-830;2;Posters;
2015;Laure Philips,Wolfgang De Meuter,Coen De Roover;Poster: Tierless Programming in JavaScript.;831-832;2;Posters;
2015;Harry Raymond Joseph;Poster: Software Development Risk Management: Using Machine Learning for Generating Risk Prompts.;833-834;2;Posters;
2015;Sara Sartoli,Akbar Siami Namin;Poster: Reasoning Based on Imperfect Context Data in Adaptive Security.;835-836;2;Posters;
2015;Richard Gil;Automated Planning for Self-Adaptive Systems.;839-842;4;Student Presentations;
2015;Laura Inozemtseva;Understanding the Software Fault Introduction Process.;843-846;4;Student Presentations;
2015;Mohammad Mehdi Pourhashem Kallehbasti;Scalable Formal Verification of UML Models.;847-850;4;Student Presentations;
2015;Jie Zhang;Scalability Studies on Selective Mutation Testing.;851-854;4;Student Presentations;
2015;Franz Zieris;Qualitative Analysis of Knowledge Transfer in Pair Programming.;855-858;4;Student Presentations;
2015;Stefanie Beyer;DIETs: Recommender Systems for Mobile API Developers.;859-862;4;Student Presentations;
2015;Verena Honsel;Statistical Learning and Software Mining for Agent Based Simulation of Software Evolution.;863-866;4;Student Posters;
2015;Jamal El Hachem;Towards Model Driven Architecture and Analysis of System of Systems Access Control.;867-870;4;Student Posters;
2015;Andrea Caracciolo;A Unified Approach to Automatic Testing of Architectural Constraints.;871-874;4;Student Posters;
2015;Nicolas Dintzner;Safe Evolution Patterns for Software Product Lines.;875-878;4;Student Posters;
2015;João Felipe Silva Ouriques;Strategies for Prioritizing Test Cases Generated Through Model-Based Testing Approaches.;879-882;4;Student Posters;
2015;Alexander van Den Berghe;Towards a Practical Security Analysis Methodology.;883-886;4;Student Posters;
2015;Sebastian C. Muller;Measuring Software Developers' Perceived Difficulty with Biometric Sensors.;887-890;4;Student Posters;
2015;Vitalii Avdiienko;Mining Patterns of Sensitive Data Usage.;891-894;4;Student Posters;
2015;Wesley Klewerton Guez Assuncao;Search-Based Migration of Model Variants to Software Product Line Architectures.;895-898;4;Student Posters;
2015;Everton Cavalcante;On the Architecture-Driven Development of Software-Intensive Systems-of-Systems.;899-902;4;Student Posters;
2015;Paul W. McBurney;Automatic Documentation Generation via Source Code Summarization.;903-906;4;Student Posters;
2015;Reinout Stevens;A Declarative Foundation for Comprehensive History Querying.;907-910;4;Student Posters;
2015;Davy de Medeiros Baia;An Integrated Multi-Agent-Based Simulation Approach to Support Software Project Management.;911-914;4;Student Posters;
2015;C. Albert Thompson;Towards Generation of Software Development Tasks.;915-918;4;Student Posters;
2015;Ayushi Rastogi;Contributor's Performance, Participation Intentions, Its Influencers and Project Performance.;919-922;4;Student Posters;
2015;Erika S. Mesh;Supporting Scientific SE Process Improvement.;923-926;4;Student Posters;
2015;Adnan Shahzada;A Comprehensive Framework for the Development of Dynamic Smart Spaces.;927-930;4;Student Posters;
2015;Heila van der Merwe;Verification of Android Applications.;931-934;4;Student Posters;
2015;Patrick Morrison;A Security Practices Evaluation Framework.;935-938;4;Student Posters;
2015;Giuseppe Procaccianti,Patricia Lago,Antonio Vetro,Daniel Méndez Fernández,Roel Wieringa;The Green Lab: Experimentation in Software Energy Efficiency.;941-942;2;Technical Briefings;
2015;Xavier Franch;Software Requirements Patterns - A State of the Art and the Practice.;943-944;2;Technical Briefings;
2015;Tore Dybå,Torgeir Dingsøyr;Agile Project Management: From Self-Managing Teams to Large-Scale Development.;945-946;2;Technical Briefings;
2015;Pauline Anthonysamy,Awais Rashid;Software Engineering for Privacy in-the-Large.;947-948;2;Technical Briefings;
2015;Venera Arnaoudova,Sonia Haiduc,Andrian Marcus,Giuliano Antoniol;The Use of Text Retrieval and Natural Language Processing in Software Engineering.;949-950;2;Technical Briefings;
2015;Jonathan I. Maletic,Michael L. Collard;Exploration, Analysis, and Manipulation of Source Code Using srcML.;951-952;2;Technical Briefings;
2015;Guido Salvaneschi,Alessandro Margara,Giordano Tamburrelli;Reactive Programming: A Walkthrough.;953-954;2;Technical Briefings;
2015;Zhen Ming Jack Jiang;Load Testing Large-Scale Software Systems.;955-956;2;Technical Briefings;
2015;Meiyappan Nagappan,Mehdi Mirakhorli;Big(ger) Data in Software Engineering.;957-958;2;Technical Briefings;
2015;Tim Menzies,Leandro L. Minku,Fayola Peters;"The Art and Science of Analyzing Software Data; Quantitative Methods.";959-960;2;Technical Briefings;
2015;Rajesh Subramanyan,Leonardo Mariani,Dan Hao;10th International Workshop on Automation of Software Test (AST 2015).;963-964;2;Workshop Summaries;
2015;Luciano Baresi,Tim Menzies,Andreas Metzger,Thomas Zimmermann 0001;1st International Workshop on Big Data Software Engineering (BIGDSE 2015).;965-966;2;Workshop Summaries;
2015;Xavier Franch,Nazim H. Madhavji,Carlos Henrique C. Duarte;3rd International Workshop on Conducting Empirical Studies in Industry (CESI 2015).;967-968;2;Workshop Summaries;
2015;Andrew Begel,Rafael Prikladnicki,Yvonne Dittrich,Cleidson R. B. de Souza,Anita Sarma,Sandeep Athavale;8th International Workshop on Cooperative and Human Aspects of Software Engineering (CHASE 2015).;969-970;2;Workshop Summaries;
2015;Mark Grechanik,Javier Alonso,Allen P. Nikora;1st International Workshop on Complex faUlts and Failures in LargE Software Systems (COUFLESS 2015).;971-972;2;Workshop Summaries;
2015;Kelly Blincoe,Daniela Damian,Giuseppe Valetto,James D. Herbsleb;2nd International Workshop on Context for Software Development (CSD 2015).;973-974;2;Workshop Summaries;
2015;Gordon Fraser,Thomas D. LaToza,Leonardo Mariani;2nd International Workshop on Crowd Sourcing in Software Engineering (CSI-SE 2015).;975-976;2;Workshop Summaries;
2015;Stefania Gnesi,Nico Plat;3rd FME Workshop on Formal Methods in Software Engineering (FormaliSE 2015).;977-978;2;Workshop Summaries;
2015;Judith Bishop,Kendra M. L. Cooper,Walt Scacchi,Jim Whitehead;4th International Workshop on Games and Software Engineering (GAS 2015).;979-980;2;Workshop Summaries;
2015;Maurizio Morisio,Patricia Lago,Niklaus Meyer,Hausi A. Müller,Giuseppe Scanniello;4th International Workshop on Green and Sustainable Software (GREENS 2015).;981-982;2;Workshop Summaries;
2015;Paul Ralph,Gregor Engels,Ivar Jacobson,Michael Goedicke;4th SEMAT Workshop on General Theory of Software Engineering (GTSE 2015).;983-984;2;Workshop Summaries;
2015;Jeff Gray,Marsha Chechik,Vinay Kulkarni,Richard F. Paige;7th International Workshop on Modeling in Software Engineering (MiSE 2015).;985-986;2;Workshop Summaries;
2015;Muhammad Ali Babar,Hye-Young Paik,Malolan Chetlur,Michael Bauer,Amir Molzam Sharifloo;7th International Workshop on Principles of Engineering Service-Oriented and Cloud Systems (PESOS 2015).;987-988;2;Workshop Summaries;
2015;Julia Rubin,Goetz Botterweck,Andreas Pleuss,David M. Weiss;5th International Workshop on Product LinE Approaches in Software Engineering PLE for a Sustainable Society (PLEASE 2015).;989-990;2;Workshop Summaries;
2015;Burak Turhan,Ayse Basar Bener,Rachel Harrison,Andriy Miransky,Çetin Meriçli,Leandro L. Minku;4th International Workshop on Realizing AI Synergies in Software Engineering (RAISE 2015).;991-992;2;Workshop Summaries;
2015;Matthias Tichy,Jan Bosch,Michael Goedicke,Brian Fitzgerald;2nd International Workshop on Rapid Continuous Software Engineering (RCoSE 2015).;993-994;2;Workshop Summaries;
2015;Bram Adams,Stephany Bellomo,Christian Bird,Foutse Khomh,Kim Moir;3rd International Workshop on Release Engineering (RELENG 2015).;995-996;2;Workshop Summaries;
2015;Elizabeth Bjarnason,Mirko Morandini,Markus Borg,Michael Unterkalmsteiner,Michael Felderer,Matthew Staats;2nd International Workshop on Requirements Engineering and Testing (RET 2015).;997-998;2;Workshop Summaries;
2015;Ipek Ozkaya,Robert L. Nord,Heiko Koziolek,Paris Avgeriou;Second International Workshop on Software Architecture and Metrics (SAM 2015).;999-1000;2;Workshop Summaries;
2015;Gregory Gay,Giuliano Antoniol;8th International Workshop on Search-Based Software Testing (SBST 2015).;1001-1002;2;Workshop Summaries;
2015;Jeffrey C. Carver,Neil Chue Hong,Paolo Ciancarini;SE4HPCS'15: The 2015 International Workshop on Software Engineering for High Performance Computing in Science.;1003-1004;2;Workshop Summaries;
2015;Felienne Hermans,Richard F. Paige,Peter Sestoft;2nd International Workshop on Software Engineering Methods in Spreadsheets (SEMS 2015).;1005-1006;2;Workshop Summaries;
2015;Judith Bishop,Rakesh Shukla,Forrest Shull,Sagar Sen;2nd International Workshop on Software Engineering Research and Industrial Practice (SER&IP 2015).;1007-1008;2;Workshop Summaries;
2015;Tomás Bures,Danny Weyns,Mark Klein,Rodolfo E. Haber;1st International Workshop on Software Engineering for Smart Cyber-Physical Systems (SEsCPS 2015).;1009-1010;2;Workshop Summaries;
2015;Flávio Oquendo,Paris Avgeriou,Carlos E. Cuesta,Khalil Drira,Elisa Yumi Nakagawa,José Carlos Maldonado,Andrea Zisman;3rd International Workshop on Software Engineering for Systems-of-Systems (SESoS 2015).;1011-1012;2;Workshop Summaries;
2015;Paolo Falcarin,Brecht Wyseur;1st International Workshop on Software Protection (SPRO 2015).;1013-1014;2;Workshop Summaries;
2015;Ilaria Matteucci,Paolo Mori,Marinella Petrocchi;1st International Workshop on TEchnical and LEgal aspects of data pRIvacy and Security (TELERISE 2015).;1015-1016;2;Workshop Summaries;
2015;Matthias Galster,Mehdi Mirakhorli;5th International Workshop on the Twin Peaks of Requirements and Architecture (TwinPeaks 2015).;1017-1018;2;Workshop Summaries;
2015;Gursimran S. Walia,Jeffrey C. Carver,Gary L. Bradshaw;Workshop on Applications of Human Error Research to Improve Software Engineering (WAHESE 2015).;1019-1020;2;Workshop Summaries;
2015;Steve Counsell,Corrado Aaron Visaggio,Roberto Tonelli,Ewan D. Tempero;6th International Workshop on Emerging Trends in Software Metrics (WETSoM 2015).;1021-1022;2;Workshop Summaries;
2014;Emerson R. Murphy-Hill,Thomas Zimmermann 0001,Nachiappan Nagappan;Cowboys, ankle sprains, and keepers of quality: how is video game development different from software development?;1-11;11;Perspectives on Software Engineering;
2014;Andrew Begel,Thomas Zimmermann 0001;Analyze this! 145 questions for data scientists in software engineering.;12-13;2;Perspectives on Software Engineering;
2014;Paul Ralph,Paul Kelly;The dimensions of software engineering success.;24-35;12;Perspectives on Software Engineering;
2014;Ravi Khadka,Belfrit V. Batlajery,Amir Saeidi,Slinger Jansen,Jurriaan Hage;How do professionals perceive legacy systems and software modernization?;36-47;12;Perspectives on Software Engineering;
2014;Tingting Yu,Witawas Srisa-an,Gregg Rothermel;SimRT: an automated framework to support regression testing for data races.;48-59;12;Testing 1;
2014;Peng Huang,Xiao Ma,Dongcai Shen,Yuanyuan Zhou;Performance regression testing target prioritization via performance risk analysis.;60-71;12;Testing 1;
2014;Rahul Gopinath,Carlos Jensen,Alex Groce;Code coverage for suite evaluation by developers.;72-82;11;Testing 1;
2014;Mika Mäntylä,Kai Petersen,Timo O. A. Lehtinen,Casper Lassenius;Time pressure: a controlled experiment of test case development and requirements review.;83-94;12;Testing 1;
2014;Shahar Maoz,Jan Oliver Ringert,Bernhard Rumpe;Verifying component and connector models against crosscutting structural views.;95-105;11;Modeling;
2014;Hamid Bagheri,Chong Tang 0001,Kevin J. Sullivan;TradeMaker: automated dynamic analysis of synthesized tradespaces.;106-116;11;Modeling;
2014;Rick Salay,Michalis Famelis,Julia Rubin,Alessio Di Sandro,Marsha Chechik;Lifting model transformations to product lines.;117-128;12;Modeling;
2014;Renzo Degiovanni,Dalal Alrajeh,Nazareno Aguirre,Sebastián Uchitel;Automated goal operationalisation based on interpolation and SAT solving.;129-139;11;Modeling;
2014;Sarah Nadi,Thorsten Berger,Christian Kästner,Krzysztof Czarnecki;Mining configuration constraints: static analyses and empirical results.;140-151;12;Configuration, Variability, and Clones;
2014;Sai Zhang,Michael D. Ernst;Which configuration option should I change?;152-163;12;Configuration, Variability, and Clones;
2014;Yun Lin,Zhenchang Xing,Yinxing Xue,Yang Liu 0003,Xin Peng,Jun Sun 0001,Wenyun Zhao;Detecting differences across multiple instances of code clones.;164-174;11;Configuration, Variability, and Clones;
2014;Kai Chen 0012,Peng Liu,Yingjun Zhang;Achieving accuracy and scalability simultaneously in detecting application clones on Android markets.;175-186;12;Configuration, Variability, and Clones;
2014;Klaas-Jan Stol,Brian Fitzgerald;Two's company, three's a crowd: a case study of crowdsourcing software development.;187-198;12;Social Aspects of Software Engineering;
2014;Patrick Wagstrom,Subhajit Datta;Does latitude hurt while longitude kills? geographical and temporal separation in a large scale software development project.;199-210;12;Social Aspects of Software Engineering;
2014;Leif Singer,Fernando Marques Figueira Filho,Margaret-Anne D. Storey;Software engineering at the speed of light: how developers stay current using twitter.;211-221;11;Social Aspects of Software Engineering;
2014;Qi Xuan,Vladimir Filkov;Building it together: synchronous development in OSS.;222-233;12;Social Aspects of Software Engineering;
2014;Martin Monperrus;"A critical review of ""automatic patch generation learned from human-written patches"": essay on the problem statement and the evaluation of automatic software repair.";234-242;9;Repair;
2014;Divya Gopinath,Sarfraz Khurshid,Diptikalyan Saha,Satish Chandra;Data-guided repair of selection statements.;243-253;11;Repair;
2014;Yuhua Qi,Xiaoguang Mao,Yan Lei,Ziying Dai,Chengsong Wang;The strength of random search on automated program repair.;254-265;12;Repair;
2014;Shalini Kaleeswaran,Varun Tulsian,Aditya Kanade,Alessandro Orso;MintHint: automated synthesis of repair hints.;266-276;11;Repair;
2014;Carlo Ghezzi,Mauro Pezzè,Michele Sama,Giordano Tamburrelli;Mining behavior models from user-intensive web applications.;277-287;11;Formal Analysis;
2014;Steven Arzt,Eric Bodden;Reviser: efficiently updating IDE-/IFDS-based data-flow analyses in response to incremental program changes.;288-298;11;Formal Analysis;
2014;Antonio Filieri,Henry Hoffmann,Martina Maggio;Automated design of self-adaptive software with control-theoretical formal guarantees.;299-310;12;Formal Analysis;
2014;Guoxin Su,David S. Rosenblum;Perturbation analysis of stochastic systems with empirical distribution parameters.;311-321;11;Formal Analysis;
2014;Caius Brindescu,Mihai Codoban,Sergii Shmarkatiuk,Danny Dig;How do centralized and distributed version control systems impact software changes?;322-333;12;Configuration Management;
2014;Kivanç Muslu,Christian Bird,Nachiappan Nagappan,Jacek Czerwonka;Transition from centralized to decentralized version control systems: a case study on reasons, barriers, and outcomes.;334-344;11;Configuration Management;
2014;Georgios Gousios,Martin Pinzger,Arie van Deursen;An exploratory study of the pull-based software development model.;345-355;11;Configuration Management;
2014;Jason Tsay,Laura Dabbish,James D. Herbsleb;Influence of social and technical factors for evaluating contribution in GitHub.;356-366;11;Configuration Management;
2014;Saba Alimadadi,Sheldon Sequeira,Ali Mesbah 0001,Karthik Pattabiraman;Understanding JavaScript event-based interactions.;367-377;11;Software Understanding;
2014;Janet Siegmund,Christian Kästner,Sven Apel,Chris Parnin,Anja Bethmann,Thomas Leich,Gunter Saake,André Brechmann;Understanding understanding source code with functional magnetic resonance imaging.;378-389;12;Software Understanding;
2014;Paige Rodeghero,Collin McMillan,Paul W. McBurney,Nigel Bosch,Sidney K. D'Mello;Improving automated source code summarization via an eye-tracking study of programmers.;390-401;12;Software Understanding;
2014;Thomas Fritz,Andrew Begel,Sebastian C. Müller,Serap Yigit-Elliott,Manuela Züger;Using psycho-physiological measures to assess task difficulty in software development.;402-413;12;Software Understanding;
2014;Xiao-Yuan Jing,Shi Ying,Zhi-Wu Zhang,Shanshan Wu,Jin Liu;Dictionary learning based software defect prediction.;414-423;10;Prediction;
2014;Foyzur Rahman,Sameer Khatri,Earl T. Barr,Premkumar T. Devanbu;Comparing static bug finders and statistical prediction.;424-434;11;Prediction;
2014;Laura Inozemtseva,Reid Holmes;Coverage is not strongly correlated with test suite effectiveness.;435-445;11;Prediction;
2014;Leandro L. Minku,Xin Yao;How to make best use of cross-company data in software effort estimation?;446-456;11;Prediction;
2014;Yanyan Jiang 0001,Tianxiao Gu,Chang Xu,Xiaoxing Ma,Jian Lu;CARE: cache guided deterministic replay for concurrent Java programs.;457-467;11;Concurrency;
2014;Ivan Beschastnikh,Yuriy Brun,Michael D. Ernst,Arvind Krishnamurthy;Inferring models of concurrent systems from logs of their behavior with CSight.;468-479;12;Concurrency;
2014;Peng Liu 0010,Charles Zhang;Unleashing concurrency for irregular data structures.;480-490;11;Concurrency;
2014;Yan Cai,Shangru Wu,W. K. Chan;ConLock: a constraint-based approach to dynamic checking on deadlocks in multithreaded programs.;491-502;12;Concurrency;
2014;Irene Lizeth Manotas Gutiérrez,Lori L. Pollock,James Clause;SEEDS: a software engineer's energy-optimization decision support framework.;503-514;12;Apps and Energy;
2014;Nima Nikzad,Octav Chipara,William G. Griswold;APE: an annotation language and middleware for energy-efficient mobile application development.;515-526;12;Apps and Energy;
2014;Ding Li,Angelica Huyen Tran,William G. J. Halfond;Making web applications more energy efficient for OLED smartphones.;527-538;12;Apps and Energy;
2014;Patrice Godefroid;Micro execution.;539-549;11;Testing 2;
2014;Jonathan Bell,Gail E. Kaiser;Unit test virtualization with VMVM.;550-561;12;Testing 2;
2014;Paolo Tonella,Roberto Tiella,Duy Cu Nguyen;Interpolated n-grams for model based testing.;562-572;11;Testing 2;
2014;Kelly Androutsopoulos,David Clark,Haitao Dan,Robert M. Hierons,Mark Harman;An analysis of the relationship between conditional entropy and failed error propagation in software testing.;573-583;11;Testing 2;
2014;Nélio Cacho,Thiago César,Thomas Filipe,Eliezio Soares,Arthur Cassio,Rafael Souza,Israel García,Eiji Adachi Barbosa,Alessandro Garcia;Trading robustness for maintainability: an empirical study of evolving c# programs.;584-595;12;Code Contracts, Invariants, and Robustness;
2014;Todd W. Schiller,Kellen Donohue,Forrest Coward,Michael D. Ernst;Case studies and tools for contract specifications.;596-607;12;Code Contracts, Invariants, and Robustness;
2014;ThanhVu Nguyen,Deepak Kapur,Westley Weimer,Stephanie Forrest;Using dynamic analysis to generate disjunctive invariants.;608-619;12;Code Contracts, Invariants, and Robustness;
2014;Ivan Bocic,Tevfik Bultan;Inductive verification of data model invariants for web applications.;620-631;12;Code Contracts, Invariants, and Robustness;
2014;Stefan Endrikat,Stefan Hanenberg,Romain Robbes,Andreas Stefik;How do API documentation and static typing affect API usability?;632-642;11;Search and APIs;
2014;Siddharth Subramanian,Laura Inozemtseva,Reid Holmes;Live API documentation.;643-652;10;Search and APIs;
2014;Joel Galenson,Philip Reames,Rastislav Bodík,Björn Hartmann,Koushik Sen;CodeHint: dynamic and interactive synthesis of code snippets.;653-663;11;Search and APIs;
2014;Iman Keivanloo,Juergen Rilling,Ying Zou;Spotting working code examples.;664-675;12;Search and APIs;
2014;Bihuan Chen,Xin Peng,Yijun Yu,Bashar Nuseibeh,Wenyun Zhao;Self-adaptation through incremental generative model transformations at runtime.;676-687;12;Adaptive Systems;
2014;Nicolás D'Ippolito,Víctor A. Braberman,Jeff Kramer,Jeff Magee,Daniel Sykes,Sebastián Uchitel;Hope for the best, prepare for the worst: multi-tier control for adaptive systems.;688-699;12;Adaptive Systems;
2014;Cristian Klein,Martina Maggio,Karl-Erik Årzén,Francisco Hernández-Rodriguez;Brownout: building more robust cloud applications.;700-711;12;Adaptive Systems;
2014;Pierre A. Akiki,Arosha K. Bandara,Yijun Yu;Integrating adaptive user interface capabilities in enterprise applications.;712-723;12;Adaptive Systems;
2014;Hyunmin Seo,Caitlin Sadowski,Sebastian G. Elbaum,Edward Aftandilian,Robert W. Bowdidge;Programmers' build errors: a case study (at google).;724-734;11;Build and Package Management;
2014;Shaun Phillips,Thomas Zimmermann 0001,Christian Bird;Understanding and improving software build teams.;735-744;10;Build and Package Management;
2014;Alexey Ignatiev,Mikolás Janota,João Marques-Silva;Towards efficient optimization in package management systems.;745-755;11;Build and Package Management;
2014;Jérôme Vouillon,Mehdi Dogguy,Roberto Di Cosmo;Easing software component repository evolution.;756-766;11;Build and Package Management;
2014;Ning Chen,Jialiu Lin,Steven C. H. Hoi,Xiaokui Xiao,Boshen Zhang;AR-miner: mining informative reviews for developers from mobile app marketplace.;767-778;12;Mining;
2014;Robert Dyer 0001,Hridesh Rajan,Hoan Anh Nguyen,Tien N. Nguyen;Mining billions of AST nodes to study actual and potential usage of Java language features.;779-790;12;Mining;
2014;Hung Viet Nguyen,Hoan Anh Nguyen,Anh Tuan Nguyen,Tien N. Nguyen;Mining interprocedural, data-oriented usage patterns in JavaScript web applications.;791-802;12;Mining;
2014;Stas Negara,Mihai Codoban,Danny Dig,Ralph E. Johnson;Mining fine-grained code changes to detect unknown change patterns.;803-813;11;Mining;
2014;Sangho Lee,Changhee Jung,Santosh Pande;Detecting memory leaks through introspective dynamic behavior modelling using machine learning.;814-824;11;Automated Bug Detection and Repair;
2014;Changhee Jung,Sangho Lee,Easwaran Raman,Santosh Pande;Automated memory leak detection for production use.;825-836;12;Automated Bug Detection and Repair;
2014;Frolin S. Ocariza Jr.,Karthik Pattabiraman,Ali Mesbah 0001;Vejovis: suggesting fixes for JavaScript faults.;837-847;11;Automated Bug Detection and Repair;
2014;Wensheng Dou,Shing-Chi Cheung,Jun Wei;Is spreadsheet ambiguity harmful? detecting and repairing spreadsheet smells due to ambiguous computation.;848-858;11;Automated Bug Detection and Repair;
2014;Swapneel Sheth,Gail E. Kaiser,Walid Maalej;Us and them: a study of privacy requirements across north america, asia, and europe.;859-870;12;Requirements;
2014;Keerthi Thomas,Arosha K. Bandara,Blaine A. Price,Bashar Nuseibeh;Distilling privacy requirements for mobile applications.;871-882;12;Requirements;
2014;Emmanuel Letier,David Stefan,Earl T. Barr;Uncertainty, risk, and information value in software requirements and architecture.;883-894;12;Requirements;
2014;Rahul Mohanani,Paul Ralph,Ben Shreeve;Requirements fixation.;895-906;12;Requirements;
2014;Hung Viet Nguyen,Christian Kästner,Tien N. Nguyen;Exploring variability-aware execution for testing plugin-based web applications.;907-918;12;Testing and Conformance Verification;
2014;Xiangjuan Yao,Mark Harman,Yue Jia;A study of equivalent and stubborn mutation operators using human analysis of equivalence.;919-930;12;Testing and Conformance Verification;
2014;Antonio Carzaniga,Alberto Goffi,Alessandra Gorla,Andrea Mattavelli,Mauro Pezzè;Cross-checking oracles from intrinsic software redundancy.;931-942;12;Testing and Conformance Verification;
2014;Patrick Rempel,Patrick Mäder,Tobias Kuschke,Jane Cleland-Huang;Mind the gap: assessing the conformance of software traceability to relevant guidelines.;943-954;12;Testing and Conformance Verification;
2014;Dina Zayan,Michal Antkiewicz,Krzysztof Czarnecki;Effects of using examples on structural model comprehension: a controlled experiment.;955-966;12;Modeling and Interfaces;
2014;Lu Xiao,Yuanfang Cai,Rick Kazman;Design rule spaces: a new form of architecture insight.;967-977;11;Modeling and Interfaces;
2014;Hisashi Miyashita,Hideki Tai,Shunichi Amano;Controlled modeling environment using flexibly-formatted spreadsheets.;978-988;11;Modeling and Interfaces;
2014;Márcio Ribeiro,Paulo Borba,Christian Kästner;Feature maintenance with emergent interfaces.;989-1000;12;Modeling and Interfaces;
2014;Tse-Hsun Chen,Weiyi Shang,Zhen Ming Jiang,Ahmed E. Hassan,Mohamed N. Nasser,Parminder Flora;Detecting performance anti-patterns for applications developed using object-relational mapping.;1001-1012;12;Apps and Verification;
2014;Yepang Liu,Chang Xu,Shing-Chi Cheung;Characterizing and detecting performance bugs for smartphone applications.;1013-1024;12;Apps and Verification;
2014;Alessandra Gorla,Ilaria Tavecchia,Florian Gross,Andreas Zeller;Checking app behavior against app descriptions.;1025-1035;11;Apps and Verification;
2014;Jianjun Huang,Xiangyu Zhang,Lin Tan,Peng Wang,Bin Liang;AsDroid: detecting stealthy behaviors in Android applications by user interface and program behavior contradiction.;1036-1046;11;Apps and Verification;
2014;Wei Le,Shannon D. Pattison;Patch verification via multiversion interprocedural control flow graphs.;1047-1058;12;Symbolic Execution;
2014;Guowei Yang,Sarfraz Khurshid,Suzette Person,Neha Rungta;Property differencing for incremental checking.;1059-1070;12;Symbolic Execution;
2014;Fei He,Bow-Yaw Wang,Liangze Yin,Lei Zhu;Symbolic assume-guarantee reasoning through BDD learning.;1071-1082;12;Symbolic Execution;
2014;Thanassis Avgerinos,Alexandre Rebert,Sang Kil Cha,David Brumley;Enhancing symbolic execution with veritesting.;1083-1094;12;Symbolic Execution;
2014;Xi Ge,Emerson R. Murphy-Hill;Manual refactoring changes with automated refactoring validation.;1095-1105;11;Refactoring and Reverse Engineering;
2014;Mohsen Vakilian,Ralph E. Johnson;Alternate refactoring paths reveal usability problems.;1106-1116;11;Refactoring and Reverse Engineering;
2014;Semih Okur,David L. Hartveld,Danny Dig,Arie van Deursen;A study and toolkit for asynchronous programming in c#.;1117-1127;11;Refactoring and Reverse Engineering;
2014;Dohyeong Kim,William N. Sumner,Xiangyu Zhang,Dongyan Xu,Hira Agrawal;Reuse-oriented reverse engineering of functional components from x86 binaries.;1128-1139;12;Refactoring and Reverse Engineering;
2013;Paola Inverardi,Massimo Tivoli;Automatic synthesis of modular connectors via composition of protocol mediation patterns.;3-12;10;Composition;
2013;Fabienne Boyer,Olivier Gruber,Damien Pous;Robust reconfigurations of component assemblies.;13-22;10;Composition;
2013;Yun Young Lee,Nicholas Chen,Ralph E. Johnson;Drag-and-drop refactoring: intuitive and efficient program transformation.;23-32;10;Composition;
2013;Carlo Ghezzi,Leandro Sales Pinto,Paola Spoletini,Giordano Tamburrelli;Managing non-functional uncertainty via model-driven adaptivity.;33-42;10;Adaptation;
2013;Naeem Esfahani,Sam Malek,Kaveh Razavi;GuideArch: guiding the exploration of architectural solution space under uncertainty.;43-52;10;Adaptation;
2013;Christoph Dorn,Richard N. Taylor;Coupling software architecture and human architecture for collaboration-aware system adaptation.;53-62;10;Adaptation;
2013;Daniel Sykes,Domenico Corapi,Jeff Magee,Jeff Kramer,Alessandra Russo,Katsumi Inoue;Learning revised models for planning in adaptive systems.;63-71;9;Adaptation;
2013;Lorenzo Gomez,Iulian Neamtiu,Tanzirul Azim,Todd D. Millstein;RERAN: timing- and touch-sensitive record and replay for Android.;72-81;10;Apps;
2013;Amruta Gokhale,Vinod Ganapathy,Yogesh Padmanaban;Inferring likely mappings between APIs.;82-91;10;Apps;
2013;Shuai Hao,Ding Li,William G. J. Halfond,Ramesh Govindan;Estimating mobile application energy consumption using program analysis.;92-101;10;Apps;
2013;Michael W. Whalen,Gregory Gay,Dongjiang You,Mats Per Erik Heimdahl,Matt Staats;Observable modified Condition/Decision coverage.;102-111;10;Testing;
2013;Raphael Pham,Leif Singer,Olga Liskin,Fernando Marques Figueira Filho,Kurt Schneider;Creating a shared understanding of testing culture on a social coding site.;112-121;10;Testing;
2013;Ella Bounimova,Patrice Godefroid,David A. Molnar;Billions and billions of constraints: whitebox fuzz testing in production.;122-131;10;Testing;
2013;Pranav Garg 0001,Franjo Ivancic,Gogul Balakrishnan,Naoto Maeda,Aarti Gupta;Feedback-directed unit test generation for C/C++ using concolic execution.;132-141;10;Test-Case Generation;
2013;Domenico Cotroneo,Roberto Pietrantuono,Stefano Russo;A learning-based method for combining testing techniques.;142-151;10;Test-Case Generation;
2013;Amanda Swearngin,Myra B. Cohen,Bonnie E. John,Rachel K. E. Bellamy;Human performance regression testing.;152-161;10;Test-Case Generation;
2013;Suresh Thummalapenta,K. Vasanta Lakshmi,Saurabh Sinha,Nishant Sinha,Satish Chandra;Guided test generation for web applications.;162-171;10;Test-Case Generation;
2013;Mohammad Mahdi Hassan,James H. Andrews;Comparing multi-point stride coverage and dataflow coverage.;172-181;10;Test-Case Selection;
2013;Dale Blue,Itai Segall,Rachel Tzoref-Brill,Aviad Zlotnick;Interaction-based test-suite minimization.;182-191;10;Test-Case Selection;
2013;Lingming Zhang,Dan Hao,Lu Zhang 0023,Gregg Rothermel,Hong Mei;Bridging the gap between the total and additional test-case prioritization strategies.;192-201;10;Test-Case Selection;
2013;Cong Tian,Zhenhua Duan;Detecting spurious counterexamples efficiently in abstract model checking.;202-211;10;Formal Analysis;
2013;Wei Le;Segmented symbolic analysis.;212-221;10;Formal Analysis;
2013;John Hatcliff,Robby,Patrice Chalin,Jason Belt;Explicating symbolic execution (xSymExe): an evidence-based verification framework.;222-231;10;Formal Analysis;
2013;Tim Nelson,Salman Saghafi,Daniel J. Dougherty,Kathi Fisler,Shriram Krishnamurthi;Aluminum: principled scenario exploration through minimality.;232-241;10;Formal Specification;
2013;Shahar Maoz,Yaniv Sa'ar;Counter play-out: executing unrealizable scenario-based specifications.;242-251;10;Formal Specification;
2013;Ivan Beschastnikh,Yuriy Brun,Jenny Abrahamson,Michael D. Ernst,Arvind Krishnamurthy;Unifying FSM-inference algorithms through declarative specification.;252-261;10;Formal Specification;
2013;Nadia Polikarpova,Carlo A. Furia,Yu Pei 0001,Yi Wei,Bertrand Meyer;What good are strong specifications?;262-271;10;Formal Specification;
2013;William N. Sumner,Xiangyu Zhang;Comparative causality: explaining the differences between executions.;272-281;10;Analysis;
2013;Michael Pradel,Thomas R. Gross;Automatic testing of sequential and concurrent substitutability.;282-291;10;Analysis;
2013;Felienne Hermans,Ben Sedee,Martin Pinzger,Arie van Deursen;Data clone detection and visualization in spreadsheets.;292-301;10;Analysis;
2013;Marcel Böhme,Bruno C. d. S. Oliveira,Abhik Roychoudhury;Partition-based regression verification.;302-311;10;Code Analysis;
2013;Sai Zhang,Michael D. Ernst;Automated diagnosis of software configuration errors.;312-321;10;Code Analysis;
2013;Daniel Marino,Christian Hammer 0001,Julian Dolby,Mandana Vaziri,Frank Tip,Jan Vitek;Detecting deadlock in programs with data-centric synchronization.;322-331;10;Code Analysis;
2013;Emerson R. Murphy-Hill,Thomas Zimmermann 0001,Christian Bird,Nachiappan Nagappan;The design of bug fixes.;332-341;10;Debugging;
2013;Gerald Bortis,André van der Hoek;PorchLight: a tag-based approach to bug triaging.;342-351;10;Debugging;
2013;Yit Phang Khoo,Jeffrey S. Foster,Michael Hicks;Expositor: scriptable time-travel debugging with first-class traces.;352-361;10;Debugging;
2013;Jonathan Bell,Nikhil Sarda,Gail E. Kaiser;Chronicler: lightweight recording to reproduce field failures.;362-371;10;Debugging;
2013;Chris Lewis 0002,Zhongpeng Lin,Caitlin Sadowski,Xiaoyan Zhu,Rong Ou,E. James Whitehead Jr.;Does bug prediction support human developers? findings from a google case study.;372-381;10;Bug Prediction;
2013;Jaechang Nam,Sinno Jialin Pan,Sunghun Kim;Transfer defect learning.;382-391;10;Bug Prediction;
2013;Kim Herzig,Sascha Just,Andreas Zeller;It's not a bug, it's a feature: how misclassification impacts bug prediction.;392-401;10;Bug Prediction;
2013;Weiyi Shang,Zhen Ming Jiang,Hadi Hemmati,Bram Adams,Ahmed E. Hassan,Patrick Martin;Assisting developers of big data analytics applications when deploying on hadoop clouds.;402-411;10;Big Data;
2013;Jérôme Vouillon,Roberto Di Cosmo;Broken sets in software repository evolution.;412-421;10;Big Data;
2013;Robert Dyer 0001,Hoan Anh Nguyen,Hridesh Rajan,Tien N. Nguyen;Boa: a language and infrastructure for analyzing ultra-large-scale software repositories.;422-431;10;Big Data;
2013;Foyzur Rahman,Premkumar T. Devanbu;How, and why, process metrics are better.;432-441;10;Process;
2013;Daniela Damian,Remko Helms,Irwin Kwan,Sabrina Marczak,Benjamin Koelewijn;The role of domain knowledge and cross-functional communication in socio-technical coordination.;442-451;10;Process;
2013;Daryl Posnett,Raissa M. D'Souza,Premkumar T. Devanbu,Vladimir Filkov;Dual ecological measures of focus in software development.;452-461;10;Process;
2013;Filomena Ferrucci,Mark Harman,Jian Ren,Federica Sarro;Not going to take this anymore: multi-objective overtime planning for software engineering projects.;462-471;10;Process;
2013;Maxime Cordy,Pierre-Yves Schobbens,Patrick Heymans,Axel Legay;Beyond boolean product-line model checking: dealing with feature attributes and multi-features.;472-481;10;Product Lines;
2013;Sven Apel,Alexander von Rhein,Philipp Wendler,Armin Größlinger,Dirk Beyer 0001;Strategies for product-line verification: case studies and experiments.;482-491;10;Product Lines;
2013;Abdel Salam Sayyad,Tim Menzies,Hany Ammar;On the value of user preferences in search-based software engineering: a case study in software product lines.;492-501;10;Product Lines;
2013;Na Meng,Miryung Kim,Kathryn S. McKinley;LASE: locating and applying systematic edits by learning from examples.;502-511;10;Search-Based SE;
2013;Sören Frey,Florian Fittkau,Wilhelm Hasselbring;Search-based genetic optimization for deployment and reconfiguration of software in the cloud.;512-521;10;Search-Based SE;
2013;Annibale Panichella,Bogdan Dit,Rocco Oliveto,Massimiliano Di Penta,Denys Poshyvanyk,Andrea De Lucia;How to effectively use topic models for software engineering tasks? an approach based on genetic algorithms.;522-531;10;Search-Based SE;
2013;Thomas Bartenstein,Yu David Liu;Green streams for data-intensive software.;532-541;10;Performance;
2013;Tian Huat Tan,Étienne André,Jun Sun 0001,Yang Liu 0003,Jin Song Dong,Manman Chen;Dynamic synthesis of local time requirement for service composition.;542-551;10;Performance;
2013;Alexander Wert,Jens Happe,Lucia Happe;Supporting swift reaction: automatically uncovering performance problems by systematic experiments.;552-561;10;Performance;
2013;Adrian Nistor,Linhai Song,Darko Marinov,Shan Lu;Toddler: detecting performance problems via similar memory-access patterns.;562-571;10;Performance;
2013;Nan Niu,Anas Mahmoud,Zhangji Chen,Gary Bradshaw;Departures from optimality: understanding human analyst's information foraging in assisted requirements tracing.;572-581;10;Requirements Engineering;
2013;Laura V. Galvis Carreño,Kristina Winbladh;Analysis of user comments: an approach for software requirements evolution.;582-591;10;Requirements Engineering;
2013;Emmanuel Letier,William Heaven;Requirements modelling by synthesis of deontic input-output automata.;592-601;10;Requirements Engineering;
2013;Esteban Pavese,Víctor A. Braberman,Sebastián Uchitel;Automated reliability estimation over partial systematic explorations.;602-611;10;Reliability;
2013;Petr Hosek,Cristian Cadar;Safe software updates via multi-version execution.;612-621;10;Reliability;
2013;Antonio Filieri,Corina S. Pasareanu,Willem Visser;Reliability analysis in symbolic pathfinder.;622-631;10;Reliability;
2013;Inah Omoronyia,Luca Cavallaro,Mazeiar Salehie,Liliana Pasquale,Bashar Nuseibeh;Engineering adaptive privacy: on the role of privacy awareness requirements.;632-641;10;Security and Privacy;
2013;Lwin Khin Shar,Hee Beng Kuan Tan,Lionel C. Briand;Mining SQL injection and cross site scripting vulnerabilities using hybrid program analysis.;642-651;10;Security and Privacy;
2013;Yunhui Zheng,Xiangyu Zhang;Path sensitive static analysis of web applications for remote code execution vulnerability detection.;652-661;10;Security and Privacy;
2013;Mohamed Almorsy,John Grundy,Amani S. Ibrahim;Automated software architecture security risk analysis using formalized signatures.;662-671;10;Security and Privacy;
2013;Brittany Johnson,Yoonki Song,Emerson R. Murphy-Hill,Robert W. Bowdidge;Why don't software developers use static analysis tools to find bugs?;672-681;10;Analysis Studies;
2013;Aiko Fallas Yamashita,Leon Moonen;Exploring the impact of inter-smell relations on software maintainability: an empirical study.;682-691;10;Analysis Studies;
2013;Gabriele Bavota,Bogdan Dit,Rocco Oliveto,Massimiliano Di Penta,Denys Poshyvanyk,Andrea De Lucia;An empirical study on the developers' perception of software coupling.;692-701;10;Analysis Studies;
2013;Shauvik Roy Choudhary,Mukul R. Prasad,Alessandro Orso;X-PERT: accurate identification of cross-browser issues in web applications.;702-711;10;Empirical Studies;
2013;Alberto Bacchelli,Christian Bird;Expectations, outcomes, and challenges of modern code review.;712-721;10;Empirical Studies;
2013;Marian Petre;UML in practice.;722-731;10;Empirical Studies;
2013;Bakhtiar Khan Kasi,Anita Sarma;Cassandra: proactive conflict minimization through optimized task scheduling.;732-741;10;Empirical Studies;
2013;Alex Potanin,Monique Damitio,James Noble;Are your incoming aliases really necessary? counting the cost of object ownership.;742-751;10;Programming Support;
2013;Asger Feldthaus,Max Schäfer,Manu Sridharan,Julian Dolby,Frank Tip;Efficient construction of approximate call graphs for JavaScript IDE services.;752-761;10;Programming Support;
2013;Jinshui Wang,Xin Peng,Zhenchang Xing,Wenyun Zhao;Improving feature location practice with multi-faceted interactive exploration.;762-771;10;Programming Support;
2013;Hoang Duong Thien Nguyen,Dawei Qi,Abhik Roychoudhury,Satish Chandra;SemFix: program repair via semantic analysis.;772-781;10;Program Repair;
2013;Antonio Carzaniga,Alessandra Gorla,Andrea Mattavelli,Nicolò Perino,Mauro Pezzè;Automatic recovery from runtime failures.;782-791;10;Program Repair;
2013;Zack Coker,Munawar Hafiz;Program transformations to fix C integers.;792-801;10;Program Repair;
2013;Dongsun Kim,Jaechang Nam,Jaewoo Song,Sunghun Kim;Automatic patch generation learned from human-written patches.;802-811;10;Program Repair;
2013;Nicholas Sawadsky,Gail C. Murphy,Rahul Jiresal;Reverb: recommending code-related web pages.;812-821;10;Tools;
2013;Andreas Scharf,Till Amma;Dynamic injection of sketching features into GEF based diagram editors.;822-831;10;Tools;
2013;Peter C. Rigby,Martin P. Robillard;Discovering essential code elements in informal documentation.;832-841;10;Tools;
2013;Sonia Haiduc,Gabriele Bavota,Andrian Marcus,Rocco Oliveto,Andrea De Lucia,Tim Menzies;Automatic query reformulations for text retrieval in software engineering.;842-851;10;Tools;
2013;Pamela Samuelson;Are software patents bad? (keynote).;855;1;Keynotes;
2013;Tony DeRose;The connection between movie making and software development (keynote).;856;1;Keynotes;
2013;Linda M. Northrop;Does scale really matter? ultra-large-scale systems seven years after the study (keynote).;857;1;Keynotes;
2013;Steven Fraser,Judith Bishop,Barry W. Boehm,Pradeep Kathail,Philippe Kruchten,Ipek Ozkaya,Alexandra Szynkarski;Technical debt: past, present, and future (panel).;861-862;2;Technical Debt:Past, Present, and Future;
2013;Brian Fitzgerald,Klaas-Jan Stol,Ryan O'Sullivan,Donal O'Brien;Scaling agile methods to regulated environments: an industry case study.;863-872;10;Agile and Distributed Practices;
2013;Alan W. Brown,Scott Ambler,Walker Royce;Agility at scale: economic governance, measured improvement, and disciplined delivery.;873-881;9;Agile and Distributed Practices;
2013;Ekrem Kocaguneli,Thomas Zimmermann 0001,Christian Bird,Nachiappan Nagappan,Tim Menzies;Distributed development considered harmful?;882-890;9;Agile and Distributed Practices;
2013;Robert W. Schwanke,Lu Xiao,Yuanfang Cai;Measuring architecture quality by structure plus history analysis.;891-900;10;Software Architecture;
2013;Joshua Garcia,Ivo Krka,Chris Mattmann,Nenad Medvidovic;Obtaining ground-truth software architectures.;901-910;10;Software Architecture;
2013;Ganesh Samarthyam,Girish Suryanarayana,Tushar Sharma,Shrinath Gupta;MIDAS: a design quality assessment method for industrial software.;911-920;10;Software Architecture;
2013;Eric Bouwers,Arie van Deursen,Joost Visser;Evaluating usefulness of software metrics: an industrial experience report.;921-930;10;Metrics and Evaluation;
2013;Vipin Balachandran;Reducing human effort and improving quality in peer code reviews using automatic static analysis and reviewer recommendation.;931-940;10;Metrics and Evaluation;
2013;Aldo Dagnino;Estimating software-intensive projects in the absence of historical data.;941-950;10;Metrics and Evaluation;
2013;Dongmei Zhang,Tao Xie;Pathways to technology transfer and adoption: achievements and challenges (mini-tutorial).;951-952;2;Mini-Tutorial;
2013;Dennis Pagano,Bernd Brügge;User involvement in software evolution practice: a case study.;953-962;10;Case Studies;
2013;Sihan Li,Hucheng Zhou,Haoxiang Lin,Tian Xiao,Haibo Lin,Wei Lin,Tao Xie;A characteristic study on failures of production distributed data-parallel programs.;963-972;10;Case Studies;
2013;Rafael Prikladnicki,Erran Carmel;Is time-zone proximity an advantage for software development? the case of the brazilian IT industry.;973-981;9;Case Studies;
2013;Stephany Bellomo,Robert L. Nord,Ipek Ozkaya;A study of enabling factors for rapid fielding: combined practices to balance speed and stability.;982-991;10;Case Studies;
2013;Indradeep Ghosh,Nastaran Shafiei,Guodong Li,Wei-Fan Chiang;JST: an automatic test generation tool for industrial Java applications with strings.;992-1001;10;Testing;
2013;Suresh Thummalapenta,Pranavadatta Devaki,Saurabh Sinha,Satish Chandra,Sivagami Gnanasundaram,Deepa D. Nagaraj,Sampathkumar Sathishkumar;Efficient and change-resilient test automation: an industrial case study.;1002-1011;10;Testing;
2013;Haroon Malik,Hadi Hemmati,Ahmed E. Hassan;Automatic detection of performance deviations in the load testing of large scale systems.;1012-1021;10;Testing;
2013;Henning Femmer,Dharmalingam Ganesan,Mikael Lindvall,David McComas;Detecting inconsistencies in wrappers: a case study.;1022-1031;10;Bug Detection;
2013;Marcelo Serrano Zanetti,Ingo Scholtes,Claudio Juan Tessone,Frank Schweitzer;Categorizing bugs with social networks: a case study on four open source software communities.;1032-1041;10;Bug Detection;
2013;Hongyu Zhang,Liang Gong,Steven Versteeg;Predicting bug-fixing time: an empirical study of commercial software projects.;1042-1051;10;Bug Detection;
2013;Simone C. dos Santos,Felipe Santana Furtado Soares;Authentic assessment in software engineering education based on PBL principles: a case study in the telecom market.;1055-1062;8;Problem-Based and Studio Learning;
2013;Christopher N. Bull,Jon Whittle,Leon Cruickshank;Studios in software engineering education: towards an evaluable model.;1063-1072;10;Problem-Based and Studio Learning;
2013;Dastyni Loksa,Nicolas Mangano,Thomas D. LaToza,André van der Hoek;Enabling a classroom design studio with a collaborative sketch design tool.;1073-1082;10;Problem-Based and Studio Learning;
2013;Amir Zeid;A framework to evaluate software engineering student contests: evaluation and integration with academic programs.;1083-1089;7;Problem-Based and Studio Learning;
2013;David S. Janzen,John Clements,Michael Hilton;An evaluation of interactive test-driven labs with WebIDE in CS0.;1090-1098;9;Teaching Introductory Software Engineering;
2013;Vicente Lustosa Neto,Roberta Coelho,Larissa Leite,Dalton S. Guerrero,Andrea P. Mendonça;POPT: a problem-oriented programming and testing approach for novice students.;1099-1108;10;Teaching Introductory Software Engineering;
2013;Václav Rajlich;Teaching developer skills in the first software engineering course.;1109-1116;8;Teaching Introductory Software Engineering;
2013;Nikolai Tillmann,Jonathan de Halleux,Tao Xie,Sumit Gulwani,Judith Bishop;Teaching and learning programming and software engineering via interactive gaming.;1117-1126;10;Teaching Introductory Software Engineering;
2013;Mark A. Ardis,David Budgen,Gregory W. Hislop,Jeff Offutt,Mark J. Sebern,Willem Visser;Town hall discussion of SE 2004 revisions (panel).;1127;1;Panel:Town Hall Discussion of SE 2004 Revisions;
2013;Maria Paasivaara,Casper Lassenius,Daniela Damian,Petteri Räty,Adrian Schröter;Teaching students global software engineering skills using distributed scrum.;1128-1137;10;Advanced Software Engineering Education;
2013;Marco Kuhrmann,Daniel Méndez Fernández,Jürgen Münch;Teaching software process modeling.;1138-1147;10;Advanced Software Engineering Education;
2013;Chris J. Pilgrim;Industry involvement in ICT curriculum: a comparative survey.;1148-1153;6;Advanced Software Engineering Education;
2013;Andrew Meneely,Samuel Lucidi;Vulnerability of the day: concrete demonstrations for software engineering undergraduates.;1154-1157;4;Advanced Software Engineering Education;
2013;John B. Goodenough,Charles B. Weinstock,Ari Z. Klein;Eliminative induction: a basis for arguing system confidence.;1161-1164;4;Dependability Perspectives;
2013;Paul Givens,Aleksandar Chakarov,Sriram Sankaranarayanan,Tom Yeh;Exploring the internal state of user interfaces by combining computer vision techniques with grammatical inference.;1165-1168;4;Dependability Perspectives;
2013;François Gauthier,Ettore Merlo;Semantic smells and errors in access control models: a case study in PHP.;1169-1172;4;Dependability Perspectives;
2013;Sai Zhang;Practical semantic test simplification.;1173-1176;4;Dependability Perspectives;
2013;Roykrong Sukkerd,Ivan Beschastnikh,Jochen Wuttke,Sai Zhang,Yuriy Brun;Understanding regression failures through test-passing and test-failing code changes.;1177-1180;4;Dependability Perspectives;
2013;Yun Young Lee,Sam Harwell,Sarfraz Khurshid,Darko Marinov;Temporal code completion and navigation.;1181-1184;4;Supporting Tomorrow's Developer;
2013;Olga Baysal,Reid Holmes,Michael W. Godfrey;Situational awareness: personalizing issue tracking systems.;1185-1188;4;Supporting Tomorrow's Developer;
2013;Tuan Anh Nguyen,Christoph Csallner,Nikolai Tillmann;GROPG: a graphical on-phone debugger.;1189-1192;4;Supporting Tomorrow's Developer;
2013;Sarah Rastkar,Gail C. Murphy;Why did this code change?;1193-1196;4;Supporting Tomorrow's Developer;
2013;Nicolas Bettenburg,Andrew Begel;Deciphering the story of software development through frequent pattern mining.;1197-1200;4;Supporting Tomorrow's Developer;
2013;Stephan Salinger,Franz Zieris,Lutz Prechelt;Liberating pair programming research from the oppressive Driver/Observer regime.;1201-1204;4;Collaborative Development;
2013;Ke Mao,Ye Yang,Mingshu Li,Mark Harman;Pricing crowdsourcing-based software development tasks.;1205-1208;4;Collaborative Development;
2013;Raphael Pham,Leif Singer,Kurt Schneider;Building test suites in social coding sites by leveraging drive-by commits.;1209-1212;4;Collaborative Development;
2013;Michael Smit,Bradley Simmons,Mark Shtern,Marin Litoiu;Supporting application development with structured queries in the cloud.;1213-1216;4;Collaborative Development;
2013;Benedikt Hauptmann,Maximilian Junker,Sebastian Eder,Lars Heinemann,Rudolf Vaas,Peter Braun;Hunting for smells in natural language tests.;1217-1220;4;Collaborative Development;
2013;Hamid Bagheri,Kevin J. Sullivan;Bottom-up model-driven development.;1221-1224;4;Alternative Modeling;
2013;Lerina Aversano,Gerardo Canfora,Giuseppe De Ruvo,Maria Tortorella;An approach for restructuring text content.;1225-1228;4;Alternative Modeling;
2013;Emilie Balland,Charles Consel,Bernard N'Kaoua,Hélène Sauzéon;A case for human-driven software development.;1229-1232;4;Alternative Modeling;
2013;Julia Rubin,Marsha Chechik;A framework for managing cloned product variants.;1233-1236;4;Alternative Modeling;
2013;David Socha,Josh D. Tenenberg;Sketching software in the wild.;1237-1240;4;Alternative Modeling;
2013;Adrian Kuhn;On extracting unit tests from interactive live programming sessions.;1241-1244;4;Posters;
2013;Christopher Henard,Mike Papadakis,Gilles Perrouin,Jacques Klein,Yves Le Traon;Towards automated testing and fixing of re-engineered feature models.;1245-1248;4;Posters;
2013;Dalal Alrajeh,Alessandra Russo,James Lockerbie,Neil A. M. Maiden,Alistair Mavin,Mark Novak;Computational alignment of goals and scenarios for complex systems.;1249-1252;4;Posters;
2013;Damian Andrew Tamburri,Patricia Lago,Hans van Vliet;Service networks for development communities.;1253-1256;4;Posters;
2013;Mark Staples,Rafal Kolanski,Gerwin Klein,Corey Lewis,June Andronick,Toby C. Murray,D. Ross Jeffery,Len Bass;Formal specifications better than function points for code sizing.;1257-1260;4;Posters;
2013;Matthew Stephan,Manar H. Alalfi,Andrew Stevenson,James R. Cordy;Using mutation analysis for a model-clone detector comparison framework.;1261-1264;4;Posters;
2013;Md. Saidur Rahman 0002,Amir Aryani,Chanchal K. Roy,Fabrizio Perin;On the relationships between domain-based coupling and code clones: an exploratory study.;1265-1268;4;Posters;
2013;Raúl A. Santelices,Yiji Zhang,Siyuan Jiang,Haipeng Cai,Ying-Jie Zhang;Quantitative program slicing: separating statements by relevance.;1269-1272;4;Posters;
2013;Kacper Bak,Dina Zayan,Krzysztof Czarnecki,Michal Antkiewicz,Zinovy Diskin,Andrzej Wasowski,Derek Rayside;Example-driven modeling: model = abstractions + examples.;1273-1276;4;Posters;
2013;Will Snipes,Vinay Augustine,Anil R. Nair,Emerson R. Murphy-Hill;Towards recognizing and rewarding efficient developer work patterns.;1277-1280;4;Posters;
2013;Xiao Liu,Yun Yang,Dahai Cao,Dong Yuan;Selecting checkpoints along the time line: a novel temporal checkpoint selection strategy for monitoring a batch of parallel business processes.;1281-1284;4;Posters;
2013;Lyle Franklin,Alex Gyori,Jan Lahoda,Danny Dig;LAMBDAFICATOR: from imperative to functional programming through automated refactoring.;1287-1290;4;Formal Demonstrations 1;
2013;Jim Buckley,Sean Mooney,Jacek Rosik,Nour Ali;JITTAC: a just-in-time tool for architectural consistency.;1291-1294;4;Formal Demonstrations 1;
2013;Luca Ponzanelli,Alberto Bacchelli,Michele Lanza;Seahawk: stack overflow in the IDE.;1295-1298;4;Formal Demonstrations 1;
2013;Hung Viet Nguyen,Hoan Anh Nguyen,Tung Thanh Nguyen,Tien N. Nguyen;DRC: a detection tool for dangling references in PHP-based web applications.;1299-1302;4;Formal Demonstrations 1;
2013;Leandro Sales Pinto,Saurabh Sinha,Alessandro Orso;TestEvol: a tool for analyzing test-suite evolution.;1303-1306;4;Formal Demonstrations 1;
2013;Sonia Haiduc,Giuseppe De Rosa,Gabriele Bavota,Rocco Oliveto,Andrea De Lucia,Andrian Marcus;Query quality prediction and reformulation for source code search: the refoqus tool.;1307-1310;4;Formal Demonstrations 1;
2013;Zhenchang Xing,Yinxing Xue,Stan Jarzabek;A large scale Linux-kernel based benchmark for feature location research.;1311-1314;4;Formal Demonstrations 1;
2013;Seonah Lee,Sungwon Kang,Matt Staats;NavClus: a graphical recommender for assisting code exploration.;1315-1318;4;Formal Demonstrations 1;
2013;John Jacobellis,Na Meng,Miryung Kim;LASE: an example-based program transformation tool for locating and applying systematic edits.;1319-1322;4;Formal Demonstrations 2;
2013;Remo Lemma,Michele Lanza,Fernando Olivero;CEL: modeling everywhere.;1323-1326;4;Formal Demonstrations 2;
2013;Eric Knauss,Daniela Damian;V: ISSUE: LIZER: exploring requirements clarification in online communication over time.;1327-1330;4;Formal Demonstrations 2;
2013;Gerardo Canfora,Massimiliano Di Penta,Stefano Giannantonio,Rocco Oliveto,Sebastiano Panichella;YODA: young and newcomer developer assistant.;1331-1334;4;Formal Demonstrations 2;
2013;Fabrizio Pastore,Leonardo Mariani,Alberto Goffi;RADAR: a tool for debugging regression problems in C/C++ software.;1335-1338;4;Formal Demonstrations 2;
2013;Yiyang Hao,Ge Li,Lili Mou,Lu Zhang 0023,Zhi Jin;MCT: a tool for commenting programs by multimedia comments.;1339-1342;4;Formal Demonstrations 2;
2013;Guowei Yang,Sarfraz Khurshid,Corina S. Pasareanu;Memoise: a tool for memoized symbolic execution.;1343-1346;4;Formal Demonstrations 2;
2013;Víctor A. Braberman,Nicolás D'Ippolito,Nir Piterman,Daniel Sykes,Sebastián Uchitel;Controller synthesis: from modelling to enactment.;1347-1350;4;Formal Demonstrations 2;
2013;Sarah Nadi;A study of variability spaces in open source software.;1353-1356;4;Short Papers;
2013;John Slankas;Implementing database access control policy from unconstrained natural language text.;1357-1360;4;Short Papers;
2013;Leif Jonsson;Increasing anomaly handling efficiency in large organizations using applied machine learning.;1361-1364;4;Short Papers;
2013;Daniele Romano;Analyzing the change-proneness of service-oriented systems from an industrial perspective.;1365-1368;4;Short Papers;
2013;Victor Guana;Supporting maintenance tasks on transformational code generation environments.;1369-1372;4;Short Papers;
2013;Meiru Che;An approach to documenting and evolving architectural design decisions.;1373-1376;4;Short Papers;
2013;Tingting Yu;An observable and controllable testing framework for modern systems.;1377-1380;4;Short Papers;
2013;Javier Gonzalez Sanchez;Toward a software product line for affective-driven self-adaptive systems.;1381-1384;4;Short Papers;
2013;Latifa Guerrouj;Normalizing source code vocabulary to support program comprehension and software quality.;1385-1388;4;Short Papers;
2013;Kivanç Muslu;Integrating systematic exploration, analysis, and maintenance in software development.;1389-1392;4;Short Papers;
2013;Martin Brandtner;Fostering software quality assessment.;1393-1396;4;Posters;
2013;Nicolò Perino;A framework for self-healing software systems.;1397-1400;4;Posters;
2013;Paul Rimba;Building high assurance secure applications using security patterns for capability-based platforms.;1401-1404;4;Posters;
2013;Naveen Kulkarni;Systematically selecting a software module during opportunistic reuse.;1405-1406;2;Posters;
2013;Olga Baysal;Informing development decisions: from data to information.;1407-1410;4;Posters;
2013;Zhongpeng Lin;Understanding and simulating software evolution.;1411-1414;4;Posters;
2013;Nuno Ramos Carvalho;An ontology toolkit for problem domain concept location in program comprehension.;1415-1418;4;Posters;
2013;Jason King;Measuring the forensic-ability of audit logs for nonrepudiation.;1419-1422;4;Posters;
2013;Huascar Sanchez;SNIPR: complementing code search with code retargeting capabilities.;1423-1426;4;Posters;
2013;Oscar Callaú;Supporting incremental programming with ghosts.;1429-1431;3;Program Analysis;
2013;Brittany Johnson;Novice understanding of program analysis tool notifications.;1432-1434;3;Program Analysis;
2013;Luca Ardito;Energy aware self-adaptation in mobile systems.;1435-1437;3;Program Analysis;
2013;Sai Zhang;ConfDiagnoser: an automated configuration error diagnosis tool for Java software.;1438-1440;3;Debugging;
2013;Wei Jin;Reproducing and debugging field failures in house.;1441-1443;3;Debugging;
2013;Sangmin Park;Fault comprehension for concurrent programs.;1444-1446;3;Debugging;
2013;Adler Diniz de Souza;A proposal for the improvement of project's cost predictability using EVM and historical data of cost.;1447-1449;3;Process and Maintenance;
2013;Ehsan Kouroshfar;Studying the effect of co-change dispersion on software quality.;1450-1452;3;Process and Maintenance;
2013;Juliana Saraiva;A roadmap for software maintainability measurement.;1453-1455;3;Process and Maintenance;
2013;Zachary J. Oster;Reasoning with qualitative preferences to develop optimal component-based systems.;1456-1458;3;Models and Requirements;
2013;Federico Ciccozzi;From models to code and back: correct-by-construction code from UML and ALF.;1459-1461;3;Models and Requirements;
2013;Romina Torres;Mitigating the obsolescence of specification models of service-based systems.;1462-1464;3;Models and Requirements;
2013;Nupul Kukreja;Decision theoretic requirements prioritization: a two-step approach for sliding towards value realization.;1465-1467;3;Models and Requirements;
2013;Braden Simpson;Changeset based developer communication to detect software failures.;1468-1470;3;Developers and Users;
2013;Jordan Ell;Identifying failure inducing developer pairs within developer networks.;1471-1473;3;Developers and Users;
2013;Hammad Khalid;On identifying user complaints of iOS apps.;1474-1476;3;Developers and Users;
2013;Atif M. Memon,Myra B. Cohen;Automated testing of GUI applications: models, tools, and controlling flakiness.;1479-1480;2;Tutorial Summaries;
2013;Jin Song Dong,Jun Sun 0001,Yang Liu 0003;Build your own model checker in one month.;1481-1483;3;Tutorial Summaries;
2013;Tim Menzies,Ekrem Kocaguneli,Fayola Peters,Burak Turhan,Leandro L. Minku;Data science for software engineering.;1484-1486;3;Tutorial Summaries;
2013;Dongmei Zhang,Tao Xie;Software analytics: achievements and challenges.;1487;1;Tutorial Summaries;
2013;K. Rustan M. Leino;Developing verified programs with dafny.;1488-1490;3;Tutorial Summaries;
2013;Eric Bouwers,Arie van Deursen,Joost Visser;Software metrics: pitfalls and best practices.;1491-1492;2;Tutorial Summaries;
2013;Peter C. Mehlitz,Neha Rungta,Willem Visser;A hands-on Java PathFinder tutorial.;1493-1495;3;Tutorial Summaries;
2013;Patrick Heymans,Axel Legay,Maxime Cordy;Efficient quality assurance of variability-intensive systems.;1496-1498;3;Tutorial Summaries;
2013;Xavier Franch;Software requirement patterns.;1499-1501;3;Tutorial Summaries;
2013;Ewen Denney,Ganesh Pai,Ibrahim Habli,Tim Kelly,John C. Knight;1st international workshop on assurance cases for software-intensive systems (ASSURE 2013).;1505-1506;2;Workshop Summaries;
2013;Hong Zhu,Henry Muccini,Zhenyu Chen;8th international workshop on automation of software test (AST 2013).;1507-1508;2;Workshop Summaries;
2013;Xavier Franch,Nazim H. Madhavji,Bill Curtis,Larry Votta;1st international workshop on conducting empirical studies in industry (CESI 2013).;1509-1510;2;Workshop Summaries;
2013;Rafael Prikladnicki,Rashina Hoda,Marcelo Cataldo,Helen Sharp,Yvonne Dittrich,Cleidson R. B. de Souza;6th international workshop on cooperative and human aspects of software engineering (CHASE 2013).;1511-1512;2;Workshop Summaries;
2013;Mark Harman,Richard F. Paige,James R. Williams;1st international workshop on combining modelling and search-based software engineering (CMSBSE 2013).;1513-1514;2;Workshop Summaries;
2013;Stuart R. Faulk,Michal Young,Rafael Prikladnicki,David M. Weiss,Lian Yu;3rd international workshop on collaborative teaching of globally distributed software development (CTGDSD 2013).;1515-1516;2;Workshop Summaries;
2013;Christian Bird,Tim Menzies,Thomas Zimmermann 0001;1st international workshop on data analysis patterns in software engineering (DAPSE 2013).;1517-1518;2;Workshop Summaries;
2013;Stefania Gnesi,Nico Plat;1st FME workshop on formal methods in software engineering (FormaliSE 2013).;1519-1520;2;Workshop Summaries;
2013;Kendra M. L. Cooper,Walt Scacchi,Alf Inge Wang;3rd international workshop on games and software engineering: engineering computer games to enable positive, progressive change (GAS 2013).;1521-1522;2;Workshop Summaries;
2013;Patricia Lago,Niklaus Meyer,Maurizio Morisio,Hausi A. Müller,Giuseppe Scanniello;2nd international workshop on green and sustainable software (GREENS 2013).;1523-1524;2;Workshop Summaries;
2013;Pontus Johnson,Ivar Jacobson,Michael Goedicke,Mira Kajko-Mattsson;2nd SEMAT workshop on a general theory of software engineering (GTSE 2013).;1525-1526;2;Workshop Summaries;
2013;Rainer Koschke,Elmar Jürgens,Juergen Rilling;7th international workshop on software clones (IWSC 2013).;1527-1528;2;Workshop Summaries;
2013;Brian Burg,Adrian Kuhn,Chris Parnin;1st international workshop on live programming (LIVE 2013).;1529-1530;2;Workshop Summaries;
2013;Joanne M. Atlee,Robert Baillargeon,Marsha Chechik,Robert B. France,Jeff Gray,Richard F. Paige,Bernhard Rumpe;5th international workshop on modeling in software engineering (MiSE 2013).;1531-1532;2;Workshop Summaries;
2013;Grace A. Lewis,Jeff Gray,Henry Muccini,Nachiappan Nagappan,David Rosenblum,Emad Shihab;1st international workshop on the engineering of mobile-enabled systems (MOBS 2013).;1533-1534;2;Workshop Summaries;
2013;Philippe Kruchten,Robert L. Nord,Ipek Ozkaya;4th international workshop on managing technical debt (MTD 2013).;1535-1536;2;Workshop Summaries;
2013;Lori L. Pollock,David Binkley,Dawn Lawrie,Emily Hill,Rocco Oliveto,Gabriele Bavota,Alberto Bacchelli;1st international workshop on natural language analysis in software engineering (NaturaLiSE 2013).;1537-1538;2;Workshop Summaries;
2013;Domenico Bianculli,Patricia Lago,Grace A. Lewis,Hye-Young Paik;5th international workshop on principles of engineering service-oriented systems (PESOS 2013).;1539-1540;2;Workshop Summaries;
2013;Julia Rubin,Goetz Botterweck,Andreas Pleuss,David M. Weiss;4th international workshop on product LinE approaches in software engineering (PLEASE 2013).;1541-1542;2;Workshop Summaries;
2013;Rachel Harrison,Sol J. Greenspan,Tim Menzies,Marjan Mernik,Pedro Rangel Henriques,Daniela Carneiro da Cruz,Daniel Rodríguez;2nd international workshop on realizing artificial intelligence synergies in software engineering (RAISE 2013).;1543-1544;2;Workshop Summaries;
2013;Bram Adams,Christian Bird,Foutse Khomh,Kim Moir;1st international workshop on release engineering (RELENG 2013).;1545-1546;2;Workshop Summaries;
2013;Jeffrey C. Carver,Tom Epperly,Lorin Hochstein,Valerie Maxville,Dietmar Pfahl,Jonathan Sillito;5th international workshop on software engineering for computational science and engineering (SE-CSE 2013).;1547-1548;2;Workshop Summaries;
2013;Craig E. Kuziemsky,John Knight;5th international workshop on software engineering in health care (SEHC 2013).;1549-1550;2;Workshop Summaries;
2013;Christine Julien,Klaus Wehrle;4th international workshop on software engineering for sensor network applications (SESENA 2013).;1551-1552;2;Workshop Summaries;
2013;Ian Gorton,Yan Liu,Heiko Koziolek,Anne Koziolek,Mazeiar Salehie;2nd international workshop on software engineering challenges for the smart grid (SE4SG 2013).;1553-1554;2;Workshop Summaries;
2013;Michael Barnett 0001,Martin Nordio,Judith Bishop,Karin Koogan Breitman,Diego Garbervetsky;3rd international workshop on developing tools as plug-ins (TOPI 2013).;1555;1;Workshop Summaries;
2013;Paris Avgeriou,Janet E. Burge,Jane Cleland-Huang,Xavier Franch,Matthias Galster,Mehdi Mirakhorli,Roshanak Roshandel;2nd international workshop on the twin peaks of requirements and architecture (TwinPeaks 2013).;1556-1557;2;Workshop Summaries;
2013;Andrew Begel,Caitlin Sadowski;2nd international workshop on user evaluations for software engineering researchers (USER 2013).;1558-1559;2;Workshop Summaries;
2013;Steve Counsell,Michele Marchesi,Ewan D. Tempero,Corrado Aaron Visaggio;4th international workshop on emerging trends in software metrics (WETSoM 2013).;1560-1561;2;Workshop Summaries;
