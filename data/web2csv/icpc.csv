2016;Fabio Palomba,Annibale Panichella,Andrea De Lucia,Rocco Oliveto,Andy Zaidman;A textual-based technique for Smell Detection.;1-10;10;Technical Research 1:Code Quality;
2016;Natthawute Sae-Lim,Shinpei Hayashi,Motoshi Saeki;Context-based code smells prioritization for prefactoring.;1-10;10;Technical Research 1:Code Quality;
2016;Felienne Hermans,Efthimia Aivaloglou;Do code smells hamper novice programming? A controlled experiment on Scratch programs.;1-10;10;Technical Research 1:Code Quality;
2016;Simone Scalabrino,Mario Linares Vásquez,Denys Poshyvanyk,Rocco Oliveto;Improving code readability models with textual features.;1-10;10;Technical Research 1:Code Quality;
2016;Huascar Sanchez,Jim Whitehead,Martin Schäf;Multistaging to understand: Distilling the essence of java code examples.;1-10;10;Technical Research 2:Program Comprehension;
2016;Mark Hills;Navigating the WordPress plugin landscape.;1-10;10;Technical Research 2:Program Comprehension;
2016;Vallary Singh,Lori L. Pollock,Will Snipes,Nicholas A. Kraft;A case study of program comprehension effort and technical debt estimations.;1-9;9;Technical Research 2:Program Comprehension;
2016;Yorai Geffen,Shahar Maoz;On method ordering.;1-10;10;Technical Research 2:Program Comprehension;
2016;Fabian Beck,Jan Melcher,Daniel Weiskopf;Identifying modularization patterns by visual comparison of multiple hierarchies.;1-10;10;Technical Research 3:Supporting Software Developers;
2016;Ignacio Fernandez,Alexandre Bergel,Juan Pablo Sandoval Alcocer,Alejandro Infante,Tudor Gîrba;Glyph-based software component identification.;1-10;10;Technical Research 3:Supporting Software Developers;
2016;Roberto Minelli,Andrea Mocci,Romain Robbes,Michele Lanza;Taming the IDE with fine-grained interaction data.;1-10;10;Technical Research 3:Supporting Software Developers;
2016;Yuan Tian,Dinusha Wijedasa,David Lo,Claire Le Goues;Learning to rank for bug report assignee recommendation.;1-10;10;Technical Research 3:Supporting Software Developers;
2016;Simon Kawuma,John Businge,Engineer Bainomugisha;Can we find stable alternatives for unstable Eclipse interfaces?;1-10;10;Technical Research 4:Language Usage;
2016;Mohamed Aymen Saied,Houari A. Sahraoui;A cooperative approach for combining client-based and library-based API usage pattern mining.;1-10;10;Technical Research 4:Language Usage;
2016;Guilherme Avelino,Leonardo Teixeira Passos,André C. Hora,Marco Tulio Valente;A novel approach for estimating Truck Factors.;1-10;10;Technical Research 4:Language Usage;
2016;Sebastian Okon,Stefan Hanenberg;Can we enforce a benefit for dynamically typed languages in comparison to statically typed ones? A controlled experiment.;1-10;10;Technical Research 4:Language Usage;
2016;Fang-Hsiang Su,Jonathan Bell,Gail E. Kaiser,Simha Sethumadhavan;Identifying functionally similar code in complex codebases.;1-10;10;Technical Research 5:Assessing Code;
2016;Mario Linares Vásquez,Andrew Holtzhauer,Denys Poshyvanyk;On automatically detecting similar Android apps.;1-10;10;Technical Research 5:Assessing Code;
2016;Xiao Cheng,Hao Zhong,Yuting Chen,Zhenjiang Hu,Jianjun Zhao;Rule-directed code clone synchronization.;1-10;10;Technical Research 5:Assessing Code;
2016;Simone Romano 0001,Christopher Vendome,Giuseppe Scanniello,Denys Poshyvanyk;Are unreachable methods harmful? Results from a controlled experiment.;1-10;10;Technical Research 5:Assessing Code;
2016;Latifa Guerrouj,Olga Baysal;Investigating the android apps' success: An empirical study.;1-4;4;Short Papers 1:Getting Deep Insight Into Your Software;
2016;Lei Ma,Cheng Zhang,Bing Yu,Jianjun Zhao;Retrofitting automatic testing through library tests reusing.;1-4;4;Short Papers 1:Getting Deep Insight Into Your Software;
2016;Syed Islam,Adel Noureddine,Rabih Bashroush;Measuring energy footprint of software features.;1-4;4;Short Papers 1:Getting Deep Insight Into Your Software;
2016;Suresh Kothari,Ahmed Tamrawi,Jon Mathews;Human-machine resolution of Invisible Control Flow?;1-4;4;Short Papers 1:Getting Deep Insight Into Your Software;
2016;Chelsea A. Metcalf,Farhaan Fowze,Tuba Yavuz,José Fortes;Extracting configuration parameter interactions using static analysis.;1-4;4;Short Papers 1:Getting Deep Insight Into Your Software;
2016;Bo Zhang,Vasil Tenev,Martin Becker 0002;Android build dependency analysis.;1-4;4;Short Papers 1:Getting Deep Insight Into Your Software;
2016;Brian Dillon,Richard Thompson;Software development and tool usability.;1-4;4;Short Papers 2:Comprehension You Can Use;
2016;Erina Makihara,Hiroshi Igaki,Norihiro Yoshida,Kenji Fujiwara,Hajimu Iida;Detecting exploratory programming behaviors for introductory programming exercises.;1-4;4;Short Papers 2:Comprehension You Can Use;
2016;Alexander Breckel,Matthias Tichy;Embedding programming context into source code.;1-4;4;Short Papers 2:Comprehension You Can Use;
2016;Jeong Yang,Young Lee,David Hicks;Synchronized static and dynamic visualization in a web-based programming environment.;1-4;4;Short Papers 2:Comprehension You Can Use;
2016;Madhusudan Srinivasan,Jeong Yang,Young Lee;Case studies of optimized sequence diagram for program comprehension.;1-4;4;Short Papers 2:Comprehension You Can Use;
2016;Aniket Kulkarni;Comprehending source code of large software system for reuse.;1-4;4;Short Papers 2:Comprehension You Can Use;
2016;Rijnard van Tonder,Claire Le Goues;Defending against the attack of the micro-clones.;1-4;4;Short Papers 3:Attack of the Development Team;
2016;Gerald Schermann,Jürgen Cito,Philipp Leitner,Harald C. Gall;Towards quality gates in continuous delivery and deployment.;1-4;4;Short Papers 3:Attack of the Development Team;
2016;Norihiro Yoshida,Tsubasa Saika,Eunjong Choi,Ali Ouni 0001,Katsuro Inoue;Revisiting the relationship between code smells and refactoring.;1-4;4;Short Papers 3:Attack of the Development Team;
2016;Yusuke Yuki,Yoshiki Higo,Keisuke Hotta,Shinji Kusumoto;Generating clone references with less human subjectivity.;1-4;4;Short Papers 3:Attack of the Development Team;
2016;Fábio Petrillo,Záphyrin Soh,Foutse Khomh,Marcelo Soares Pimenta,Carla Maria Dal Sasso Freitas,Yann-Gaël Guéhéneuc;Understanding interactive debugging with Swarm Debug Infrastructure.;1-4;4;Short Papers 3:Attack of the Development Team;
2016;Sven Amann,Sebastian Proksch,Sarah Nadi;FeedBaG: An interaction tracker for Visual Studio.;1-3;3;Tool Demonstrations;
2016;Mohammad R. Azadmanesh,Matthias Hauswirth;InfectoMeter: A tool that helps to place bug fixes.;1-3;3;Tool Demonstrations;
2016;Alexander Breckel,Matthias Tichy;INLINE: Now you're coding with portals.;1-3;3;Tool Demonstrations;
2016;Jonathan Cloutier,Segla Kpodjedo,Ghizlane El-Boussaidi;WAVI: A reverse engineering tool for web applications.;1-3;3;Tool Demonstrations;
2016;Syed S. Islam,David Binkley;PORBS: A parallel observation-based slicer.;1-3;3;Tool Demonstrations;
2016;Saket Khatiwada,Michael Kelly,Anas Mahmoud;STAC: A tool for Static Textual Analysis of Code.;1-3;3;Tool Demonstrations;
2016;Naoto Ogura,Jiachen Yang,Keisuke Hotta,Yoshiki Higo,Shinji Kusumoto;Hey! Are you injecting side effect?: A tool for detecting purity changes in java methods.;1-3;3;Tool Demonstrations;
2016;Weisong Sun,Xiaobing Sun,Hui Yang,Bin Li;WB4SP: A tool to build the word base for specific programs.;1-3;3;Tool Demonstrations;
2015;Gerald Schermann,Martin Brandtner,Sebastiano Panichella,Philipp Leitner,Harald C. Gall;Discovering loners and phantoms in commit and issue data.;4-14;11;Mining software repositories - technical research papers;
2015;Omar Benomar,Hani Abdeen,Houari A. Sahraoui,Pierre Poulin,Mohamed Aymen Saied;Detection of software evolution phases based on development activities.;15-24;10;Mining software repositories - technical research papers;
2015;Roberto Minelli,Andrea Mocci,Michele Lanza;I know what you did last summer: an investigation of how developers spend their time.;25-35;11;Mining software repositories - technical research papers;
2015;Tien-Duy B. Le,Mario Linares Vásquez,David Lo,Denys Poshyvanyk;RCLinker: automated linking of issue reports and commits leveraging rich contextual information.;36-47;12;Mining software repositories - technical research papers;
2015;Martin White,Mario Linares Vásquez,Peter Johnson,Carlos Bernal-Cárdenas,Denys Poshyvanyk;Generating reproducible and replayable bug reports from Android application crashes.;48-59;12;Mining software repositories - technical research papers;
2015;Ferdian Thung,Xuan-Bach D. Le,David Lo;Active semi-supervised defect categorization.;60-70;11;Mining software repositories - technical research papers;
2015;Mohamed Aymen Saied,Hani Abdeen,Omar Benomar,Houari A. Sahraoui;Could we infer unordered API usage patterns only using the library source code?;71-81;11;Learning and sharing program knowledge - technical research papers;
2015;Joshua Sunshine,James D. Herbsleb,Jonathan Aldrich;Searching the state space: a qualitative study of API protocol usability.;82-93;12;Learning and sharing program knowledge - technical research papers;
2015;Stefanie Beyer,Martin Pinzger;Synonym suggestion for tags on stack overflow.;94-103;10;Learning and sharing program knowledge - technical research papers;
2015;Laura MacLeod,Margaret-Anne D. Storey,Andreas Bergen;Code, camera, action: how software developers document and share program knowledge using YouTube.;104-114;11;Learning and sharing program knowledge - technical research papers;
2015;Benedikt Hauptmann,Elmar Jürgens,Volkmar Woinke;Generating refactoring proposals to remove clones from automated system tests.;115-124;10;Learning and sharing program knowledge - technical research papers;
2015;Raquel Fialho Lafetá,Marcelo de Almeida Maia,David Röthlisberger;Framework instantiation using cookbooks constructed with static and dynamic analysis.;125-128;4;Learning and sharing program knowledge - early research achievement papers;
2015;Tobias Roehm;Two user perspectives in program comprehension: end users and developer users.;129-139;11;Users, user interfaces, and feature location - technical research papers;
2015;Emily Hill,David C. Shepherd,Lori L. Pollock;Exploring the use of concern element role information in feature location evaluation.;140-150;11;Users, user interfaces, and feature location - technical research papers;
2015;Fabian Beck,Bogdan Dit,Jaleo Velasco-Madden,Daniel Weiskopf,Denys Poshyvanyk;Rethinking user interfaces for feature location.;151-162;12;Users, user interfaces, and feature location - technical research papers;
2015;Charlie Soh,Hee Beng Kuan Tan,Yauhen Leanidavich Arnatovich,Lipo Wang;Detecting clones in Android applications through analyzing user interfaces.;163-173;11;Users, user interfaces, and feature location - technical research papers;
2015;Howell R. Jordan,Jacek Rosik,Sebastian Herold,Goetz Botterweck,Jim Buckley;Manually locating features in industrial source code: the search actions of software nomads.;174-177;4;Users, user interfaces, and feature location - early research achievement papers;
2015;Eran Avidan,Dror G. Feitelson;From obfuscation to comprehension.;178-181;4;Users, user interfaces, and feature location - early research achievement papers;
2015;Roberto Minelli,Andrea Mocci,Michele Lanza;The plague doctor: a promising cure for the window plague.;182-185;4;Users, user interfaces, and feature location - early research achievement papers;
2015;Nevena Milojkovic,Andrea Caracciolo,Mircea Filip Lungu,Oscar Nierstrasz,David Röthlisberger,Romain Robbes;Polymorphism in the spotlight: studying its prevalence in Java and Smalltalk.;186-195;10;Large scale empirical studies - technical research papers;
2015;Simon Butler,Michel Wermelinger,Yijun Yu;A survey of the forms of Java reference names.;196-206;11;Large scale empirical studies - technical research papers;
2015;Douglas H. Martin,James R. Cordy,Bram Adams,Giuliano Antoniol;Make it simple: an empirical analysis of GNU make feature use in open source projects.;207-217;11;Large scale empirical studies - technical research papers;
2015;Christopher Vendome,Mario Linares Vásquez,Gabriele Bavota,Massimiliano Di Penta,Daniel M. Germán,Denys Poshyvanyk;License usage and changes: a large-scale study of Java projects on GitHub.;218-228;11;Large scale empirical studies - technical research papers;
2015;Javier Escobar-Avila,Mario Linares Vásquez,Sonia Haiduc;Unsupervised software categorization using bytecode.;229-239;11;Large scale empirical studies - technical research papers;
2015;Moritz Beller,Andy Zaidman,Andrey N. Karpov;The last line effect.;240-243;4;Large scale empirical studies - early research achievement papers;
2015;Ahmad Jbara,Dror G. Feitelson;How programmers read regular code: a controlled experiment using eye tracking.;244-254;11;Reading and visualizing - technical research papers;
2015;Teresa Busjahn,Roman Bednarik,Andrew Begel,Martha E. Crosby,James H. Paterson,Carsten Schulte,Bonita Sharif,Sascha Tamm;Eye movements in code reading: relaxing the linear order.;255-265;11;Reading and visualizing - technical research papers;
2015;Florian Fittkau,Santje Finke,Wilhelm Hasselbring,Jan Waller;Comparing trace visualizations for program comprehension through controlled experiments.;266-276;11;Reading and visualizing - technical research papers;
2015;Marcello Romanelli,Andrea Mocci,Michele Lanza;Towards visual reflexion models.;277-280;4;Reading and visualizing - early research achievement papers;
2015;Dan C. Cosma,Petru Florin Mihancea;Understanding web applications using component based visual patterns.;281-284;4;Reading and visualizing - early research achievement papers;
2015;Pavan Kumar Chittimalli,Vipul Shah;Fault localization during system testing.;285-286;2;Industry and experience reports;
2015;Chetan Khadke,Sunjit Rana,Vipul Shah;Recovering workflows from functional tests.;287-288;2;Industry and experience reports;
2015;Yusuke Sabi,Hiroaki Murakami,Yoshiki Higo,Shinji Kusumoto;Reordering results of keyword-based code search for supporting simultaneous code changes.;289-290;2;Industry and experience reports;
2015;Yuki Yano,Raula Gaikovina Kula,Takashi Ishio,Katsuro Inoue;VerXCombo: an interactive data visualization of popular library version combinations.;291-294;4;Tool demos;
2015;Amir Saeidi,Jurriaan Hage,Ravi Khadka,Slinger Jansen;ITMViz: interactive topic modeling for source code analysis.;295-298;4;Tool demos;
2015;Vahid Amintabar,Abbas Heydarnoori,Mohammad Ghafari;ExceptionTracer: a solution recommender for exceptions in an integrated development environment.;299-302;4;Tool demos;
2015;Milan Pavlovic,Milan Radulovic,Alex Ramírez,Petar Radojkovic;Limpio: LIghtweight MPI instrumentatiOn.;303-306;4;Tool demos;
2014;Mojtaba Shahin,Peng Liang,Zengyang Li;Do architectural design decisions improve the understanding of software architecture? two controlled experiments.;3-13;11;Architecture;
2014;Vanius Zapalowski,Ingrid Nunes,Daltro José Nunes;Revealing the relationship between architectural elements and source code characteristics.;14-25;12;Architecture;
2014;David Binkley,Daniel Heinz,Dawn J. Lawrie,Justin Overfelt;Understanding LDA in source code analysis.;26-36;11;Supporting Software Engineers;
2014;Alexandre Perez,Rui Abreu;A diagnosis-based approach to software comprehension.;37-47;11;Supporting Software Engineers;
2014;David H. White 0001;dsOli: data structure operation location and identification.;48-52;5;Supporting Software Engineers;
2014;Shaowei Wang,David Lo;Version history, similar report, and structure: putting them together for improved bug localization.;53-63;11;Supporting Software Engineers;
2014;Nesrine Noughi,Marco Mori,Loup Meurice,Anthony Cleve;Understanding the database manipulation behavior of programs.;64-67;4;Supporting Software Engineers;
2014;Joe F. Shobe,Md Yasser Karim,Motahareh Bahrami Zanjani,Huzefa H. Kagdi;On mapping releases to commits in open source systems.;68-71;4;Supporting Software Engineers;
2014;Lucas Batista Leite de Souza,Eduardo Cunha Campos,Marcelo de Almeida Maia;Ranking crowd knowledge to assist software development.;72-82;11;Collaborative and Human Aspects;
2014;Mario Linares Vásquez,Gabriele Bavota,Massimiliano Di Penta,Rocco Oliveto,Denys Poshyvanyk;How do API changes trigger stack overflow discussions? a study on the Android SDK.;83-94;12;Collaborative and Human Aspects;
2014;Bo Zhou,Xin Xia,David Lo,Cong Tian,Xinyu Wang;Towards more accurate content categorization of API discussions.;95-105;11;Collaborative and Human Aspects;
2014;Carmine Vassallo,Sebastiano Panichella,Massimiliano Di Penta,Gerardo Canfora;CODES: mining source code descriptions from developers discussions.;106-109;4;Collaborative and Human Aspects;
2014;Ferdian Thung,David Lo,Mohd Hafeez Osman,Michel R. V. Chaudron;Condensing class diagrams by analyzing design and network metrics using optimistic classification.;110-121;12;Collaborative and Human Aspects;
2014;Renan Vasconcelos,Marcelo Schots,Cláudia Werner;An information visualization feature model for supporting the selection of software visualizations.;122-125;4;Collaborative and Human Aspects;
2014;Denis Delimarschi,George Swartzendruber,Huzefa H. Kagdi;Enabling integrated development environments with natural user interface interactions.;126-129;4;Collaborative and Human Aspects;
2014;Kamal Hossen,Huzefa H. Kagdi,Denys Poshyvanyk;Amalgamating source code authors, maintainers, and change proneness to triage change requests.;130-141;12;Recommendations;
2014;Mohammad Ghafari,Carlo Ghezzi,Andrea Mocci,Giordano Tamburrelli;Mining unit tests for code recommendation.;142-145;4;Recommendations;
2014;Danilo Silva,Ricardo Terra,Marco Tulio Valente;Recommending automated extract method refactorings.;146-156;11;Recommendations;
2014;Laleh Mousavi Eshkevari,Giuliano Antoniol,James R. Cordy,Massimiliano Di Penta;Identifying and locating interference issues in PHP applications: the case of WordPress.;157-167;11;Recommendations;
2014;Daniela Steidl,Sebastian Eder;Prioritizing maintainability defects based on refactoring recommendations.;168-176;9;Joint Session with CHASE 1;
2014;Sebastiano Panichella,Gerardo Canfora,Massimiliano Di Penta,Rocco Oliveto;How the evolution of emerging collaborations relates to code changes: an empirical study.;177-188;12;Joint Session with CHASE 2;
2014;Ahmad Jbara,Dror G. Feitelson;On the effect of code regularity on comprehension.;189-200;12;Understanding Comprehension;
2014;Braden Walters,Timothy Shaffer,Bonita Sharif,Huzefa H. Kagdi;Capturing software traceability links from developers' eye gazes.;201-204;4;Understanding Comprehension;
2014;Vikrant S. Kaulgud,K. M. Annervaz,Janardan Misra,Gary Titus;Comprehension support during knowledge transitions: learning from field.;205-206;2;Understanding Comprehension;
2014;Katsuhisa Maruyama,Takayuki Omori,Shinpei Hayashi;A visualization tool recording historical data of program comprehension tasks.;207-211;5;Understanding Comprehension;
2014;Pujan Petersen,Stefan Hanenberg,Romain Robbes;An empirical comparison of static and dynamic type systems on API usage in the presence of an IDE: Java vs. groovy with eclipse.;212-222;11;Understanding Comprehension;
2014;Andreas Stefik,Stefan Hanenberg,Mark McKenney,Anneliese Amschler Andrews,Srinivas Kalyan Yellanki,Susanna Siebert;What is the foundation of evidence of human factors decisions in language design? an empirical study on programming language workshops.;223-231;9;Understanding Comprehension;
2014;Mario Linares Vásquez,Sam Klock,Collin McMillan,Aminata Sabane,Denys Poshyvanyk,Yann-Gaël Guéhéneuc;Domain matters: bringing further evidence of the relationships among anti-patterns, application domains, and quality-related metrics in Java mobile apps.;232-243;12;Software Quality;
2014;Shrinath Gupta,Himanshu Kumar Singh,Radhika D. Venkatasubramanyam,Umesh Uppili;SCQAM: a scalable structured code quality assessment method for industrial software.;244-252;9;Software Quality;
2014;Toshinori Matsumura,Takashi Ishio,Yu Kashima,Katsuro Inoue;Repeatedly-executed-method viewer for efficient visualization of execution paths and states in Java.;253-257;5;Software Quality;
2014;Dirk Beyer 0001,Peter Häring;A formal evaluation of DepDegree based on weyuker's properties.;258-261;4;Software Quality;
2014;Hiroyuki Kirinuki,Yoshiki Higo,Keisuke Hotta,Shinji Kusumoto;Hey! are you committing tangled changes?;262-265;4;Software Quality;
2014;Shrinath Gupta,Himanshu Kumar Singh;A semiautomated method for classifying program analysis rules into a quality model.;266-270;5;Software Quality;
2014;Takayuki Suzuki,Kazunori Sakamoto,Fuyuki Ishikawa,Shinichi Honiden;An approach for evaluating and suggesting method names using n-gram models.;271-274;4;Software Quality;
2014;Xin Xia,David Lo,Xingen Wang,Chenyi Zhang,Xinyu Wang;Cross-language bug localization.;275-278;4;Software Quality;
2014;Paul W. McBurney,Collin McMillan;Automatic documentation generation via source code summarization of method context.;279-290;12;Novel Development Tooling;
2014;Paul W. McBurney,Cheng Liu,Collin McMillan,Tim Weninger;Improving topic model source code summarization.;291-294;4;Novel Development Tooling;
2014;Aniket Kulkarni,Ravindra Metta;A code obfuscation framework using code clones.;295-299;5;Novel Development Tooling;
2014;Ahmad Jbara,Dror G. Feitelson;JCSD: visual support for understanding code control structure.;300-303;4;Novel Development Tooling;
2014;Zhenzhou Tian,Qinghua Zheng,Ting Liu,Ming Fan,Xiaodong Zhang,Zijiang Yang;Plagiarism detection for multithreaded software based on thread-aware software birthmarks.;304-313;10;Novel Development Tooling;
2014;Mark Grechanik,Collin McMillan,Tathagata Dasgupta,Denys Poshyvanyk,Malcom Gethers;Redacting sensitive information in software artifacts.;314-325;12;Novel Development Tooling;
2013;Samir Gupta,Sana Malik,Lori L. Pollock,K. Vijay-Shanker;Part-of-speech tagging of program identifiers for improved text-based software engineering tools.;3-12;10;Textual Analysis;
2013;Brian P. Eddy,Jeffrey A. Robinson,Nicholas A. Kraft,Jeffrey C. Carver;Evaluating source code summarization techniques: Replication and expansion.;13-22;10;Textual Analysis;
2013;Laura Moreno,Jairo Aponte,Giriprasad Sridhara,Andrian Marcus,Lori L. Pollock,K. Vijay-Shanker;Automatic generation of natural language summaries for Java classes.;23-32;10;Textual Analysis;
2013;Zohreh Sharafi,Alessandro Marchetto,Angelo Susi,Giuliano Antoniol,Yann-Gaël Guéhéneuc;An empirical study on the efficiency of graphical vs. textual representations in requirements comprehension.;33-42;10;The Role of Visualization in Program Comprehension;
2013;Kenichi Kobayashi,Manabu Kamimura,Keisuke Yano,Koki Kato,Akihiko Matsuo;SArF map: Visualizing software architecture from feature and layer viewpoints.;43-52;10;The Role of Visualization in Program Comprehension;
2013;Jonas Trümper,Jürgen Döllner,Alexandru Telea;Multiscale visual comparison of execution traces.;53-62;10;The Role of Visualization in Program Comprehension;
2013;Fabian Beck,Oliver Moseler,Stephan Diehl 0001,Günter Daniel Rey;In situ understanding of performance bottlenecks through visually augmented code.;63-72;10;The Role of Visualization in Program Comprehension;
2013;Tobias Roehm,Nigar Gurbanova,Bernd Bruegge,Christophe Joubert,Walid Maalej;Monitoring user interactions for supporting failure reproduction.;73-82;10;Software Quality;
2013;Daniela Steidl,Benjamin Hummel,Elmar Jürgens;Quality analysis of source code comments.;83-92;10;Software Quality;
2013;Hiroaki Murakami,Keisuke Hotta,Yoshiki Higo,Hiroshi Igaki,Shinji Kusumoto;Gapped code clone detection with lightweight source code analysis.;93-102;10;Source Code Comprehension;
2013;Manishankar Mondal,Chanchal K. Roy,Kevin A. Schneider;Insight into a method co-change pattern to identify highly coupled methods: An empirical study.;103-112;10;Source Code Comprehension;
2013;Philip Mayer,Andreas Schroeder;Patterns of cross-language linking in java frameworks.;113-122;10;Source Code Comprehension;
2013;Diana Diaz,Gabriele Bavota,Andrian Marcus,Rocco Oliveto,Silvia Takahashi,Andrea De Lucia;Using code ownership to improve IR-based Traceability Link Recovery.;123-132;10;Traceability and Feature Location;
2013;Blake Bassett,Nicholas A. Kraft;Structural information based term weighting in text retrieval for feature location.;133-141;9;Traceability and Feature Location;
2013;Yingying Zhang,Daqing Hou;Extracting problematic API features from forum discussions.;142-151;10;Comprehending API;
2013;Coen De Roover,Ralf Lämmel,Ekaterina Pek;Multi-dimensional exploration of API usage.;152-161;10;Comprehending API;
2013;Anas Mahmoud,Nan Niu;Evaluating software clustering algorithms in the context of program comprehension.;162-171;10;Comprehending Software Architectures;
2013;Leo Pruijt,Christian Köppe,Sjaak Brinkkemper;On the accuracy of Architecture Compliance Checking support Accuracy of dependency analysis and violation reporting.;172-181;10;Comprehending Software Architectures;
2013;Mohamed Aly,Anis Charfi,Mira Mezini;Building extensions for applications: Towards the understanding of extension possibilities.;182-191;10;Comprehending Software Architectures;
2013;Mario Bernhart,Thomas Grechenig;On the understanding of programs with continuous code reviews.;192-198;7;Industry Track;
2013;Yuki Yamanaka,Eunjong Choi,Norihiro Yoshida,Katsuro Inoue,Tateki Sano;Applying clone change notification system into an industrial development process.;199-206;8;Industry Track;
2013;Michele Lanza,Marco D'Ambros,Alberto Bacchelli,Lile Hattori,Francesco Rigotti;Manhattan: Supporting real-time visual team activity awareness.;207-210;4;Early Reserarch Achievements Track;
2013;Chris Parnin,Christoph Treude,Margaret-Anne D. Storey;Blogging developer knowledge: Motivations, challenges, and future directions.;211-214;4;Early Reserarch Achievements Track;
2013;Manabu Kamimura,Gail C. Murphy;Towards generating human-oriented summaries of unit test cases.;215-218;4;Early Reserarch Achievements Track;
2013;Cataldo Basile,Mariano Ceccato;Towards a unified software attack model to assess software protections.;219-222;4;Early Reserarch Achievements Track;
2013;Manishankar Mondal,Chanchal K. Roy,Kevin A. Schneider;Improving the detection accuracy of evolutionary coupling.;223-226;4;Early Reserarch Achievements Track;
2013;Toshihiro Kamiya;Agec: An execution-semantic clone detection tool.;227-229;3;Tool Demonstrations;
2013;Laura Moreno,Andrian Marcus,Lori L. Pollock,K. Vijay-Shanker;JSummarizer: An automatic generator of natural language summaries for Java classes.;230-232;3;Tool Demonstrations;
2013;Michael Falcone,Bonita Sharif;OnionUML: An Eclipse plug-in for visualizing UML class diagrams in onion graph notation.;233-235;3;Tool Demonstrations;
2013;Md. Sharif Uddin,Chanchal K. Roy,Kevin A. Schneider;SimCad: An extensible and faster clone detection tool for large scale software systems.;236-238;3;Tool Demonstrations;
